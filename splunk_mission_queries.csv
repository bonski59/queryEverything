url,title,mitre_attack_codes,description,type,last_update,splunk_query,required_macros,required_fields,false_positives,associated_analytics,analytic_stories,references,tags,category
https://research.splunk.com/endpoint/01d29b48-ff6f-11eb-b81e-acde48001123/,7zip CommandLine To SMB Share Path,"['T1560.001', 'T1560']",This search is to detect a suspicious 7z process with commandline pointing to SMB network share. This technique was seen in CONTI LEAK tools where it use 7z to archive a sensitive files and place it in network share tmp folder. This search is a good hunting query that may give analyst a hint why specific user try to archive a file pointing to SMB user which is un usual.,['Hunting'],"August 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name =""7z.exe"" OR Processes.process_name = ""7za.exe"" OR Processes.original_file_name = ""7z.exe"" OR Processes.original_file_name =  ""7za.exe"") AND (Processes.process=""*\\C$\\*"" OR Processes.process=""*\\Admin$\\*"" OR Processes.process=""*\\IPC$\\*"") by Processes.original_file_name Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.parent_process_id Processes.process_id  Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `7zip_commandline_to_smb_share_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://threadreaderapp.com/thread/1423361119926816776.html'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0661c2de-93de-11ec-9833-acde48001122/,Windows WMI Process Call Create,['T1047'],This analytic is to look for wmi commandlines to execute or create process. This technique was used by adversaries or threat actor to execute their malicious payload in local or remote host. This hunting query is a good pivot to start to look further which process trigger the wmi or what process it execute locally or remotely.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process = ""* process *"" Processes.process = ""* call *"" Processes.process = ""* create *"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_path Processes.process_guid Processes.parent_process_id Processes.dest Processes.user Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_wmi_process_call_create_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",Administrators may execute this command for testing or auditing.,"['Volt Typhoon', 'Qakbot', 'IcedID', 'Suspicious WMI Use', 'CISA AA23-347A']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/suspicious_wmi_use', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://github.com/NVISOsecurity/sigma-public/blob/master/rules/windows/process_creation/win_susp_wmi_execution.yml', 'https://github.com/redcanaryco/atomic-red-team/blob/2b804d25418004a5f1ba50e9dc637946ab8733c7/atomics/T1047/T1047.md', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/073e69d0-68b2-4142-aa90-a7ee6f590676/,Windows Modify Registry wuStatusServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the server to which reporting information will be sent for client computers that use the WSUS server configured by the WUServer key. This policy is paired with WUServer; both must be set to the same value in order for them to be valid.",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\WUStatusServer"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_wustatusserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/091712ff-b02a-4d43-82ed-34765515d95d/,GetNetTcpconnection with PowerShell Script Block,['T1049'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-NetTcpconnection  commandlet. This commandlet is used to return a listing of network connections on a compromised system. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,['Hunting'],"April 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-NetTcpconnection*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getnettcpconnection_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1049/', 'https://docs.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection?view=windowsserver2019-ps']","['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/09336538-065a-11ec-8665-acde48001122/,Password Policy Discovery with Net,['T1201'],This analytic looks for the execution of net.exe or net1.exe with command line arguments used to obtain the domain password policy. Red Teams and adversaries may leverage net.exe for situational awareness and Active Directory Discovery.,['Hunting'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") AND Processes.process = ""*accounts*"" AND Processes.process = ""*/domain*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `password_policy_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet'],"['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/09d88404-1e29-46cb-806c-1eedbc85ad5d/,Windows Steal or Forge Kerberos Tickets Klist,['T1558'],The following analytic identifies a process execution of Windows OS klist.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather list of currently cached kerberos ticket. This cahced data can be used for lateral movement or even privilege escalation on the targeted host. This hunting query can be a good pivot in possible kerberos attack or pass the hash technique.,['Hunting'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""klist.exe"" OR Processes.original_file_name = ""klist.exe"" Processes.parent_process_name IN (""cmd.exe"", ""powershell*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_or_forge_kerberos_tickets_klist_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/0b6ee3f4-04e3-11ec-a87d-acde48001122/,Get ADUser with PowerShell,"['T1087.002', 'T1087']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to enumerate domain users. The `Get-AdUser' commandlet returns a list of all domain users. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-ADUser*"" AND Processes.process = ""*-filter*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduser_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.blackhillsinfosec.com/red-blue-purple/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduser?view=windowsserver2019-ps']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0c3f3e09-e47a-410e-856f-a02a5c5fafb0/,Windows System User Discovery Via Quser,['T1033'],"The following analytic identifies a process execution of Windows OS quser.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather information about user sessions on a Remote Desktop Session Host server. This command can find out if a specific user is logged on to a specific Remote Desktop Session Host server. This tool can retrieve some RDP information that can be use by attacker for further attack like Name of the user , Name of the session on the Remote Desktop Session Host server, Session ID, State of the session (active or disconnected), Idle time (the number of minutes since the last keystroke or mouse movement at the session) and Date and time the user logged on.",['Hunting'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""quser.exe"" OR Processes.original_file_name = ""quser.exe"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_user_discovery_via_quser_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to audit RDP access of user in specific network or host.,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/0cdf318b-a0dd-47d7-b257-c621c0247de8/,User Discovery With Env Vars PowerShell,['T1033'],This analytic looks for the execution of powershell.exe with command-line arguments that leverage PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=""*$env:UserName*"" OR Processes.process=""*[System.Environment]::UserName*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `user_discovery_with_env_vars_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/0db4da70-f14b-11eb-8043-acde48001122/,IcedID Exfiltrated Archived File Creation,"['T1560.001', 'T1560']",This search is to detect a suspicious file creation namely passff.tar and cookie.tar. This files are possible archived of stolen browser information like history and cookies in a compromised machine with IcedID.,['Hunting'],"July 30, 2021","`sysmon` EventCode= 11  (TargetFilename = ""*\\passff.tar"" OR TargetFilename = ""*\\cookie.tar"") 
|stats count min(_time) as firstTime max(_time) as lastTime by TargetFilename EventCode process_id  process_name dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `icedid_exfiltrated_archived_file_creation_filter`","['security_content_ctime', 'sysmon']","['_time', 'TargetFilename', 'EventCode', 'process_id', 'process_name', 'dest']",unknown,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://www.cisecurity.org/insights/white-papers/security-primer-icedid'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/10d62950-0de5-4199-a710-cff9ea79b413/,Elevated Group Discovery with PowerView,"['T1069', 'T1069.002']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainGroupMember commandlet. Get-DomainGroupMember is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. As the name suggests, Get-DomainGroupMember is used to list the members of an specific domain group. Red Teams and adversaries alike use PowerView to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.",['Hunting'],"February 14, 2024","`powershell` EventCode=4104 (Message = ""*Get-DomainGroupMember*"") AND Message IN (""*Domain Admins*"",""*Enterprise Admins*"", ""*Schema Admins*"", ""*Account Operators*"" , ""*Server Operators*"", ""*Protected Users*"",  ""*Dns Admins*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| rename ComputerName as dest, User as user 
| `security_content_ctime(firstTime)` 
| `elevated_group_discovery_with_powerview_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainGroupMember/', 'https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory', 'https://attack.mitre.org/techniques/T1069/002/']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1400624a-d42d-484d-8843-e6753e6e3645/,Detect Computer Changed with Anonymous Account,['T1210'],This search looks for Event Code 4742 (Computer Change) or EventCode 4624 (An account was successfully logged on) with an anonymous account.,['Hunting'],"September 18, 2020","`wineventlog_security` EventCode=4624 OR EventCode=4742 TargetUserName=""ANONYMOUS LOGON"" LogonType=3 
| stats count values(host) as host, values(TargetDomainName) as Domain, values(user) as user 
| `detect_computer_changed_with_anonymous_account_filter`",['wineventlog_security'],"['_time', 'EventCode', 'TargetUserName', 'LogonType', 'TargetDomainName', 'user']",None thus far found,['Detect Zerologon Attack'],['https://research.splunk.com/stories/detect_zerologon_attack'],['https://www.lares.com/blog/from-lares-labs-defensive-guidance-for-zerologon-cve-2020-1472/'],"['Exploitation of Remote Services', 'Lateral Movement', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1b7bfb2c-b8e6-11eb-99ac-acde48001122/,Detect Renamed WinRAR,"['T1560.001', 'T1560']","The following analtyic identifies renamed instances of WinRAR.exe. In most cases, it is not common for WinRAR to be used renamed, however it is common to be installed by a third party application and executed from a non-standard path. During triage, validate additional metadata from the binary that this is WinRAR. Review parallel processes and file modifications.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.original_file_name=WinRAR.exe (Processes.process_name!=rar.exe OR Processes.process_name!=winrar.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_winrar_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Unknown. It is possible third party applications use renamed instances of WinRAR.,"['Collection and Staging', 'CISA AA22-277A']","['https://research.splunk.com/stories/collection_and_staging', 'https://research.splunk.com/stories/cisa_aa22-277a']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1560.001/T1560.001.md'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1c6abb08-73d1-11ec-9ca0-acde48001122/,Windows Hunting System Account Targeting Lsass,"['T1003.001', 'T1003']","The following hunting analytic identifies all processes requesting access into Lsass.exe. his behavior may be related to credential dumping or applications requiring access to credentials. Triaging this event will require understanding the GrantedAccess from the SourceImage. In addition, whether the account is privileged or not. Review the process requesting permissions and review parallel processes.",['Hunting'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, TargetImage, GrantedAccess, SourceImage, SourceProcessId, SourceUser, TargetUser  
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_hunting_system_account_targeting_lsass_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'TargetImage', 'GrantedAccess', 'SourceImage', 'SourceProcessId', 'SourceUser', 'TargetUser']","False positives will occur based on GrantedAccess and SourceUser, filter based on source image as needed. Utilize this hunting analytic to tune out false positives in TTP or anomaly analytics.","['CISA AA23-347A', 'Credential Dumping']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/credential_dumping']","['https://en.wikipedia.org/wiki/Local_Security_Authority_Subsystem_Service', 'https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump', 'https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html', 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1', 'https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights?redirectedfrom=MSDN']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1cb40e15-cffa-45cc-abbd-e35884a49766/,Windows Spearphishing Attachment Connect To None MS Office Domain,"['T1566.001', 'T1566']","this detection was designed to identifies suspicious office documents that connect to a website aside from Microsoft Office Domain. This technique was seen in several malicious documents that abuses .rels xml properties of MS office to connect or download malicious files. This hunting query can be a good pivot or guide to check what URL link it tries to connect, what domain, where the documents came from and how the connection happens.",['Hunting'],"February 15, 2023","`sysmon` EventCode=22 Image IN (""*\\winword.exe"",""*\\excel.exe"",""*\\powerpnt.exe"",""*\\mspub.exe"",""*\\visio.exe"",""*\\wordpad.exe"",""*\\wordview.exe"",""*\\onenote.exe"", ""*\\onenotem.exe"",""*\\onenoteviewer.exe"",""*\\onenoteim.exe"", ""*\\msaccess.exe"") AND NOT(QueryName IN (""*.office.com"", ""*.office.net"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryResults QueryStatus Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_spearphishing_attachment_connect_to_none_ms_office_domain_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryResults', 'QueryStatus', 'dest']",Windows Office document may contain legitimate url link other than MS office Domain. filter is needed,"['Spearphishing Attachments', 'AsyncRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/asyncrat']","['https://www.netskope.com/blog/asyncrat-using-fully-undetected-downloader', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1ff7ccc8-065a-11ec-91e4-acde48001122/,Get ADDefaultDomainPasswordPolicy with Powershell Script Block,['T1201'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-ADDefaultDomainPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText =""*Get-ADDefaultDomainPasswordPolicy*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
|  `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_addefaultdomainpasswordpolicy_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/20db5f70-34b4-4e83-8926-fa26119de173/,Windows IIS Components Get-WebGlobalModule Module Query,"['T1505.004', 'T1505']",The following analytic requires the use of PowerShell inputs to run Get-WebGlobalModule to list out all the IIS Modules installed. The output is a list of Module names and the Image path of the DLL.,['Hunting'],"December 20, 2022","`iis_get_webglobalmodule` 
| stats count min(_time) as firstTime max(_time) as lastTime by host name image 
| rename host as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iis_components_get_webglobalmodule_module_query_filter`","['iis_get_webglobalmodule', 'security_content_ctime']","['_time', 'host', 'name', 'image']",This analytic is meant to assist with hunting modules across a fleet of IIS servers. Filter and modify as needed.,"['IIS Components', 'WS FTP Server Critical Vulnerabilities']","['https://research.splunk.com/stories/iis_components', 'https://research.splunk.com/stories/ws_ftp_server_critical_vulnerabilities']","['https://docs.splunk.com/Documentation/Splunk/9.0.2/Data/MonitorWindowsdatawithPowerShellscripts', 'https://gist.github.com/MHaggis/64396dfd9fc3734e1d1901a8f2f07040', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/21432e40-04f4-11ec-b7e6-acde48001122/,Get ADUser with PowerShell Script Block,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGUser commandlet. The Get-AdUser commandlet is used to return a list of all domain users. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*get-aduser*"" ScriptBlockText = ""*-filter*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduser_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.blackhillsinfosec.com/red-blue-purple/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduser?view=windowsserver2019-ps']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2cf5cc25-f39a-436d-a790-4857e5995ede/,Network Connection Discovery With Netstat,['T1049'],This analytic looks for the execution of netstat.exe with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use netstat.exe for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""netstat.exe"") (Processes.process=*-a*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_netstat_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Volt Typhoon', 'Active Directory Discovery', 'Prestige Ransomware', 'Windows Post-Exploitation', 'Qakbot', 'CISA AA22-277A', 'CISA AA23-347A', 'PlugX']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/plugx']","['https://attack.mitre.org/techniques/T1049/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/2e765c1b-144a-49f0-93d0-1df4287cca04/,Windows System Discovery Using Qwinsta,['T1033'],"The following analytic identifies the execution of qwinsta.exe executable in Windows Operating System. This Windows executable file can display information about sessions on a remote desktop session host server. The information includes servername, sessionname, username and many more. This tool is being abused of Qakbot malware to gather information to the targeted or compromised host that will be send back to its Command And Control server.",['Hunting'],"October 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""qwinsta.exe"" OR Processes.original_file_name = ""qwinsta.exe"" by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `windows_system_discovery_using_qwinsta_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrator may execute this commandline tool for auditing purposes. Filter as needed.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/qwinsta', 'https://securelist.com/qakbot-technical-analysis/103931/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/2e891cbe-0426-11ec-9c9c-acde48001122/,GetLocalUser with PowerShell Script Block,"['T1087', 'T1087.001', 'T1059.001']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-LocalUser commandlet. The Get-LocalUser commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-LocalUser*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getlocaluser_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Active Directory Discovery', 'Malicious PowerShell']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/malicious_powershell']","['https://attack.mitre.org/techniques/T1087/001/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Account Discovery', 'Discovery', 'Discovery', 'Execution', 'Local Account', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/36e46ebe-065a-11ec-b4c7-acde48001122/,Get ADDefaultDomainPasswordPolicy with Powershell,['T1201'],This analytic looks for the execution of powershell.exe executing the Get-ADDefaultDomainPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['Hunting'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-ADDefaultDomainPasswordPolicy*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_addefaultdomainpasswordpolicy_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/395163b8-689b-444b-86c7-9fe9ad624734/,PaperCut NG Suspicious Behavior Debug Log,"['T1190', 'T1133']","The following hunting analytic is designed to monitor and detect potential exploitation attempts targeting a PaperCut NG server by analyzing its debug log data. By focusing on public IP addresses accessing the PaperCut NG instance, this analytic aims to identify unauthorized or suspicious access attempts. Furthermore, it searches for specific URIs that have been discovered in the proof of concept code, which are associated with known exploits or vulnerabilities. The analytic is focused on the user admin. Regex is used mainly because the log is not parsed by Splunk and there is no TA for this debug log.",['Hunting'],"May 15, 2023","`papercutng` (loginType=Admin OR userName=admin) 
| eval uri_match=if(match(_raw, ""(?i)(\/app\?service=page\/SetupCompleted
|\/app
|\/app\?service=page\/PrinterList
|\/app\?service=direct\/1\/PrinterList\/selectPrinter&sp=l1001
|\/app\?service=direct\/1\/PrinterDetails\/printerOptionsTab\.tab)""), ""URI matches"", null()) 
| eval ip_match=if(match(_raw, ""(?i)((25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))"") AND NOT match(_raw, ""(?i)(10\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))
|(172\.(1[6-9]
|2[0-9]
|3[0-1])\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))
|(192\.168\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))""), ""IP matches"", null()) 
| where  (isnotnull(uri_match) OR isnotnull(ip_match)) 
| stats sparkline, count, values(uri_match) AS uri_match, values(ip_match) AS ip_match latest(_raw) BY host, index, sourcetype 
| `papercut_ng_suspicious_behavior_debug_log_filter`",['papercutng'],"['uri_match', 'ip_match', 'index', 'sourcetype', 'host']","False positives may be present, as this is based on the admin user accessing the Papercut NG instance from a public IP address. Filter as needed.",['PaperCut MF NG Vulnerability'],['https://research.splunk.com/stories/papercut_mf_ng_vulnerability'],"['https://www.papercut.com/kb/Main/HowToCollectApplicationServerDebugLogs', 'https://github.com/inodee/threathunting-spl/blob/master/hunt-queries/HAFNIUM.md', 'https://www.cisa.gov/news-events/alerts/2023/05/11/cisa-and-fbi-release-joint-advisory-response-active-exploitation-papercut-vulnerability', 'https://www.papercut.com/kb/Main/PO-1216-and-PO-1219', 'https://www.horizon3.ai/papercut-cve-2023-27350-deep-dive-and-indicators-of-compromise/', 'https://www.bleepingcomputer.com/news/security/hackers-actively-exploit-critical-rce-bug-in-papercut-servers/', 'https://www.huntress.com/blog/critical-vulnerabilities-in-papercut-print-management-software']","['Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/395ed5fe-ad13-4366-9405-a228427bdd91/,Windows Impair Defense Delete Win Defender Context Menu,"['T1562.001', 'T1562']","The search looks for the deletion of Windows Defender context menu within the registry. This is consistent behavior with RAT malware across a fleet of endpoints. This particular behavior is executed when an adversary gains access to an endpoint and begins to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",['Hunting'],"June 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\shellex\\ContextMenuHandlers\\EPP"" Registry.action = deleted by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_delete_win_defender_context_menu_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://app.any.run/tasks/45f5d114-91ea-486c-ab01-41c4093d2861/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4006adac-5937-11eb-ae93-0242ac130002/,Suspicious MSBuild Rename,"['T1036', 'T1127', 'T1036.003', 'T1127.001']","The following analytic identifies renamed instances of msbuild.exe executing. Msbuild.exe is natively found in C:\Windows\Microsoft.NET\Framework\v4.0.30319 and C:\Windows\Microsoft.NET\Framework64\v4.0.30319. During investigation, identify the code executed and what is executing a renamed instance of MSBuild.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=msbuild.exe AND Processes.original_file_name=MSBuild.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_msbuild_rename_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of msbuild, triggering a false positive.","['Trusted Developer Utilities Proxy Execution MSBuild', 'Masquerading - Rename System Utilities', 'Living Off The Land', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1127.001/T1127.001.md', 'https://github.com/infosecn1nja/MaliciousMacroMSBuild/']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'MSBuild', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/4057291a-b8cf-11eb-95fe-acde48001122/,Detect Renamed 7-Zip,"['T1560.001', 'T1560']","The following analytic identifies renamed 7-Zip usage using Sysmon. At this stage of an attack, review parallel processes and file modifications for data that is staged or potentially have been exfiltrated. This analytic utilizes the OriginalFileName to capture the renamed process. During triage, validate this is the legitimate version of 7zip by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.original_file_name=7z*.exe AND Processes.process_name!=7z*.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_7_zip_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives, however this analytic will need to be modified for each environment if Sysmon is not used.",['Collection and Staging'],['https://research.splunk.com/stories/collection_and_staging'],['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1560.001/T1560.001.md'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/406c21d6-6c75-4e9f-9ca9-48049a1dd90e/,Windows Input Capture Using Credential UI Dll,"['T1056.002', 'T1056']","The following analytic identifies a process that loads the credui.dll module. This legitimate module is typically abused by adversaries, threat actors and red teamers to create a credential UI prompt dialog box to lure users for possible credential theft or can be used to dump the credentials of a targeted host. This hunting query is a good pivot to check why the process loaded this dll and if it is a legitimate file. This hunting query may hit false positive for a third party application that uses a credential login UI for user login.",['Hunting'],"August 24, 2022","`sysmon` EventCode=7  (ImageLoaded = ""*\\credui.dll"" AND OriginalFileName = ""credui.dll"") OR (ImageLoaded = ""*\\wincredui.dll"" AND OriginalFileName = ""wincredui.dll"") AND NOT(Image IN(""*\\windows\\explorer.exe"", ""*\\windows\\system32\\*"", ""*\\windows\\sysWow64\\*"", ""*:\\program files*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded OriginalFileName dest EventCode Signed ProcessId ProcessGuid 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_input_capture_using_credential_ui_dll_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",this module can be loaded by a third party application. Filter is needed.,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://docs.microsoft.com/en-us/windows/win32/api/wincred/nf-wincred-creduipromptforcredentialsa', 'https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.002/T1056.002.md#atomic-test-2---powershell---prompt-user-for-password']","['Collection', 'Collection', 'Credential Access', 'Credential Access', 'GUI Input Capture', 'Input Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/425a6657-c5e4-4cbb-909e-fc9e5d326f01/,Windows Defender ASR Rules Stacking,"['T1566.001', 'T1566.002', 'T1059']","This hunting analytic targets a range of security events from Microsoft Defender, focusing on the Exploit Guard and Attack Surface Reduction (ASR) features. It monitors specific Event IDs - Event IDs 1121 and 1126 indicate active blocking of unauthorized operations or dangerous network connections, whereas Event IDs 1122 and 1125 represent audit logs for similar activities. Event ID 1129 shows user overrides on blocked operations. For ASR-related activities, Event IDs 1131 and 1133 signal blocked operations, while 1132 and 1134 are audit logs. Event ID 5007 alerts on configuration changes, possibly indicating security breaches. 
Additionally, the analytic utilizes a lookup to correlate ASR rule GUIDs with their descriptive names, enhancing understanding of the context behind these security alerts. This includes rules for blocking vulnerable drivers, restricting actions of Adobe Reader and Office applications, and protecting against various malware and unauthorized system changes. This comprehensive approach aids in assessing policy enforcement and potential security risks.",['Hunting'],"November 20, 2023","`ms_defender` EventCode IN (1121, 1122, 1125, 1126, 1129, 1131, 1132, 1133, 1134, 5007) 
| lookup asr_rules ID OUTPUT ASR_Rule 
| fillnull value=NULL 
| stats count min(_time) as firstTime max(_time) as lastTime by host Parent_Commandline, Process_Name, Path, ID, EventCode, ASR_Rule 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| rename host as dest 
| `windows_defender_asr_rules_stacking_filter`","['security_content_ctime', 'ms_defender']","['host', 'Parent_Commandline', 'Target_Commandline', 'ID', 'EventCode', 'ASR_Rule']","False positives are not expected with this analytic, since it is a hunting analytic. It is meant to show the use of ASR rules and how they can be used to detect malicious activity.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],"['https://asrgen.streamlit.app/', 'https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/attack-surface-reduction?view=o365-worldwide']","['Command and Scripting Interpreter', 'Execution', 'Initial Access', 'Initial Access', 'Spearphishing Attachment', 'Spearphishing Link', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4807e716-43a4-11ec-a0e7-acde48001122/,Runas Execution in CommandLine,"['T1134', 'T1134.001']","This analytic look for a spawned runas.exe process with a administrator user option parameter. This parameter was abused by adversaries, malware author or even red teams to gain elevated privileges in target host. This is a good hunting query to figure out privilege escalation tactics that may used for different stages like lateral movement but take note that administrator may use this command in purpose so its better to see other event context before and after this analytic.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_runas` AND Processes.process = ""*/user:*"" AND Processes.process = ""*admin*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `runas_execution_in_commandline_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_runas']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated or manual execute this command that may generate false positives. filter is needed.,"['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation']",['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/'],"['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Token Impersonation/Theft']",['Endpoint']
https://research.splunk.com/endpoint/4902d7aa-0134-11ec-9d65-acde48001122/,Local Account Discovery With Wmic,"['T1087', 'T1087.001']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for local users. The argument useraccount is used to leverage WMI to return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` (Processes.process=*useraccount*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `local_account_discovery_with_wmic_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']",['_time'],Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/492f09cf-5d60-4d87-99dd-0bc325532dda/,Windows Process Injection With Public Source Path,"['T1055', 'T1055.002']","The following analytic identifies a process in a non-standard file path on Windows attempting to create a remote thread into a process. This Windows API,CreateRemoteThread, is commonly used by adversaries for process injection to evade detections or gain privilege escalation.",['Hunting'],"August 24, 2022","`sysmon` EventCode=8 TargetImage = ""*.exe"" AND NOT(SourceImage IN(""C:\\Windows\\*"", ""C:\\Program File*"", ""%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage signature TargetProcessGuid SourceProcessGuid TargetProcessId SourceProcessId StartAddress EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_with_public_source_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest', 'signature', 'TargetProcessGuid', 'SourceProcessGuid', 'StartAddress']","Some security products or third party applications may utilize CreateRemoteThread, filter as needed before enabling as a notable.",['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],['https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/'],"['Defense Evasion', 'Defense Evasion', 'Portable Executable Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4f7e3913-4db3-4ccd-afe4-31198982305d/,Windows BootLoader Inventory,"['T1542.001', 'T1542']","The following hunting query utilizes a PowerShell Scripted input that captures the bootloader paths for each Windows endpoint it is deployed to. The template inputs.conf is located in the references link. By default, it only captures the path, but may be modified to capture everything that BCDedit provides. It can be verbose, but may be worth it.",['Hunting'],"April 14, 2023","`bootloader_inventory` 
| stats count min(_time) as firstTime max(_time) as lastTime values(_raw) by host 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_bootloader_inventory_filter`","['bootloader_inventory', 'security_content_ctime']","['_time', '_raw']","No false positives here, only bootloaders. Filter as needed or create a lookup as a baseline.","['BlackLotus Campaign', 'Windows BootKits']","['https://research.splunk.com/stories/blacklotus_campaign', 'https://research.splunk.com/stories/windows_bootkits']","['https://gist.github.com/MHaggis/26518cd2844b0e03de6126660bb45707', 'https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/']","['Defense Evasion', 'Defense Evasion', 'Persistence', 'Persistence', 'Pre-OS Boot', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Firmware']",['Endpoint']
https://research.splunk.com/endpoint/5434f670-155d-11ec-8cca-acde48001122/,Get WMIObject Group Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of Get-WMIObject Win32_Group being used with PowerShell to identify local groups on the endpoint. \ Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \ During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=powershell.exe OR processes.process_name=cmd.exe) (Processes.process=""*Get-WMIObject*"" AND Processes.process=""*Win32_Group*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`  
| `get_wmiobject_group_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/54a6ed00-3256-11ec-b031-acde48001122/,CMD Carry Out String Command Parameter,"['T1059.003', 'T1059']",The following analytic identifies command-line arguments where cmd.exe /c is used to execute a program. cmd /c is used to run commands in MS-DOS and terminate after command or process completion. This technique is commonly seen in adversaries and malware to execute batch command using different shell like PowerShell or different process other than cmd.exe. This is a good hunting query for suspicious command-line made by a script or relative process execute it.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` AND Processes.process=""* /c*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cmd_carry_out_string_command_parameter_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.parent_process_id']",False positives may be high based on legitimate scripted code in any environment. Filter as needed.,"['AsyncRAT', 'Winter Vivern', 'WhisperGate', 'Living Off The Land', 'DarkGate Malware', 'ProxyNotShell', 'Log4Shell CVE-2021-44228', 'NjRAT', 'RedLine Stealer', 'Rhysida Ransomware', 'IcedID', 'Chaos Ransomware', 'PlugX', 'Azorult', 'Qakbot', 'Hermetic Wiper', 'Warzone RAT', 'DarkCrystal RAT', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/54f5201e-155b-11ec-a6e2-acde48001122/,Net Localgroup Discovery,"['T1069', 'T1069.001']","The following hunting analytic will identify the use of localgroup discovery using net localgroup. During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=net.exe OR Processes.process_name=net1.exe (Processes.process=""*localgroup*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `net_localgroup_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,"['Prestige Ransomware', 'Volt Typhoon', 'Graceful Wipe Out Attack', 'IcedID', 'Windows Discovery Techniques', 'Windows Post-Exploitation', 'Azorult', 'Active Directory Discovery', 'Rhysida Ransomware']","['https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_discovery_techniques', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57551656-ebdb-11eb-afdf-acde48001122/,SAM Database File Access Attempt,"['T1003.002', 'T1003']","The following analytic identifies access to SAM, SYSTEM or SECURITY databases' within the file path of windows\system32\config using Windows Security EventCode 4663. This particular behavior is related to credential access, an attempt to either use a Shadow Copy or recent CVE-2021-36934 to access the SAM database. The Security Account Manager (SAM) is a database file in Windows XP, Windows Vista, Windows 7, 8.1 and 10 that stores users' passwords.",['Hunting'],"June 13, 2023","`wineventlog_security` (EventCode=4663)  process_name!=*\\dllhost.exe Object_Name IN (""*\\Windows\\System32\\config\\SAM*"",""*\\Windows\\System32\\config\\SYSTEM*"",""*\\Windows\\System32\\config\\SECURITY*"") 
| stats values(Accesses) count by process_name Object_Name  dest user 
| `sam_database_file_access_attempt_filter`",['wineventlog_security'],"['_time', 'process_name', 'Object_Name', 'dest', 'user']","Natively, dllhost.exe will access the files. Every environment will have additional native processes that do as well. Filter by process_name. As an aside, one can remove process_name entirely and add Object_Name=*ShadowCopy*.","['Credential Dumping', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4663', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4663', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934', 'https://github.com/GossiTheDog/HiveNightmare', 'https://github.com/JumpsecLabs/Guidance-Advice/tree/main/SAM_Permissions', 'https://en.wikipedia.org/wiki/Security_Account_Manager']","['Credential Access', 'Credential Access', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5ced34b4-ab32-4bb0-8f22-3b8f186f0a38/,Potential password in username,"['T1078.003', 'T1552.001']","This search identifies users who have entered their passwords in username fields. This is done by looking for failed authentication attempts using usernames with a length longer than 7 characters and a high Shannon entropy, and looks for the next successful authentication attempt from the same source system to the same destination system as the failed attempt.",['Hunting'],"May 11, 2022","| tstats `security_content_summariesonly` earliest(_time) AS starttime latest(_time) AS endtime latest(sourcetype) AS sourcetype values(Authentication.src) AS src values(Authentication.dest) AS dest count FROM datamodel=Authentication WHERE nodename=Authentication.Failed_Authentication BY ""Authentication.user"" 
| `drop_dm_object_name(Authentication)` 
| lookup ut_shannon_lookup word AS user 
| where ut_shannon>3 AND len(user)>=8 AND mvcount(src) == 1 
| sort count, - ut_shannon 
| eval incorrect_cred=user 
| eval endtime=endtime+1000 
| map maxsearches=70 search=""
| tstats `security_content_summariesonly` earliest(_time) AS starttime latest(_time) AS endtime latest(sourcetype) AS sourcetype values(Authentication.src) AS src values(Authentication.dest) AS dest count FROM datamodel=Authentication WHERE nodename=Authentication.Successful_Authentication Authentication.src=\""$src$\"" Authentication.dest=\""$dest$\"" sourcetype IN (\""$sourcetype$\"") earliest=\""$starttime$\"" latest=\""$endtime$\"" BY \""Authentication.user\"" 
| `drop_dm_object_name(\""Authentication\"")` 
| `potential_password_in_username_false_positive_reduction` 
| eval incorrect_cred=\""$incorrect_cred$\"" 
| eval ut_shannon=\""$ut_shannon$\"" 
| sort count"" 
| where user!=incorrect_cred 
| outlier action=RM count 
| `potential_password_in_username_filter`","['security_content_summariesonly', 'potential_password_in_username_false_positive_reduction']","['Authentication.user', 'Authentication.src', 'Authentication.dest', 'sourcetype']",Valid usernames with high entropy or source/destination system pairs with multiple authenticating users will make it difficult to identify the real user authenticating.,"['Credential Dumping', 'Insider Threat']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/insider_threat']",['https://medium.com/@markmotig/search-for-passwords-accidentally-typed-into-the-username-field-975f1a389928'],"['Authentication', 'Credential Access', 'Credentials In Files', 'Defense Evasion', 'Initial Access', 'Local Accounts', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5d0d4830-0133-11ec-bae3-acde48001122/,Local Account Discovery with Net,"['T1087', 'T1087.001']","This analytic looks for the execution of net.exe or net1.exe with command-line arguments utilized to query for local users. The two arguments user and 'users', return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` (Processes.process=*user OR Processes.process=*users) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `local_account_discovery_with_net_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']",['_time'],Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Sandworm Tools']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/sandworm_tools']",['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/61e9a56a-20fa-11ec-8ba3-acde48001122/,Verclsid CLSID Execution,"['T1218.012', 'T1218']",This analytic is to detect a possible abuse of verclsid to execute malicious file through generate CLSID. This process is a normal application of windows to verify the CLSID COM object before it is instantiated by Windows Explorer. This hunting query can be a good pivot point to analyze what is he CLSID or COM object pointing too to check if it is a valid application or not.,['Hunting'],"September 29, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_verclsid` AND Processes.process=""*/S*"" Processes.process=""*/C*"" AND  Processes.process=""*{*"" AND Processes.process=""*}*"" by  Processes.process_name Processes.original_file_name Processes.dest Processes.user Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `verclsid_clsid_execution_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_verclsid']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",windows can used this application for its normal COM object validation.,['Unusual Processes'],['https://research.splunk.com/stories/unusual_processes'],"['https://gist.github.com/NickTyrer/0598b60112eaafe6d07789f7964290d5', 'https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution', 'Verclsid']",['Endpoint']
https://research.splunk.com/endpoint/640337e5-6e41-4b7f-af06-9d9eab5e1e2d/,Network Connection Discovery With Net,['T1049'],This analytic looks for the execution of net.exe with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use net.exe for situational awareness and Active Directory Discovery.,['Hunting'],"September 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=*use*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Azorult', 'Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']",['https://attack.mitre.org/techniques/T1049/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/640b0eda-0429-11ec-accd-acde48001122/,GetWmiObject User Account with PowerShell Script Block,"['T1087', 'T1087.001', 'T1059.001']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-WmiObject commandlet used with specific parameters. The Win32_UserAccount parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"April 5, 2023","`powershell` EventCode=4104 (ScriptBlockText=""*Get-WmiObject*"" AND ScriptBlockText=""*Win32_UserAccount*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `getwmiobject_user_account_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery', 'Malicious PowerShell']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/malicious_powershell']","['https://attack.mitre.org/techniques/T1087/001/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Account Discovery', 'Discovery', 'Discovery', 'Execution', 'Local Account', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/64c7adaa-48ee-483c-b0d6-7175bc65e6cc/,Domain Controller Discovery with Wmic,['T1018'],This analytic looks for the execution of wmic.exe with command-line arguments utilized to discover remote systems. The arguments utilized in this command line return a list of all domain controllers in a Windows domain. Red Teams and adversaries alike use *.exe to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"September 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process="""" OR Processes.process=""*DomainControllerAddress*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_controller_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/65615b3a-62ea-4d65-bb9f-6f07c17df4ea/,Windows WinLogon with Public Network Connection,['T1542.003'],"The following analytic is designed to detect anomalous behavior associated with the BlackLotus Campaign, a sophisticated bootkit attack reported by ESET and further investigated in a blog by Microsoft, which provided hunting queries for security analysts. The primary focus of this analytic is to identify instances of Winlogon.exe, a critical Windows process, connecting to public IP space, which is indicative of potential malicious activity.\ The BlackLotus Campaign is a bootkit-based attack that compromises system integrity by infecting the Master Boot Record (MBR) and Volume Boot Record (VBR). This malware variant can bypass traditional security measures, load before the operating system, and maintain persistence on the target system.
Winlogon.exe is a critical Windows process responsible for managing user logon and logoff processes. Under normal circumstances, Winlogon.exe should not be connecting to public IP addresses. However, if it does, it may indicate that the process has been compromised as part of the BlackLotus Campaign or another malicious operation.
This analytic monitors network connections made by Winlogon.exe and triggers an alert if it detects connections to public IP space. By identifying such anomalous behavior, security analysts can investigate further and respond swiftly to potential threats.",['Hunting'],"January 30, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (winlogon.exe)  Processes.process!=unknown by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 NOT (All_Traffic.dest IN (127.0.0.1,10.0.0.0/8,172.16.0.0/12, 192.168.0.0/16, 0:0:0:0:0:0:0:1)) by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as publicIp ] 
| table dest parent_process_name process_name process_path process process_id dest_port publicIp 
| `windows_winlogon_with_public_network_connection_filter`","['security_content_summariesonly', 'security_content_ctime']","['dest', 'parent_process_name', 'process_name', 'process_path', 'process', 'process_id', 'dest_port', 'publicIp']",False positives will be present and filtering will be required. Legitimate IPs will be present and need to be filtered.,['BlackLotus Campaign'],['https://research.splunk.com/stories/blacklotus_campaign'],['https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/'],"['Bootkit', 'Defense Evasion', 'Endpoint', 'Network_Traffic', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/67d2a52e-a7e2-4a5d-ae44-a21212048bc2/,Windows Process Commandline Discovery,['T1057'],The following analytic detects Windows Management Instrumentation Command-line (WMIC) command used to retrieve information about running processes and specifically fetches the command lines used to launch those processes. This Hunting detection can be a good indicator for possible suspicious user or process getting list of process with its command line using wmic application which is not a common practice for a non-technical user.,['Hunting'],"December 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process= ""* process *"" Processes.process= ""* get commandline *"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_commandline_discovery_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting. Filter as needed.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Discovery', 'Endpoint', 'Process Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/683e6196-b8e8-11eb-9a79-acde48001122/,Detect Renamed PSExec,"['T1569', 'T1569.002']","The following analytic identifies renamed instances of PsExec.exe being utilized on an endpoint. Most instances, it is highly probable to capture Psexec.exe or other SysInternal utility usage with the command-line argument of -accepteula. During triage, validate this is the legitimate version of PsExec by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",['Hunting'],"April 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name!=psexec.exe OR Processes.process_name!=psexec64.exe) AND Processes.original_file_name=psexec.c by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_psexec_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives should be present. It is possible some third party applications may use older versions of PsExec, filter as needed.","['SamSam Ransomware', 'DHS Report TA18-074A', 'HAFNIUM Group', 'DarkSide Ransomware', 'Active Directory Lateral Movement', 'CISA AA22-320A', 'Sandworm Tools', 'BlackByte Ransomware', 'DarkGate Malware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1569.002/T1569.002.yaml', 'https://redcanary.com/blog/threat-hunting-psexec-lateral-movement/']","['Endpoint', 'Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/68a0056c-34cb-455f-b03d-df935ea62c4f/,Network Traffic to Active Directory Web Services Protocol,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']",The following analytic identifies network traffic to Active Directory Web Services Protocol. This protocol is used to manage Active Directory. The analytic is meant to be tuned and filtered to the specific environment. It will assist defenders in identifying suspicious processes accessing port 9389.,['Hunting'],"February 12, 2024","| tstats count from datamodel=Network_Traffic where All_Traffic.dest_port=9389 by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.app, All_Traffic.user, All_Traffic.dest_port 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(""All_Traffic"")` 
| `network_traffic_to_active_directory_web_services_protocol_filter`",['security_content_ctime'],"['All_Traffic.src_ip', 'All_Traffic.dest_ip', 'All_Traffic.app', 'All_Traffic.user', 'All_Traffic.dest_port']","False positives should be limited as the destination port is specific to Active Directory Web Services Protocol, however we recommend utilizing this analytic to hunt for non-standard processes querying the ADWS port. Filter by App or dest_ip to AD servers and remove known proceses querying ADWS.",['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],['https://github.com/FalconForceTeam/SOAPHound'],"['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Local Account', 'Local Groups', 'Network_Traffic', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/69df7f7c-155d-11ec-a055-acde48001122/,Get WMIObject Group Discovery with Script Block Logging,"['T1069', 'T1069.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies the usage of Get-WMIObject Win32_Group, which is typically used as a way to identify groups on the endpoint.  Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Get-WMIObject*"" AND ScriptBlockText = ""*Win32_Group*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_wmiobject_group_discovery_with_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.splunk.com/en_us/blog/security/powershell-detections-threat-research-release-august-2021.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Discovery', 'Discovery', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6a1b6cbe-6612-44c3-92b9-1a1bd77412eb/,Windows Defender ASR Registry Modification,['T1112'],"This detection searches for Windows Defender ASR registry modification events. ASR is a feature of Windows Defender Exploit Guard that prevents actions and apps that are typically used by exploit-seeking malware to infect machines. ASR rules are applied to processes and applications. When a process or application attempts to perform an action that is blocked by an ASR rule, an event is generated. This detection searches for ASR registry modification events that are generated when a process or application attempts to modify a registry key that is blocked by an ASR rule. Typically, these will be enabled in block most after auditing and tuning the ASR rules themselves. Set to TTP once tuned.",['Hunting'],"November 27, 2023","`ms_defender` EventCode IN (5007) 
| rex field=New_Value ""0x(?<New_Registry_Value>\\d+)$"" 
| rex field=Old_Value ""0x(?<Old_Registry_Value>\\d+)$"" 
| rex field=New_Value ""Rules\\\\(?<ASR_ID>[A-Fa-f0-9\\-]+)\\s*="" 
| lookup asr_rules ID AS ASR_ID OUTPUT ASR_Rule 
| eval New_Registry_Value=case(New_Registry_Value==""0"", ""Disabled"", New_Registry_Value==""1"", ""Block"", New_Registry_Value==""2"", ""Audit"", New_Registry_Value==""6"", ""Warn"") 
| eval Old_Registry_Value=case(Old_Registry_Value==""0"", ""Disabled"", Old_Registry_Value==""1"", ""Block"", Old_Registry_Value==""2"", ""Audit"", Old_Registry_Value==""6"", ""Warn"") 
| stats count min(_time) as firstTime max(_time) as lastTime by host, New_Value, Old_Value, Old_Registry_Value, New_Registry_Value, ASR_Rule 
| `security_content_ctime(firstTime)`
| rename host as dest 
| `security_content_ctime(lastTime)` 
| `windows_defender_asr_registry_modification_filter`","['security_content_ctime', 'ms_defender']","['host', 'New_Value', 'Old_Value', 'Old_Registry_Value', 'New_Registry_Value', 'ASR_Rule']","False positives are expected from legitimate applications generating events that are similar to those generated by malicious activity. For example, Event ID 5007 is generated when a process attempts to modify a registry key that is related to ASR rules. This can be triggered by legitimate applications that attempt to modify registry keys that are not blocked by ASR rules.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],['https://asrgen.streamlit.app/'],"['Defense Evasion', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6dca1124-b3ec-11eb-9328-acde48001122/,Detect Renamed RClone,['T1020'],"The following analytic identifies the usage of rclone.exe, renamed, being used to exfiltrate data to a remote destination. RClone has been used by multiple ransomware groups to exfiltrate data. In many instances, it will be downloaded from the legitimate site and executed accordingly. During triage, isolate the endpoint and begin to review parallel processes for additional behavior. At this stage, the adversary may have staged data to be exfiltrated.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.original_file_name=rclone.exe AND Processes.process_name!=rclone.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_rclone_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited as this analytic identifies renamed instances of rclone.exe. Filter as needed if there is a legitimate business use case.,"['DarkSide Ransomware', 'Ransomware']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware']","['https://redcanary.com/blog/rclone-mega-extortion/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/']","['Automated Exfiltration', 'Endpoint', 'Exfiltration', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/77f41d9e-b8be-47e3-ab35-5776f5ec1d20/,User Discovery With Env Vars PowerShell Script Block,['T1033'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the use of PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*$env:UserName*"" OR ScriptBlockText = ""*[System.Environment]::UserName*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| rename Computer as dest, user_id as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `user_discovery_with_env_vars_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'Path', 'Message', 'OpCode', 'ComputerName', 'User', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/79c7d0fc-60c7-41be-a616-ccda752efe89/,Windows DLL Search Order Hijacking Hunt,"['T1574.001', 'T1574']","The following hunting analytic is an experimental query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.user!=unknown NOT (Processes.process_path IN (""*\\system32\\*"", ""*\\syswow64\\*"",""*\\winsxs\\*"",""*\\wbem\\*""))  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process_path 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup hijacklibs library AS process_name OUTPUT islibrary 
| search islibrary = True 
| rename parent_process_name as process_name , process_name AS ImageLoaded, process_path AS Module_Path 
| `windows_dll_search_order_hijacking_hunt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process_path']",False positives will be present based on paths. Filter or add other paths to the exclusion as needed.,"['Living Off The Land', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']",['https://hijacklibs.net'],"['Defense Evasion', 'Defense Evasion', 'DLL Search Order Hijacking', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/79c7d1fc-64c7-91be-a616-ccda752efe81/,Windows DLL Search Order Hijacking Hunt with Sysmon,"['T1574.001', 'T1574']","The following hunting analytic is query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",['Hunting'],"November 7, 2023","`sysmon` EventCode=7 NOT (process_path IN (""*\\system32\\*"", ""*\\syswow64\\*"",""*\\winsxs\\*"",""*\\wbem\\*"")) 
| lookup hijacklibs library AS process_name OUTPUT islibrary 
| search islibrary = True 
|rename process_name AS ImageLoaded process_path AS Module_Path 
| stats count values(parent_process_name) as parent_process_name by _time dest ImageLoaded Module_Path 
| `windows_dll_search_order_hijacking_hunt_with_sysmon_filter`",['sysmon'],"['_time', 'dest', 'ImageLoaded', 'Module_Path']",False positives will be present based on paths. Filter or add other paths to the exclusion as needed.,"['Living Off The Land', 'Windows Defense Evasion Tactics', 'Qakbot']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/qakbot']",['https://hijacklibs.net'],"['Defense Evasion', 'Defense Evasion', 'DLL Search Order Hijacking', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7eb9c3d5-c98c-4088-acc5-8240bad15379/,GetCurrent User with PowerShell,['T1033'],This analytic looks for the execution of powerhsell.exe with command-line arguments that execute the GetCurrent method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*System.Security.Principal.WindowsIdentity* OR Processes.process=*GetCurrent()*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getcurrent_user_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/80879283-c30f-44f7-8471-d1381f6d437a/,GetCurrent User with PowerShell Script Block,['T1033'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the GetCurrent method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*[System.Security.Principal.WindowsIdentity]*""  ScriptBlockText = ""*GetCurrent()*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getcurrent_user_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'Path', 'Message', 'OpCode', 'ComputerName', 'User', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1033/', 'https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsidentity.getcurrent?view=net-6.0&viewFallbackFrom=net-5.0']","['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/83317b08-155b-11ec-8e00-acde48001122/,Wmic Group Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of wmic.exe enumerating local groups on the endpoint. 
Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe (Processes.process=""*group get name*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `wmic_group_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/85fae8fa-0427-11ec-8b78-acde48001122/,GetLocalUser with PowerShell,"['T1087', 'T1087.001']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for local users. The Get-LocalUser commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"August 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-LocalUser*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getlocaluser_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']",['_time'],Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/868ee0e4-52ab-484a-833a-6d85b7c028d0/,GetDomainController with PowerShell,['T1018'],"This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. Get-DomainController is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-DomainController*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getdomaincontroller_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainController/']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/869ba261-c272-47d7-affe-5c0aa85c93d6/,Headless Browser Usage,['T1564.003'],"The following hunting analytic is designed to detect the usage of headless browsers in an organization. Headless browsers are web browsers without a graphical user interface and are operated via a command line interface or network requests. They are often used for automating tasks but can also be utilized by adversaries for malicious activities such as web scraping, automated testing, and performing actions on web pages without detection. The detection is based on the presence of ""–headless"" and ""–disable-gpu"" command line arguments which are commonly used in headless browsing.",['Hunting'],"September 8, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*--headless*"" AND Processes.process=""*--disable-gpu*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `headless_browser_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'sourcetype']",This hunting analytic is meant to assist with baselining and understanding headless browsing in use. Filter as needed.,['Forest Blizzard'],['https://research.splunk.com/stories/forest_blizzard'],['https://cert.gov.ua/article/5702579'],"['Defense Evasion', 'Endpoint', 'Hidden Window', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/872e3063-0fc4-4e68-b2f3-f2b99184a708/,GetAdGroup with PowerShell,"['T1069', 'T1069.002']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for domain groups. The Get-AdGroup commandlnet is used to return a list of all groups available in a Windows Domain. Red Teams and adversaries alike may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-AdGroup*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadgroup_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/894fc43e-6f50-47d5-a68b-ee9ee23e18f4/,System User Discovery With Whoami,['T1033'],This analytic looks for the execution of whoami.exe without any arguments. This windows native binary prints out the current logged user. Red Teams and adversaries alike may leverage whoami.exe to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""whoami.exe"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_user_discovery_with_whoami_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery', 'Rhysida Ransomware', 'Qakbot', 'CISA AA23-347A']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/8ba484e8-4b97-11ec-b19a-acde48001122/,Possible Browser Pass View Parameter,"['T1555.003', 'T1555']","This analytic will detect if a suspicious process contains a commandline parameter related to a web browser credential dumper. This technique is used by Remcos RAT malware which uses the Nirsoft webbrowserpassview.exe application to dump web browser credentials. Remcos uses the ""/stext"" command line to dump the credentials in text format. This Hunting query is a good indicator of hosts suffering from possible Remcos RAT infection. Since the hunting query is based on the parameter command and the possible path where it will save the text credential information, it may catch normal tools that are using the same command and behavior.",['Hunting'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process  IN (""*/stext *"", ""*/shtml *"", ""*/LoadPasswordsIE*"", ""*/LoadPasswordsFirefox*"", ""*/LoadPasswordsChrome*"", ""*/LoadPasswordsOpera*"", ""*/LoadPasswordsSafari*"" , ""*/UseOperaPasswordFile*"", ""*/OperaPasswordFile*"",""*/stab*"", ""*/scomma*"", ""*/stabular*"", ""*/shtml*"", ""*/sverhtml*"", ""*/sxml*"", ""*/skeepass*"" ) AND Processes.process IN (""*\\temp\\*"", ""*\\users\\public\\*"", ""*\\programdata\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `possible_browser_pass_view_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positive is quite limited. Filter is needed,['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://www.nirsoft.net/utils/web_browser_password.html', 'https://app.any.run/tasks/df0baf9f-8baf-4c32-a452-16562ecb19be/']","['Credential Access', 'Credential Access', 'Credentials from Password Stores', 'Credentials from Web Browsers', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8bd22c9f-05a2-4db1-b131-29271f28cb0a/,Windows Remote Access Software Hunt,['T1219'],"The following hunting analytic is meant to help organizations understand what remote access software is being used in the environment. When reviewing this hunt, confirm the software identified is authorized to be utilized. Based on fidelity, create a new analytic for specific utilities banned within the organization. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",['Hunting'],"August 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.user!=unknown by Processes.dest Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup remote_access_software remote_utility AS process_name OUTPUT isutility 
| search isutility = True 
| `windows_remote_access_software_hunt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be found. Filter as needed and create higher fidelity analytics based off banned remote access software.,"['Insider Threat', 'Command And Control', 'Ransomware']","['https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/command_and_control', 'https://research.splunk.com/stories/ransomware']","['https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1219/T1219.md', 'https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/']","['Command And Control', 'Endpoint', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8c9a06bc-9939-4425-9bb9-be2371f7fb7e/,Windows System User Privilege Discovery,['T1033'],This analytic looks for the execution of whoami.exe with /priv parameter. This whoami command is used to display or shows the privileges assigned to the current user account. This hunting query can be a good pivot start to look for suspicious usage of whoami application that might related to a malware or adversaries.,['Hunting'],"December 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""whoami.exe"" Processes.process= ""*/priv*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_user_privilege_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting. Filter as needed.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],"['https://attack.mitre.org/techniques/T1033/', 'https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/8f45fcf0-5b68-11eb-ae93-0242ac130002/,Detect mshta renamed,"['T1218', 'T1218.005']",The following analytic identifies renamed instances of mshta.exe executing. Mshta.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. This analytic utilizes the internal name of the PE to identify if is the legitimate mshta binary. Further analysis should be performed to review the executed content and validation it is the real mshta.,['Hunting'],"April 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=mshta.exe AND Processes.original_file_name=MSHTA.EXE by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_mshta_renamed_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of mshta.exe, but never renamed, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/993ce99d-9cdd-42c7-a2cf-733d5954e5a6/,Windows System File on Disk,['T1068'],"The following hunting analytic will assist with identifying new .sys files introduced in the environment. This query is meant to identify sys file creates on disk. There will be noise, but reducing common process names or applications should help to limit any volume. The idea is to identify new sys files written to disk and identify them before they're added as a new kernel mode driver.",['Hunting'],"May 16, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.sys*"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.file_hash 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_system_file_on_disk_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present. Filter as needed.,"['Windows Drivers', 'CISA AA22-264A']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-264a']",['https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/'],"['Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9c2620a8-94a1-11ec-b40c-acde48001122/,Windows Event For Service Disabled,"['T1562.001', 'T1562']","This analytic will identify suspicious system event of services that was modified from start to disabled. This technique is seen where the adversary attempts to disable security app services, other malware services to evade the defense systems on the compromised host",['Hunting'],"April 25, 2023","`wineventlog_system` EventCode=7040  Message = ""*service was changed from demand start to disabled."" 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName EventCode Message User Sid service service_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_event_for_service_disabled_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'ComputerName', 'EventCode', 'Message', 'User', 'Sid']","Windows service update may cause this event. In that scenario, filtering is needed.","['Windows Defense Evasion Tactics', 'RedLine Stealer']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/redline_stealer']",['https://blog.talosintelligence.com/2018/02/olympic-destroyer.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9df16706-04a2-41e2-bbfe-9b38b34409d3/,Remote System Discovery with Net,['T1018'],This analytic looks for the execution of net.exe or net1.exe with command-line arguments utilized to discover remote systems. The argument domain computers /domain returns a list of all domain computers. Red Teams and adversaries alike use net.exe to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"August 30, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=""*domain computers*"" AND Processes.process=*/do*) OR (Processes.process=""*view*"" AND Processes.process=*/do*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_system_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'IcedID']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/icedid']","['https://attack.mitre.org/techniques/T1018/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9fb562f4-42f8-4139-8e11-a82edf7ed718/,Remote System Discovery with Dsquery,['T1018'],This analytic looks for the execution of dsquery.exe with command-line arguments utilized to discover remote systems. The computer argument returns a list of all computers registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,['Hunting'],"August 31, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dsquery.exe"") (Processes.process=""*computer*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_system_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc732952(v=ws.11)']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a02ad386-e26d-44ce-aa97-6a46cee31439/,Windows Modify Registry WuServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the WSUS server used by Automatic Updates and (by default) API callers. This policy is paired with WUStatusServer; both must be set to the same value in order for them to be valid.",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\WUServer"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_wuserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a2b1f1ef-221f-4187-b2a4-d4b08ec745f4/,Windows Vulnerable Driver Loaded,['T1543.003'],"The following analytic utilizes a known list of vulnerable Windows drivers to help defenders find potential persistence or privelege escalation via a vulnerable driver. This analytic uses Sysmon EventCode 6, driver loading. A known gap with this lookup is that it does not use the hash or known signer of the vulnerable driver therefore it is up to the defender to identify version and signing info and confirm it is a vulnerable driver.",['Hunting'],"December 12, 2022","`sysmon` EventCode=6 
| lookup loldrivers driver_name AS ImageLoaded OUTPUT is_driver driver_description 
| search is_driver = TRUE 
| stats  min(_time) as firstTime max(_time) as lastTime count by dest ImageLoaded driver_description 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_vulnerable_driver_loaded_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'ImageLoaded']","False positives will be present. Drill down into the driver further by version number and cross reference by signer. Review the reference material in the lookup. In addition, modify the query to look within specific paths, which will remove a lot of ""normal"" drivers.","['Windows Drivers', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://github.com/SigmaHQ/sigma/blob/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml', 'https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules', 'https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/', 'https://github.com/jbaines-r7/dellicious', 'https://github.com/MicrosoftDocs/windows-itpro-docs/blob/public/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules.md', 'https://github.com/namazso/physmem_drivers', 'https://github.com/stong/CVE-2020-15368', 'https://github.com/CaledoniaProject/drivers-binaries', 'https://github.com/Chigusa0w0/AsusDriversPrivEscala', 'https://www.welivesecurity.com/2022/01/11/signed-kernel-drivers-unguarded-gateway-windows-core/', 'https://eclypsium.com/2019/11/12/mother-of-all-drivers/', 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-37969']","['Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/a87736a6-95cd-4728-8689-3c64d5026b3e/,Domain Group Discovery With Wmic,"['T1069', 'T1069.002']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for domain groups. The arguments utilized in this command return a list of all domain groups. Red Teams and adversaries alike use wmic.exe to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process=*/NAMESPACE:\\\\root\\directory\\ldap* AND Processes.process=*ds_group* AND Processes.process=""*GET ds_samaccountname*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a9a1da02-8e27-4bf7-a348-f4389c9da487/,GetAdComputer with PowerShell Script Block,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGroup commandlet. The Get-AdGroup commandlet is used to return a list of all domain computers. Red Teams and adversaries may leverage this commandlet to enumerate domain computers for situational awareness and Active Directory Discovery.,['Hunting'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-AdComputer*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getadcomputer_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Active Directory Discovery', 'CISA AA22-320A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa22-320a']","['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a9e5c5db-db11-43ca-86a8-c852d1b2c0ec/,Common Ransomware Extensions,['T1485'],"The following analytic detects Searches for file modifications that commonly occur with Ransomware to detect modifications to files with extensions that are commonly used by Ransomware. The detection is made by searches for changes in the datamodel=Endpoint.Filesystem, specifically modifications to file extensions that match those commonly used by Ransomware. The detection is important because it suggests that an attacker is attempting to encrypt or otherwise modify files in the environment using malware, potentially leading to data loss that can cause significant damage to an organization's data and systems. False positives might occur so the SOC must investigate the affected system to determine the source of the modification and take appropriate action to contain and remediate the attack.",['Hunting'],"November 10, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime count latest(Filesystem.user) as user values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name Filesystem.dest _time span=1h 
| `drop_dm_object_name(Filesystem)` 
| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
| rex field=file_path ""(?<true_file_path>([^\\\]*\\\)*).*"" 
| stats min(firstTime) as firstTime max(lastTime) as lastTime latest(user) as user dc(true_file_path) as path_count dc(file_name) as file_count latest(file_name) as file_name latest(true_file_path) as file_path by dest file_extension 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `ransomware_extensions` 
| where path_count > 1 OR file_count > 20 
| `common_ransomware_extensions_filter`","['security_content_summariesonly', 'ransomware_extensions', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name']","It is possible for a legitimate file with these extensions to be created. If this is a true ransomware attack, there will be a large number of files created with these extensions.","['SamSam Ransomware', 'Ryuk Ransomware', 'Ransomware', 'Clop Ransomware', 'Prestige Ransomware', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://github.com/splunk/security_content/issues/2448'],"['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ac3b81c0-52f4-11ec-ac44-acde48001122/,Unusual Number of Computer Service Tickets Requested,['T1078'],"The following hunting analytic leverages Event ID 4769, A Kerberos service ticket was requested, to identify an unusual number of computer service ticket requests from one source. When a domain joined endpoint connects to a remote endpoint, it first will request a Kerberos Ticket with the computer name as the Service Name. An endpoint requesting a large number of computer service tickets for different endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc. The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of service requests. To customize this analytic, users can try different combinations of the bucket span time,  the calculation of the upperBound field as well as the Outlier calculation. This logic can be used for real time security monitoring as well as threat hunting exercises.",['Hunting'],"December 1, 2021","`wineventlog_security` EventCode=4769 Service_Name=""*$"" Account_Name!=""*$*"" 
| bucket span=2m _time 
| stats dc(Service_Name) AS unique_targets values(Service_Name) as host_targets by _time, Client_Address, Account_Name 
| eventstats avg(unique_targets) as comp_avg , stdev(unique_targets) as comp_std by Client_Address, Account_Name 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_targets >10 and unique_targets >= upperBound, 1, 0) 
| `unusual_number_of_computer_service_tickets_requested_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Ticket_Options', 'Ticket_Encryption_Type', 'dest', 'service', 'service_id']","An single endpoint requesting a large number of computer service tickets is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, administration systeams and missconfigured systems.","['Active Directory Lateral Movement', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']",['https://attack.mitre.org/techniques/T1078/'],"['Defense Evasion', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/acb5dc74-5324-11ec-a36d-acde48001122/,Unusual Number of Remote Endpoint Authentication Events,['T1078'],"The following hunting analytic leverages Event ID 4624, An account was successfully logged on, to identify an unusual number of remote authentication attempts coming from one source. An endpoint authenticating to a large number of remote endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc. The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual high number of authentication events.To customize this analytic, users can try different combinations of the bucket span time,  the calculation of the upperBound field as well as the Outlier calculation.This logic can be used for real time security monitoring as well as threat hunting exercises.",['Hunting'],"December 1, 2021","`wineventlog_security` EventCode=4624 Logon_Type=3 Account_Name!=""*$"" 
| eval Source_Account = mvindex(Account_Name, 1) 
| bucket span=2m _time 
| stats dc(ComputerName) AS unique_targets values(ComputerName) as target_hosts by _time, Source_Network_Address, Source_Account 
| eventstats avg(unique_targets) as comp_avg , stdev(unique_targets) as comp_std by Source_Network_Address, Source_Account 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_targets >10 and unique_targets >= upperBound, 1, 0) 
| `unusual_number_of_remote_endpoint_authentication_events_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'Caller_Process_Name', 'Security_ID', 'Account_Name', 'ComputerName']","An single endpoint authenticating to a large number of hosts is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, jump servers and missconfigured systems.","['Active Directory Lateral Movement', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/active_directory_privilege_escalation']",['https://attack.mitre.org/techniques/T1078/'],"['Defense Evasion', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/ad03bfcf-8a91-4bc2-a500-112993deba87/,System User Discovery With Query,['T1033'],This analytic looks for the execution of query.exe with command-line arguments utilized to discover the logged user. Red Teams and adversaries alike may leverage query.exe to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""query.exe"") (Processes.process=*user*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_user_discovery_with_query_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/ada0f478-84a8-4641-a3f1-d82362d6bd71/,Common Ransomware Notes,['T1485'],The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.,['Hunting'],"November 9, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `ransomware_notes` 
| `common_ransomware_notes_filter`","['security_content_summariesonly', 'ransomware_notes', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name']",It's possible that a legitimate file could be created with the same name used by ransomware note files.,"['SamSam Ransomware', 'Ransomware', 'Ryuk Ransomware', 'Clop Ransomware', 'Chaos Ransomware', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",,"['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ae008c0f-83bd-4ed4-9350-98d4328e15d2/,Network Connection Discovery With Arp,['T1049'],This analytic looks for the execution of arp.exe utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use arp.exe for situational awareness and Active Directory Discovery.,['Hunting'],"September 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""arp.exe"") (Processes.process=*-a*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_arp_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Qakbot', 'Windows Post-Exploitation', 'Prestige Ransomware', 'Volt Typhoon', 'IcedID']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/icedid']","['https://attack.mitre.org/techniques/T1049/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/b0a078e4-2601-11ec-9aec-acde48001122/,Process Writing DynamicWrapperX,"['T1059', 'T1559.001']","DynamicWrapperX is an ActiveX component that can be used in a script to call Windows API functions, but it requires the dynwrapx.dll to be installed and registered. With that, a binary writing dynwrapx.dll to disk and registering it into the registry is highly suspect. Why is it needed? In most malicious instances, it will be written to disk at a non-standard location. During triage, review parallel processes and pivot on the process_guid. Review the registry for any suspicious modifications meant to load dynwrapx.dll. Identify any suspicious module loads of dynwrapx.dll. This will identify the process that will invoke vbs/wscript/cscript.",['Hunting'],"October 5, 2021","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time Processes.process_id Processes.process_name Processes.dest Processes.process_guid Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""dynwrapx.dll"" by _time Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| fields _time process_guid file_path file_name file_create_time user dest process_name] 
| stats count min(_time) as firstTime max(_time) as lastTime by dest process_name process_guid file_name file_path file_create_time user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `process_writing_dynamicwrapperx_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'process_name', 'process_guid', 'file_name', 'file_path', 'file_create_time user']","False positives should be limited, however it is possible to filter by Processes.process_name and specific processes (ex. wscript.exe). Filter as needed. This may need modification based on EDR telemetry and how it brings in registry data. For example, removal of (Default).",['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/', 'https://www.script-coding.com/dynwrapx_eng.html', 'https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/', 'https://tria.ge/210929-ap75vsddan', 'https://www.virustotal.com/gui/file/cb77b93150cb0f7fe65ce8a7e2a5781e727419451355a7736db84109fa215a89']","['Command and Scripting Interpreter', 'Component Object Model', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b1a8ce04-04c2-11ec-bea7-acde48001122/,Domain Account Discovery with Dsquery,"['T1087.002', 'T1087']",This analytic looks for the execution of dsquery.exe with command-line arguments utilized to discover  domain users. The user argument returns a list of all users registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,['Hunting'],"August 24, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""dsquery.exe"" AND Processes.process = ""*user*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_account_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://jpcertcc.github.io/ToolAnalysisResultSheet/details/dsquery.htm', 'https://attack.mitre.org/techniques/T1087/002/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b3632472-310b-11ec-9aab-acde48001122/,WinEvent Windows Task Scheduler Event Action Started,['T1053.005'],"The following hunting analytic aims to identify suspicious tasks that have been registered and executed in Windows using EventID 200 (action run) and 201 (action completed) from the Windows Task Scheduler logs. This analytic helps detect evasive techniques used to register tasks on Windows systems. It is recommended to filter the results based on the ActionName field by specifying specific paths that are not commonly used in your environment.
After implementing this analytic, it is important to review parallel events related to the scheduled tasks. EventID 106 will be generated when a new task is created, but it does not necessarily mean that the task has been executed. Analysts should capture any files on disk associated with the task and perform further analysis.
To implement this analytic, Task Scheduler logs must be collected. This can be done by adding a stanza for [WinEventLog://Microsoft-Windows-TaskScheduler/Operational] in the inputs.conf file and setting renderXml=false. It is worth noting that not translating the logs into XML may require specific extraction of items from the Message field.
False positives are expected with this analytic, so it is important to filter the results based on the paths or specific keywords of interest in the ActionName field to reduce noise.
Identifying and analyzing scheduled tasks that have been executed is crucial for a Security Operations Center (SOC) as it helps detect potentially malicious or unauthorized activities on Windows systems. By capturing and investigating the associated events, analysts can uncover signs of persistence mechanisms, unauthorized code execution, or suspicious behaviors. The impact of a true positive could range from unauthorized access to data exfiltration or the execution of malicious payloads.",['Hunting'],"April 5, 2023","`wineventlog_task_scheduler` EventCode IN (""200"",""201"") 
| rename ComputerName as dest 
| stats count min(_time) as firstTime max(_time) as lastTime by Message dest EventCode category 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winevent_windows_task_scheduler_event_action_started_filter`","['wineventlog_task_scheduler', 'security_content_ctime']","['_time', 'TaskName', 'ActionName', 'EventID', 'dest', 'ProcessID']",False positives will be present. Filter based on ActionName paths or specify keywords of interest.,"['Qakbot', 'Windows Persistence Techniques', 'Winter Vivern', 'Prestige Ransomware', 'DarkCrystal RAT', 'AsyncRAT', 'Winter Vivern', 'IcedID', 'CISA AA22-257A', 'Industroyer2', 'Sandworm Tools', 'Data Destruction', 'Amadey', 'Scheduled Tasks']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/scheduled_tasks']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053.005/T1053.005.md', 'https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/']","['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b44f6ac6-0429-11ec-87e9-acde48001122/,GetWmiObject User Account with PowerShell,"['T1087', 'T1087.001']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query local users. The Get-WmiObject commandlet combined with the Win32_UserAccount parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"April 5, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-WmiObject* AND Processes.process=*Win32_UserAccount*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_user_account_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']",['_time'],Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery']",['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b71adfcc-155b-11ec-9413-acde48001122/,PowerShell Get LocalGroup Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of get-localgroup being used with PowerShell to identify local groups on the endpoint. During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe) (Processes.process=""*get-localgroup*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `powershell_get_localgroup_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b7a045fc-f14a-11eb-8e79-acde48001122/,Drop IcedID License dat,"['T1204', 'T1204.002']","This search is to detect dropping a suspicious file named as ""license.dat"" in %appdata%. This behavior seen in latest IcedID malware that contain the actual core bot that will be injected in other process to do banking stealing.",['Hunting'],"July 30, 2021","`sysmon` EventCode= 11  TargetFilename = ""*\\license.dat"" AND (TargetFilename=""*\\appdata\\*"" OR TargetFilename=""*\\programdata\\*"") 
|stats count min(_time) as firstTime max(_time) as lastTime by TargetFilename EventCode process_id  process_name dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_icedid_license_dat_filter`","['security_content_ctime', 'sysmon']",['_time'],unknown,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://www.cisecurity.org/insights/white-papers/security-primer-icedid'],"['Execution', 'Execution', 'Malicious File', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/bd5c311e-a6ea-48ae-a289-19a3398e3648/,Windows Identify Protocol Handlers,['T1059'],"The following hunting analytic will identify any protocol handlers utilized on the command-line. A protocol handler is an application that knows how to handle particular types of links: for example, a mail client is a protocol handler for ""mailto:"" links. When the user clicks a ""mailto:"" link, the browser opens the application selected as the handler for the ""mailto:"" protocol (or offers them a choice of handlers, depending on their settings). To identify protocol handlers we can use NirSoft https://www.nirsoft.net/utils/url_protocol_view.html URLProtocolView or query the registry using PowerShell.",['Hunting'],"September 13, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes  by Processes.dest Processes.parent_process_name Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup windows_protocol_handlers handler AS process OUTPUT handler ishandler 
| where ishandler=""TRUE"" 
| `windows_identify_protocol_handlers_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be found. https and http is a URL Protocol handler that will trigger this analytic. Tune based on process or command-line.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://gist.github.com/MHaggis/a0d3edb57d36e0916c94c0a464b2722e', 'https://www.oreilly.com/library/view/learning-java/1565927184/apas02.html', 'https://blogs.windows.com/msedgedev/2022/01/20/getting-started-url-protocol-handlers-microsoft-edge/', 'https://github.com/Mr-Un1k0d3r/PoisonHandler', 'https://www.mdsec.co.uk/2021/03/phishing-users-to-take-a-test/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-5---protocolhandlerexe-downloaded-a-suspicious-file', 'https://techcommunity.microsoft.com/t5/windows-it-pro-blog/disabling-the-msix-ms-appinstaller-protocol-handler/ba-p/3119479', 'https://www.huntress.com/blog/microsoft-office-remote-code-execution-follina-msdt-bug', 'https://parsiya.net/blog/2021-03-17-attack-surface-analysis-part-2-custom-protocol-handlers/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/be498b9f-d804-4bbf-9fc0-d5448466b313/,Windows Modify Registry Auto Minor Updates,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will ""Treat minor updates like other updates"".",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\AutoInstallMinorUpdates"" AND Registry.registry_value_data=""0x00000000"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_auto_minor_updates_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Updates']",['Endpoint']
https://research.splunk.com/endpoint/bff0e7a0-317f-11ec-ab4e-acde48001122/,Wmic NonInteractive App Uninstallation,"['T1562.001', 'T1562']",This analytic indentifies WMIC command-line attempting to uninstall application non-interactively. This technique was seen in IcedID to uninstall AV products on the compromised host to evade detection. This Hunting query maybe a good indicator that some process tries to uninstall application using wmic which is not a common behavior. This approach may seen in some script or third part appication to uninstall their application but it is a good thing to check what it uninstall and why.,['Hunting'],"July 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe Processes.process=""* product *"" Processes.process=""*where name*"" Processes.process=""*call uninstall*"" Processes.process=""*/nointeractive*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wmic_noninteractive_app_uninstallation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Third party application may use this approach to uninstall applications.,"['IcedID', 'Azorult']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c427bafb-0b2c-4b18-ad85-c03c6fed9e75/,Windows Modify Registry USeWuServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will use ""The WUServer value unless this key is set"".",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\UseWUServer"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_usewuserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c4db14d9-7909-48b4-a054-aa14d89dbb19/,Malicious PowerShell Process - Encoded Command,['T1027'],"The following analytic identifies the use of the EncodedCommand PowerShell parameter. This is typically used by Administrators to run complex scripts, but commonly used by adversaries to hide their code. 
The analytic identifies all variations of EncodedCommand, as PowerShell allows the ability to shorten the parameter. For example enc, enco, encod and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash. 
During triage, review parallel events to determine legitimacy. Tune as needed based on admin scripts in use. 
Alternatively, may use regex per matching here https://regexr.com/662ov.",['Hunting'],"January 18, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.dest Processes.process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/
|–
|—
|―]e(nc*o*d*e*d*c*o*m*m*a*n*d*)*\s+[^-]"") 
| `malicious_powershell_process___encoded_command_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest', 'Processes.process_id']","System administrators may use this option, but it's not common.","['Hermetic Wiper', 'Malicious PowerShell', 'NOBELIUM Group', 'WhisperGate', 'DarkCrystal RAT', 'Qakbot', 'CISA AA22-320A', 'Sandworm Tools', 'Data Destruction', 'Volt Typhoon']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/volt_typhoon']","['https://regexr.com/662ov', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1059.001_PowerShell/OutPowerShellCommandLineParameter.ps1', 'https://ss64.com/ps/powershell.html', 'https://twitter.com/M_haggis/status/1440758396534214658?s=20', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c5a31f80-5888-4d81-9f78-1cc65026316e/,GetAdComputer with PowerShell,['T1018'],This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. The `Get-AdComputer' commandlet returns a list of all domain computers. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-AdComputer*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadcomputer_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c8e7ced0-10c5-11ec-8b03-acde48001122/,Rundll32 Control RunDLL Hunt,"['T1218', 'T1218.011']","The following hunting detection identifies rundll32.exe with control_rundll within the command-line, loading a .cpl or another file type. Developed in relation to CVE-2021-40444. Rundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \ This is written to be a bit more broad by not including .cpl. \ During triage, review parallel processes to identify any further suspicious behavior.",['Hunting'],"September 8, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*Control_RunDLL*  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_control_rundll_hunt_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This is a hunting detection, meant to provide a understanding of how voluminous control_rundll is within the environment.","['Suspicious Rundll32 Activity', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444', 'https://research.splunk.com/stories/living_off_the_land']","['https://strontic.github.io/xcyclopedia/library/rundll32.exe-111474C61232202B5B588D2B512CBB25.html', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://attack.mitre.org/techniques/T1218/011/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.002/T1218.002.yaml', 'https://redcanary.com/blog/intelligence-insights-december-2021/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/cb38ee66-8ae5-47de-bd66-231c7bbc0b2c/,Windows Phishing Recent ISO Exec Registry,"['T1566.001', 'T1566']","The following hunting analytic identifies registry artifacts when an ISO container is opened, clicked or mounted on the Windows operating system. As Microsoft makes changes to macro based document execution, adversaries have begun to utilize container based initial access based phishing campaigns to evade preventative controls. Once the ISO is clicked or mounted it will create a registry artifact related to this event as a recent application executed or opened.",['Hunting'],"September 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_key_name= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.iso"" OR Registry.registry_key_name= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.img"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_phishing_recent_iso_exec_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.user', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.action', 'Registry.dest']","False positives may be high depending on the environment and consistent use of ISOs. Restrict to servers, or filter out based on commonly used ISO names. Filter as needed.","['Brute Ratel C4', 'AgentTesla', 'Qakbot', 'IcedID', 'Azorult', 'Remcos', 'Warzone RAT']","['https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/warzone_rat']","['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/', 'https://isc.sans.edu/diary/Recent+AZORult+activity/25120', 'https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cbee60c1-b776-456f-83c2-faa56bdbe6c6/,Windows Query Registry Reg Save,['T1012'],"The following analytic identifies a process execution of reg.exe with ""save"" parameter. This reg.exe parameter is commonly being abused by threat actors, adversaries and red-teamers to dump credentials or to check the registry modification capabilities of certain users or administrators in targeted hosts. This approach was seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check registry modification restriction in targeted host after gaining access to it.",['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_reg` AND Processes.process = ""* save *"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_query_registry_reg_save_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to backup registry before updates or modifying critical registries.,"['Windows Post-Exploitation', 'CISA AA23-347A', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ccb98a66-5851-11ec-b91c-acde48001122/,MSI Module Loaded by Non-System Binary,"['T1574.002', 'T1574']","The following hunting analytic identifies msi.dll being loaded by a binary not located in system32, syswow64, winsxs or windows paths. This behavior is most recently related to InstallerFileTakeOver, or CVE-2021-41379, and DLL side-loading. CVE-2021-41379 requires a binary to be dropped and msi.dll to be loaded by it. To Successful exploitation of this issue happens in four parts \",['Hunting'],"April 14, 2023","`sysmon` EventCode=7 ImageLoaded=""*\\msi.dll"" NOT (Image IN (""*\\System32\\*"",""*\\syswow64\\*"",""*\\windows\\*"", ""*\\winsxs\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `msi_module_loaded_by_non_system_binary_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'ProcessId']","It is possible some Administrative utilities will load msi.dll outside of normal system paths, filter as needed.","['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation']","['https://attackerkb.com/topics/7LstI2clmF/cve-2021-41379/rapid7-analysis', 'https://github.com/klinix5/InstallerFileTakeOver', 'https://github.com/mandiant/red_team_tool_countermeasures/blob/master/rules/PGF/supplemental/hxioc/msi.dll%20Hijack%20(Methodology).ioc']","['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cf056b65-44b2-4d32-9172-d6b6f081a376/,Windows Account Discovery With NetUser PreauthNotRequire,['T1087'],The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets Get-NetUser. This technique was observed in the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user accounts that do not require preauthentication for Kerberos. This hunting query is a good pivot to look for suspicious process or malware that gather user account information in a host or within network system.,['Hunting'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetUser*"" ScriptBlockText = ""*-PreauthNotRequire*"" 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_account_discovery_with_netuser_preauthnotrequire_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Account Discovery', 'Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d0026380-b3c4-4da0-ac8e-02790063ff6b/,Windows Command and Scripting Interpreter Hunting Path Traversal,['T1059'],The following analytic identifies path traversal command-line execution and should be used to tune and driver other more higher fidelity analytics. This technique was seen in malicious document that execute malicious code using msdt.exe and path traversal technique that serve as defense evasion. This Hunting query is a good pivot to look for possible suspicious process and command-line that runs execute path traversal technique to run malicious code. This may help you to find possible downloaded malware or other lolbin execution.,['Hunting'],"June 1, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes  by Processes.original_file_name Processes.process_id Processes.parent_process_id Processes.process_hash Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| eval count_of_pattern1 = (mvcount(split(process,""/..""))-1) 
| eval count_of_pattern2 = (mvcount(split(process,""\..""))-1) 
| eval count_of_pattern3 = (mvcount(split(process,""\\..""))-1) 
| eval count_of_pattern4 = (mvcount(split(process,""//..""))-1) 
| search count_of_pattern1 > 1 OR count_of_pattern2 > 1 OR count_of_pattern3 > 1 OR count_of_pattern4 > 1 
| `windows_command_and_scripting_interpreter_hunting_path_traversal_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",false positive may vary depends on the score you want to check. The bigger number of path traversal string count the better.,"['Windows Defense Evasion Tactics', 'Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190']",['https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d0072bd2-6d73-4c1b-bc77-ded6d2da3a4e/,Windows Modify Registry Reg Restore,['T1012'],"The following analytic identifies a process execution of reg.exe with ""restore"" parameter. This reg.exe parameter is commonly used to restore registry backup data in a targeted host. This approach or technique was also seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check the registry modification restriction in targeted host after gaining access to it.",['Hunting'],"December 12, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_reg` AND Processes.process = ""* restore *"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_reg_restore_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to backup registry before updates or modifying critical registries.,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d2d4af6a-6c2b-4d79-80c5-fc2cf12a2f68/,Windows Drivers Loaded by Signature,"['T1014', 'T1068']","The following analytic assists with viewing all drivers being loaded by using Sysmon EventCode 6 (Driver Load). Sysmon provides some simple fields to assist with identifying suspicious drivers. Use this analytic to look at prevalence of driver (count), path of driver, signature status and hash. Review these fields with scrutiny until the ability to prove the driver is legitimate and has a purpose in the environment.",['Hunting'],"March 30, 2022","`sysmon` EventCode=6 
| stats min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) count by dest Signed Signature service_signature_verified service_signature_exists Hashes 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_drivers_loaded_by_signature_filter`","['security_content_ctime', 'sysmon']","['_time', 'ImageLoaded', 'dest', 'Signed', 'Signature', 'service_signature_verified', 'service_signature_exists', 'Hashes']",This analytic is meant to assist with identifying drivers loaded in the environment and not to be setup for notables off the bat.,"['Windows Drivers', 'CISA AA22-320A', 'AgentTesla', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/', 'https://attack.mitre.org/techniques/T1014/', 'https://www.fuzzysecurity.com/tutorials/28.html']","['Defense Evasion', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Rootkit', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d372f928-ce4f-11eb-a762-acde48001122/,Esentutl SAM Copy,"['T1003.002', 'T1003']","The following analytic identifies the process - esentutl.exe - being used to capture credentials stored in ntds.dit or the SAM file on disk. During triage, review parallel processes and determine if legitimate activity. Upon determination of illegitimate activity, take further action to isolate and contain the threat.",['Hunting'],"August 18, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_esentutl` Processes.process IN (""*ntds*"", ""*SAM*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `esentutl_sam_copy_filter`","['security_content_summariesonly', 'process_esentutl', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited. Filter as needed.,"['Credential Dumping', 'Living Off The Land']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/6a570c2a4630cf0c2bd41a2e8375b5d5ab92f700/atomics/T1003.002/T1003.002.md', 'https://attack.mitre.org/software/S0404/']","['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d56fe0c8-4650-11ec-a8fa-acde48001122/,Windows DiskCryptor Usage,['T1486'],"The following analytic identifies DiskCryptor  process name of dcrypt.exe or internal name dcinst.exe. This utility has been utilized by adversaries to encrypt disks manually during an operation. In addition, during install, a dcrypt.sys driver is installed and requires a reboot in order to take effect. There are no command-line arguments used.",['Hunting'],"November 15, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dcrypt.exe"" OR Processes.original_file_name=dcinst.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_diskcryptor_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","It is possible false positives may be present based on the internal name dcinst.exe, filter as needed. It may be worthy to alert on the service name.",['Ransomware'],['https://research.splunk.com/stories/ransomware'],"['https://thedfirreport.com/2021/11/15/exchange-exploit-leads-to-domain-wide-ransomware/', 'https://github.com/DavidXanatos/DiskCryptor']","['Data Encrypted for Impact', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d6f2b006-0041-11ec-8885-acde48001122/,PowerShell 4104 Hunting,"['T1059', 'T1059.001']","The following Hunting analytic assists with identifying suspicious PowerShell execution using Script Block Logging, or EventCode 4104. This analytic is not meant to be ran hourly, but occasionally to identify malicious or suspicious PowerShell. This analytic is a combination of work completed by Alex Teixeira and Splunk Threat Research Team.",['Hunting'],"December 27, 2023","`powershell` EventCode=4104 
| eval DoIt = if(match(ScriptBlockText,""(?i)(\$doit)""), ""4"", 0) 
| eval enccom=if(match(ScriptBlockText,""[A-Za-z0-9+\/]{44,}([A-Za-z0-9+\/]{4}
|[A-Za-z0-9+\/]{3}=
|[A-Za-z0-9+\/]{2}==)"") OR match(ScriptBlockText, ""(?i)[-]e(nc*o*d*e*d*c*o*m*m*a*n*d*)*\s+[^-]""),4,0) 
| eval suspcmdlet=if(match(ScriptBlockText, ""(?i)Add-Exfiltration
|Add-Persistence
|Add-RegBackdoor
|Add-ScrnSaveBackdoor
|Check-VM
|Do-Exfiltration
|Enabled-DuplicateToken
|Exploit-Jboss
|Find-Fruit
|Find-GPOLocation
|Find-TrustedDocuments
|Get-ApplicationHost
|Get-ChromeDump
|Get-ClipboardContents
|Get-FoxDump
|Get-GPPPassword
|Get-IndexedItem
|Get-Keystrokes
|LSASecret
|Get-PassHash
|Get-RegAlwaysInstallElevated
|Get-RegAutoLogon
|Get-RickAstley
|Get-Screenshot
|Get-SecurityPackages
|Get-ServiceFilePermission
|Get-ServicePermission
|Get-ServiceUnquoted
|Get-SiteListPassword
|Get-System
|Get-TimedScreenshot
|Get-UnattendedInstallFile
|Get-Unconstrained
|Get-VaultCredential
|Get-VulnAutoRun
|Get-VulnSchTask
|Gupt-Backdoor
|HTTP-Login
|Install-SSP
|Install-ServiceBinary
|Invoke-ACLScanner
|Invoke-ADSBackdoor
|Invoke-ARPScan
|Invoke-AllChecks
|Invoke-BackdoorLNK
|Invoke-BypassUAC
|Invoke-CredentialInjection
|Invoke-DCSync
|Invoke-DllInjection
|Invoke-DowngradeAccount
|Invoke-EgressCheck
|Invoke-Inveigh
|Invoke-InveighRelay
|Invoke-Mimikittenz
|Invoke-NetRipper
|Invoke-NinjaCopy
|Invoke-PSInject
|Invoke-Paranoia
|Invoke-PortScan
|Invoke-PoshRat
|Invoke-PostExfil
|Invoke-PowerDump
|Invoke-PowerShellTCP
|Invoke-PsExec
|Invoke-PsUaCme
|Invoke-ReflectivePEInjection
|Invoke-ReverseDNSLookup
|Invoke-RunAs
|Invoke-SMBScanner
|Invoke-SSHCommand
|Invoke-Service
|Invoke-Shellcode
|Invoke-Tater
|Invoke-ThunderStruck
|Invoke-Token
|Invoke-UserHunter
|Invoke-VoiceTroll
|Invoke-WScriptBypassUAC
|Invoke-WinEnum
|MailRaider
|New-HoneyHash
|Out-Minidump
|Port-Scan
|PowerBreach
|PowerUp
|PowerView
|Remove-Update
|Set-MacAttribute
|Set-Wallpaper
|Show-TargetScreen
|Start-CaptureServer
|VolumeShadowCopyTools
|NEEEEWWW
|(Computer
|User)Property
|CachedRDPConnection
|get-net\S+
|invoke-\S+hunter
|Install-Service
|get-\S+(credent
|password)
|remoteps
|Kerberos.*(policy
|ticket)
|netfirewall
|Uninstall-Windows
|Verb\s+Runas
|AmsiBypass
|nishang
|Invoke-Interceptor
|EXEonRemote
|NetworkRelay
|PowerShelludp
|PowerShellIcmp
|CreateShortcut
|copy-vss
|invoke-dll
|invoke-mass
|out-shortcut
|Invoke-ShellCommand""),1,0) 
| eval base64 = if(match(lower(ScriptBlockText),""frombase64""), ""4"", 0) 
| eval empire=if(match(lower(ScriptBlockText),""system.net.webclient"") AND match(lower(ScriptBlockText), ""frombase64string"") ,5,0) 
| eval mimikatz=if(match(lower(ScriptBlockText),""mimikatz"") OR match(lower(ScriptBlockText), ""-dumpcr"") OR match(lower(ScriptBlockText), ""SEKURLSA::Pth"") OR match(lower(ScriptBlockText), ""kerberos::ptt"") OR match(lower(ScriptBlockText), ""kerberos::golden"") ,5,0) 
| eval iex=if(match(ScriptBlockText, ""(?i)iex
|invoke-expression""),2,0) 
| eval webclient=if(match(lower(ScriptBlockText),""http"") OR match(lower(ScriptBlockText),""web(client
|request)"") OR match(lower(ScriptBlockText),""socket"") OR match(lower(ScriptBlockText),""download(file
|string)"") OR match(lower(ScriptBlockText),""bitstransfer"") OR match(lower(ScriptBlockText),""internetexplorer.application"") OR match(lower(ScriptBlockText),""xmlhttp""),5,0) 
| eval get = if(match(lower(ScriptBlockText),""get-""), ""1"", 0) 
| eval rundll32 = if(match(lower(ScriptBlockText),""rundll32""), ""4"", 0) 
| eval suspkeywrd=if(match(ScriptBlockText, ""(?i)(bitstransfer
|mimik
|metasp
|AssemblyBuilderAccess
|Reflection\.Assembly
|shellcode
|injection
|cnvert
|shell\.application
|start-process
|Rc4ByteStream
|System\.Security\.Cryptography
|lsass\.exe
|localadmin
|LastLoggedOn
|hijack
|BackupPrivilege
|ngrok
|comsvcs
|backdoor
|brute.?force
|Port.?Scan
|Exfiltration
|exploit
|DisableRealtimeMonitoring
|beacon)""),1,0) 
| eval syswow64 = if(match(lower(ScriptBlockText),""syswow64""), ""3"", 0) 
| eval httplocal = if(match(lower(ScriptBlockText),""http://127.0.0.1""), ""4"", 0) 
| eval reflection = if(match(lower(ScriptBlockText),""reflection""), ""1"", 0) 
| eval invokewmi=if(match(lower(ScriptBlockText), ""(?i)(wmiobject
|WMIMethod
|RemoteWMI
|PowerShellWmi
|wmicommand)""),5,0) 
| eval downgrade=if(match(ScriptBlockText, ""(?i)([-]ve*r*s*i*o*n*\s+2)"") OR match(lower(ScriptBlockText),""powershell -version""),3,0) 
| eval compressed=if(match(ScriptBlockText, ""(?i)GZipStream
|::Decompress
|IO.Compression
|write-zip
|(expand
|compress)-Archive""),5,0) 
| eval invokecmd = if(match(lower(ScriptBlockText),""invoke-command""), ""4"", 0) 
| addtotals fieldname=Score DoIt, enccom, suspcmdlet, suspkeywrd, compressed, downgrade, mimikatz, iex, empire, rundll32, webclient, syswow64, httplocal, reflection, invokewmi, invokecmd, base64, get 
| stats values(Score) by UserID, Computer, DoIt, enccom, compressed, downgrade, iex, mimikatz, rundll32, empire, webclient, syswow64, httplocal, reflection, invokewmi, invokecmd, base64, get, suspcmdlet, suspkeywrd 
| rename Computer as dest, UserID as user 
| `powershell_4104_hunting_filter`",['powershell'],"['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Limited false positives. May filter as needed.,"['Malicious PowerShell', 'Hermetic Wiper', 'Rhysida Ransomware', 'DarkGate Malware', 'Flax Typhoon', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://github.com/inodee/threathunting-spl/blob/master/hunt-queries/powershell_qualifiers.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell', 'https://github.com/marcurdy/dfir-toolset/blob/master/Powershell%20Blueteam.txt', 'https://devblogs.microsoft.com/powershell/powershell-the-blue-team/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging?view=powershell-5.1', 'https://www.mandiant.com/resources/greater-visibilityt', 'https://hurricanelabs.com/splunk-tutorials/how-to-use-powershell-transcription-logs-in-splunk/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html', 'https://adlumin.com/post/powerdrop-a-new-insidious-powershell-script-for-command-and-control-attacks-targets-u-s-aerospace-defense-industry/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d77d349e-6269-11ec-9cfe-acde48001122/,Suspicious Ticket Granting Ticket Request,"['T1078', 'T1078.002']","As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries will need to request a Kerberos Ticket Granting Ticket (TGT) on behalf of the newly created and renamed computer account. The TGT request will be preceded by a computer account name event. This analytic leverages Event Id 4781, The name of an account was changed and event Id 4768 A Kerberos authentication ticket (TGT) was requested to correlate a sequence of events where the new computer account on event id 4781 matches the request account on event id 4768. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",['Hunting'],"December 21, 2021","`wineventlog_security` (EventCode=4781 Old_Account_Name=""*$"" New_Account_Name!=""*$"") OR (EventCode=4768 Account_Name!=""*$"") 
| eval RenamedComputerAccount = coalesce(New_Account_Name, mvindex(Account_Name,0)) 
| transaction RenamedComputerAccount startswith=(EventCode=4781) endswith=(EventCode=4768) 
| eval short_lived=case((duration<2),""TRUE"") 
| search short_lived = TRUE 
| table _time, ComputerName, EventCode, Account_Name,RenamedComputerAccount, short_lived 
|`suspicious_ticket_granting_ticket_request_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Old_Account_Name', 'New_Account_Name', 'Account_Name', 'ComputerName']","A computer account name change event inmediately followed by a kerberos TGT request with matching fields is unsual. However, legitimate behavior may trigger it. Filter as needed.","['sAMAccountName Spoofing and Domain Controller Impersonation', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/samaccountname_spoofing_and_domain_controller_impersonation', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42278', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42287']","['Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/d7c2c09b-9569-4a9e-a8b6-6a39a99c1d32/,Windows ISO LNK File Creation,"['T1566.001', 'T1566', 'T1204.001', 'T1204']","The following analytic identifies the use of a delivered ISO file that has been mounted and the afformention lnk or file opened within it. When the ISO file is opened, the files are saved in the %USER%\AppData\Local\Temp\<random folder name>\ path. The analytic identifies .iso.lnk written to the path. The name of the ISO file is prepended.",['Hunting'],"September 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\Microsoft\\Windows\\Recent\\*"") Filesystem.file_name IN (""*.iso.lnk"", ""*.img.lnk"", ""*.vhd.lnk"", ""*vhdx.lnk"") by Filesystem.file_create_time Filesystem.process_id Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iso_lnk_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']","False positives may be high depending on the environment and consistent use of ISOs mounting. Restrict to servers, or filter out based on commonly used ISO names. Filter as needed.","['Spearphishing Attachments', 'Brute Ratel C4', 'AgentTesla', 'Qakbot', 'IcedID', 'Azorult', 'Remcos', 'Warzone RAT', 'Amadey']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/amadey']","['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://github.com/MHaggis/notes/blob/master/utilities/ISOBuilder.ps1', 'https://isc.sans.edu/diary/Recent+AZORult+activity/25120', 'https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html']","['Endpoint', 'Execution', 'Execution', 'Initial Access', 'Initial Access', 'Malicious Link', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/d7c6ad22-155c-11ec-bb64-acde48001122/,Powershell Get LocalGroup Discovery with Script Block Logging,"['T1069', 'T1069.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies PowerShell cmdlet - get-localgroup being ran. Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['Hunting'],"April 26, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*get-localgroup*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText  
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `powershell_get_localgroup_discovery_with_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.splunk.com/en_us/blog/security/powershell-detections-threat-research-release-august-2021.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Discovery', 'Discovery', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dc1457d0-1d9b-422e-b5a7-db46c184d9aa/,Network Share Discovery Via Dir Command,['T1135'],"The following analytic identifies object access on Windows administrative SMB shares (Admin$, IPC$, C$). This represents suspicious behavior as its commonly used by tools like PsExec/PaExec and others to stage service binaries before creating and starting a Windows service on remote endpoints. Red Teams and adversaries alike may abuse administrative shares for lateral movement and remote code execution. The IcedID malware family also implements this behavior to try to infect other machines in the infected network.",['Hunting'],"May 23, 2023","`wineventlog_security` EventCode=5140 ShareName IN(""\\\\*\\ADMIN$"",""\\\\*\\C$"",""*\\\\*\\IPC$"") AccessMask= 0x1 
| stats min(_time) as firstTime max(_time) as lastTime count by ShareName IpAddress ObjectType SubjectUserName SubjectDomainName IpPort AccessMask Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_share_discovery_via_dir_command_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'ShareName', 'IpAddress', 'ObjectType', 'SubjectUserName', 'SubjectDomainName', 'IpPort', 'AccessMask', 'Computer']","System Administrators may use looks like net.exe or ""dir commandline"" for troubleshooting or administrations tasks. However, this will typically come only from certain users and certain systems that can be added to an allow list.",['IcedID'],['https://research.splunk.com/stories/icedid'],['https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/'],"['Discovery', 'Network Share Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dcfd6b40-42f9-469d-a433-2e53f7486664/,Detect Prohibited Applications Spawning cmd exe,"['T1059', 'T1059.003']",This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.,['Hunting'],"November 10, 2020","| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` by Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.dest Processes.user
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
|search [`prohibited_apps_launching_cmd`] 
| `detect_prohibited_applications_spawning_cmd_exe_filter`","['security_content_summariesonly', 'process_cmd', 'prohibited_apps_launching_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","There are circumstances where an application may legitimately execute and interact with the Windows command-line interface. Investigate and modify the lookup file, as appropriate.","['Suspicious Command-Line Executions', 'Suspicious MSHTA Activity', 'Suspicious Zoom Child Processes', 'NOBELIUM Group']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/suspicious_zoom_child_processes', 'https://research.splunk.com/stories/nobelium_group']",,"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/dd83407e-439f-11ec-ab8e-acde48001122/,Network Discovery Using Route Windows App,"['T1016', 'T1016.001']",This analytic look for a spawned process of route.exe windows application. Adversaries and red teams alike abuse this application the recon or do a network discovery on a target host. but one possible false positive might be an automated tool used by a system administator or a powershell script in amazon ec2 config services.,['Hunting'],"February 14, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_route` by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_discovery_using_route_windows_app_filter`","['security_content_summariesonly', 'process_route', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated host discovery application that may generate false positives or an amazon ec2 script that uses this application. Filter as needed.,"['Active Directory Discovery', 'Qakbot', 'CISA AA22-277A', 'Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']",['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/'],"['Discovery', 'Discovery', 'Endpoint', 'Internet Connection Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery']",['Endpoint']
https://research.splunk.com/endpoint/dda126d7-1d99-4f0b-b72a-4c14031f9398/,Windows Access Token Manipulation Winlogon Duplicate Token Handle,"['T1134.001', 'T1134']",The following analytic identifies a process requesting access to winlogon.exe attempting to duplicate its handle. This technique was seen in several adversaries to gain privileges for their process. Winlogon.exe is the common targeted process of this technique because it contains high privileges and security tokens.,['Hunting'],"August 24, 2022","`sysmon` EventCode=10 TargetImage IN(""*\\system32\\winlogon.exe*"", ""*\\SysWOW64\\winlogon.exe*"") GrantedAccess = 0x1040 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage SourceProcessGUID TargetProcessGUID SourceProcessId TargetProcessId GrantedAccess CallTrace dest user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_access_token_manipulation_winlogon_duplicate_token_handle_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'SourceProcessGUID', 'TargetProcessGUID', 'SourceProcessId', 'TargetProcessId', 'GrantedAccess', 'CallTrace', 'dest', 'user_id']","It is possible legitimate applications will request access to winlogon, filter as needed.",['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-duplicatehandle', 'https://attack.mitre.org/techniques/T1134/001/']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Token Impersonation/Theft']",['Endpoint']
https://research.splunk.com/endpoint/e02af35c-1de5-4afe-b4be-f45aba57272b/,GetNetTcpconnection with PowerShell,['T1049'],This analytic looks for the execution of powershell.exe with command-line utilized to get a listing of network connections on a compromised system. The Get-NetTcpConnection commandlet lists the current TCP connections. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-NetTcpConnection*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getnettcpconnection_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1049/', 'https://docs.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection?view=windowsserver2019-ps']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/e4c73d68-794b-468d-b4d0-dac1772bbae7/,GetAdGroup with PowerShell Script Block,"['T1069', 'T1069.002']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGroup commandlet. The Get-AdGroup commandlet is used to return a list of all domain groups. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Get-ADGroup*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadgroup_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ea73128a-43ab-11ec-9753-acde48001122/,CSC Net On The Fly Compilation,"['T1027.004', 'T1027']","this analytic is to detect a suspicious compile before delivery approach of .net compiler csc.exe. This technique was seen in several adversaries, malware and even in red teams to take advantage the csc.exe .net compiler tool to compile on the fly a malicious .net code to evade detection from security product. This is a good hunting query to check further the file or process created after this event and check the file path that passed to csc.exe which is the .net code. Aside from that, powershell is capable of using this compiler in executing .net code in a powershell script so filter on that case is needed.",['Hunting'],"November 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_csc` Processes.process = ""*/noconfig*"" Processes.process = ""*/fullpaths*"" Processes.process = ""*@*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `csc_net_on_the_fly_compilation_filter`","['security_content_summariesonly', 'process_csc', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated powershell script taht execute .net code that may generate false positive. filter is needed.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/', 'https://tccontre.blogspot.com/2019/06/maicious-macro-that-compile-c-code-as.html']","['Compile After Delivery', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eddbf5ba-b89e-47ca-995e-2d259804e55e/,Windows Account Discovery for None Disable User Account,"['T1087', 'T1087.001']","The following analytic utilizes PowerShell Script Block Logging to identify the execution of the PowerView PowerShell commandlet Get-NetUser. In the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user accounts that are not disabled. The full script block text based on the CISA-23-347A advisory is ""Get-NetUser -UACFilter NOT_ACCOUNTDISABLE"". Utilize this query to identify potential suspicious activity of user account enumeration.",['Hunting'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetUser*"" ScriptBlockText = ""*NOT_ACCOUNTDISABLE*"" ScriptBlockText = ""*-UACFilter*"" 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_account_discovery_for_none_disable_user_account_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],"['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a', 'https://powersploit.readthedocs.io/en/stable/Recon/README/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview', 'https://atomicredteam.io/discovery/T1087.001/']","['Account Discovery', 'Discovery', 'Discovery', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ee18ed37-0802-4268-9435-b3b91aaa18db/,PowerShell - Connect To Internet With Hidden Window,"['T1059.001', 'T1059']","The following hunting analytic identifies PowerShell commands utilizing the WindowStyle parameter to hide the window on the compromised endpoint. This combination of command-line options is suspicious because it is overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet. Removed in this version of the query is New-Object. The analytic identifies all variations of WindowStyle, as PowerShell allows the ability to shorten the parameter. For example w, win, windowsty and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.dest Processes.process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/
|–
|—
|―]w(in*d*o*w*s*t*y*l*e*)*\s+[^-]"") 
| `powershell___connect_to_internet_with_hidden_window_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.process', 'Processes.process_name', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest']","Legitimate process can have this combination of command-line options, but it's not common.","['AgentTesla', 'HAFNIUM Group', 'Hermetic Wiper', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'Malicious PowerShell', 'Data Destruction', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://regexr.com/663rr', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1059.001_PowerShell/OutPowerShellCommandLineParameter.ps1', 'https://ss64.com/ps/powershell.html', 'https://twitter.com/M_haggis/status/1440758396534214658?s=20', 'https://blog.netlab.360.com/ten-families-of-malicious-samples-are-spreading-using-the-log4j2-vulnerability-now/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f0c9d62f-a232-4edd-b17e-bc409fb133d4/,Domain Group Discovery With Dsquery,"['T1069', 'T1069.002']","This analytic looks for the execution of dsquery.exe with command-line arguments utilized to query for domain groups. The argument group, returns a list of all domain groups. Red Teams and adversaries alike use may leverage dsquery.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"September 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dsquery.exe"") (Processes.process=""*group*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f0db4464-55d9-11eb-ae93-0242ac130002/,Suspicious microsoft workflow compiler rename,"['T1036', 'T1127', 'T1036.003']","The following analytic identifies a renamed instance of microsoft.workflow.compiler.exe. Microsoft.workflow.compiler.exe is natively found in C:\Windows\Microsoft.NET\Framework64\v4.0.30319 and is rarely utilized. When investigating, identify the executed code on disk and review. A spawned child process from microsoft.workflow.compiler.exe is uncommon. In any instance, microsoft.workflow.compiler.exe spawning from an Office product or any living off the land binary is highly suspect.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=microsoft.workflow.compiler.exe AND Processes.original_file_name=Microsoft.Workflow.Compiler.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_microsoft_workflow_compiler_rename_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of microsoft.workflow.compiler.exe, triggering a false positive.","['Masquerading - Rename System Utilities', 'Living Off The Land', 'Cobalt Strike', 'Trusted Developer Utilities Proxy Execution', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://lolbas-project.github.io/lolbas/Binaries/Microsoft.Workflow.Compiler/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-6---microsoftworkflowcompilerexe-payload-execution']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f2f14ac7-fa81-471a-80d5-7eb65c3c7349/,Domain Group Discovery With Net,"['T1069', 'T1069.002']","This analytic looks for the execution of net.exe with command-line arguments utilized to query for domain groups. The argument group /domain, returns a list of all domain groups. Red Teams and adversaries alike use net.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=*group* AND Processes.process=*/do*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Windows Post-Exploitation', 'Active Directory Discovery', 'Prestige Ransomware', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f5939373-8054-40ad-8c64-cec478a22a4a/,Remote Desktop Process Running On System,"['T1021.001', 'T1021']",This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the common_rdp_source category in the Assets and Identity framework.,['Hunting'],"July 21, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*mstsc.exe AND Processes.dest_category!=common_rdp_source by Processes.dest Processes.user Processes.process 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| `remote_desktop_process_running_on_system_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest_category', 'Processes.dest', 'Processes.user']",Remote Desktop may be used legitimately by users on the network.,"['Hidden Cobra Malware', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/hidden_cobra_malware', 'https://research.splunk.com/stories/active_directory_lateral_movement']",,"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f7abfab9-12ea-44e8-8745-475f9ca6e0a4/,Windows Event Triggered Image File Execution Options Injection,['T1546.012'],"The following hunting analytic identifies EventCode 3000 in Application channel indicating a process exit. This behavior is based on process names being added to the Image File Execution Options under HKLM \SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\ and \SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit. Once these are set for a process, an eventcode 3000 will generate. The example used is from Thinkst Canary where a CanaryToken is setup to monitor for a commonly abused living off the land binary (ex. Klist.exe) and generate an event when it occurs. This can be seen as settings traps to monitor for suspicious behavior. Monitor and tune this hunting analytic and setup traps across your organization and begin monitoring.",['Hunting'],"September 8, 2022","`wineventlog_application` EventCode=3000 
| rename param1 AS ""Process"" param2 AS ""Exit_Code"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Process Exit_Code dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_event_triggered_image_file_execution_options_injection_filter`","['wineventlog_application', 'security_content_ctime']","['_time', 'Process', 'Exit_Code', 'dest', 'EventCode']",False positives may be present and tuning will be required before turning into a TTP or notable.,['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],"['https://blog.thinkst.com/2022/09/sensitive-command-token-so-much-offense.html', 'https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit']","['Image File Execution Options Injection', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f87aa96b-369b-4a3e-9021-1bbacbfcb8fb/,Windows Driver Inventory,['T1068'],"The following hunting / inventory query assists defenders in identifying Drivers being loaded across the fleet. This query relies upon a PowerShell script input to be deployed to critical systems and beyond. If capturing all via the input, this will provide retrospection into drivers persisting. Note, that this is not perfect across a large fleet. Modify the query as you need to view the data differently.",['Hunting'],"February 3, 2023","`driverinventory` 
| stats values(Path) min(_time) as firstTime max(_time) as lastTime count by host DriverType 
| rename host as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_driver_inventory_filter`","['driverinventory', 'security_content_ctime']","['_time', 'Path', 'host', 'DriverType']",Filter and modify the analytic as you'd like. Filter based on path. Remove the system32\drivers and look for non-standard paths.,['Windows Drivers'],['https://research.splunk.com/stories/windows_drivers'],['https://gist.github.com/MHaggis/3e4dc85c69b3f7a4595a06c8a692f244'],"['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
