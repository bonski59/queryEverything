url,title,mitre_attack_codes,description,type,last_update,splunk_query,required_macros,required_fields,false_positives,associated_analytics,analytic_stories,references,tags,category
https://research.splunk.com/endpoint/001266a6-9d5b-11eb-829b-acde48001122/,Windows Multiple Invalid Users Fail To Authenticate Using Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with 30 unique invalid domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x6 stands for client not found in Kerberos database (the attempted user is not a valid domain user).
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['TTP'],"April 14, 2021","`wineventlog_security` EventCode=4768 TargetUserName!=*$ Status=0x6 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| where unique_accounts > 30 
| `windows_multiple_invalid_users_fail_to_authenticate_using_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple invalid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, multi-user systems and missconfigured systems.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon']",['https://attack.mitre.org/techniques/T1110/003/'],"['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/002f1e24-146e-11ec-a470-acde48001122/,Jscript Execution Using Cscript App,"['T1059', 'T1059.007']",This search is to detect a execution of jscript using cscript process. Commonly when a user run jscript file it was executed by wscript.exe application. This technique was seen in FIN7 js implant to execute its malicious script using cscript process. This behavior is uncommon and a good artifacts to check further anomalies within the network,['TTP'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""cscript.exe"" AND Processes.parent_process = ""*//e:jscript*"") OR (Processes.process_name = ""cscript.exe"" AND Processes.process = ""*//e:jscript*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process_id Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `jscript_execution_using_cscript_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user']",unknown,"['FIN7', 'Remcos']","['https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/remcos']","['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'JavaScript', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/004e32e2-146d-11ec-a83f-acde48001122/,XSL Script Execution With WMIC,['T1220'],This search is to detect a suspicious wmic.exe process or renamed wmic process to execute malicious xsl file. This technique was seen in FIN7 to execute its malicous jscript using the .xsl as the loader with the help of wmic.exe process. This TTP is really a good indicator for you to hunt further for FIN7 or other attacker that known to used this technique.,['TTP'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process = ""*os get*"" Processes.process=""*/format:*"" Processes.process = ""*.xsl*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process_id Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `xsl_script_execution_with_wmic_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user']",unknown,"['FIN7', 'Suspicious WMI Use']","['https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/suspicious_wmi_use']","['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/', 'https://web.archive.org/web/20190814201250/https://subt0x11.blogspot.com/2018/04/wmicexe-whitelisting-bypass-hacking.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.md#atomic-test-3---wmic-bypass-using-local-xsl-file']","['Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'XSL Script Processing']",['Endpoint']
https://research.splunk.com/endpoint/00d050d3-a5b4-4565-a6a5-a31f69681dc3/,Windows UAC Bypass Suspicious Escalation Behavior,"['T1548', 'T1548.002']","The following analytic detects when a process spawns an executable known for User Account Control bypass exploitation, and then monitors for any subsequent child processes that are above the integrity level of the original spawning process. This behavioral chain may indicate that an attacker has used a UAC Bypass exploit to successfully escalate privileges.",['TTP'],"November 20, 2023","| tstats `security_content_summariesonly` count max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""low"",""medium"") by Processes.dest, Processes.user, Processes.process_name, Processes.process, Processes.process_guid, Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| eval original_integrity_level = CASE(match(process_integrity_level,""low""),1,match(process_integrity_level,""medium""),2,match(process_integrity_level,""high""),3,match(process_integrity_level,""system""),4,true(),0) 
| rename process_guid as join_guid_1, process* as parent_process* 
| join max=0 dest join_guid_1 [
| tstats `security_content_summariesonly` count min(_time) as firstTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""high"",""system"") AND Processes.process_name IN (`uacbypass_process_name`) by Processes.dest, Processes.parent_process_guid, Processes.process_name, Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| rename parent_process_guid as join_guid_1, process_guid as join_guid_2, process_name as uac_process_name ] 
| join max=0 dest join_guid_2 [
| tstats `security_content_summariesonly` count min(_time) as firstTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (`uacbypass_process_name`) AND Processes.process_integrity_level IN (""high"",""system"") by Processes.dest, Processes.parent_process_guid, Processes.process_name, Processes.process, Processes.process_guid, Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| rename parent_process_guid as join_guid_2 
| eval elevated_integrity_level = CASE(match(process_integrity_level,""low""),1,match(process_integrity_level,""medium""),2,match(process_integrity_level,""high""),3,match(process_integrity_level,""system""),4,true(),0)] 
| where elevated_integrity_level > original_integrity_level 
| table dest user parent_process parent_process_name parent_process_integrity_level process_integrity_level process process_name uac_process_name count firstTime lastTime 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_uac_bypass_suspicious_escalation_behavior_filter`","['security_content_summariesonly', 'uacbypass_process_name', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_guid', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name Processes.process', 'Processes.process_path', 'Processes.process_integrity_level', 'Processes.process_current_directory']","Including Werfault.exe may cause some unintended false positives related to normal application faulting, but is used in a number of UAC bypass techniques.","['Windows Defense Evasion Tactics', 'Living Off The Land']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1548/002/', 'https://atomicredteam.io/defense-evasion/T1548.002/', 'https://hadess.io/user-account-control-uncontrol-mastering-the-art-of-bypassing-windows-uac/', 'https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/00d877c3-7b7b-443d-9562-6b231e2abab9/,Windows AD AdminSDHolder ACL Modified,['T1546'],"The following analytic identifies the modification of the Access Control List for the AdminSDHolder object within a Windows domain. Specifically, the detection triggers on the addition of a new rule to the existing ACL. AdminSDHolder is an object located in the System Partition in Active Directory and is used as a security template for objects that are members of certain privileged groups. Objects in these groups are enumerated and any objects with security descriptors that dont match the AdminSDHolder ACL are flagged for updating. The Security Descriptor propagator (SDProp) process runs every 60 minutes on the PDC Emulator and re-stamps the object Access Control List (ACL) with the security permissions set on the AdminSDHolder. An adversary who has obtained privileged access to a Windows Domain may modify the AdminSDHolder ACL to establish persistence and allow an unprivileged user to take control of a domain.",['TTP'],"November 15, 2022","`wineventlog_security` EventCode=5136 AttributeLDAPDisplayName=nTSecurityDescriptor OperationType=""%%14674"" ObjectDN=""CN=AdminSDHolder,CN=System*"" 
| rex field=AttributeValue max_match=10000 ""A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;(?P<added_user_sid>S-1-[0-59]-\d{2}-\d{8,10}-\d{8,10}-\d{8,10}-[1-9]\d{3})\)"" 
| stats values(added_user_sid) by _time, Computer, SubjectUserName, ObjectDN 
| `windows_ad_adminsdholder_acl_modified_filter`",['wineventlog_security'],"['_time', 'EventCode', 'AttributeLDAPDisplayName', 'OperationType', 'ObjectDN', 'Computer', 'SubjectUserName', 'AttributeValue']",Adding new users or groups to the AdminSDHolder ACL is not usual. Filter as needed,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-c--protected-accounts-and-groups-in-active-directory', 'https://social.technet.microsoft.com/wiki/contents/articles/22331.adminsdholder-protected-groups-and-security-descriptor-propagator.aspx', 'https://adsecurity.org/?p=1906', 'https://pentestlab.blog/2022/01/04/domain-persistence-adminsdholder/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5136', 'https://learn.microsoft.com/en-us/windows/win32/secauthz/access-control-lists', 'https://medium.com/@cryps1s/detecting-windows-endpoint-compromise-with-sacls-cd748e10950']","['Event Triggered Execution', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0115482a-5dcb-4bb0-bcca-5d095d224236/,Linux Gem Privilege Escalation,"['T1548.003', 'T1548']","RubyGems is a package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries (in a self-contained format called a ""gem""), a tool designed to easily manage the installation of gems, and a server for distributing them. If sudo right is given to GEM utility for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*gem*open*-e*"" AND Processes.process=""*-c*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_gem_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/gem/', 'https://en.wikipedia.org/wiki/RubyGems']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/0130a0df-83a1-4647-9011-841e950ff302/,Windows PowerSploit GPP Discovery,"['T1552', 'T1552.006']","The following analytic identifies the use of the Get-GPPPassword PowerShell commandlet employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",['TTP'],"March 16, 2023","`powershell` EventCode=4104  (ScriptBlockText=Get-GPPPassword OR ScriptBlockText=Get-CachedGPPPassword) 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powersploit_gpp_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID']",Unknown,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1552/006/', 'https://pentestlab.blog/2017/03/20/group-policy-preferences/', 'https://adsecurity.org/?p=2288', 'https://www.hackingarticles.in/credential-dumping-group-policy-preferences-gpp/', 'https://adsecurity.org/?p=2288', 'https://support.microsoft.com/en-us/topic/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevation-of-privilege-may-13-2014-60734e15-af79-26ca-ea53-8cd617073c30']","['Credential Access', 'Credential Access', 'Group Policy Preferences', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/018c1972-ca07-11eb-9473-acde48001122/,Recon Using WMI Class,"['T1592', 'T1059.001']","The following analytic identifies suspicious PowerShell via EventCode 4104, where WMI is performing an event query looking for running processes or running services. This technique is commonly found where the adversary will identify services and system information on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['Anomaly'],"November 7, 2023","`powershell` EventCode=4104 (ScriptBlockText= ""*SELECT*"" OR ScriptBlockText= ""*Get-WmiObject*"") AND (ScriptBlockText= ""*Win32_Bios*"" OR ScriptBlockText= ""*Win32_OperatingSystem*"" OR ScriptBlockText= ""*Win32_Processor*"" OR ScriptBlockText= ""*Win32_ComputerSystem*"" OR ScriptBlockText= ""*Win32_PnPEntity*"" OR ScriptBlockText= ""*Win32_ShadowCopy*"" OR ScriptBlockText= ""*Win32_DiskDrive*"" OR ScriptBlockText= ""*Win32_PhysicalMemory*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `recon_using_wmi_class_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",network administrator may used this command for checking purposes,"['AsyncRAT', 'Qakbot', 'Industroyer2', 'Hermetic Wiper', 'LockBit Ransomware', 'Malicious PowerShell', 'Data Destruction']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction']","['https://news.sophos.com/en-us/2020/05/12/maze-ransomware-1-year-counting/', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html', 'https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html']","['Execution', 'Gather Victim Host Information', 'PowerShell', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/01d29b48-ff6f-11eb-b81e-acde48001123/,7zip CommandLine To SMB Share Path,"['T1560.001', 'T1560']",This search is to detect a suspicious 7z process with commandline pointing to SMB network share. This technique was seen in CONTI LEAK tools where it use 7z to archive a sensitive files and place it in network share tmp folder. This search is a good hunting query that may give analyst a hint why specific user try to archive a file pointing to SMB user which is un usual.,['Hunting'],"August 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name =""7z.exe"" OR Processes.process_name = ""7za.exe"" OR Processes.original_file_name = ""7z.exe"" OR Processes.original_file_name =  ""7za.exe"") AND (Processes.process=""*\\C$\\*"" OR Processes.process=""*\\Admin$\\*"" OR Processes.process=""*\\IPC$\\*"") by Processes.original_file_name Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.parent_process_id Processes.process_id  Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `7zip_commandline_to_smb_share_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://threadreaderapp.com/thread/1423361119926816776.html'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/01d9a0c2-cece-11eb-ab46-acde48001122/,Detect WMI Event Subscription Persistence,"['T1546.003', 'T1546']","The following analytic identifies the use of WMI Event Subscription to establish persistence or perform privilege escalation.  WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges. This analytic is restricted by commonly added process execution and a path. If the volume is low enough, remove the values and flag on any new subscriptions.
All event subscriptions have three components \",['TTP'],"June 16, 2021","`sysmon` EventID=20 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer User Destination 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_wmi_event_subscription_persistence_filter`","['security_content_ctime', 'sysmon']","['_time', 'Destination', 'dest', 'User']","It is possible some applications will create a consumer and may be required to be filtered. For tuning, add any additional LOLBin's for further depth of coverage.",['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],"['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.003/T1546.003.md', 'https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/', 'https://github.com/trustedsec/SysmonCommunityGuide/blob/master/chapters/WMI-events.md', 'https://in.security/2019/04/03/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/']","['Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation Event Subscription']",['Endpoint']
https://research.splunk.com/endpoint/01f0aef4-8591-4daa-a53d-0ed49823b681/,Windows Abused Web Services,['T1102'],"The following analytic detects a suspicious process making a DNS query via known, abused text-paste web services, VoIP, internet via secure tunneling,instant messaging, and digital distribution platforms used to download external files. This technique is abused by adversaries, malware actors, and red teams to download a malicious file on the target host. This is a good TTP indicator for possible initial access techniques. A user will experience false positives if the following instant messaging is allowed or common applications like telegram or discord are allowed in the corporate network.",['TTP'],"September 20, 2023","`sysmon` EventCode=22 QueryName IN (""*pastebin*"",""""*textbin*"""", ""*ngrok.io*"", ""*discord*"", ""*duckdns.org*"", ""*pasteio.com*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryStatus process_name QueryResults Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_abused_web_services_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryStatus', 'process_name', 'QueryResults', 'Computer']","Noise and false positive can be seen if the following instant messaging is allowed to use within corporate network. In this case, a filter is needed.",['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Command And Control', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Service']",['Endpoint']
https://research.splunk.com/endpoint/023f3452-5f27-11ec-bf00-acde48001122/,Linux Add Files In Known Crontab Directories,"['T1053.003', 'T1053']","The following analytic aims to detect unauthorized activities through suspicious file creation in recognized cron table directories, prevalent Unix-based locations for scheduling tasks. This behavior is often exploited by nefarious entities like malware or threat actors, including red teamers, to establish persistence on a targeted or compromised host. The analogy to Windows-based scheduled tasks helps explain the utility of a crontab or cron job. To enhance clarity and actionable intelligence, the anomaly query flags the anomaly, urging further investigation into the added file's details. A cybersecurity analyst should consider additional data points such as the user identity involved, the file's nature and purpose, file origin, timestamp, and any changes in system behavior post file execution. This comprehensive understanding aids in accurately determining the file's legitimacy, facilitating prompt and effective response actions.",['Anomaly'],"December 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/etc/cron*"", ""*/var/spool/cron/*"") by Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_add_files_in_known_crontab_directories_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create file in crontab folders for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://www.sandflysecurity.com/blog/detecting-cronrat-malware-on-linux-instantly/', 'https://www.cyberciti.biz/faq/how-do-i-add-jobs-to-cron-under-linux-or-unix-oses/']","['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0252ca80-e30d-11eb-8aa3-acde48001122/,NET Profiler UAC bypass,"['T1548.002', 'T1548']",This search is to detect modification of registry to bypass UAC windows feature. This technique is to add a payload dll path on .NET COR file path that will be loaded by mmc.exe as soon it was executed. This detection rely on monitoring the registry key and values in the detection area. It may happened that windows update some dll related to mmc.exe and add dll path in this registry. In this case filtering is needed.,['TTP'],"February 18, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Environment\\COR_PROFILER_PATH"" Registry.registry_value_data = ""*.dll"" by Registry.registry_path Registry.registry_key_name Registry.registry_value_data Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `net_profiler_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest']",limited false positive. It may trigger by some windows update that will modify this registry.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],['https://offsec.almond.consulting/UAC-bypass-dotnet.html'],"['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/026f5f4e-e99f-4155-9e63-911ba587300b/,Windows Defender ASR Block Events,"['T1059', 'T1566.001', 'T1566.002']","This detection searches for Windows Defender ASR block events. ASR is a feature of Windows Defender Exploit Guard that prevents actions and apps that are typically used by exploit-seeking malware to infect machines. ASR rules are applied to processes and applications. When a process or application attempts to perform an action that is blocked by an ASR rule, an event is generated. This detection searches for ASR block events that are generated when a process or application attempts to perform an action that is blocked by an ASR rule. Typically, these will be enabled in block most after auditing and tuning the ASR rules themselves. Set to TTP once tuned.",['Anomaly'],"November 27, 2023","`ms_defender` EventCode IN (1121, 1126, 1129, 1131, 1133) 
| lookup asr_rules ID OUTPUT ASR_Rule 
| fillnull value=NULL 
| stats count min(_time) as firstTime max(_time) as lastTime by host, Path, Parent_Commandline, Process_Name, ID, EventCode, ASR_Rule 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| rename host as dest 
| `windows_defender_asr_block_events_filter`","['security_content_ctime', 'ms_defender']","['host', 'Process_Name', 'Path', 'ID', 'EventCode', 'ASR_Rule']","False positives are expected from legitimate applications generating events that are similar to those generated by malicious activity. For example, Event ID 1122 is generated when a process attempts to load a DLL that is blocked by an ASR rule. This can be triggered by legitimate applications that attempt to load DLLs that are not blocked by ASR rules. This is block only.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],['https://asrgen.streamlit.app/'],"['Command and Scripting Interpreter', 'Execution', 'Initial Access', 'Initial Access', 'Spearphishing Attachment', 'Spearphishing Link', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0270455b-1385-4579-9ac5-e77046c508ae/,Windows Proxy Via Registry,"['T1090.001', 'T1090']","This search looks for processes launching netsh.exe for connection proxy. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",['Anomaly'],"May 25, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path =""*\\System\\CurrentControlSet\\Services\\PortProxy\\v4tov4\\tcp*"" by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.action Registry.dest  Registry.user 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `windows_proxy_via_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",unknown,['Volt Typhoon'],['https://research.splunk.com/stories/volt_typhoon'],['https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/'],"['Command And Control', 'Command And Control', 'Endpoint', 'Internal Proxy', 'Proxy', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/028e4406-6176-11ec-aec2-acde48001122/,Hiding Files And Directories With Attrib exe,"['T1222.001', 'T1222']","Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.",['TTP'],"December 20, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""attrib.exe"" AND match(process_cmd_line, /(?i)/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",Some applications and users may legitimately use attrib.exe to interact with the files.,"['Windows Defense Evasion Tactics', 'Windows Persistence Techniques', 'Information Sabotage', 'Insider Threat']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/information_sabotage', 'https://research.splunk.com/stories/insider_threat']",['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/attrib'],"['Defense Evasion', 'Defense Evasion', 'File and Directory Permissions Modification', 'Splunk Behavioral Analytics', 'Windows File and Directory Permissions Modification']",['Endpoint']
https://research.splunk.com/endpoint/02c6cfc2-ae66-4735-bfc7-6291da834cbf/,File with Samsam Extension,[],"The following analytic detects file writes with extensions that are consistent with a SamSam ransomware attack to proactively detect and respond to potential SamSam ransomware attacks, minimizing the impact and reducing the likelihood of successful ransomware infections. This detection is made by a Splunk query to search for specific file extensions that are commonly associated with SamSam ransomware, such as .stubbin, .berkshire, .satoshi, .sophos, and .keyxml. This identifies file extensions in the file names of the written files. If any file write events with these extensions are found, it suggests a potential SamSam ransomware attack. This detection is important because SamSam ransomware is a highly destructive and financially motivated attack and suggests that the organization is at risk of having its files encrypted and held for ransom, which can lead to significant financial losses, operational disruptions, and reputational damage. False positives might occur since legitimate files with these extensions can exist in the environment. Therefore, next steps include conducting a careful analysis and triage to confirm the presence of a SamSam ransomware attack. Next steps include taking immediate action to contain the attack, mitigate the impact, and prevent further spread of the ransomware. This might involve isolating affected systems, restoring encrypted files from backups, and conducting a thorough investigation to identify the attack source and prevent future incidents.",['TTP'],"December 14, 2018","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)`
| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
| search file_extension=.stubbin OR file_extension=.berkshire OR file_extension=.satoshi OR file_extension=.sophos OR file_extension=.keyxml 
| `file_with_samsam_extension_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name']","Because these extensions are not typically used in normal operations, you should investigate all results.",['SamSam Ransomware'],['https://research.splunk.com/stories/samsam_ransomware'],N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/03e22c1c-8086-11ec-ac2e-acde48001122/,Linux pkexec Privilege Escalation,['T1068'],The following analytic identifies pkexec spawning with no command-line arguments. A vulnerability in Polkit's pkexec component identified as CVE-2021-4034 (PwnKit) which is present in the default configuration of all major Linux distributions and can be exploited to gain full root privileges on the system.,['TTP'],"January 28, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=pkexec by _time Processes.dest Processes.user Processes.process_id Processes.parent_process_name Processes.process_name Processes.process Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(^.{1}$)"" 
| `linux_pkexec_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://www.reddit.com/r/crowdstrike/comments/sdfeig/20220126_cool_query_friday_hunting_pwnkit_local/', 'https://linux.die.net/man/1/pkexec', 'https://www.bleepingcomputer.com/news/security/linux-system-service-bug-gives-root-on-all-major-distros-exploit-released/', 'https://access.redhat.com/security/security-updates/#/?q=polkit&p=1&sort=portal_publication_date%20desc&rows=10&portal_advisory_type=Security%20Advisory&documentKind=PortalProduct']","['Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0418e72f-e710-4867-b656-0688e1523e09/,Windows Impair Defense Disable Win Defender Scan On Update,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender Scan On Update. The ""DisableScanOnUpdate"" registry setting in Windows Defender, when set to a value of 1, typically signifies the feature that prevents automatic scans from initiating when updates to Windows Defender or its antivirus definitions are installed. Any modifications to registry settings, it's important to ensure that changes align with security policies and best practices. Incorrect settings might affect the system's security or functionality. Always consider the implications and ensure changes are made based on accurate information and organizational requirements. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Signature Updates\\DisableScanOnUpdate"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_scan_on_update_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Updates']",['Endpoint']
https://research.splunk.com/endpoint/04207f8a-e08d-4ee6-be26-1e0c4488b04a/,PowerShell Start or Stop Service,['T1059.001'],"This analytic identifies the use of PowerShell's Start-Service or Stop-Service cmdlets on an endpoint. These cmdlets allow users to start or stop a specified Windows service. The ability to manipulate services can be leveraged by attackers to disable or stop critical services, which can cause system instability or disrupt business operations. By detecting the use of Start-Service or Stop-Service cmdlets via PowerShell, this analytic can help organizations identify potential malicious activity related to attackers attempting to manipulate services on compromised systems. However, note that this behavior may be noisy, as these cmdlets are commonly used by system administrators or other legitimate users to manage services. Therefore, it is recommended not to enable this analytic as a direct notable or TTP. Instead, it should be used as part of a broader set of security controls to detect and investigate potential threats.",['Anomaly'],"March 24, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*start-service*"", ""*stop-service*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_start_or_stop_service_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer']","This behavior may be noisy, as these cmdlets are commonly used by system administrators or other legitimate users to manage services. Therefore, it is recommended not to enable this analytic as a direct notable or TTP. Instead, it should be used as part of a broader set of security controls to detect and investigate potential threats.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://learn-powershell.net/2012/01/15/startingstopping-and-restarting-remote-services-with-powershell/', 'https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/start-service?view=powershell-7.3']","['Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/048839e4-1eaa-43ff-8a22-86d17f6fcc13/,Windows Command Shell Fetch Env Variables,['T1055'],"The following analytic identifies a suspicious process command line fetching the environment variables with a non-shell parent process. This technique was seen in qakbot malware where it fetches the environment variable in the target or compromised host. This TTP detection is a good pivot of possible malicious behavior since the command line is executed by a common non-shell process like cmd.exe , powershell.exe and many more. This can also be a good sign that the parent process has a malicious code injected to it to execute this command.",['TTP'],"October 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*cmd /c set"" OR Processes.process = ""*cmd.exe /c set"" AND NOT (Processes.parent_process_name = ""cmd.exe"" OR Processes.parent_process_name = ""powershell*"" OR Processes.parent_process_name=""pwsh.exe"" OR Processes.parent_process_name = ""explorer.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_command_shell_fetch_env_variables_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",shell process that are not included in this search may cause False positive. Filter is needed.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://twitter.com/pr0xylife/status/1585612370441031680?s=46&t=Dc3CJi4AnM-8rNoacLbScg'],"['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/053e027c-10c7-11ec-8437-acde48001122/,Office Spawning Control,"['T1566', 'T1566.001']","The following detection identifies control.exe spawning from an office product. This detection identifies any Windows Office Product spawning control.exe. In malicious instances, the command-line of control.exe will contain a file path to a .cpl or .inf, related to CVE-2021-40444. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. review parallel and child processes to identify further suspicious behavior",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""wordpad.exe"",""wordview.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"") Processes.process_name=control.exe by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `office_spawning_control_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives should be present.,"['Spearphishing Attachments', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444']","['https://strontic.github.io/xcyclopedia/library/control.exe-1F13E714A0FEA8887707DFF49287996F.html', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://attack.mitre.org/techniques/T1218/011/', 'https://www.echotrail.io/insights/search/control.exe/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.002/T1218.002.yaml', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0562ad4b-fdaa-4882-b12f-7b8e0034cd72/,Windows Odbcconf Hunting,['T1218.008'],The following analytic identifies Odbcconf.exe running in the environment to assist with identifying tuning higher fidelity analytics related to Odbcconf.exe.,['Hunting'],"June 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=odbcconf.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_odbcconf_hunting_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present as this is meant to assist with filtering and tuning.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://strontic.github.io/xcyclopedia/library/odbcconf.exe-07FBA12552331355C103999806627314.html', 'https://twitter.com/redcanary/status/1541838407894171650?s=20&t=kp3WBPtfnyA3xW7D7wx0uw']","['Defense Evasion', 'Endpoint', 'Odbcconf', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/057c06c7-ef31-4749-b5c9-199152e53a06/,Windows Rename System Utilities Appinstaller exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies AppInstaller.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""appinstaller.exe"" AND (NOT match(process_file_path, /(?i)\\program files\\windowsapps\\microsoft.desktopappinstaller_1.11.2521.0_x64__8wekyb3d8bbwe/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/064cd09f-1ff4-4823-97e0-45c2f5b087ec/,Windows Modify Registry MaxConnectionPerServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows max connection per server configuration. This particular technique has been observed in various threat actors, adversaries, and even in malware such as the Warzone (Ave Maria) RAT. By altering the max connection per server setting in the Windows registry, attackers can potentially increase the number of concurrent connections allowed to a remote server. This modification could be exploited for various malicious purposes, including facilitating distributed denial-of-service (DDoS) attacks or enabling more effective lateral movement within a compromised network.",['Anomaly'],"July 26, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\MaxConnectionsPerServer*"" OR Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\MaxConnectionsPer1_0Server*"")  Registry.registry_value_data = ""0x0000000a"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_maxconnectionperserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['Warzone RAT'],['https://research.splunk.com/stories/warzone_rat'],"['https://asec.ahnlab.com/en/17692/', 'https://www.blackberry.com/us/en/solutions/endpoint-security/ransomware-protection/warzone#:~:text=Warzone%20RAT%20(AKA%20Ave%20Maria)%20is%20a%20remote%20access%20trojan,is%20as%20an%20information%20stealer.']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0661c2de-93de-11ec-9833-acde48001122/,Windows WMI Process Call Create,['T1047'],This analytic is to look for wmi commandlines to execute or create process. This technique was used by adversaries or threat actor to execute their malicious payload in local or remote host. This hunting query is a good pivot to start to look further which process trigger the wmi or what process it execute locally or remotely.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process = ""* process *"" Processes.process = ""* call *"" Processes.process = ""* create *"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_path Processes.process_guid Processes.parent_process_id Processes.dest Processes.user Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_wmi_process_call_create_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",Administrators may execute this command for testing or auditing.,"['Volt Typhoon', 'Qakbot', 'IcedID', 'Suspicious WMI Use', 'CISA AA23-347A']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/suspicious_wmi_use', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://github.com/NVISOsecurity/sigma-public/blob/master/rules/windows/process_creation/win_susp_wmi_execution.yml', 'https://github.com/redcanaryco/atomic-red-team/blob/2b804d25418004a5f1ba50e9dc637946ab8733c7/atomics/T1047/T1047.md', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/06ade821-f6fa-40d0-80af-15bc1d45b3ba/,Windows Exfiltration Over C2 Via Invoke RestMethod,['T1041'],"The following analytic identifies the potential exfiltration of data using PowerShell's Invoke-RestMethod. This technique was observed in the Winter-Vivern malware, which uploads desktop screenshots and files from compromised or targeted hosts. Detecting this TTP can serve as a valuable indicator that a process is attempting to upload files to an external or internal URI link. We recommend examining the process, the files it is trying to upload, and the URL link or C2 destination where the data is being uploaded.",['TTP'],"April 5, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Invoke-RestMethod *"" AND ScriptBlockText = ""* -Uri *"" AND ScriptBlockText = ""* -Method *"" AND ScriptBlockText = ""* Post *"" AND ScriptBlockText = ""* -InFile *"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_exfiltration_over_c2_via_invoke_restmethod_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'UserID', 'EventCode']",False positives should be limited. Filter as needed.,['Winter Vivern'],['https://research.splunk.com/stories/winter_vivern'],"['https://twitter.com/_CERT_UA/status/1620781684257091584', 'https://cert.gov.ua/article/3761104']","['Exfiltration', 'Exfiltration Over C2 Channel', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/070e9b80-6252-11eb-ae93-0242ac130002/,Detect Regsvr32 Application Control Bypass,"['T1218', 'T1218.010']","Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. Regsvr32.exe is also a Microsoft signed binary.This variation of the technique is often referred to as a ""Squiblydoo"" attack. 
Upon investigating, look for network connections to remote destinations (internal or external). Be cautious to modify the query to look for ""scrobj.dll"", the "".dll"" is not required to load scrobj. ""scrobj.dll"" will be loaded by ""regsvr32.exe"" upon execution.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_regsvr32` Processes.process=*scrobj* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.parent_process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_regsvr32_application_control_bypass_filter`","['security_content_summariesonly', 'process_regsvr32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives related to third party software registering .DLL's.,"['Living Off The Land', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack', 'Suspicious Regsvr32 Activity']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/suspicious_regsvr32_activity']","['https://attack.mitre.org/techniques/T1218/010/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.010/T1218.010.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/', 'https://support.microsoft.com/en-us/topic/how-to-use-the-regsvr32-tool-and-troubleshoot-regsvr32-error-messages-a98d960a-7392-e6fe-d90a-3f4e0cb543e5']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/0734bd21-2769-4972-a5f1-78bb1e011224/,PowerShell Invoke WmiExec Usage,['T1047'],The following analytic detects the usage of the Invoke-WMIExec utility within PowerShell Script Block Logging (EventCode 4104). The utility is used for executing WMI commands on targets using NTLMv2 pass-the-hash authentication.,['TTP'],"March 22, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*invoke-wmiexec*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_invoke_wmiexec_usage_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer']",False positives should be limited as this analytic is designed to detect a specific utility. It is recommended to apply appropriate filters as needed to minimize the number of false positives.,['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],['https://github.com/Kevin-Robertson/Invoke-TheHash/blob/master/Invoke-WMIExec.ps1'],"['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/073e69d0-68b2-4142-aa90-a7ee6f590676/,Windows Modify Registry wuStatusServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the server to which reporting information will be sent for client computers that use the WSUS server configured by the WUServer key. This policy is paired with WUServer; both must be set to the same value in order for them to be valid.",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\WUStatusServer"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_wustatusserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/07921114-6db4-4e2e-ae58-3ea8a52ae93f/,Detect Regasm with Network Connection,"['T1218', 'T1218.009']",The SPL above uses the following Macros:,['TTP'],"January 30, 2024","`sysmon` EventID=3 dest_ip!=10.0.0.0/8 dest_ip!=172.16.0.0/12 dest_ip!=192.168.0.0/16 process_name=regasm.exe  
| stats count min(_time) as firstTime max(_time) as lastTime by dest, user, process_name, src_ip, dest_ip 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_regasm_with_network_connection_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventID', 'dest_ip', 'process_name', 'dest', 'user', 'src_ip', 'dest_host', 'dest_ip']","Although unlikely, limited instances of regasm.exe with a network connection may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regasm/']","['Defense Evasion', 'Defense Evasion', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/07e08a12-870c-11eb-b5f9-acde48001122/,Clop Ransomware Known Service Name,['T1543'],This detection is to identify the common service name created by the CLOP ransomware as part of its persistence and high privilege code execution in the infected machine. Ussually CLOP ransomware use StartServiceCtrlDispatcherW API in creating this service entry.,['TTP'],"March 17, 2021","`wineventlog_system` EventCode=7045 Service_Name IN (""SecurityCenterIBM"", ""WinCheckDRVs"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest EventCode Service_File_Name Service_Name Service_Start_Type Service_Type 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `clop_ransomware_known_service_name_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'cmdline', '_time', 'parent_process_name', 'process_name', 'OriginalFileName', 'process_path']",unknown,['Clop Ransomware'],['https://research.splunk.com/stories/clop_ransomware'],"['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Create or Modify System Process', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/08058866-7987-486f-b042-275715ef6e9d/,Windows Impair Defense Override SmartScreen Prompt,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to override windows defender smartscreen prompt. The ""PreventSmartScreenPromptOverride"" registry setting is associated with the Windows SmartScreen feature, specifically related to controlling whether users can override SmartScreen prompts. When attackers modify ""PreventSmartScreenPromptOverride"" to 0, it signifies an attempt to disable the prevention of user overrides for SmartScreen prompts. By doing so, attackers aim to allow users to bypass or ignore SmartScreen warnings or prompts. This change increases the risk by permitting users to disregard warnings about potentially unsafe or malicious files or websites that would typically trigger SmartScreen alerts. It could lead to users unintentionally executing or accessing malicious content, potentially resulting in security incidents or system compromises.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE Registry.registry_path= ""*\\Microsoft\\Edge\\PreventSmartScreenPromptOverride"" Registry.registry_value_data= ""0x00000000"" BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_override_smartscreen_prompt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/084275ba-61b8-11ec-8d64-acde48001122/,Linux Service Restarted,"['T1053.006', 'T1053']","The following analytic detects the restarting or re-enabling of services in the Linux platform. It focuses on the use of the systemctl or service tools for executing these actions. Adversaries may leverage this technique to repeatedly execute malicious payloads as a form of persistence. Linux hosts typically start services during boot to perform background system functions. However, administrators may also create legitimate services for specific tools or applications as part of task automation. In such cases, it is recommended to verify the service path of the registered script or executable and identify the creator of the service for further validation.
It's important to be aware that this analytic may generate false positives as administrators or network operators may use the same command-line for legitimate automation purposes. Filter macros should be updated accordingly to minimize false positives.
Identifying restarted or re-enabled services is valuable for a SOC as it can indicate potential malicious activities attempting to maintain persistence or execute unauthorized actions on Linux systems. By detecting and investigating these events, security analysts can respond promptly to mitigate risks and prevent further compromise. The impact of a true positive can range from unauthorized access to data destruction or other damaging outcomes.",['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name IN (""systemctl"", ""service"") OR Processes.process IN (""*systemctl *"", ""*service *"")) Processes.process IN (""*restart*"", ""*reload*"", ""*reenable*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_service_restarted_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['AwfulShred', 'Linux Privilege Escalation', 'Linux Living Off The Land', 'Data Destruction', 'Linux Persistence Techniques', 'Scheduled Tasks']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/scheduled_tasks']",['https://attack.mitre.org/techniques/T1543/003/'],"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Systemd Timers']",['Endpoint']
https://research.splunk.com/endpoint/089c862f-5f83-49b5-b1c8-7e4ff66560c7/,Domain Group Discovery with Adsisearcher,"['T1069', 'T1069.002']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the [Adsisearcher] type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage [Adsisearcher] to enumerate domain groups for situational awareness and Active Directory Discovery.,['TTP'],"August 25, 2021","`powershell` EventCode=4104 (Message = ""*[adsisearcher]*"" AND Message = ""*(objectcategory=group)*"" AND Message = ""*findAll()*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| rename ComputerName as dest 
|rename User as user 
| `security_content_ctime(firstTime)` 
| `domain_group_discovery_with_adsisearcher_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use Adsisearcher for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/08c41040-624c-11ec-a71f-acde48001122/,Linux Visudo Utility Execution,"['T1548.003', 'T1548']","This analytic is to looks for suspicious commandline that add entry to /etc/sudoers by using visudo utility tool in linux platform. This technique may abuse by adversaries, malware author and red teamers to gain elevated privilege to targeted or compromised host. /etc/sudoers file controls who can run what commands as what users on what machines and can also control special things such as whether you need a password for particular commands. The file is composed of aliases (basically variables) and user specifications (which control who can run what).",['Anomaly'],"December 21, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = visudo by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_visudo_utility_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://askubuntu.com/questions/334318/sudoers-file-enable-nopasswd-for-user-all-commands'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/08cb291e-ea77-48e8-a95a-0799319bf056/,Windows AD DSRM Account Changes,['T1098'],"Aside from being used to promote genuine domain controllers, the DSRM (Directory Services Restore Mode) account can be used to persist within a Domain. A DC can be configured to allow the DSRM account to logon & be used in the same way as a local administrator account. This detection is looking for alterations to the behaviour of the account via registry.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` min(_time) as _time from datamodel=Endpoint.Registry where Registry.registry_path= ""*\\System\\CurrentControlSet\\Control\\Lsa\\DSRMAdminLogonBehavior"" Registry.registry_value_data IN (""*1"",""*2"") by Registry.action Registry.registry_path Registry.registry_value_data Registry.registry_value_type Registry.process_guid Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| join type=outer process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by Processes.user Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)`] 
| table _time action dest user parent_process_name parent_process process_name process process_guid registry_path registry_value_data registry_value_type 
| `windows_ad_dsrm_account_changes_filter`",['security_content_summariesonly'],"['_time', 'Registry.registry_value_data', 'Registry.registry_path', 'Registry.dest', 'Registry.user']",Disaster recovery events.,"['Sneaky Active Directory Persistence Tricks', 'Windows Registry Abuse', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/windows_persistence_techniques']",['https://adsecurity.org/?p=1714'],"['Account Manipulation', 'Endpoint', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/091712ff-b02a-4d43-82ed-34765515d95d/,GetNetTcpconnection with PowerShell Script Block,['T1049'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-NetTcpconnection  commandlet. This commandlet is used to return a listing of network connections on a compromised system. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,['Hunting'],"April 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-NetTcpconnection*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getnettcpconnection_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1049/', 'https://docs.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection?view=windowsserver2019-ps']","['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/09336538-065a-11ec-8665-acde48001122/,Password Policy Discovery with Net,['T1201'],This analytic looks for the execution of net.exe or net1.exe with command line arguments used to obtain the domain password policy. Red Teams and adversaries may leverage net.exe for situational awareness and Active Directory Discovery.,['Hunting'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") AND Processes.process = ""*accounts*"" AND Processes.process = ""*/domain*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `password_policy_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet'],"['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/09555511-aca6-484a-b6ab-72cd03d73c34/,Windows Local Administrator Credential Stuffing,"['T1110', 'T1110.004']","The following analytic leverages events 4625 and 4624 to identify an endpoint using the builtin local Administrator account to authenticate to a large numbers of endpoints. Specifically, the logic will trigger when an endpoints attempts to authenticate to more than 30 target computers within a 5 minute timespan. This behavior could represent an adversary who has obtained access to local credentials and is trying to validate if these credentials work on other hosts to escalate their privileges. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",['TTP'],"March 22, 2023","`wineventlog_security` EventCode=4625 OR EventCode=4624 Logon_Type=3 TargetUserName=Administrator 
| bucket span=5m _time 
| stats dc(Computer) AS unique_targets values(Computer) as host_targets by _time, IpAddress, TargetUserName, EventCode 
| where unique_targets > 30 
| `windows_local_administrator_credential_stuffing_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'TargetUserName', 'Computer', 'IpAddress']",Vulnerability scanners or system administration tools may also trigger this detection. Filter as needed.,"['Active Directory Privilege Escalation', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_lateral_movement']","['https://attack.mitre.org/techniques/T1110/004/', 'https://attack.mitre.org/techniques/T1110/', 'https://www.blackhillsinfosec.com/wide-spread-local-admin-testing/', 'https://www.pentestpartners.com/security-blog/admin-password-re-use-dont-do-it/', 'https://www.praetorian.com/blog/microsofts-local-administrator-password-solution-laps/', 'https://wiki.porchetta.industries/smb-protocol/password-spraying']","['Brute Force', 'Credential Access', 'Credential Access', 'Credential Stuffing', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/09725404-a44f-4ed3-9efa-8ed5d69e4c53/,GetDomainGroup with PowerShell Script Block,"['T1069', 'T1069.002']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainGroup commandlet. Get-DomainGroup is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. As the name suggests, Get-DomainGroup is used to query domain groups. Red Teams and adversaries may leverage this function to enumerate domain groups for situational awareness and Active Directory Discovery.",['TTP'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-DomainGroup*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getdomaingroup_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerView functions for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainGroup/']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/097b28b5-7004-4d40-a715-7e390501788b/,Linux Ruby Privilege Escalation,"['T1548.003', 'T1548']","Ruby is one of the most used and easy to use programming languages. Ruby is an open-source, object-oriented interpreter that can be installed on a Linux system. If sudo right is given to ruby application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*ruby*-e*"" AND Processes.process=""*exec*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_ruby_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://gtfobins.github.io/gtfobins/ruby/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/09d88404-1e29-46cb-806c-1eedbc85ad5d/,Windows Steal or Forge Kerberos Tickets Klist,['T1558'],The following analytic identifies a process execution of Windows OS klist.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather list of currently cached kerberos ticket. This cahced data can be used for lateral movement or even privilege escalation on the targeted host. This hunting query can be a good pivot in possible kerberos attack or pass the hash technique.,['Hunting'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""klist.exe"" OR Processes.original_file_name = ""klist.exe"" Processes.parent_process_name IN (""cmd.exe"", ""powershell*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_or_forge_kerberos_tickets_klist_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/09e5c72a-4c0d-11ec-aa29-3e22fbd008af/,Svchost LOLBAS Execution Process Spawn,"['T1053', 'T1053.005']","The following analytic is designed to spot instances of 'svchost.exe' initiating a Living Off The Land Binaries and Scripts (LOLBAS) execution process. Often, adversaries manipulate Task Scheduler to execute code on remote endpoints, resulting in the spawning of a malicious command as a child process of 'svchost.exe'. By tracking child processes of 'svchost.exe' that align with the LOLBAS project, potential lateral movement activity can be detected. The analytic examines process details, including the process name, parent process, and command-line executions. A comprehensive list of LOLBAS processes is included in the search parameters. Although the analytic might catch legitimate applications exhibiting this behavior, these instances should be filtered accordingly. The findings from this analytic offer valuable insight into potentially malicious activities on an endpoint.",['TTP'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=svchost.exe) (Processes.process_name IN (""Regsvcs.exe"", ""Ftp.exe"", ""OfflineScannerShell.exe"", ""Rasautou.exe"", ""Schtasks.exe"", ""Xwizard.exe"", ""Pnputil.exe"", ""Atbroker.exe"", ""Pcwrun.exe"", ""Ttdinject.exe"",""Mshta.exe"", ""Bitsadmin.exe"", ""Certoc.exe"", ""Ieexec.exe"", ""Microsoft.Workflow.Compiler.exe"", ""Runscripthelper.exe"", ""Forfiles.exe"", ""Msbuild.exe"", ""Register-cimprovider.exe"", ""Tttracer.exe"", ""Ie4uinit.exe"", ""Bash.exe"", ""Hh.exe"", ""SettingSyncHost.exe"", ""Cmstp.exe"", ""Stordiag.exe"", ""Scriptrunner.exe"", ""Odbcconf.exe"", ""Extexport.exe"", ""Msdt.exe"", ""WorkFolders.exe"", ""Diskshadow.exe"", ""Mavinject.exe"", ""Regasm.exe"", ""Gpscript.exe"", ""Regsvr32.exe"", ""Msiexec.exe"", ""Wuauclt.exe"", ""Presentationhost.exe"", ""Wmic.exe"", ""Runonce.exe"", ""Syncappvpublishingserver.exe"", ""Verclsid.exe"", ""Infdefaultinstall.exe"", ""Installutil.exe"", ""Netsh.exe"", ""Wab.exe"", ""Dnscmd.exe"", ""At.exe"", ""Pcalua.exe"", ""Msconfig.exe"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `svchost_lolbas_execution_process_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Legitimate applications may trigger this behavior, filter as needed.","['Active Directory Lateral Movement', 'Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1053/005/', 'https://www.ired.team/offensive-security/persistence/t1053-schtask', 'https://lolbas-project.github.io/']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0a46537c-be02-11eb-92ca-acde48001122/,Allow Inbound Traffic By Firewall Rule Registry,"['T1021.001', 'T1021']",The following analytic detects a potential suspicious modification of firewall rule registry allowing inbound traffic in specific port with public profile. This technique was identified when an adversary wants to grant remote access to a machine by allowing the traffic in a firewall rule.,['TTP'],"March 29, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\System\\CurrentControlSet\\Services\\SharedAccess\\Parameters\\FirewallPolicy\\FirewallRules\\*"" Registry.registry_value_data = ""*
|Action=Allow
|*"" Registry.registry_value_data = ""*
|Dir=In
|*""  Registry.registry_value_data = ""*
|LPort=*"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid  Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `allow_inbound_traffic_by_firewall_rule_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",network admin may add/remove/modify public inbound firewall rule that may cause this rule to be triggered.,"['Prohibited Traffic Allowed or Protocol Mismatch', 'Windows Registry Abuse', 'Azorult', 'NjRAT', 'PlugX']","['https://research.splunk.com/stories/prohibited_traffic_allowed_or_protocol_mismatch', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/plugx']",['https://docs.microsoft.com/en-us/powershell/module/netsecurity/new-netfirewallrule?view=windowsserver2019-ps'],"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0a69fdaa-a2b8-11eb-b16d-acde48001122/,Excessive Usage of NSLOOKUP App,['T1048'],"This search is to detect potential DNS exfiltration using nslookup application. This technique are seen in couple of malware and APT group to exfiltrated collected data in a infected machine or infected network. This detection is looking for unique use of nslookup where it tries to use specific record type (TXT, A, AAAA) that are commonly used by attacker and also the retry parameter which is designed to query C2 DNS multiple tries.",['Anomaly'],"June 3, 2022","`sysmon` EventCode = 1 process_name = ""nslookup.exe"" 
| bucket _time span=1m 
| stats count as numNsLookup by dest, _time 
| eventstats avg(numNsLookup) as avgNsLookup, stdev(numNsLookup) as stdNsLookup, count as numSlots by dest 
| eval upperThreshold=(avgNsLookup + stdNsLookup *3) 
| eval isOutlier=if(numNsLookup > 20 and numNsLookup >= upperThreshold, 1, 0) 
| search isOutlier=1 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_usage_of_nslookup_app_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'process_name', 'EventCode']",unknown,"['Suspicious DNS Traffic', 'Dynamic DNS', 'Data Exfiltration', 'Command And Control']","['https://research.splunk.com/stories/suspicious_dns_traffic', 'https://research.splunk.com/stories/dynamic_dns', 'https://research.splunk.com/stories/data_exfiltration', 'https://research.splunk.com/stories/command_and_control']","['https://www.mandiant.com/resources/fin7-spear-phishing-campaign-targets-personnel-involved-sec-filings', 'https://www.varonis.com/blog/dns-tunneling', 'https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/']","['Exfiltration', 'Exfiltration Over Alternative Protocol', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0ada2f82-b7af-40cc-b1d7-1e5985afcb4e/,Windows Find Domain Organizational Units with GetDomainOU,"['T1087', 'T1087.002']","This analytic leverages PowerShell Script Block Logging (EventCode=4104) to detect the execution of the Get-DomainOU commandlet. Get-DomainOU is a component of PowerView, a PowerShell toolkit designed for Windows domain enumeration. Identifying the use of Get-DomainOU is crucial as adversaries and Red Teams might employ it to gain insights into organizational units within Active Directory, potentially aiding in lateral movement or privilege escalation strategies.",['TTP'],"August 31, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Get-DomainOU*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_find_domain_organizational_units_with_getdomainou_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']","Administrators may leverage PowerSploit tools for legitimate reasons, filter as needed.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainOU/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0ae05a0f-bc84-456b-822a-a5b9c081c7ca/,Windows COM Hijacking InprocServer32 Modification,"['T1546.015', 'T1546']","The following analytic identifies the use of reg.exe performing an add to the InProcServer32, which may be related to COM hijacking. Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.",['TTP'],"October 12, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where match(process_cmd_line, /(?i)inprocserver32/)=true AND process_file_name=""reg.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and some filtering may be required.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://attack.mitre.org/techniques/T1546/015/', 'https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.015/T1546.015.md']","['Component Object Model Hijacking', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/0b0c40dc-14a6-11ec-b267-acde48001122/,MS Scripting Process Loading Ldap Module,"['T1059', 'T1059.007']",This search is to detect a suspicious MS scripting process such as wscript.exe or cscript.exe that loading ldap module to process ldap query. This behavior was seen in FIN7 implant where it uses javascript to execute ldap query to parse host information that will send to its C2 server. this anomaly detections is a good initial step to hunt further a suspicious ldap query or ldap related events to the host that may give you good information regarding ldap or AD information processing or might be a attacker.,['Anomaly'],"September 13, 2021","`sysmon` EventCode =7 Image IN (""*\\wscript.exe"", ""*\\cscript.exe"") ImageLoaded IN (""*\\Wldap32.dll"", ""*\\adsldp.dll"", ""*\\adsldpc.dll"") 
| stats min(_time) as firstTime max(_time) as lastTime count by Image EventCode process_name ProcessId ProcessGuid Computer ImageLoaded 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `ms_scripting_process_loading_ldap_module_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'EventCode', 'process_name', 'ProcessId', 'ProcessGuid', 'dest', 'ImageLoaded']",automation scripting language may used by network operator to do ldap query.,['FIN7'],['https://research.splunk.com/stories/fin7'],"['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'JavaScript', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0b2eefa5-5508-450d-b970-3dd2fb761aec/,Detect HTML Help Using InfoTech Storage Handlers,"['T1218', 'T1218.001']","The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file using InfoTech Storage Handlers. This particular technique will load Windows script code from a compiled help file, using InfoTech Storage Handlers. itss.dll will load upon execution. Three InfoTech Storage handlers are supported - ms-its, its, mk:@MSITStore. ITSS may be used to launch a specific html/htm file from within a CHM file. CHM files may contain nearly any file type embedded. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_hh` Processes.process IN (""*its:*"", ""*mk:@MSITStore:*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_html_help_using_infotech_storage_handlers_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_hh']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","It is rare to see instances of InfoTech Storage Handlers being used, but it does happen in some legitimate instances. Filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/001/', 'https://www.kb.cert.org/vuls/id/851869', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/', 'https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7', 'https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/0b4e3b06-1b2b-4885-b752-cf06d12a90cb/,Windows Service Create Kernel Mode Driver,"['T1543.003', 'T1543', 'T1068']",The following analytic identifes a new kernel driver being added to Windows using sc.exe. Adding a Kernel driver is not common day to day and should be investigated to further understand the source.,['TTP'],"May 5, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=sc.exe Processes.process=""*kernel*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_create_kernel_mode_driver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present based on common applications adding new drivers, however, filter as needed.","['Windows Drivers', 'CISA AA22-320A']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-320a']",['https://www.aon.com/cyber-solutions/aon_cyber_labs/yours-truly-signed-av-driver-weaponizing-an-antivirus-driver/'],"['Create or Modify System Process', 'Endpoint', 'Exploitation for Privilege Escalation', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/0b6ee3f4-04e3-11ec-a87d-acde48001122/,Get ADUser with PowerShell,"['T1087.002', 'T1087']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to enumerate domain users. The `Get-AdUser' commandlet returns a list of all domain users. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-ADUser*"" AND Processes.process = ""*-filter*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduser_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.blackhillsinfosec.com/red-blue-purple/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduser?view=windowsserver2019-ps']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0b730470-5fe8-4b13-93a7-fe0ad014d0cc/,Windows Hidden Schedule Task Settings,['T1053'],"The following analytic detects creation of hidden scheculed tasks such that it this task is not visible on the UI. Such behavior is indicative of certain malware, such as Industroyer2, or attacks leveraging living-off-the-land binaries (LOLBINs) to download additional payloads to a compromised machine. This analytic relies on the Windows Security EventCode 4698, indicating the creation of a scheduled task. The search focuses on identifying instances where the 'Hidden' setting is enabled, signaling potential nefarious activity. To implement this search, you need to ingest logs with task scheduling details from your endpoints. As false positives are currently unknown, it is advised to tune and filter based on the known use of task scheduling in your environment. This analytic provides crucial visibility into stealthy, potentially harmful scheduled tasks on Windows systems.",['TTP'],"April 14, 2023","`wineventlog_security` EventCode=4698 
| xmlkv Message 
| search Hidden = true 
| stats count min(_time) as firstTime max(_time) as lastTime by  Task_Name, Command, Author, Hidden, dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_hidden_schedule_task_settings_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Task_Name', 'Command', 'Author', 'Enabled', 'Hidden', 'Arguments']",unknown,"['CISA AA22-257A', 'Active Directory Discovery', 'Industroyer2', 'Data Destruction', 'Scheduled Tasks']","['https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/scheduled_tasks']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0bafd086-8f61-11ec-996e-acde48001122/,Windows PowerShell Start-BitsTransfer,"['T1197', 'T1105']","Start-BitsTransfer is the PowerShell ""version"" of BitsAdmin.exe. Similar functionality is present. This technique variation is not as commonly used by adversaries, but has been abused in the past. Lesser known uses include the ability to set the -TransferType to Upload for exfiltration of files. In an instance where Upload is used, it is highly possible files will be archived. During triage, review parallel processes and process lineage. Capture any files on disk and review. For the remote domain or IP, what is the reputation?",['TTP'],"February 16, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""powershell_ise.exe"", ""powershell.exe"", ""sqltoolsps.exe"", ""sqlps.exe"", ""pwsh.exe"", ""pwsh.exe"")) AND match(process_cmd_line, /(?i)start-bitstransfer/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Limited false positives. It is possible administrators will utilize Start-BitsTransfer for administrative tasks, otherwise filter based parent process or command-line arguments.","['BITS Jobs', 'Living Off The Land']","['https://research.splunk.com/stories/bits_jobs', 'https://research.splunk.com/stories/living_off_the_land']","['https://isc.sans.edu/diary/Investigating+Microsoft+BITS+Activity/23281', 'https://docs.microsoft.com/en-us/windows/win32/bits/using-windows-powershell-to-create-bits-transfer-jobs']","['BITS Jobs', 'Command And Control', 'Defense Evasion', 'Ingress Tool Transfer', 'Persistence', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/0bdf6092-af17-11eb-939a-acde48001122/,Excessive Usage Of Cacls App,['T1222'],"The following analytic identifies excessive usage of cacls.exe, xcacls.exe or icacls.exe application to change file or folder permission. This behavior is commonly seen where the adversary attempts to impair some users from deleting or accessing its malware components or artifact from the compromised system.",['Anomaly'],"May 7, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id  values(Processes.process_name) as process_name count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where Processes.process_name = ""cacls.exe"" OR Processes.process_name = ""icacls.exe"" OR Processes.process_name = ""XCACLS.exe"" by Processes.parent_process_name Processes.parent_process Processes.dest Processes.user _time span=1m 
| where count >=10 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_usage_of_cacls_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_id', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",Administrators or administrative scripts may use this application. Filter as needed.,"['XMRig', 'Azorult', 'Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0be4b5d6-c449-4084-b945-2392b519c33b/,Windows Service Create RemComSvc,"['T1543.003', 'T1543']",The following analytic identifies RemComSvc installed on an endpoint. This typically occurs when someone is moving laterally with RemCom.exe.,['Anomaly'],"March 20, 2023","`wineventlog_system` EventCode=7045 ServiceName=""RemCom Service"" 
| stats count min(_time) as firstTime max(_time) as lastTime by dest ImagePath ServiceName ServiceType   
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_create_remcomsvc_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'dest', 'EventCode', 'ImagePath', 'ServiceName', 'ServiceType']","False positives may be present, filter as needed based on administrative activity.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/', 'https://github.com/kavika13/RemCom']","['Create or Modify System Process', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/0c3f3e09-e47a-410e-856f-a02a5c5fafb0/,Windows System User Discovery Via Quser,['T1033'],"The following analytic identifies a process execution of Windows OS quser.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to display or gather information about user sessions on a Remote Desktop Session Host server. This command can find out if a specific user is logged on to a specific Remote Desktop Session Host server. This tool can retrieve some RDP information that can be use by attacker for further attack like Name of the user , Name of the session on the Remote Desktop Session Host server, Session ID, State of the session (active or disconnected), Idle time (the number of minutes since the last keystroke or mouse movement at the session) and Date and time the user logged on.",['Hunting'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""quser.exe"" OR Processes.original_file_name = ""quser.exe"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_user_discovery_via_quser_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to audit RDP access of user in specific network or host.,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/0c7d8ffe-25b1-11ec-9f39-acde48001122/,Enable WDigest UseLogonCredential Registry,"['T1112', 'T1003']",This analytic is to detect a suspicious registry modification to enable plain text credential feature of windows. This technique was used by several malware and also by mimikatz to be able to dumpe the a plain text credential to the compromised or target host. This TTP is really a good indicator that someone wants to dump the crendential of the host so it must be a good pivot for credential dumping techniques.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\System\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\\*"" Registry.registry_value_name = ""UseLogonCredential"" Registry.registry_value_data=0x00000001) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `enable_wdigest_uselogoncredential_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Credential Dumping', 'Windows Registry Abuse', 'CISA AA22-320A']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/cisa_aa22-320a']",['https://www.csoonline.com/article/3438824/how-to-detect-and-halt-credential-theft-via-windows-wdigest.html'],"['Credential Access', 'Defense Evasion', 'Endpoint', 'Modify Registry', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0caa1dd6-94f5-11ec-9786-acde48001122/,Windows Rundll32 Inline HTA Execution,"['T1218', 'T1218.005']","The following analytic identifies ""rundll32.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. This type of behavior is commonly observed with fileless malware or application whitelisting bypass techniques. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",['TTP'],"February 23, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%about%"" OR process_cmd_line LIKE ""%javascript%"" OR process_cmd_line LIKE ""%vbscript%"") AND process_file_name=""rundll32.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'NOBELIUM Group', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Mshta', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/0cb847ee-9423-11ec-b2df-acde48001122/,Kerberos Pre-Authentication Flag Disabled in UserAccountControl,"['T1558', 'T1558.004']","The following analytic leverages Windows Security Event 4738, A user account was changed, to identify a change performed on a domain user object that disables Kerberos Pre-Authentication. Disabling the Pre Authentication flag in the UserAccountControl property allows an adversary to easily perform a brute force attack against the user's password offline leveraging the ASP REP Roasting technique. Red Teams and adversaries alike who have obtained privileges in an Active Directory network may use this technique as a backdoor or a way to escalate privileges.",['TTP'],"February 22, 2022","`wineventlog_security` EventCode=4738 MSADChangedAttributes=""*Don't Require Preauth' - Enabled*"" 
|rename Account_Name as user 
| table EventCode, user, dest, Security_ID, MSADChangedAttributes 
| `kerberos_pre_authentication_flag_disabled_in_useraccountcontrol_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Account_Name', 'Security_ID', 'MSADChangedAttributes']",Unknown.,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Change', 'Credential Access', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/0cdf318b-a0dd-47d7-b257-c621c0247de8/,User Discovery With Env Vars PowerShell,['T1033'],This analytic looks for the execution of powershell.exe with command-line arguments that leverage PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=""*$env:UserName*"" OR Processes.process=""*[System.Environment]::UserName*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `user_discovery_with_env_vars_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/0d32ba37-80fc-4429-809c-0ba15801aeaf/,Windows Credentials from Password Stores Chrome Login Data Access,['T1012'],"This analytic is designed to identify non-chrome processes accessing the Chrome user data file called ""login data."" This SQLite database file contains important information related to the browser's operations on the computer. Threat actors, adversaries, and malware authors have been known to exploit this file in attempts to extract and decrypt passwords saved in the Chrome browser. Detecting access to the ""login data"" file by non-chrome processes serves as a valuable pivot for analyzing suspicious processes beyond the commonly observed chrome.exe and explorer.exe executables. By monitoring for this anomaly, we can enhance our ability to detect potential threats and protect sensitive information stored within the browser.",['Anomaly'],"April 27, 2023","`wineventlog_security` EventCode=4663 object_file_path=""*\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data"" AND NOT (process_path IN (""*:\\Windows\\explorer.exe"", ""*:\\Windows\\System32\\dllhost.exe"", ""*\\chrome.exe"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_chrome_login_data_access_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",Uninstall application may access this registry to remove the entry of the target application. filter is needed.,"['RedLine Stealer', 'Amadey', 'Warzone RAT', 'NjRAT', 'DarkGate Malware', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0d370304-5f26-11ec-a4bb-acde48001122/,Linux Edit Cron Table Parameter,"['T1053.003', 'T1053']","The following analytic detects the suspicious editing of cron jobs in Linux via the crontab command-line parameter. This tactic could be used by adversaries or malware to schedule execution of their malicious code, potentially leading to system compromise or unauthorized persistent access. It pinpoints this activity by monitoring command-line executions involving 'crontab' and the edit parameter (-e).
Recognizing such activity is vital for a SOC as cron job manipulations might signal unauthorized persistence attempts or scheduled malicious actions, potentially resulting in substantial harm. A true positive signifies an active threat, with implications ranging from unauthorized access to broader network compromise.
To implement this analytic, logs capturing process name, parent process, and command-line executions from your endpoints must be ingested.
Known false positives could stem from valid administrative tasks or automation processes using crontab. To reduce these, fine-tune the filter macros according to the benign activities within your environment. These adjustments ensure legitimate actions aren't mistaken for threats, allowing analysts to focus on genuine potential risks.",['Hunting'],"December 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = crontab Processes.process = ""*crontab *"" Processes.process = ""* -e*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_edit_cron_table_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']",['https://attack.mitre.org/techniques/T1053/003/'],"['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0d718b52-c9f1-11eb-bc61-acde48001122/,Powershell Processing Stream Of Data,"['T1059', 'T1059.001']","The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is processing compressed stream data. This is typically found in obfuscated PowerShell or PowerShell executing embedded .NET or binary files that are stream flattened and will be deflated durnig execution. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*IO.Compression.*"" OR ScriptBlockText = ""*IO.StreamReader*"" OR ScriptBlockText = ""*]::Decompress*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_processing_stream_of_data_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID', 'Score']",powershell may used this function to process compressed data.,"['Malicious PowerShell', 'AsyncRAT', 'Hermetic Wiper', 'Data Destruction', 'IcedID']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/icedid']","['https://medium.com/@ahmedjouini99/deobfuscating-emotets-powershell-payload-e39fb116f7b9', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0db4da70-f14b-11eb-8043-acde48001122/,IcedID Exfiltrated Archived File Creation,"['T1560.001', 'T1560']",This search is to detect a suspicious file creation namely passff.tar and cookie.tar. This files are possible archived of stolen browser information like history and cookies in a compromised machine with IcedID.,['Hunting'],"July 30, 2021","`sysmon` EventCode= 11  (TargetFilename = ""*\\passff.tar"" OR TargetFilename = ""*\\cookie.tar"") 
|stats count min(_time) as firstTime max(_time) as lastTime by TargetFilename EventCode process_id  process_name dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `icedid_exfiltrated_archived_file_creation_filter`","['security_content_ctime', 'sysmon']","['_time', 'TargetFilename', 'EventCode', 'process_id', 'process_name', 'dest']",unknown,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://www.cisecurity.org/insights/white-papers/security-primer-icedid'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0dbcac64-963c-11ec-bf04-acde48001122/,Windows File Without Extension In Critical Folder,['T1485'],"This analytic is to look for suspicious file creation in the critical folder like ""System32\Drivers"" folder without file extension. This artifacts was seen in latest hermeticwiper where it drops its driver component in Driver Directory both the compressed(without file extension) and the actual driver component (with .sys file extension). This TTP is really a good indication that a host might be compromised by this destructive malware that wipes the boot sector of the system.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\System32\\drivers\\*"", ""*\\syswow64\\drivers\\*"") by _time span=5m Filesystem.dest Filesystem.user Filesystem.file_name Filesystem.file_path Filesystem.process_guid Filesystem.file_create_time 
| `drop_dm_object_name(Filesystem)` 
| rex field=""file_name"" ""\.(?<extension>[^\.]*$)"" 
| where isnull(extension) 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time span=5m Processes.process_name Processes.dest Processes.process_guid Processes.user 
| `drop_dm_object_name(Processes)`] 
| stats count min(_time) as firstTime max(_time) as lastTime by dest process_name process_guid file_name file_path file_create_time user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_file_without_extension_in_critical_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.file_path', 'Filesystem.dest', 'Processes.process_name', 'Processes.dest', 'Processes.process_guid', 'Processes.user']",Unknown at this point,"['Data Destruction', 'Hermetic Wiper']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper']",['https://blog.talosintelligence.com/2022/02/threat-advisory-hermeticwiper.html'],"['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0dc25c24-6fcf-456f-b08b-dd55a183e4de/,Windows Service Stop Win Updates,['T1489'],The following analytic identifies a windows update service being disabled in Windows OS. This technique is being abused by adversaries or threat actors to add defense mechanisms to their malware implant in the targeted host. Disabling windows update will put the compromised host vulnerable in some zero day exploit or even some update features against threats. RedLine Stealer kills this service as part of its defense evasion mechanism.,['Anomaly'],"December 27, 2023","`wineventlog_system` EventCode=7040 (service_name IN (""Update Orchestrator Service for Windows Update"", ""WaaSMedicSvc"", ""Windows Update"") OR param1 IN (""UsoSvc"", ""WaaSMedicSvc"", ""wuauserv"")) AND (param3=disabled OR start_mode = disabled) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer Error_Code service_name start_mode param1 param2 param3 param4 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_stop_win_updates_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'Computer', 'EventCode', 'Error_Code', 'service_name', 'start_mode', 'param1', 'param2', 'param3', 'param4']",Network administrator may disable this services as part of its audit process within the network. Filter is needed.,"['CISA AA23-347A', 'RedLine Stealer']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/redline_stealer']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0dc44d03-8c00-482d-ba7c-796ba7ab18c9/,Windows Remote Create Service,"['T1543', 'T1543.003']","This analytic identifies an endpoint that remotely connects to another endpoint to create a new service using sc.exe. On the remote endpoint, the new service will be created and this action will trigger the creation of EventCode 7045 along with all the resulting service information.",['Anomaly'],"March 20, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=sc.exe Processes.process IN (""*create*"")  Processes.process=""*\\\\*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_create_service_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Note that false positives may occur, and filtering may be necessary, especially when it comes to remote service creation by administrators or software management utilities.","['Active Directory Lateral Movement', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://attack.mitre.org/techniques/T1543/003/'],"['Create or Modify System Process', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/0dcf43b9-50d8-42a6-acd9-d1c9201fe6ae/,Linux GNU Awk Privilege Escalation,"['T1548.003', 'T1548']","gawk command in Linux is used for pattern scanning and processing language. The awk command requires no compiling and allows the user to use variables, numeric functions, string functions, and logical operators. It is a utility that enables programmers to write tiny and effective programs in the form of statements that define text patterns that are to be searched for, in a text document and the action that is to be taken when a match is found within a line. If sudo right is given to gawk tool for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*gawk*"" AND Processes.process=""*BEGIN*{system*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_gnu_awk_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/gawk/', 'https://www.geeksforgeeks.org/gawk-command-in-linux-with-examples/']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/0dd296a2-4338-11ec-ba02-3e22fbd008af/,Remote Process Instantiation via WinRM and Winrs,"['T1021', 'T1021.006']",This analytic looks for the execution of winrs.exe with command-line arguments utilized to start a process on a remote endpoint. Red Teams and adversaries alike may abuse the WinRM protocol and this binary for lateral movement and remote code execution.,['TTP'],"November 11, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=winrs.exe OR Processes.original_file_name=winrs.exe) (Processes.process=""*-r:*"" OR Processes.process=""*-remote:*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_winrm_and_winrs_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may leverage WinRM and WinRs to start a process on remote systems, but this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/winrs', 'https://attack.mitre.org/techniques/T1021/006/']","['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/0df33e1a-9ef6-11ec-a1ad-acde48001122/,Windows Disable Change Password Through Registry,['T1112'],"This analytic is to detect a suspicious registry modification to disable change password feature of the windows host. This registry modification may disables the Change Password button on the Windows Security dialog box (which appears when you press Ctrl+Alt+Del). As a result, users cannot change their Windows password on demand. This technique was seen in some malware family like ransomware to prevent the user to change the password after ownning the network or a system during attack. This windows feature may implemented by administrator to prevent normal user to change the password of a critical host or server, In this type of scenario filter is needed to minimized false positive.",['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableChangePassword"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_change_password_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']","This windows feature may implemented by administrator to prevent normal user to change the password of a critical host or server, In this type of scenario filter is needed to minimized false positive.","['Ransomware', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']",['https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom_heartbleed.thdobah'],"['Change', 'Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0e4d46b1-22bd-4f0e-8337-ca6f60ad4bea/,Windows Defender ASR Audit Events,"['T1059', 'T1566.001', 'T1566.002']","This detection searches for Windows Defender ASR audit events. ASR is a feature of Windows Defender Exploit Guard that prevents actions and apps that are typically used by exploit-seeking malware to infect machines. ASR rules are applied to processes and applications. When a process or application attempts to perform an action that is blocked by an ASR rule, an event is generated. This detection searches for ASR audit events that are generated when a process or application attempts to perform an action that would be blocked by an ASR rule, but is allowed to proceed for auditing purposes.",['Anomaly'],"November 27, 2023","`ms_defender` EventCode IN (1122, 1125, 1126, 1132, 1134) 
| lookup asr_rules ID OUTPUT ASR_Rule 
| fillnull value=NULL 
| stats count min(_time) as firstTime max(_time) as lastTime by host, Process_Name, Target_Commandline, Path, ID, EventCode, ASR_Rule 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| rename host as dest 
| `windows_defender_asr_audit_events_filter`","['security_content_ctime', 'ms_defender']","['host', 'Process_Name', 'Target_Commandline', 'ID', 'EventCode', 'ASR_Rule']","False positives are expected from legitimate applications generating events that are similar to those generated by malicious activity. For example, Event ID 1122 is generated when a process attempts to load a DLL that is blocked by an ASR rule. This can be triggered by legitimate applications that attempt to load DLLs that are not blocked by ASR rules. This is audit only.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],['https://asrgen.streamlit.app/'],"['Command and Scripting Interpreter', 'Execution', 'Initial Access', 'Initial Access', 'Spearphishing Attachment', 'Spearphishing Link', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0e5e25c3-32f4-46f7-ba4a-5b95c3b90f5b/,Windows Modify Registry Disable Win Defender Raw Write Notif,['T1112'],The following analytic identifies a modification in the Windows registry to disable Windows Defender raw write notification feature. This policy controls whether raw volume write notifications are sent to behavior monitoring or not. This registry was recently identified in Azorult malware to bypass Windows Defender detections or behavior monitoring in terms of volume write.,['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Real-Time Protection\\DisableRawWriteNotification*"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disable_win_defender_raw_write_notif_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",Administrators may enable or disable this feature that may cause some false positive. Filter as needed.,"['Azorult', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://admx.help/?Category=SystemCenterEndpointProtection&Policy=Microsoft.Policies.Antimalware::real-time_protection_disablerawwritenotification', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0ecb40d9-492b-4a57-9f87-515dd742794c/,Windows AutoIt3 Execution,['T1059'],"The following analytic is designed to detect any execution of AutoIt3, a scripting language designed for automating the Windows GUI and general scripting. This includes instances where AutoIt3 has been renamed or otherwise altered in an attempt to evade detection. The analytic works by searching for process names or original file names that match 'autoit3.exe', which is the default executable for AutoIt scripts. This detection is important as AutoIt3 is often used by attackers to automate malicious activities, such as the execution of malware or other unwanted software. False positives may occur with legitimate uses of AutoIt3.",['TTP'],"October 31, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""autoit3.exe"", ""autoit*.exe"") OR Processes.original_file_name IN (""autoit3.exe"", ""autoit*.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_autoit3_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.original_file_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present if the application is legitimately used, filter by user or endpoint as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://github.com/PaloAltoNetworks/Unit42-timely-threat-intel/blob/main/2023-10-25-IOCs-from-DarkGate-activity.txt'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0edd5112-56c9-11ec-b990-acde48001122/,Suspicious Linux Discovery Commands,['T1059.004'],"This search, detects execution of suspicious bash commands from various commonly leveraged bash scripts like (AutoSUID, LinEnum, LinPeas) to perform discovery of possible paths of privilege execution, password files, vulnerable directories, executables and file permissions on a Linux host.
The search logic specifically looks for high number of distinct commands run in a short period of time.",['TTP'],"December 6, 2021","| tstats `security_content_summariesonly` count values(Processes.process) values(Processes.process_name) values(Processes.parent_process_name) dc(Processes.process) as distinct_commands dc(Processes.process_name) as distinct_process_names min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where [
|inputlookup linux_tool_discovery_process.csv 
| rename process as Processes.process 
|table Processes.process] by _time span=5m Processes.user Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| where distinct_commands > 40 AND distinct_process_names > 3
| `suspicious_linux_discovery_commands_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.user', 'Processes.process_name']","Unless an administrator is using these commands to troubleshoot or audit a system, the execution of these commands should be monitored.",['Linux Post-Exploitation'],['https://research.splunk.com/stories/linux_post-exploitation'],"['https://attack.mitre.org/matrices/enterprise/linux/', 'https://attack.mitre.org/techniques/T1059/004/', 'https://github.com/IvanGlinkin/AutoSUID', 'https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS', 'https://github.com/rebootuser/LinEnum']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell']",['Endpoint']
https://research.splunk.com/endpoint/0f03423c-7c6a-11eb-bc47-acde48001122/,W3WP Spawning Shell,"['T1505', 'T1505.003']","This query identifies a shell, PowerShell.exe or Cmd.exe, spawning from W3WP.exe, or IIS. In addition to IIS logs, this behavior with an EDR product will capture potential webshell activity, similar to the HAFNIUM Group abusing CVEs, on publicly available Exchange mail servers. During triage, review the parent process and child process of the shell being spawned. Review the command-line arguments and any file modifications that may occur. Identify additional parallel process, child processes, that may highlight further commands executed. After triaging, work to contain the threat and patch the system that is vulnerable.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=w3wp.exe AND `process_cmd` OR `process_powershell` by Processes.dest Processes.parent_process Processes.original_file_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `w3wp_spawning_shell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_cmd', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Baseline your environment before production. It is possible build systems using IIS will spawn cmd.exe to perform a software build. Filter as needed.,"['ProxyNotShell', 'Data Destruction', 'ProxyShell', 'Hermetic Wiper', 'CISA AA22-257A', 'HAFNIUM Group', 'BlackByte Ransomware', 'CISA AA22-264A', 'Flax Typhoon', 'WS FTP Server Critical Vulnerabilities']","['https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/ws_ftp_server_critical_vulnerabilities']","['https://www.microsoft.com/security/blog/2020/02/04/ghost-in-the-shell-investigating-web-shell-attacks/', 'https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell', 'https://www.youtube.com/watch?v=FC6iHw258RI', 'https://www.huntress.com/blog/rapid-response-microsoft-exchange-servers-still-vulnerable-to-proxyshell-exploit#what-should-you-do']","['Endpoint', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Shell']",['Endpoint']
https://research.splunk.com/endpoint/0f216a38-f45f-11eb-b09c-acde48001122/,Sqlite Module In Temp Folder,['T1005'],"This search is to detect a suspicious file creation of sqlite3.dll in %temp% folder. This behavior was seen in IcedID malware where it download sqlite module to parse browser database like for chrome or firefox to stole browser information related to bank, credit card or credentials.",['TTP'],"August 3, 2021","`sysmon` EventCode=11 (TargetFilename = ""*\\sqlite32.dll"" OR TargetFilename = ""*\\sqlite64.dll"") (TargetFilename = ""*\\temp\\*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id process_name file_name file_path action process_guid
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `sqlite_module_in_temp_folder_filter`","['security_content_ctime', 'sysmon']","['_time', 'process_name', 'TargetFilename', 'EventCode', 'ProcessId', 'Image']",unknown,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://www.cisecurity.org/insights/white-papers/security-primer-icedid'],"['Collection', 'Data from Local System', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0f43758f-1fe9-470a-a9e4-780acc4d5407/,Windows File Transfer Protocol In Non-Common Process Path,"['T1071.003', 'T1071']","The following analytic identifies a possible windows application having a FTP connection in a non common installation path in windows operating system.This network protocol is being used by adversaries, threat actors and malware like AgentTesla as a Command And Control communication to transfer its collected stolen information like the desktop screenshots, browser information and system information of a targeted or compromised host.",['Anomaly'],"September 16, 2022","`sysmon` EventCode=3 NOT(Image IN(""*\\program files*"", ""*\\windows\\system32\\*"",""*\\windows\\SysWOW64\\*"")) (DestinationPortName=""ftp"" OR DestinationPort=21) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image DestinationPort DestinationPortName DestinationHostname DestinationIp SourcePort SourcePortName Protocol SourceHostname dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_file_transfer_protocol_in_non_common_process_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'DestinationPort', 'DestinationPortName', 'DestinationHostname', 'SourceHostname', 'SourcePort', 'SourcePortName', 'Protocol', 'DestinationIp', 'dest', 'user']",third party application may use this network protocol as part of its feature. Filter is needed.,"['AgentTesla', 'Snake Keylogger']","['https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/snake_keylogger']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla'],"['Application Layer Protocol', 'Command And Control', 'Command And Control', 'Mail Protocols', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/0fec631a-7c9b-4e4c-b28b-93260953e25f/,Windows System Binary Proxy Execution Compiled HTML File URL In Command Line,"['T1218.001', 'T1218']","The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file from a remote url. This particular technique will load Windows script code from a compiled help file. CHM files may  contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Review reputation of remote IP and domain. Some instances, it is worth decompiling the .chm file to review its original contents. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"September 2, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%https://%"" OR process_cmd_line LIKE ""%http://%"") AND process_file_name=""hh.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Although unlikely, some legitimate applications may retrieve a CHM remotely, filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/001/', 'https://www.kb.cert.org/vuls/id/851869', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/', 'https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7', 'https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/102af98d-0ca3-4aa4-98d6-7ab2b98b955a/,Windows Powershell Import Applocker Policy,"['T1059.001', 'T1059', 'T1562.001', 'T1562']",The following analytic is to identify the imports of Windows PowerShell Applocker commandlets. This technique was seen in Azorult malware where it drops an xml Applocker policy that will deny several AV product and then loaded using PowerShell Applocker commandlet.,['TTP'],"June 30, 2022","`powershell` EventCode=4104 ScriptBlockText=""*Import-Module Applocker*"" ScriptBlockText=""*Set-AppLockerPolicy *"" ScriptBlockText=""* -XMLPolicy *"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_import_applocker_policy_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']",administrators may execute this command that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Command and Scripting Interpreter', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Execution', 'Execution', 'Impair Defenses', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/10381f93-6d38-470a-9c30-d25478e3bd3f/,Windows Domain Admin Impersonation Indicator,['T1558'],"The following analytic identifies potential Kerberos ticket forging attacks, specifically the Diamond Ticket attack. This is detected when a user logs into a host and the GroupMembership field in event 4627 indicates a privileged group (e.g., Domain Admins), but the user does not actually belong to that group in the directory service. The detection leverages Windows Security Event Log 4627, which logs account logon events. The analytic cross-references the GroupMembership field from the event against a pre-populated lookup of actual group memberships. Its crucial to note that the accuracy and effectiveness of this detection heavily rely on the users diligence in populating and regularly updating this lookup table. Any discrepancies between the events GroupMembership and the lookup indicate potential ticket forging. Kerberos ticket forging, especially the Diamond Ticket attack, allows attackers to impersonate any user and potentially gain unauthorized access to resources. By forging a ticket that indicates membership in a privileged group, an attacker can bypass security controls and gain elevated privileges. Detecting such discrepancies in group memberships during logon events can be a strong indicator of this attack in progress, making it crucial for security teams to monitor and investigate. If validated as a true positive, this indicates that an attacker has successfully forged a Kerberos ticket and may have gained unauthorized access to critical resources, potentially with elevated privileges.",['TTP'],"October 6, 2023","`wineventlog_security`  EventCode=4627 LogonType=3 NOT TargetUserName IN (""*$"", ""SYSTEM"", ""DWM-*"",""LOCAL SERVICE"",""NETWORK SERVICE"", ""ANONYMOUS LOGON"", ""UMFD-*"") 
| where match(GroupMembership, ""Domain Admins"") 
| lookup domain_admins username as TargetUserName OUTPUT username 
| fillnull value=NotDA username 
| search username = ""NotDA"" 
| stats  count by _time, TargetUserName, GroupMembership, host 
| `windows_domain_admin_impersonation_indicator_filter`",['wineventlog_security'],"['_time,', 'EventCode', 'LogonType', 'TargetUserName', 'GroupMembership']",False positives may trigger the detections certain scenarios like directory service delays or out of date lookups. Filter as needed.,"['Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://trustedsec.com/blog/a-diamond-in-the-ruff', 'https://unit42.paloaltonetworks.com/next-gen-kerberos-attacks', 'https://github.com/GhostPack/Rubeus/pull/136', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4627']","['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/10399c1e-f51e-11eb-b920-acde48001122/,Create Remote Thread In Shell Application,['T1055'],This search is to detect suspicious process injection in command shell. This technique was seen in IcedID where it execute cmd.exe process to inject its shellcode as part of its execution as banking trojan. It is really uncommon to have a create remote thread execution in the following application.,['TTP'],"January 31, 2024","`sysmon` EventCode=8 TargetImage IN (""*\\cmd.exe"", ""*\\powershell*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by  TargetImage TargetProcessId SourceProcessId  EventCode StartAddress SourceImage dest 
|rename SourceImage as process_name
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `create_remote_thread_in_shell_application_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest']",unknown,"['IcedID', 'Qakbot', 'Warzone RAT']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/warzone_rat']",['https://thedfirreport.com/2021/07/19/icedid-and-cobalt-strike-vs-antivirus/'],"['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/103affa6-924a-4b53-aff4-1d5075342aab/,PowerShell WebRequest Using Memory Stream,"['T1059.001', 'T1105', 'T1027.011']",This analytic identifies a common fileless malware staging technique of using .NET classes to directly download a URL payload into memory. The analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution.,['TTP'],"June 13, 2023","`powershell` EventCode=4104  ScriptBlockText IN (""*system.net.webclient*"",""*system.net.webrequest*"") AND ScriptBlockText=""*IO.MemoryStream*"" 
| eval Path = case(isnotnull(Path),Path,true(),""unknown"") 
| stats count min(_time) as firstTime max(_time) as lastTime list(ScriptBlockText) as command values(Path) as file_name values(UserID) as user by ActivityID, Computer, EventCode 
| rename Computer as dest, EventCode as signature_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_webrequest_using_memory_stream_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ActivityID', 'Computer', 'ScriptBlockText']","Unknown, possible custom scripting.",['Malicious PowerShell'],['https://research.splunk.com/stories/malicious_powershell'],"['https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations', 'https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/', 'https://attack.mitre.org/techniques/T1059/001/']","['Command And Control', 'Defense Evasion', 'Execution', 'Fileless Storage', 'Ingress Tool Transfer', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/10423ac4-10c9-11ec-8dc4-acde48001122/,Control Loading from World Writable Directory,"['T1218', 'T1218.002']","The following detection identifies control.exe loading either a .cpl or .inf from a writable directory. This is related to CVE-2021-40444. During triage, review parallel processes, parent and child, for further suspicious behaviors. In addition, capture file modifications and analyze.",['TTP'],"September 8, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=control.exe OR Processes.original_file_name=CONTROL.EXE) AND Processes.process IN (""*\\appdata\\*"", ""*\\windows\\temp\\*"", ""*\\programdata\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `control_loading_from_world_writable_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives will be present as control.exe does not natively load from writable paths as defined. One may add .cpl or .inf to the command-line if there is any false positives. Tune as needed.,"['Microsoft MSHTML Remote Code Execution CVE-2021-40444', 'Living Off The Land']","['https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444', 'https://research.splunk.com/stories/living_off_the_land']","['https://strontic.github.io/xcyclopedia/library/rundll32.exe-111474C61232202B5B588D2B512CBB25.html', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://attack.mitre.org/techniques/T1218/011/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.002/T1218.002.yaml']","['Control Panel', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/10ca081c-57b1-4a78-ba56-14a40a7e116a/,Windows Impair Defense Overide Win Defender Phishing Filter,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable windows defender phishing filter. This setting controls whether users can manually disable or modify the browser's built-in phishing filter. When attackers modify ""PreventOverride"" to 0, it might indicate an attempt to disable the prevention of user overrides for the phishing filter within Microsoft Edge. This change allows users to bypass or disable the built-in phishing protection provided by the browser. By allowing users to override the phishing filter, attackers may attempt to deceive users into visiting phishing websites or malicious pages without triggering warnings or protections from the browser's built-in security measures. This manipulation increases the risk of users unknowingly accessing potentially harmful websites, leading to potential security incidents or compromises.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_key_name = ""*\\MicrosoftEdge\\PhishingFilter"" Registry.registry_value_name IN (""EnabledV9"", ""PreventOverride"") Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_overide_win_defender_phishing_filter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/10d62950-0de5-4199-a710-cff9ea79b413/,Elevated Group Discovery with PowerView,"['T1069', 'T1069.002']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainGroupMember commandlet. Get-DomainGroupMember is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. As the name suggests, Get-DomainGroupMember is used to list the members of an specific domain group. Red Teams and adversaries alike use PowerView to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.",['Hunting'],"February 14, 2024","`powershell` EventCode=4104 (Message = ""*Get-DomainGroupMember*"") AND Message IN (""*Domain Admins*"",""*Enterprise Admins*"", ""*Schema Admins*"", ""*Account Operators*"" , ""*Server Operators*"", ""*Protected Users*"",  ""*Dns Admins*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| rename ComputerName as dest, User as user 
| `security_content_ctime(firstTime)` 
| `elevated_group_discovery_with_powerview_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainGroupMember/', 'https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory', 'https://attack.mitre.org/techniques/T1069/002/']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/10f2bae0-bbe6-4984-808c-37dc1c67980d/,Detect Baron Samedit CVE-2021-3156 Segfault,['T1068'],"The following analytic detects the occurrence of a heap-based buffer overflow in sudoedit.The detection is made by using a Splunk query to identify Linux hosts where the terms ""sudoedit"" and ""segfault"" appear in the logs. The detection is important because the heap-based buffer overflow vulnerability in sudoedit can be exploited by attackers to gain elevated root privileges on a vulnerable system, which might lead to the compromise of sensitive data, unauthorized access, and other malicious activities. False positives might occur. Therefore, you must review the logs and investigate further before taking any action.",['TTP'],"January 29, 2021","`linux_hosts` TERM(sudoedit) TERM(segfault) 
| stats count min(_time) as firstTime max(_time) as lastTime by host 
| where count > 5 
| `detect_baron_samedit_cve_2021_3156_segfault_filter`",['linux_hosts'],"['_time', 'host']",If sudoedit is throwing segfaults for other reasons this will pick those up too.,['Baron Samedit CVE-2021-3156'],['https://research.splunk.com/stories/baron_samedit_cve-2021-3156'],N/A,"['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1118bc65-b0c7-4589-bc2f-ad6802fd0909/,Windows Exchange PowerShell Module Usage,"['T1059', 'T1059.001']","The following analytic identifies the usage of Exchange PowerShell modules that were recently used for a proof of concept related to ProxyShell. Currently, there is no active data shared or data we could re-produce relate to this part of the ProxyShell chain of exploits.  
Inherently, the usage of the modules is not malicious, but reviewing parallel processes, and user, of the session will assist with determining the intent. 
Module - New-MailboxExportRequest will begin the process of exporting contents of a primary mailbox or archive to a .pst file. 
Module - New-managementroleassignment can assign a management role to a management role group, management role assignment policy, user, or universal security group (USG). 
Module - New-MailboxSearch cmdlet to create a mailbox search and either get an estimate of search results, place search results on In-Place Hold or copy them to a Discovery mailbox. You can also place all contents in a mailbox on hold by not specifying a search query, which accomplishes similar results as Litigation Hold. \ Module - Get-Recipient cmdlet to view existing recipient objects in your organization. This cmdlet returns all mail-enabled objects (for example, mailboxes, mail users, mail contacts, and distribution groups).",['TTP'],"October 12, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval device_hostname = device.hostname 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_uid = process.uid 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_uid = actor_user.uid 
| where match(process_cmd_line, /(?i)get-recipient/)=true OR match(process_cmd_line, /(?i)new-mailboxsearch/)=true OR match(process_cmd_line, /(?i)new-managementroleassignment/)=true OR match(process_cmd_line, /(?i)new-mailboxexportrequest/)=true --finding_report--","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']",Administrators or power users may use this PowerShell commandlet,"['ProxyShell', 'CISA AA22-264A']","['https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/cisa_aa22-264a']","['https://docs.microsoft.com/en-us/powershell/module/exchange/new-mailboxexportrequest?view=exchange-ps', 'https://docs.microsoft.com/en-us/powershell/module/exchange/new-managementroleassignment?view=exchange-ps', 'https://blog.orange.tw/2021/08/proxyshell-a-new-attack-surface-on-ms-exchange-part-3.html', 'https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell', 'https://thedfirreport.com/2021/11/15/exchange-exploit-leads-to-domain-wide-ransomware/', 'https://www.cisa.gov/uscert/ncas/alerts/aa22-264a', 'https://learn.microsoft.com/en-us/powershell/module/exchange/new-mailboxsearch?view=exchange-ps', 'https://learn.microsoft.com/en-us/powershell/module/exchange/get-recipient?view=exchange-ps', 'https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/112638b4-4634-11ec-b9ab-3e22fbd008af/,Remote Process Instantiation via WMI and PowerShell,['T1047'],This analytic looks for the execution of powershell.exe leveraging the Invoke-WmiMethod commandlet complemented with arguments utilized to start a process on a remote endpoint by abusing WMI. Red Teams and adversaries alike may abuse WMI and powershell.exe for lateral movement and remote code execution.,['TTP'],"November 15, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` (Processes.process=""*Invoke-WmiMethod*"" AND Processes.process=""*-CN*"" AND Processes.process=""*-Class Win32_Process*"" AND  Processes.process=""*-Name create*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_wmi_and_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may leverage WWMI and powershell.exe to start a process on remote systems, but this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1047/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/invoke-wmimethod?view=powershell-5.1']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/114c6bfe-9406-11ec-bcce-acde48001122/,Disabled Kerberos Pre-Authentication Discovery With Get-ADUser,"['T1558', 'T1558.004']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-ADUser commandlet with specific parameters. Get-ADUser is part of the Active Directory PowerShell module used to manage Windows Active Directory networks. As the name suggests, Get-ADUser is used to query for domain users. With the appropiate parameters, Get-ADUser allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may abuse Get-ADUSer to enumerate these accounts and attempt to crack their passwords offline.",['TTP'],"December 27, 2023","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-ADUser*"" AND ScriptBlockText=""*4194304*"") 
| stats count min(_time)  as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `disabled_kerberos_pre_authentication_discovery_with_get_aduser_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use search for accounts with Kerberos Pre Authentication disabled for legitimate purposes.,"['CISA AA23-347A', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://attack.mitre.org/techniques/T1558/004/', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/1155e47d-307f-4247-beab-71071e3a458c/,Windows AD SID History Attribute Modified,"['T1134', 'T1134.005']","The following analytic leverages event code 5136 to identify a modification of the SID History AD attribute. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries to stealthily grant access to a backdoor account within the same domain.",['TTP'],"November 16, 2022","`wineventlog_security` EventCode=5136 AttributeLDAPDisplayName=sIDHistory OperationType=""%%14674"" 
| stats values(ObjectDN) by _time, Computer, SubjectUserName, AttributeValue 
| `windows_ad_sid_history_attribute_modified_filter`",['wineventlog_security'],"['_time', 'EventCode', 'AttributeLDAPDisplayName', 'OperationType=', 'ObjectDN', 'Computer', 'SubjectUserName', 'AttributeValue']",Domain mergers and migrations may generate large volumes of false positives for this analytic.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://adsecurity.org/?p=1772', 'https://learn.microsoft.com/en-us/windows/win32/adschema/a-sidhistory?redirectedfrom=MSDN', 'https://learn.microsoft.com/en-us/defender-for-identity/security-assessment-unsecure-sid-history-attribute', 'https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/sid-history-injection']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'SID-History Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1166360c-d495-45ac-87a6-8948aac1fa07/,Windows Non Discord App Access Discord LevelDB,['T1012'],"The following analytic detects suspicious file access within the Discord LevelDB database. This database contains critical data such as user profiles, messages, guilds, channels, settings, and cached information. Access to this data poses a risk of Discord credential theft or unauthorized access to sensitive information on the compromised system. Detecting such anomalies can serve as an effective pivot to identify non-Discord applications accessing this database, potentially indicating the presence of malware or trojan stealers aimed at data theft.",['Anomaly'],"February 16, 2024","`wineventlog_security` EventCode=4663 object_file_path IN (""*\\discord\\Local Storage\\leveldb*"") AND process_name != *\\discord.exe AND NOT (process_path IN (""*:\\Windows\\System32\\*"", ""*:\\Windows\\SysWow64\\*"", ""*:\\Program Files*"", ""*:\\Windows\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_non_discord_app_access_discord_leveldb_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",unknown,['Snake Keylogger'],['https://research.splunk.com/stories/snake_keylogger'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/11c32b19-05a6-48a8-ab28-18dbd9ec5d50/,Windows System Binary Proxy Execution Compiled HTML File Decompile,"['T1218.001', 'T1218']","The following analytic identifies the decompile parameter with the HTML Help application, HH.exe. This is a uncommon command to see ran and behavior. Most recently this was seen in a APT41 campaign where a CHM file was delivered and a script inside used a technique for running an arbitrary command in a CHM file via an ActiveX object. This unpacks an HTML help file to a specified path for launching the next stage.",['TTP'],"September 2, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%-decompile%"" AND process_file_name=""hh.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives should be limited, filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://attack.mitre.org/techniques/T1218/001/', 'https://docs.microsoft.com/en-us/windows/win32/api/htmlhelp/nf-htmlhelp-htmlhelpa']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/12094335-88fc-4c3a-b55f-e62dd8c93c23/,Windows Modify Registry Tamper Protection,['T1112'],"The following analytic identifies a suspicious registry modification to tamper Windows Defender protection. This technique was being abused by several adversaries, malware authors and also red-teamers to evade detection on the targeted machine. RedLine Stealer is one of the malware we've seen that uses this technique to bypass Windows defender detection.",['TTP'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Microsoft\\Windows Defender\\Features\\TamperProtection"" AND Registry.registry_value_data=""0x00000000"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_tamper_protection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/127c8d08-25ff-11ec-9223-acde48001122/,Malicious InProcServer32 Modification,"['T1218.010', 'T1112']","The following analytic identifies a process modifying the registry with a known malicious CLSID under InProcServer32. Most COM classes are registered with the operating system and are identified by a GUID that represents the Class Identifier (CLSID) within the registry (usually under HKLM\Software\Classes\CLSID or HKCU\Software\Classes\CLSID).  Behind the implementation of a COM class is the server (some binary) that is referenced within registry keys under the CLSID.  The LocalServer32 key represents a path to an executable (exe) implementation, and the InprocServer32 key represents a path to a dynamic link library (DLL) implementation (Bohops). During triage, review parallel processes for suspicious activity. Pivot on the process GUID to see the full timeline of events. Analyze the value and look for file modifications. Being this is looking for inprocserver32, a DLL found in the value will most likely be loaded by a parallel process.",['TTP'],"October 5, 2021","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time Processes.process_id Processes.process_name Processes.dest Processes.process_guid Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\CLSID\\{89565275-A714-4a43-912E-978B935EDCCC}\\InProcServer32\\(Default)"" by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.dest Registry.process_guid Registry.user 
| `drop_dm_object_name(Registry)` 
| fields _time dest registry_path registry_key_name registry_value_name process_name process_path process process_guid user] 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, process_name registry_path registry_key_name registry_value_name user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `malicious_inprocserver32_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'process_name', 'registry_path', 'registry_key_name', 'registry_value_name', 'user']","False positives should be limited, filter as needed. In our test case, Remcos used regsvr32.exe to modify the registry. It may be required, dependent upon the EDR tool producing registry events, to remove (Default) from the command-line.","['Suspicious Regsvr32 Activity', 'Remcos']","['https://research.splunk.com/stories/suspicious_regsvr32_activity', 'https://research.splunk.com/stories/remcos']","['https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/', 'https://tria.ge/210929-ap75vsddan', 'https://www.virustotal.com/gui/file/cb77b93150cb0f7fe65ce8a7e2a5781e727419451355a7736db84109fa215a89']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Modify Registry', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/127eba64-c981-40bf-8589-1830638864a7/,Windows Office Product Spawning MSDT,"['T1566', 'T1566.001']","The following analytic identifies a Microsoft Office product spawning the Windows msdt.exe process. MSDT is a Diagnostics Troubleshooting Wizard native to Windows. This behavior is related to a recently identified sample utilizing protocol handlers to evade preventative controls, including if macros are disabled in the document. During triage, review file modifications for html. In addition, parallel processes including PowerShell and CertUtil.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""outlook.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"") Processes.process_name=msdt.exe by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_office_product_spawning_msdt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, however filter as needed.","['Spearphishing Attachments', 'Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190']","['https://isc.sans.edu/diary/rss/28694', 'https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e', 'https://twitter.com/nao_sec/status/1530196847679401984?s=20&t=ZiXYI4dQuA-0_dzQzSUb3A', 'https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/', 'https://www.virustotal.com/gui/file/4a24048f81afbe9fb62e7a6a49adbd1faf41f266b5f9feecdceb567aec096784/detection', 'https://strontic.github.io/xcyclopedia/library/msdt.exe-152D4C9F63EFB332CCB134C6953C0104.html', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1297fb80-f42a-4b4a-9c8a-88c066237cf6/,Schtasks scheduling job on remote system,"['T1053.005', 'T1053']","The following analytic is designed to detect suspicious command-line arguments executed through 'schtasks.exe' to create a scheduled task on a remote endpoint. The analytic scans process data, checking for instances where 'schtasks.exe' has been used with specific command-line flags that suggest an attempt at lateral movement or remote code execution, common techniques employed by adversaries and red teams. Key data points include the process name, the specific command line used, the parent process name, the target destination, and the user involved. Also, timestamp data gives context to when these activities occurred.",['TTP'],"May 23, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = schtasks.exe OR Processes.original_file_name=schtasks.exe) (Processes.process=""*/create*"" AND Processes.process=""*/s*"") by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schtasks_scheduling_job_on_remote_system_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']","While it is possible to have false positives, due to legitimate administrative tasks, these are usually limited and should still be validated and investigated as appropriate.","['Active Directory Lateral Movement', 'NOBELIUM Group', 'Living Off The Land', 'Prestige Ransomware', 'Scheduled Tasks', 'RedLine Stealer', 'Phemedrone Stealer']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/phemedrone_stealer']",N/A,"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1297fb80-f42a-4b4a-9c8a-88c066437cf6/,Schtasks used for forcing a reboot,"['T1053.005', 'T1053']","The following analytic utilizes a Splunk query to pinpoint potential threats by monitoring the 'schtasks.exe' command-line usage. This particular command, especially when used in tandem with 'shutdown' and '/create' flags, can suggest an adversarial force intending to schedule unwarranted system reboots. The query focuses on endpoint process data and retrieves details such as the process name, the parent process name, the destination, and the user involved. Essential to the investigation are the earliest and latest timestamps of these events, providing an activity timeline. Data such as the targeted host and initiating user offer valuable context for analyst.",['TTP'],"December 7, 2020","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe Processes.process=""*shutdown*"" Processes.process=""*/create *"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schtasks_used_for_forcing_a_reboot_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']","This analytic may also capture legitimate administrative activities such as system updates or maintenance tasks, which can be classified as false positives. Filter as needed.","['Windows Persistence Techniques', 'Ransomware', 'Scheduled Tasks']","['https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/scheduled_tasks']",N/A,"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/12bdaa0b-3c59-4489-aae1-bff6d67746ef/,Windows Modify Registry ProxyServer,['T1112'],"The following analytic identifies a modification in the Windows registry to setup proxy server. This method has been exploited by various malware and adversaries to establish proxy communication on compromised hosts, facilitating connections to malicious Command and Control (C2) servers. Identifying this anomaly serves as a crucial indicator to unveil suspicious processes attempting to activate the proxy feature within the Windows operating system. Detecting such attempts becomes pivotal in flagging potential threats, especially those aiming to leverage proxy configurations for unauthorized communication with malicious entities.",['Anomaly'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Internet Settings\\ProxyServer"" by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_proxyserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/12c80db8-ef62-4456-92df-b23e1b3219f6/,Windows Enable Win32 ScheduledJob via Registry,['T1053.005'],"This analytic searches for a registry modification that enables the use of the at.exe or wmi Win32_ScheduledJob command to add scheduled tasks on a Windows endpoint. Specifically, it looks for the creation of a new DWORD value named ""EnableAt"" in the following registry path: ""HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\Configuration"". If this value is set to 1, it enables the at.exe and wmi Win32_ScheduledJob commands to schedule tasks on the system. Detecting this registry modification is important because it may indicate that an attacker has enabled the ability to add scheduled tasks to the system, which can be used to execute malicious code at specific times or intervals.",['Anomaly'],"March 27, 2023","| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\CurrentVersion\\Schedule\\Configuration*"" Registry.registry_value_name=EnableAt  by Registry.dest, Registry.user, Registry.registry_value_name, Registry.registry_value_type 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `windows_enable_win32_scheduledjob_via_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.dest', 'Registry.user', 'Registry.registry_value_name', 'Registry.registry_value_type']","In some cases, an automated script or system may enable this setting continuously, leading to false positives. To avoid such situations, it is recommended to monitor the frequency and context of the registry modification and modify or filter the detection rules as needed. This can help to reduce the number of false positives and ensure that only genuine threats are identified. Additionally, it is important to investigate any detected instances of this modification and analyze them in the broader context of the system and network to determine if further action is necessary.","['Active Directory Lateral Movement', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/scheduled_tasks']","['https://securityonline.info/wmiexec-regout-get-outputdata-response-from-registry/', 'https://learn.microsoft.com/en-us/windows/win32/cimwin32prov/win32-scheduledjob']","['Endpoint', 'Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/13243068-2d38-11ec-8908-acde48001122/,ServicePrincipalNames Discovery with PowerShell,['T1558.003'],"The following analytic identifies powershell.exe usage, using Script Block Logging EventCode 4104, related to querying the domain for Service Principle Names. typically, this is a precursor activity related to kerberoasting or the silver ticket attack. 
What is a ServicePrincipleName? 
A service principal name (SPN) is a unique identifier of a service instance. SPNs are used by Kerberos authentication to associate a service instance with a service logon account. This allows a client application to request that the service authenticate an account even if the client does not have the account name.
The following analytic identifies the use of KerberosRequestorSecurityToken class within the script block. Using .NET System.IdentityModel.Tokens.KerberosRequestorSecurityToken class in PowerShell is the equivelant of using setspn.exe. 
During triage, review parallel processes for further suspicious activity.",['TTP'],"February 26, 2022","`powershell` EventCode=4104 ScriptBlockText=""*KerberosRequestorSecurityToken*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by ScriptBlockText Opcode Computer UserID EventCode 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `serviceprincipalnames_discovery_with_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']","False positives should be limited, however filter as needed.","['Active Directory Discovery', 'Active Directory Kerberos Attacks', 'Malicious PowerShell', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://docs.microsoft.com/en-us/windows/win32/ad/service-principal-names', 'https://docs.microsoft.com/en-us/dotnet/api/system.identitymodel.tokens.kerberosrequestorsecuritytoken?view=netframework-4.8', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting', 'https://strontic.github.io/xcyclopedia/library/setspn.exe-5C184D581524245DAD7A0A02B51FD2C2.html', 'https://attack.mitre.org/techniques/T1558/003/', 'https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx', 'https://web.archive.org/web/20220212163642/https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/', 'https://blog.zsec.uk/paving-2-da-wholeset/', 'https://msitpros.com/?p=3113', 'https://adsecurity.org/?p=3466', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Credential Access', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/13395a44-4dd9-11ec-9df7-acde48001122/,Windows Defender Exclusion Registry Entry,"['T1562.001', 'T1562']","This analytic will detect a suspicious process that modify a registry related to windows defender exclusion feature. This registry is abused by adversaries, malware author and red teams to bypassed Windows Defender Anti-Virus product by excluding folder path, file path, process, extensions and etc. from its real time or schedule scan to execute their malicious code. This is a good indicator for a defense evasion and to look further for events after this behavior.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Exclusions\\*"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_defender_exclusion_registry_entry_filter`","['security_content_summariesonly', 'security_content_ctime']","['Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to use this windows features.,"['Remcos', 'Windows Defense Evasion Tactics', 'Azorult', 'Qakbot', 'Warzone RAT']","['https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/warzone_rat']","['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html', 'https://app.any.run/tasks/cf1245de-06a7-4366-8209-8e3006f2bfe5/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1379d2b8-0f18-11ec-8ca3-acde48001122/,Auto Admin Logon Registry Entry,"['T1552.002', 'T1552']",this search is to detect a suspicious registry modification to implement auto admin logon to a host. This technique was seen in BlackMatter ransomware to automatically logon to the compromise host after  triggering a safemode boot to continue encrypting the whole network. This behavior is not a common practice and really a suspicious TTP or alert need to be consider if found within then network premise.,['TTP'],"April 11, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon*"" AND Registry.registry_value_name=AutoAdminLogon AND Registry.registry_value_data=1) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `auto_admin_logon_registry_entry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['BlackMatter Ransomware', 'Windows Registry Abuse']","['https://research.splunk.com/stories/blackmatter_ransomware', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://news.sophos.com/en-us/2021/08/09/blackmatter-ransomware-emerges-from-the-shadow-of-darkside/'],"['Credential Access', 'Credential Access', 'Credentials in Registry', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/13bbd574-83ac-11ec-99d4-acde48001122/,Mimikatz PassTheTicket CommandLine Parameters,"['T1550', 'T1550.003']","The following analytic looks for the use of Mimikatz command line parameters leveraged to execute pass the ticket attacks. Red teams and adversaries alike may use the pass the ticket technique using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Defenders should be aware that adversaries may customize the source code of Mimikatz and modify the command line parameters. This would effectively bypass this analytic.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process = ""*sekurlsa::tickets /export*"" OR Processes.process = ""*kerberos::ptt*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `mimikatz_passtheticket_commandline_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']","Although highly unlikely, legitimate applications may use the same command line parameters as Mimikatz.","['Sandworm Tools', 'CISA AA23-347A', 'CISA AA22-320A', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://github.com/gentilkiwi/mimikatz', 'https://attack.mitre.org/techniques/T1550/003/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Lateral Movement', 'Lateral Movement', 'Pass the Ticket', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/13c2f6c3-10c5-4deb-9ba1-7c4460ebe4ae/,Overwriting Accessibility Binaries,"['T1546', 'T1546.008']",Microsoft Windows contains accessibility features that can be launched with a key combination before a user has logged in. An adversary can modify or replace these programs so they can get a command prompt or backdoor without logging in to the system. This search looks for modifications to these binaries.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem where (Filesystem.file_path=*\\Windows\\System32\\sethc.exe* OR Filesystem.file_path=*\\Windows\\System32\\utilman.exe* OR Filesystem.file_path=*\\Windows\\System32\\osk.exe* OR Filesystem.file_path=*\\Windows\\System32\\Magnify.exe* OR Filesystem.file_path=*\\Windows\\System32\\Narrator.exe* OR Filesystem.file_path=*\\Windows\\System32\\DisplaySwitch.exe* OR Filesystem.file_path=*\\Windows\\System32\\AtBroker.exe*) by Filesystem.file_name Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `overwriting_accessibility_binaries_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name', 'Filesystem.dest']",Microsoft may provide updates to these binaries. Verify that these changes do not correspond with your normal software update cycle.,"['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation', 'Flax Typhoon']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/flax_typhoon']",N/A,"['Accessibility Features', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/13cf8b79-805d-443c-bf52-f55bd7610dfd/,Windows Snake Malware Registry Modification wav OpenWithProgIds,['T1112'],"The follow analytic identifies the registry being modified at .wav\OpenWithProgIds\, which is related to the Snake Malware campaign. Upon execution, Snake's WerFault.exe will attempt to decrypt an encrypted blob within the Windows registry that is typically found at HKLM:\SOFTWARE\Classes.wav\OpenWithProgIds. The encrypted data includes the AES key, IV, and path that is used to find and decrypt the file containing Snake's kernel driver and kernel driver loader.",['TTP'],"May 10, 2023","| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\.wav\\OpenWithProgIds\\*""  by Registry.dest  Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `windows_snake_malware_registry_modification_wav_openwithprogids_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name']",False positives may be present and will require tuning based on program Ids in large organizations.,['Snake Malware'],['https://research.splunk.com/stories/snake_malware'],['https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1400624a-d42d-484d-8843-e6753e6e3645/,Detect Computer Changed with Anonymous Account,['T1210'],This search looks for Event Code 4742 (Computer Change) or EventCode 4624 (An account was successfully logged on) with an anonymous account.,['Hunting'],"September 18, 2020","`wineventlog_security` EventCode=4624 OR EventCode=4742 TargetUserName=""ANONYMOUS LOGON"" LogonType=3 
| stats count values(host) as host, values(TargetDomainName) as Domain, values(user) as user 
| `detect_computer_changed_with_anonymous_account_filter`",['wineventlog_security'],"['_time', 'EventCode', 'TargetUserName', 'LogonType', 'TargetDomainName', 'user']",None thus far found,['Detect Zerologon Attack'],['https://research.splunk.com/stories/detect_zerologon_attack'],['https://www.lares.com/blog/from-lares-labs-defensive-guidance-for-zerologon-cve-2020-1472/'],"['Exploitation of Remote Services', 'Lateral Movement', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/14038953-e5f2-4daf-acff-5452062baf03/,Attempted Credential Dump From Registry via Reg exe,"['T1003', 'T1003.002']",The following analytic identifies the use of reg.exe attempting to export Windows registry keys that contain hashed credentials. Adversaries will utilize this technique to capture and perform offline password cracking.,['TTP'],"November 29, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""reg.exe"", ""cmd.exe"")) AND (match(process_cmd_line, /(?i)HKEY_LOCAL_MACHINE\\System/)=true OR match(process_cmd_line, /(?i)HKEY_LOCAL_MACHINE\\SAM/)=true OR match(process_cmd_line, /(?i)HKEY_LOCAL_MACHINE\\Security/)=true OR match(process_cmd_line, /(?i)HKLM\\System/)=true OR match(process_cmd_line, /(?i)HKLM\\SAM/)=true OR match(process_cmd_line, /(?i)HKLM\\Security/)=true) AND match(process_cmd_line, /(?i)save/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",None identified.,['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],"['https://github.com/splunk/security_content/blob/55a17c65f9f56c2220000b62701765422b46125d/detections/attempted_credential_dump_from_registry_via_reg_exe.yml', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.002/T1003.002.md#atomic-test-1---registry-dump-of-sam-creds-and-secrets']","['Credential Access', 'Credential Access', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/141e7fca-a9f0-40fd-a539-9aac8be41f1b/,Windows Odbcconf Load DLL,['T1218.008'],"The following analytic identifies odbcconf.exe, Windows Open Database Connectivity utility, utilizing the action function of regsvr to load a DLL. An example will look like - odbcconf.exe /A { REGSVR T1218-2.dll }. During triage, review parent process, parallel procesess and file modifications.",['TTP'],"June 28, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=odbcconf.exe Processes.process IN (""*/a *"",  ""*-a*"") Processes.process=""*regsvr*""  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_odbcconf_load_dll_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering may need to occur based on legitimate application usage. Filter as needed.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://strontic.github.io/xcyclopedia/library/odbcconf.exe-07FBA12552331355C103999806627314.html', 'https://twitter.com/redcanary/status/1541838407894171650?s=20&t=kp3WBPtfnyA3xW7D7wx0uw']","['Defense Evasion', 'Endpoint', 'Odbcconf', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1490f224-ad8b-11eb-8c4f-acde48001122/,Disable Windows App Hotkeys,"['T1562.001', 'T1562', 'T1112']",The following analytic detects a suspicious registry modification to disable Windows hotkey (shortcut keys) for native Windows applications. This technique is commonly used to disable certain or several Windows applications like taskmgr.exe and cmd.exe. This technique is used to impair the analyst in analyzing and removing the attacker implant in compromised systems.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\Windows NT\\CurrentVersion\\Image File Execution Options\\*"" AND Registry.registry_value_data= ""HotKey Disabled"" AND Registry.registry_value_name = ""Debugger"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_windows_app_hotkeys_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guidr']",unknown,"['XMRig', 'Windows Registry Abuse']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/14f414cf-3080-4b9b-aaf6-55a4ce947b93/,Windows Unusual Count Of Users Fail To Auth Wth ExplicitCredentials,"['T1110.003', 'T1110']","The following analytic identifies a source user failing to authenticate with multiple users using explicit credentials on a host. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4648 is generated when a process attempts an account logon by explicitly specifying that accounts credentials. This event generates on domain controllers, member servers, and workstations.
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed.
The analytics returned fields allow analysts to investigate the event further by providing fields like source account, attempted user accounts and the endpoint were the behavior was identified.",['Anomaly'],"September 22, 2022","`wineventlog_security` EventCode=4648 Caller_User_Name!=*$ Target_User_Name!=*$ 
| bucket span=5m _time 
| stats dc(Target_User_Name) AS unique_accounts values(Target_User_Name) as  tried_account by _time, Computer, Caller_User_Name 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by Computer 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_users_fail_to_auth_wth_explicitcredentials_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Target_User_Name', 'Caller_User_Name', 'Computer']","A source user failing attempting to authenticate multiple users on a host is not a common behavior for regular systems. Some applications, however, may exhibit this behavior in which case sets of users hosts can be added to an allow list. Possible false positive scenarios include systems where several users connect to like Mail servers, identity providers, remote desktop services, Citrix, etc.","['Active Directory Password Spraying', 'Insider Threat', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4648', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/15603165-147d-4a6e-9778-bd0ff39e668f/,Windows Unusual Count Of Invalid Users Failed To Auth Using NTLM,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with multiple invalid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC0000064 stands for The username you typed does not exist (the attempted user is a legitimate domain user).
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security` EventCode=4776 TargetUserName!=*$ Status=0xc0000064 
| bucket span=2m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, Workstation 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by Workstation 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| rename Workstation as src 
|`windows_unusual_count_of_invalid_users_failed_to_auth_using_ntlm_filter`",['wineventlog_security'],"['_time', 'EventCode', 'TargetUserName', 'Workstation', 'Status']","A host failing to authenticate with multiple invalid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems. If this detection triggers on a host other than a Domain Controller, the behavior could represent a password spraying attack against the host's local accounts.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-credential-validation', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/15d905f6-da6b-11eb-ab82-acde48001122/,Spoolsv Spawning Rundll32,"['T1547.012', 'T1547']","The following analytic identifies a suspicious child process, rundll32.exe, with no command-line arguments being spawned from spoolsv.exe. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for spoolsv.exe to spawn a process. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",['TTP'],"July 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=spoolsv.exe `process_rundll32` by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `spoolsv_spawning_rundll32_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives have been identified. There are limited instances where rundll32.exe may be spawned by a legitimate print driver.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/15e70689-f55b-489e-8a80-6d0cd6d8aad2/,Windows Deleted Registry By A Non Critical Process File Path,['T1112'],"This analytic is to detect deletion of registry with suspicious process file path. This technique was seen in Double Zero wiper malware where it will delete all the subkey in HKLM, HKCU and HKU registry hive as part of its destructive payload to the targeted hosts. This anomaly detections can catch possible malware or advesaries deleting registry as part of defense evasion or even payload impact but can also catch for third party application updates or installation. In this scenario false positive filter is needed.",['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry WHERE Registry.action=deleted BY _time span=1h Registry.dest Registry.registry_path Registry.registry_value_name Registry.registry_key_name Registry.process_guid Registry.registry_value_data Registry.action 
| `drop_dm_object_name(Registry)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes WHERE NOT (Processes.process_path IN (""*\\windows\\*"", ""*\\program files*"")) by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.user Processes.parent_process_name Processes.parent_process Processes.process_path Processes.process_guid 
| `drop_dm_object_name(Processes)`] 
| fields _time parent_process_name parent_process process_name process_path process process_guid registry_path registry_value_name registry_value_data registry_key_name action dest user 
| `windows_deleted_registry_by_a_non_critical_process_file_path_filter`",['security_content_summariesonly'],"['Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",This detection can catch for third party application updates or installation. In this scenario false positive filter is needed.,"['Data Destruction', 'Double Zero Destructor']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/double_zero_destructor']",['https://blog.talosintelligence.com/2022/03/threat-advisory-doublezero.html'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/16107e0e-71fc-11ec-b862-acde48001122/,Linux Possible Access To Credential Files,"['T1003.008', 'T1003']","This analytic is to detect a possible attempt to dump or access the content of /etc/passwd and /etc/shadow to enable offline credential cracking. ""etc/passwd"" store user information within linux OS while ""etc/shadow"" contain the user passwords hash. Adversaries and threat actors may attempt to access this to gain persistence and/or privilege escalation. This anomaly detection can be a good indicator of possible credential dumping technique but it might catch some normal administrator automation scripts or during credential auditing. In this scenario filter is needed.",['Anomaly'],"January 10, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN(""cat"", ""nano*"",""vim*"", ""vi*"")  AND Processes.process IN(""*/etc/shadow*"", ""*/etc/passwd*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_access_to_credential_files_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://askubuntu.com/questions/445361/what-is-difference-between-etc-shadow-and-etc-passwd', 'https://attack.mitre.org/techniques/T1003/008/']","['/etc/passwd and /etc/shadow', 'Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1631ac2d-f2a9-42fa-8a59-d6e210d472f5/,Windows Findstr GPP Discovery,"['T1552', 'T1552.006']","The following analytic identifies the use of the findstr command employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",['TTP'],"March 16, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=findstr.exe AND Processes.process=*sysvol* AND Processes.process=*cpassword*) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_findstr_gpp_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.original_file_name']",Administrators may leverage findstr to find passwords in GPO to validate exposure. Filter as needed.,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1552/006/', 'https://pentestlab.blog/2017/03/20/group-policy-preferences/', 'https://adsecurity.org/?p=2288', 'https://www.hackingarticles.in/credential-dumping-group-policy-preferences-gpp/', 'https://support.microsoft.com/en-us/topic/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevation-of-privilege-may-13-2014-60734e15-af79-26ca-ea53-8cd617073c30']","['Credential Access', 'Credential Access', 'Endpoint', 'Group Policy Preferences', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/17cd75b2-8666-11eb-9ab4-acde48001122/,High Process Termination Frequency,['T1486'],"This analytic is designed to identify a high frequency of process termination events on a computer in a short period of time, which is a common behavior of ransomware malware before encrypting files. This technique is designed to avoid an exception error while accessing (docs, images, database and etc..) in the infected machine for encryption.",['Anomaly'],"September 14, 2022","`sysmon` EventCode=5 
|bin _time span=3s 
|stats values(Image) as proc_terminated min(_time) as firstTime max(_time) as lastTime  count by _time dest EventCode ProcessID 
| where count >= 15 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `high_process_termination_frequency_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'Image', 'dest', '_time', 'ProcessID']",admin or user tool that can terminate multiple process.,"['Clop Ransomware', 'LockBit Ransomware', 'BlackByte Ransomware', 'Rhysida Ransomware', 'Snake Keylogger']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/snake_keylogger']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Data Encrypted for Impact', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/17f8f69c-5d00-4c88-9c6f-493bbdef20a1/,Windows Parent PID Spoofing with Explorer,"['T1134.004', 'T1134']","The following analytic identifies a suspicious explorer.exe process that has ""/root"" process commandline. The presence of this parameter is considered a significant indicator as it could indicate attempts at spoofing the parent process by a specific program or malware. By spoofing the parent process, the malicious entity aims to circumvent detection mechanisms and operate undetected within the system. This technique of manipulating the command-line parameter (/root) of explorer.exe is a form of masquerading utilized by certain malware or suspicious processes. The objective is to obscure the true nature of the activity by imitating a legitimate system process. By doing so, it attempts to evade scrutiny and evade detection by security measures.",['TTP'],"November 21, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*explorer.exe*"" Processes.process=""*/root,*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_parent_pid_spoofing_with_explorer_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],['https://x.com/CyberRaiju/status/1273597319322058752?s=20'],"['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Parent PID Spoofing', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1804b0a4-a682-11eb-8f68-acde48001122/,Trickbot Named Pipe,['T1055'],this search is to detect potential trickbot infection through the create/connected named pipe to the system. This technique is used by trickbot to communicate to its c2 to post or get command during infection.,['TTP'],"April 26, 2021","`sysmon` EventCode IN (17,18) PipeName=""\\pipe\\*lacesomepipe"" 
| stats  min(_time) as firstTime max(_time) as lastTime count by dest user_id EventCode PipeName signature Image process_id 
| rename Image as process_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `trickbot_named_pipe_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'user_id', 'EventCode', 'PipeName', 'signature', 'Image', 'process_id']",unknown,['Trickbot'],['https://research.splunk.com/stories/trickbot'],"['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/']","['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/18916468-9c04-11ec-bdc6-acde48001122/,Kerberos TGT Request Using RC4 Encryption,['T1550'],"The following analytic leverages Event 4768, A Kerberos authentication ticket (TGT) was requested, to identify a TGT request with encryption type 0x17, or RC4-HMAC. This encryption type is no longer utilized by newer systems and could represent evidence of an OverPass The Hash attack. Similar to Pass The Hash, OverPass The Hash is a form of credential theft that allows adversaries to move laterally or consume resources in a target network. Leveraging this attack, an adversary who has stolen the NTLM hash of a valid domain account is able to authenticate to the Kerberos Distribution Center(KDC) on behalf of the legitimate account and obtain a Kerberos TGT ticket. Depending on the privileges of the compromised account, this ticket may be used to obtain unauthorized access to systems and other network resources.",['TTP'],"March 4, 2022","`wineventlog_security` EventCode=4768 Ticket_Encryption_Type=0x17 Account_Name!=*$ 
| stats count min(_time) as firstTime max(_time) as lastTime by Account_Name Client_Address dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `kerberos_tgt_request_using_rc4_encryption_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'Ticket_Encryption_Type', 'Account_Name', 'Client_Address']","Based on Microsoft documentation, legacy systems or applications will use RC4-HMAC as the default encryption for TGT requests. Specifically, systems before Windows Server 2008 and Windows Vista. Newer systems will use AES128 or AES256.",['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/', 'https://www.thehacker.recipes/ad/movement/kerberos/ptk', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4768']","['Defense Evasion', 'Lateral Movement', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/18b5a1a0-6326-11ec-943a-acde48001122/,Linux Insert Kernel Module Using Insmod Utility,"['T1547.006', 'T1547']",This analytic looks for inserting of linux kernel module using insmod utility function. This event can detect a installation of rootkit or malicious kernel module to gain elevated privileges to their malicious code and bypassed detections. This Anomaly detection is a good indicator that someone installing kernel module in a linux host either admin or adversaries. filter is needed in this scenario,['Anomaly'],"December 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN(""kmod"", ""sudo"") AND Processes.process = *insmod* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_insert_kernel_module_using_insmod_utility_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Rootkit']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_rootkit']","['https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Working_with_Kernel_Modules/', 'https://security.stackexchange.com/questions/175953/how-to-load-a-malicious-lkm-at-startup', 'https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485']","['Boot or Logon Autostart Execution', 'Endpoint', 'Kernel Modules and Extensions', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/193769d3-1e33-43a9-970e-ad4a88256cdb/,Windows AD Short Lived Server Object,['T1207'],"The following analytic identifies a change in an Active Directory environment that could represent evidence of the DCShadow attack. DCShadow allows an attacker who has obtained privileged access to register a rogue Domain Controller (DC). Once registered, the rogue DC may be able to inject and replicate changes in the AD infrastructure for any domain object, including credentials and keys. This technique was initially released in 2018 by security researchers Benjamin Delpy and Vincent Le Toux. Specifically, the detection will trigger when a possible rogue Domain Controller computer object is created and quickly deleted within 30 seconds or less in an Active Directory domain. This behavior was identfied by simulating the DCShadow attack with Mimikatz.",['TTP'],"October 17, 2022","`wineventlog_security` EventCode=5137 OR EventCode=5141 ObjectDN=""*CN=Servers,CN=Default-First-Site-Name,CN=Sites,CN=Configuration*"" 
| transaction ObjectDN startswith=(EventCode=5137) endswith=(EventCode=5141) 
| eval short_lived=case((duration<30),""TRUE"") 
| search short_lived = TRUE 
| stats values(ObjectDN) values(signature) values(EventCode) by _time, Computer, SubjectUserName 
| `windows_ad_short_lived_server_object_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ObjectDN', 'signature', 'SubjectUserName', 'Computer']",Creating and deleting a server object within 30 seconds or less is unusual but not impossible in a production environment. Filter as needed.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://www.dcshadow.com/', 'https://attack.mitre.org/techniques/T1207/', 'https://stealthbits.com/blog/detecting-dcshadow-with-event-logs/', 'https://pentestlab.blog/2018/04/16/dcshadow/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5137', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5141']","['Defense Evasion', 'Rogue Domain Controller', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/196ff536-58d9-4d1b-9686-b176b04e430b/,Windows Service Stop By Deletion,['T1489'],"The following analytic identifies Windows Service Control, sc.exe, attempting to delete a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique to terminate security services or other related services to continue there objective and evade detections.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = sc.exe OR Processes.original_file_name = sc.exe) Processes.process=""* delete *"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_stop_by_deletion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.dest', 'Processes.user']",It is possible administrative scripts may start/stop/delete services. Filter as needed.,"['Azorult', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1543.003/T1543.003.md']","['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1a382c6c-7c2e-11eb-ac69-acde48001122/,Nishang PowershellTCPOneLine,"['T1059', 'T1059.001']","This query detects the Nishang Invoke-PowerShellTCPOneLine utility that spawns a call back to a remote Command And Control server. This is a powershell oneliner. In addition, this will capture on the command-line additional utilities used by Nishang. Triage the endpoint and identify any parallel processes that look suspicious. Review the reputation of the remote IP or domain contacted by the powershell process.",['TTP'],"March 3, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` (Processes.process=*Net.Sockets.TCPClient* AND Processes.process=*System.Text.ASCIIEncoding*) by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `nishang_powershelltcponeline_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives may be present. Filter as needed based on initial analysis.,['HAFNIUM Group'],['https://research.splunk.com/stories/hafnium_group'],"['https://github.com/samratashok/nishang/blob/master/Shells/Invoke-PowerShellTcpOneLine.ps1', 'https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/', 'https://www.microsoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-servers/', 'https://www.rapid7.com/blog/post/2021/03/03/rapid7s-insightidr-enables-detection-and-response-to-microsoft-exchange-0-day/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1a52c836-43ef-11ec-a36c-acde48001122/,Windows InstallUtil Uninstall Option with Network,"['T1218.004', 'T1218']","The following analytic identifies the Windows InstallUtil.exe binary making a remote network connection. This technique may be used to download and execute code while bypassing application control using the /u (uninstall) switch. 
InstallUtil uses the functions install and uninstall within the System.Configuration.Install namespace to process .net assembly. Install function requires admin privileges, however, uninstall function can be run as an unprivileged user.
When InstallUtil.exe is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like Cmd.exe, PowerShell.exe or Explorer.exe. 
If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. 
During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",['TTP'],"March 16, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_installutil` Processes.process IN (""*/u*"", ""*uninstall*"") by _time span=1h  Processes.user Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as C2 ] 
| table _time user dest parent_process_name process_name process_path process process_id dest_port C2 
| `windows_installutil_uninstall_option_with_network_filter`","['security_content_summariesonly', 'process_installutil', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Ports.process_guid', 'Ports.dest', 'Ports.dest_port']",Limited false positives should be present as InstallUtil is not typically used to download remote files. Filter as needed based on Developers requirements.,"['Signed Binary Proxy Execution InstallUtil', 'Living Off The Land']","['https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/living_off_the_land']","['https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_12', 'https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/md/Installutil.exe.md', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/1a93b7ea-7af7-11eb-adb5-acde48001122/,Any Powershell DownloadFile,"['T1059', 'T1059.001', 'T1105']","The following analytic identifies the use of PowerShell downloading a file using DownloadFile method. This particular method is utilized in many different PowerShell frameworks to download files and output to disk. Identify the source (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell transaction logs are available, review for further details of the implant.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=*DownloadFile* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.parent_process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `any_powershell_downloadfile_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering will need to occur by parent process or command line argument. It may be required to modify this query to an EDR product for more granular coverage.,"['DarkCrystal RAT', 'Ingress Tool Transfer', 'Hermetic Wiper', 'Malicious PowerShell', 'Data Destruction', 'Log4Shell CVE-2021-44228', 'Phemedrone Stealer']","['https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/phemedrone_stealer']","['https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-5.0', 'https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md']","['Command And Control', 'Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Ingress Tool Transfer', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1acafff9-1347-4b40-abae-f35aa4ba85c1/,Windows Odbcconf Load Response File,['T1218.008'],"The following analytic identifies the odbcconf.exe, Windows Open Database Connectivity utility, loading up a resource file. The file extension is arbitrary and may be named anything. The resource file itself may have different commands supported by Odbcconf to load up a DLL (REGSVR) on disk or additional commands. During triage, review file modifications and parallel processes.",['TTP'],"June 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=odbcconf.exe Processes.process IN (""*-f *"",""*/f *"") Processes.process=""*.rsp*""  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_odbcconf_load_response_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering may need to occur based on legitimate application usage. Filter as needed.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://strontic.github.io/xcyclopedia/library/odbcconf.exe-07FBA12552331355C103999806627314.html', 'https://twitter.com/redcanary/status/1541838407894171650?s=20&t=kp3WBPtfnyA3xW7D7wx0uw']","['Defense Evasion', 'Endpoint', 'Odbcconf', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1adc9548-da7c-11eb-8f13-acde48001122/,Print Spooler Failed to Load a Plug-in,"['T1547.012', 'T1547']","The following analytic identifies driver load errors utilizing the Windows PrintService Admin logs. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. 
Within the proof of concept code, the following error will occur - ""The print spooler failed to load a plug-in module C:\Windows\system32\spool\DRIVERS\x64\3\meterpreter.dll, error code 0x45A. See the event user data for context information."" 
The analytic is based on file path and failure to load the plug-in. 
During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",['TTP'],"July 1, 2021","`printservice` ((ErrorCode=""0x45A"" (EventCode=""808"" OR EventCode=""4909"")) OR (""The print spooler failed to load a plug-in module"" OR ""\\drivers\\x64\\"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by OpCode EventCode ComputerName Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `print_spooler_failed_to_load_a_plug_in_filter`","['printservice', 'security_content_ctime']","['_time', 'OpCode', 'EventCode', 'ComputerName', 'Message']",False positives are unknown and filtering may be required.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Boot or Logon Autostart Execution', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1adffe86-10c3-11ec-8ce6-acde48001122/,Rundll32 Control RunDLL World Writable Directory,"['T1218', 'T1218.011']","The following detection identifies rundll32.exe with control_rundll within the command-line, loading a .cpl or another file type from windows\temp, programdata, or appdata. Developed in relation to CVE-2021-40444. Rundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. This is written to be a bit more broad by not including .cpl. The paths are specified, add more as needed. During triage, review parallel processes to identify any further suspicious behavior.",['TTP'],"September 8, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*Control_RunDLL* AND Processes.process IN (""*\\appdata\\*"", ""*\\windows\\temp\\*"", ""*\\programdata\\*"")  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_control_rundll_world_writable_directory_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This may be tuned, or a new one related, by adding .cpl to command-line. However, it's important to look for both. Tune/filter as needed.","['Suspicious Rundll32 Activity', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444', 'https://research.splunk.com/stories/living_off_the_land']","['https://strontic.github.io/xcyclopedia/library/rundll32.exe-111474C61232202B5B588D2B512CBB25.html', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://attack.mitre.org/techniques/T1218/011/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.002/T1218.002.yaml', 'https://redcanary.com/blog/intelligence-insights-december-2021/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/1b7bfb2c-b8e6-11eb-99ac-acde48001122/,Detect Renamed WinRAR,"['T1560.001', 'T1560']","The following analtyic identifies renamed instances of WinRAR.exe. In most cases, it is not common for WinRAR to be used renamed, however it is common to be installed by a third party application and executed from a non-standard path. During triage, validate additional metadata from the binary that this is WinRAR. Review parallel processes and file modifications.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.original_file_name=WinRAR.exe (Processes.process_name!=rar.exe OR Processes.process_name!=winrar.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_winrar_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Unknown. It is possible third party applications use renamed instances of WinRAR.,"['Collection and Staging', 'CISA AA22-277A']","['https://research.splunk.com/stories/collection_and_staging', 'https://research.splunk.com/stories/cisa_aa22-277a']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1560.001/T1560.001.md'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1be30d80-3a39-4df9-9102-64a467b24abc/,Living Off The Land,"['T1105', 'T1190', 'T1059', 'T1133']",The following correlation identifies a distinct amount of analytics associated with the Living Off The Land analytic story that identify potentially suspicious behavior.,['Correlation'],"September 9, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories=""Living Off The Land"" All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 5 
| `living_off_the_land_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']","There are no known false positive for this search, but it could contain false positives as multiple detections can trigger and not have successful exploitation. Modify the static value distinct_detection_name to a higher value. It is also required to tune analytics that are also tagged to ensure volume is never too much.","['Living Off The Land', 'https://research.splunk.com/stories/living_off_the_land/']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/living_off_the_land/']","['https://www.splunk.com/en_us/blog/security/living-off-the-land-threat-research-february-2022-release.html', 'https://research.splunk.com/stories/living_off_the_land/']","['Command And Control', 'Command and Scripting Interpreter', 'Execution', 'Exploit Public-Facing Application', 'External Remote Services', 'Ingress Tool Transfer', 'Initial Access', 'Initial Access', 'Persistence', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1c34549e-c31b-11eb-996b-acde48001122/,Detect AzureHound File Modifications,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","The following analytic is similar to SharpHound file modifications, but this instance covers the use of Invoke-AzureHound. AzureHound is the SharpHound equivilent but for Azure. It's possible this may never be seen in an environment as most attackers may execute this tool remotely. Once execution is complete, a zip file with a similar name will drop 20210601090751-azurecollection.zip. In addition to the zip, multiple .json files will be written to disk, which are in the zip.",['TTP'],"June 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*-azurecollection.zip"", ""*-azprivroleadminrights.json"", ""*-azglobaladminrights.json"", ""*-azcloudappadmins.json"", ""*-azapplicationadmins.json"") by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_azurehound_file_modifications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'file_path', 'dest', 'file_name', 'process_id', 'file_create_time']",False positives should be limited as the analytic is specific to a filename with extension .zip. Filter as needed.,['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],"['https://posts.specterops.io/introducing-bloodhound-4-0-the-azure-update-9b2b26c5e350', 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Collectors/AzureHound.ps1']","['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1c6abb08-73d1-11ec-9ca0-acde48001122/,Windows Hunting System Account Targeting Lsass,"['T1003.001', 'T1003']","The following hunting analytic identifies all processes requesting access into Lsass.exe. his behavior may be related to credential dumping or applications requiring access to credentials. Triaging this event will require understanding the GrantedAccess from the SourceImage. In addition, whether the account is privileged or not. Review the process requesting permissions and review parallel processes.",['Hunting'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, TargetImage, GrantedAccess, SourceImage, SourceProcessId, SourceUser, TargetUser  
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_hunting_system_account_targeting_lsass_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'TargetImage', 'GrantedAccess', 'SourceImage', 'SourceProcessId', 'SourceUser', 'TargetUser']","False positives will occur based on GrantedAccess and SourceUser, filter based on source image as needed. Utilize this hunting analytic to tune out false positives in TTP or anomaly analytics.","['CISA AA23-347A', 'Credential Dumping']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/credential_dumping']","['https://en.wikipedia.org/wiki/Local_Security_Authority_Subsystem_Service', 'https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump', 'https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html', 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1', 'https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights?redirectedfrom=MSDN']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1c8c6f66-acce-11eb-aafb-acde48001122/,Deleting Of Net Users,['T1531'],"This analytic will detect a suspicious net.exe/net1.exe command-line to delete a user on a system. This technique may be use by an administrator for legitimate purposes, however this behavior has been used in the wild to impair some user or deleting adversaries tracks created during its lateral movement additional systems. During triage, review parallel processes for additional behavior. Identify any other user accounts created before or after.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` AND Processes.process=""*user*"" AND  Processes.process=""*/delete*"" by  Processes.process_name Processes.original_file_name Processes.dest Processes.user Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `deleting_of_net_users_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",System administrators or scripts may delete user accounts via this technique. Filter as needed.,"['XMRig', 'Graceful Wipe Out Attack', 'DarkGate Malware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/darkgate_malware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Account Access Removal', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1cb40e15-cffa-45cc-abbd-e35884a49766/,Windows Spearphishing Attachment Connect To None MS Office Domain,"['T1566.001', 'T1566']","this detection was designed to identifies suspicious office documents that connect to a website aside from Microsoft Office Domain. This technique was seen in several malicious documents that abuses .rels xml properties of MS office to connect or download malicious files. This hunting query can be a good pivot or guide to check what URL link it tries to connect, what domain, where the documents came from and how the connection happens.",['Hunting'],"February 15, 2023","`sysmon` EventCode=22 Image IN (""*\\winword.exe"",""*\\excel.exe"",""*\\powerpnt.exe"",""*\\mspub.exe"",""*\\visio.exe"",""*\\wordpad.exe"",""*\\wordview.exe"",""*\\onenote.exe"", ""*\\onenotem.exe"",""*\\onenoteviewer.exe"",""*\\onenoteim.exe"", ""*\\msaccess.exe"") AND NOT(QueryName IN (""*.office.com"", ""*.office.net"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryResults QueryStatus Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_spearphishing_attachment_connect_to_none_ms_office_domain_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryResults', 'QueryStatus', 'dest']",Windows Office document may contain legitimate url link other than MS office Domain. filter is needed,"['Spearphishing Attachments', 'AsyncRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/asyncrat']","['https://www.netskope.com/blog/asyncrat-using-fully-undetected-downloader', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1cd983c8-8fd6-11ec-a09d-acde48001122/,Windows Disable Notification Center,['T1112'],The following search identifies a modification of registry to disable the windows notification center feature in a windows host machine. This registry modification removes notification and action center from the notification area on the task bar. This modification are seen in RAT malware to cover their tracks upon downloading other of its component or other payload.,['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_value_name= ""DisableNotificationCenter"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_notification_center_filter`","['security_content_summariesonly', 'security_content_ctime']","['Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable this windows features.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1cefb270-74a5-4e27-aa0c-2b6fa7c5b4ed/,Linux Kworker Process In Writable Process Path,"['T1036.004', 'T1036']","This analytic looks for suspicious process kworker commandline in a linux machine. kworker process name or thread are common names of kernel threads in linux process. This hunting detections can lead to investigate process contains process path in writable directory in linux like /home/, /var/log and /tmp/. This technique was seen in cyclopsblink malware to blend its core and other of its child process as normal kworker on the compromised machine. This detection might be a good pivot to look for other IOC related to cyclopsblink malware or attacks.",['Hunting'],"April 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.parent_process = ""*[kworker/*"" Processes.parent_process_path IN (""/home/*"", ""/tmp/*"", ""/var/log/*"") Processes.process=""*iptables*"" by  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_path Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_kworker_process_in_writable_process_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_path', 'Processes.process_path']",unknown,"['Sandworm Tools', 'CyclopsBLink']","['https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/cyclopsblink']","['https://www.ncsc.gov.uk/files/Cyclops-Blink-Malware-Analysis-Report.pdf', 'https://www.trendmicro.com/en_us/research/22/c/cyclops-blink-sets-sights-on-asus-routers--.html']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerade Task or Service', 'Masquerading', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1d19037f-466e-4d56-8d87-36fafd9aa3ce/,Linux Puppet Privilege Escalation,"['T1548.003', 'T1548']","In computing, Puppet is a software configuration management tool which includes its own declarative language to describe system configuration. It is a model-driven solution that requires limited programming knowledge to use. If sudo right is given to the tool for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*puppet*"" AND Processes.process=""*apply*"" AND Processes.process=""*-e*"" AND Processes.process=""*exec*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_puppet_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/puppet/', 'https://en.wikipedia.org/wiki/Puppet_(software)']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/1de31d5d-8fa6-4ee0-af89-17069134118a/,Detect Baron Samedit CVE-2021-3156 via OSQuery,['T1068'],"The following analytic detects the heap-based buffer overflow for the sudoedit command and identifies instances where the command ""sudoedit -s *"" is run using the osquery_process data source. This indicates that the sudoedit command is used with the ""-s"" flag, which is associated with the heap-based buffer overflow vulnerability. The detection is important because it indicates a potential security vulnerability, specifically Baron Samedit CVE-2021-3156, which helps to identify and respond to potential heap-based buffer overflow attacks to enhance the security posture of the organization. This vulnerability allows an attacker to escalate privileges and potentially gain unauthorized access to the system. If the attack is successful, the attacker can gain full control of the system, run arbitrary code, or access sensitive data. Such attacks can lead to data breaches, unauthorized access, and potential disruption of critical systems. False positives might occur since the legitimate use of the sudoedit command with the ""-s"" flag can also trigger this detection. You must carefully review and validate the findings before taking any action. Next steps include investigating all true positive detections promptly, reviewing the associated processes, gather relevant artifacts, identifying the source of the attack to contain the threat, mitigate the risks, and prevent further damage to the environment.",['TTP'],"January 28, 2021","`osquery_process` 
| search ""columns.cmdline""=""sudoedit -s \\*"" 
| `detect_baron_samedit_cve_2021_3156_via_osquery_filter`",['osquery_process'],"['_time', 'columns.cmdline']",unknown,['Baron Samedit CVE-2021-3156'],['https://research.splunk.com/stories/baron_samedit_cve-2021-3156'],N/A,"['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1e25e97a-8ea4-11ec-9767-acde48001122/,Windows Bits Job Persistence,['T1197'],"The following query identifies Microsoft Background Intelligent Transfer Service utility bitsadmin.exe scheduling a BITS job to persist on an endpoint. The query identifies the parameters used to create, resume or add a file to a BITS job. Typically seen combined in a oneliner or ran in sequence. If identified, review the BITS job created and capture any files written to disk. It is possible for BITS to be used to upload files and this may require further network data analysis to identify. You can use bitsadmin /list /verbose to list out the jobs during investigation.",['TTP'],"February 15, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%resume%"" OR process_cmd_line LIKE ""%setcustomheaders%"" OR process_cmd_line LIKE ""%setminretrydelay%"" OR process_cmd_line LIKE ""%setnotifycmdline%"" OR process_cmd_line LIKE ""%setnotifyflags%"" OR process_cmd_line LIKE ""%addfile%"" OR process_cmd_line LIKE ""%create%"") AND process_file_name=""bitsadmin.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Limited false positives will be present. Typically, applications will use BitsAdmin.exe. Any filtering should be done based on command-line arguments (legitimate applications) or parent process.","['BITS Jobs', 'Living Off The Land']","['https://research.splunk.com/stories/bits_jobs', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1197/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md#atomic-test-3---persist-download--execute', 'https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/']","['BITS Jobs', 'Defense Evasion', 'Persistence', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/1f35e1da-267b-11ec-90a9-acde48001122/,Wscript Or Cscript Suspicious Child Process,"['T1055', 'T1543', 'T1134.004', 'T1134']","This analytic identifies a suspicious spawned process by WScript or CScript process. This technique was a common technique used by adversaries and malware to execute different LOLBIN, other scripts like PowerShell or spawn a suspended process to inject its code as a defense evasion. This TTP may detect some normal script that using several application tool that are in the list of the child process it detects but a good pivot and indicator that a script is may execute suspicious code.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""cscript.exe"", ""wscript.exe"") Processes.process_name IN (""regsvr32.exe"", ""rundll32.exe"",""winhlp32.exe"",""certutil.exe"",""msbuild.exe"",""cmd.exe"",""powershell*"",""wmic.exe"",""mshta.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wscript_or_cscript_suspicious_child_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators may create vbs or js script that use several tool as part of its execution. Filter as needed.,"['Remcos', 'FIN7', 'Unusual Processes', 'Data Destruction', 'WhisperGate', 'NjRAT']","['https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/njrat']","['https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Access Token Manipulation', 'Create or Modify System Process', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Parent PID Spoofing', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1f5b68aa-2037-11ec-898e-acde48001122/,Print Processor Registry Autostart,"['T1547.012', 'T1547']",This analytic is to detect a suspicious modification or new registry entry regarding print processor. This registry is known to be abuse by turla or other APT to gain persistence and privilege escalation to the compromised machine. This is done by adding the malicious dll payload on the new created key in this registry that will be executed as it restarted the spoolsv.exe process and services.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path =""*\\Control\\Print\\Environments\\Windows x64\\Print Processors*"" by Registry.dest  Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `print_processor_registry_autostart_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name']",possible new printer installation may add driver component on this registry.,"['Data Destruction', 'Windows Privilege Escalation', 'Hermetic Wiper', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_persistence_techniques']","['https://attack.mitre.org/techniques/T1547/012/', 'https://www.welivesecurity.com/2020/05/21/no-game-over-winnti-group/']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1fca2b28-f922-11eb-b2dd-acde48001122/,Uninstall App Using MsiExec,"['T1218.007', 'T1218']",This search is to detect a suspicious un-installation of application using msiexec. This technique was seen in conti leak tool and script where it tries to uninstall AV product using this commandline. This commandline to uninstall product is not a common practice in enterprise network.,['TTP'],"August 9, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=msiexec.exe Processes.process= ""* /qn *"" Processes.process= ""*/X*"" Processes.process= ""*REBOOT=*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `uninstall_app_using_msiexec_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown.,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://threadreaderapp.com/thread/1423361119926816776.html'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/1fdf31c9-ff4d-4c48-b799-0e8666e08787/,Windows Indirect Command Execution Via forfiles,['T1202'],"The following analytic detects programs that have been started by forfiles.exe. According to Microsoft, the 'The forfiles command lets you run a command on or pass arguments to multiple files'. While this tool can be used to start legitimate programs, usually within the context of a batch script, it has been observed being used to evade protections on command line execution.",['TTP'],"April 5, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process=""*forfiles* /c *"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_indirect_command_execution_via_forfiles_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.process_path']","Some legacy applications may be run using pcalua.exe. Similarly, forfiles.exe may be used in legitimate batch scripts.  Filter these results as needed.","['Living Off The Land', 'Windows Post-Exploitation']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_post-exploitation']","['https://twitter.com/KyleHanslovan/status/912659279806640128', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/forfiles']","['Defense Evasion', 'Endpoint', 'Indirect Command Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/1ff7ccc8-065a-11ec-91e4-acde48001122/,Get ADDefaultDomainPasswordPolicy with Powershell Script Block,['T1201'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-ADDefaultDomainPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText =""*Get-ADDefaultDomainPasswordPolicy*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
|  `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_addefaultdomainpasswordpolicy_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2015de95-fe91-413d-9d62-2fe011b67e82/,Windows Archive Collected Data via Rar,"['T1560.001', 'T1560']","The following analytic identifies a process execute a rar utilities to archive files. This method has been exploited by various threat actors, including red-teamers and malware like DarkGate, to gather and compress collected data on compromised hosts. Subsequently, these archives are transmitted to command and control servers as part of their data exfiltration techniques. These adversaries leverage RAR archiving to consolidate and compress collected data on compromised hosts. Once the data is compiled into these archives, it serves as a means for these entities to effectively exfiltrate sensitive information. This process involves transferring the archived data to command and control servers, facilitating the extraction and retrieval of critical information from compromised systems.",['Anomaly'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""Rar.exe"" OR Processes.original_file_name = ""Rar.exe"" AND Processes.process = ""*a*"" Processes.process = ""* -ep1*"" Processes.process = ""* -r*"" Processes.process = ""* -y*"" Processes.process = ""* -v5m*"" Processes.process = ""* -m1*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_archive_collected_data_via_rar_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",user and network administrator can execute this command.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/201946c6-b1d5-42bb-a7e0-5f7123f47fc4/,Windows Impair Defense Disable Win Defender Report Infection,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable windows defender report infection information. Setting this registry key to 1, Instructs Windows Defender not to report detailed information about infections or threats detected on the system to Microsoft. Enabling this setting might limit or prevent the transmission of specific data related to infections, such as details about the detected malware, to Microsoft's servers for analysis or logging purposes. This registry is being abused by adversaries, threat actors and red-teamers to bypasses Windows Defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Microsoft\\MRT\\DontReportInfectionInformation"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_report_infection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2032a95a-5165-11ec-a2c3-3e22fbd008af/,Randomly Generated Windows Service Name,"['T1543', 'T1543.003']","The following hunting analytic leverages Event ID 7045, A new service was installed in the system, to identify the installation of a Windows Service with a suspicious, high entropy, Service Name. To achieve this, this analytic also leverages the ut_shannon function from the URL ToolBox Splunk application. Red teams and adversaries alike may abuse the Service Control Manager to create and start a remote Windows Service and obtain remote code execution. To achieve this goal, some tools like Metasploit, Cobalt Strike and Impacket, typically create a Windows Service with a random service name on the victim host. This hunting analytic may help defenders identify Windows Services installed as part of a lateral movement attack. The entropy threshold ut_shannon &gt; 3 should be customized by users. The Service_File_Name field can be used to determine if the Windows Service has malicious intent or not.",['Hunting'],"November 29, 2021","`wineventlog_system` EventCode=7045 
| lookup ut_shannon_lookup word as Service_Name 
| where ut_shannon > 3 
| table EventCode ComputerName Service_Name ut_shannon Service_Start_Type Service_Type Service_File_Name 
| `randomly_generated_windows_service_name_filter`",['wineventlog_system'],"['_time', 'EventCode', 'ComputerName', 'Service_File_Name', 'Service_Type', 'Service_Name', 'Service_Start_Type']",Legitimate applications may use random Windows Service names.,['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],['https://attack.mitre.org/techniques/T1543/003/'],"['Create or Modify System Process', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/203ef0ea-9bd8-11eb-8201-acde48001122/,WinEvent Scheduled Task Created to Spawn Shell,"['T1053.005', 'T1053']","The following query utilizes Windows Security EventCode 4698, indicating 'a scheduled task was created', to identify potentially suspicious tasks. These tasks may be registered on Windows through either schtasks.exe or TaskService, and are set up to execute a command with a native Windows shell such as PowerShell, Cmd, Wscript, or Cscript.
The search will return the initial and final times the task was registered, along with details like the 'Command' set to be executed, 'Task Name', 'Author', whether it's 'Enabled', and if it is 'Hidden'.
Schtasks.exe is typically found in C:\Windows\system32 and C:\Windows\syswow64. The DLL 'taskschd.dll' is loaded when either schtasks.exe or TaskService is launched. If this DLL is found loaded by another process, it's possible that a scheduled task is being registered within the context of that process in memory.
During triage, it's essential to identify the source of the scheduled task. Was it registered via schtasks.exe or TaskService? Review the job that was created and the command set to be executed. It's also recommended to capture and review any artifacts on disk, and identify any parallel processes within the same timeframe to locate the source.",['TTP'],"April 5, 2023","`wineventlog_security` EventCode=4698 
| xmlkv Message 
| search Command IN (""*powershell.exe*"", ""*wscript.exe*"", ""*cscript.exe*"", ""*cmd.exe*"", ""*sh.exe*"", ""*ksh.exe*"", ""*zsh.exe*"", ""*bash.exe*"", ""*scrcons.exe*"", ""*pwsh.exe*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, Task_Name, Command, Author, Enabled, Hidden 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winevent_scheduled_task_created_to_spawn_shell_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Task_Name', 'Description', 'Command']",False positives are possible if legitimate applications are allowed to register tasks that call a shell to be spawned. Filter as needed based on command-line or processes that are used legitimately.,"['Ransomware', 'Windows Persistence Techniques', 'Winter Vivern', 'Ryuk Ransomware', 'CISA AA22-257A', 'Scheduled Tasks', 'Windows Error Reporting Service Elevation of Privilege Vulnerability']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/windows_error_reporting_service_elevation_of_privilege_vulnerability']","['https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4698', 'https://redcanary.com/threat-detection-report/techniques/scheduled-task-job/', 'https://docs.microsoft.com/en-us/windows/win32/taskschd/time-trigger-example--scripting-?redirectedfrom=MSDN']","['Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/20ba6c32-c733-4a32-b64e-2688cf231399/,Suspicious PlistBuddy Usage via OSquery,"['T1543.001', 'T1543']","The following analytic identifies the use of a native MacOS utility, PlistBuddy, creating or modifying a properly list (.plist) file. In the instance of Silver Sparrow, the following commands were executed:\",['TTP'],"February 22, 2021","`osquery_process` ""columns.cmdline""=""*LaunchAgents*"" OR ""columns.cmdline""=""*RunAtLoad*"" OR ""columns.cmdline""=""*true*"" 
|  `suspicious_plistbuddy_usage_via_osquery_filter`",['osquery_process'],"['_time', 'columns.cmdline']",Some legitimate applications may use PlistBuddy to create or modify property lists and possibly generate false positives. Review the property list being modified or created to confirm.,['Silver Sparrow'],['https://research.splunk.com/stories/silver_sparrow'],['https://www.marcosantadev.com/manage-plist-files-plistbuddy/'],"['Create or Modify System Process', 'Launch Agent', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/20db5f70-34b4-4e83-8926-fa26119de173/,Windows IIS Components Get-WebGlobalModule Module Query,"['T1505.004', 'T1505']",The following analytic requires the use of PowerShell inputs to run Get-WebGlobalModule to list out all the IIS Modules installed. The output is a list of Module names and the Image path of the DLL.,['Hunting'],"December 20, 2022","`iis_get_webglobalmodule` 
| stats count min(_time) as firstTime max(_time) as lastTime by host name image 
| rename host as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iis_components_get_webglobalmodule_module_query_filter`","['iis_get_webglobalmodule', 'security_content_ctime']","['_time', 'host', 'name', 'image']",This analytic is meant to assist with hunting modules across a fleet of IIS servers. Filter and modify as needed.,"['IIS Components', 'WS FTP Server Critical Vulnerabilities']","['https://research.splunk.com/stories/iis_components', 'https://research.splunk.com/stories/ws_ftp_server_critical_vulnerabilities']","['https://docs.splunk.com/Documentation/Splunk/9.0.2/Data/MonitorWindowsdatawithPowerShellscripts', 'https://gist.github.com/MHaggis/64396dfd9fc3734e1d1901a8f2f07040', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/21179107-099a-324a-94d3-08301e6c065f/,Windows DotNet Binary in Non Standard Path,"['T1036', 'T1036.003', 'T1218', 'T1218.004']",The following analytic identifies native .net binaries within the Windows operating system that may be abused by adversaries by moving it to a new directory. The analytic identifies the .net binary by using a list. If one or the other matches an alert will be generated. Adversaries abuse these binaries as they are native to Windows and native DotNet. Note that not all SDK (post install of Windows) are captured in the list. Lookup - https://github.com/splunk/security_content/blob/develop/lookups/is_net_windows_file.csv.,['Anomaly'],"March 17, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = process_file.name 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (match(process_file_name, /(?i)MSBuild.exe/)=true OR match(process_file_name, /(?i)comsvcconfig.exe/)=true OR match(process_file_name, /(?i)dfsradmin.exe/)=true OR match(process_file_name, /(?i)dfsvc.exe/)=true OR match(process_file_name, /(?i)microsoft.workflow.compiler.exe/)=true OR match(process_file_name, /(?i)smsvchost.exe/)=true OR match(process_file_name, /(?i)wsatconfig.exe/)=true OR match(process_file_name, /(?i)addinprocess.exe/)=true OR match(process_file_name, /(?i)addinprocess32.exe/)=true OR match(process_file_name, /(?i)addinutil.exe/)=true OR match(process_file_name, /(?i)aspnet_compiler.exe/)=true OR match(process_file_name, /(?i)aspnet_regbrowsers.exe/)=true OR match(process_file_name, /(?i)aspnet_regsql.exe/)=true OR match(process_file_name, /(?i)caspol.exe/)=true OR match(process_file_name, /(?i)datasvcutil.exe/)=true OR match(process_file_name, /(?i)edmgen.exe/)=true OR match(process_file_name, /(?i)installutil.exe/)=true OR match(process_file_name, /(?i)jsc.exe/)=true OR match(process_file_name, /(?i)ngentask.exe/)=true OR match(process_file_name, /(?i)regasm.exe/)=true OR match(process_file_name, /(?i)regsvcs.exe/)=true OR match(process_file_name, /(?i)sdnbr.exe/)=true OR match(process_file_name, /(?i)acu.exe/)=true OR match(process_file_name, /(?i)appvstreamingux.exe/)=true OR match(process_file_name, /(?i)dsac.exe/)=true OR match(process_file_name, /(?i)lbfoadmin.exe/)=true OR match(process_file_name, /(?i)microsoft.uev.synccontroller.exe/)=true OR match(process_file_name, /(?i)mtedit.exe/)=true OR match(process_file_name, /(?i)scriptrunner.exe/)=true OR match(process_file_name, /(?i)servermanager.exe/)=true OR match(process_file_name, /(?i)stordiag.exe/)=true OR match(process_file_name, /(?i)tzsync.exe/)=true OR match(process_file_name, /(?i)uevagentpolicygenerator.exe/)=true OR match(process_file_name, /(?i)uevappmonitor.exe/)=true OR match(process_file_name, /(?i)uevtemplatebaselinegenerator.exe/)=true OR match(process_file_name, /(?i)uevtemplateconfigitemgenerator.exe/)=true OR match(process_file_name, /(?i)powershell_ise.exe/)=true OR match(process_file_name, /(?i)iediagcmd.exe/)=true OR match(process_file_name, /(?i)xbox.tcui.exe/)=true OR match(process_file_name, /(?i)microsoft.activedirectory.webservices.exe/)=true OR match(process_file_name, /(?i)iisual.exe/)=true OR match(process_file_name, /(?i)filehistory.exe/)=true OR match(process_file_name, /(?i)secureassessmentbrowser.exe/)=true) AND (NOT (match(process_file_path, /(?i)\\windows\\system32/)=true OR match(process_file_path, /(?i)\\windows\\syswow64/)=true OR match(process_file_path, /(?i)\\windows\\adws/)=true OR match(process_file_path, /(?i)\\windows\\networkcontroller/)=true OR match(process_file_path, /(?i)\\windows\\systemapps/)=true OR match(process_file_path, /(?i)\\winsxs/)=true OR match(process_file_path, /(?i)\\microsoft.net/)=true)) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Masquerading - Rename System Utilities', 'Unusual Processes', 'Ransomware', 'Signed Binary Proxy Execution InstallUtil', 'WhisperGate']","['https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/whispergate']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'InstallUtil', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/213b3148-24ea-11ec-93a2-acde48001122/,MSBuild Suspicious Spawned By Script Process,"['T1127.001', 'T1127']","This analytic is to detect a suspicious child process of MSBuild spawned by Windows Script Host - cscript or wscript. This behavior or event are commonly seen and used by malware or adversaries to execute malicious msbuild process using malicious script in the compromised host. During triage, review parallel processes and identify any file modifications. MSBuild may load a script from the same path without having command-line arguments.",['TTP'],"October 4, 2021","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""wscript.exe"", ""cscript.exe"") AND `process_msbuild` by Processes.dest Processes.parent_process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `msbuild_suspicious_spawned_by_script_process_filter`","['security_content_summariesonly', 'process_msbuild', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.original_file_name', 'Processes.user']",False positives should be limited as developers do not spawn MSBuild via a WSH.,['Trusted Developer Utilities Proxy Execution MSBuild'],['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild'],['https://app.any.run/tasks/dc93ee63-050c-4ff8-b07e-8277af9ab939/'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'MSBuild', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/21432e40-04f4-11ec-b7e6-acde48001122/,Get ADUser with PowerShell Script Block,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGUser commandlet. The Get-AdUser commandlet is used to return a list of all domain users. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*get-aduser*"" ScriptBlockText = ""*-filter*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduser_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.blackhillsinfosec.com/red-blue-purple/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduser?view=windowsserver2019-ps']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2181f261-93e6-4166-a5a9-47deac58feff/,Windows Information Discovery Fsutil,['T1082'],"The following analytic identifies a process execution of Windows OS built-in tool FSUTIL to discover file system information. This tool is being abused or used by several adversaries or threat actor to query/list all drives, drive type, volume information or volume statistics by using the FSINFO parameter of this tool. This technique was seen in WINPEAS post exploitation tool that is being used by ransomware prestige to gain privilege and persistence to the targeted host.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""fsutil.exe"" OR Processes.original_file_name = ""fsutil.exe"" AND Processes.process = ""*fsinfo*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_information_discovery_fsutil_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Information Discovery']",['Endpoint']
https://research.splunk.com/endpoint/21c5af91-1a4a-4511-8603-64fb41df3fad/,Windows SIP Provider Inventory,['T1553.003'],"The following inventory analytic is used with a PowerShell scripted inputs to capture all SIP providers on a Windows system. This analytic is used to identify potential malicious SIP providers that may be used to subvert trust controls. Upon review, look for new and non-standard paths for SIP providers.",['Hunting'],"October 10, 2023","`subjectinterfacepackage` Dll=*\\*.dll 
| stats count min(_time) as firstTime max(_time) as lastTime values(Dll) by Path host
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_sip_provider_inventory_filter`","['security_content_ctime', 'subjectinterfacepackage']","['Path', 'Dll', 'host']",False positives are limited as this is a hunting query for inventory.,['Subvert Trust Controls SIP and Trust Provider Hijacking'],['https://research.splunk.com/stories/subvert_trust_controls_sip_and_trust_provider_hijacking'],['https://gist.github.com/MHaggis/75dd5db546c143ea67703d0e86cdbbd1'],"['Defense Evasion', 'SIP and Trust Provider Hijacking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/21cbcaf1-b51f-496d-a0c1-858ff3070452/,Windows Modify Registry Disabling WER Settings,['T1112'],"The following analytic identifies a modification in the Windows registry to disable Windows error reporting settings. This Windows feature allows the user to report bugs, errors, failure or problems encountered in specific application or processes. Adversaries use this technique to hide any error or failure that some of its malicious components trigger.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\disable*"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disabling_wer_settings_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.","['Azorult', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-remoteassistance-exe-fallowtogethelp', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/21d236ec-eec1-11eb-b23e-acde48001122/,CHCP Command Execution,['T1059'],This search is to detect execution of chcp.exe application. this utility is used to change the active code page of the console. This technique was seen in icedid malware to know the locale region/language/country of the compromise host.,['TTP'],"July 27, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=chcp.com Processes.parent_process_name = cmd.exe (Processes.parent_process=*/c* OR Processes.parent_process=*/k*) by  Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `chcp_command_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'process_name', 'process', 'parent_process_name', 'parent_process', 'process_id', 'parent_process_id', 'dest', 'user']",other tools or script may used this to change code page to UTF-* or others,"['IcedID', 'Azorult', 'Forest Blizzard']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/forest_blizzard']","['https://ss64.com/nt/chcp.html', 'https://twitter.com/tccontre18/status/1419941156633329665?s=20']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/22597426-6dbd-49bd-bcdc-4ec19857192f/,Detect Webshell Exploit Behavior,"['T1505', 'T1505.003']",This search is used to detect the abuse of web applications by adversaries. Adversaries may install a backdoor or script onto web servers by exploiting known vulnerabilities or misconfigruations. Web shells are used to establish persistent access to systems and provide a set of executable functions or a command-line interface on the system hosting the Web server.,['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count max(_time) as lastTime, min(_time) as firstTime from datamodel=Endpoint.Processes where (Processes.process_name IN (""arp.exe"",""at.exe"",""bash.exe"",""bitsadmin.exe"",""certutil.exe"",""cmd.exe"",""cscript.exe"", ""dsget.exe"",""dsquery.exe"",""find.exe"",""findstr.exe"",""fsutil.exe"",""hostname.exe"",""ipconfig.exe"",""ksh.exe"",""nbstat.exe"", ""net.exe"",""net1.exe"",""netdom.exe"",""netsh.exe"",""netstat.exe"",""nltest.exe"",""nslookup.exe"",""ntdsutil.exe"",""pathping.exe"", ""ping.exe"",""powershell.exe"",""pwsh.exe"",""qprocess.exe"",""query.exe"",""qwinsta.exe"",""reg.exe"",""rundll32.exe"",""sc.exe"", ""scrcons.exe"",""schtasks.exe"",""sh.exe"",""systeminfo.exe"",""tasklist.exe"",""tracert.exe"",""ver.exe"",""vssadmin.exe"", ""wevtutil.exe"",""whoami.exe"",""wmic.exe"",""wscript.exe"",""wusa.exe"",""zsh.exe"") AND Processes.parent_process_name IN (""w3wp.exe"", ""http*.exe"", ""nginx*.exe"", ""php*.exe"", ""php-cgi*.exe"",""tomcat*.exe"")) by Processes.dest,Processes.user,Processes.parent_process,Processes.parent_process_name,Processes.process,Processes.process_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_webshell_exploit_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process', 'Processes.process_name']","Legitimate OS functions called by vendor applications, baseline the environment and filter before enabling. Recommend throttle by dest/process_name","['ProxyNotShell', 'ProxyShell', 'CISA AA22-257A', 'HAFNIUM Group', 'BlackByte Ransomware', 'CISA AA22-264A', 'Citrix ShareFile RCE CVE-2023-24489', 'Flax Typhoon', 'WS FTP Server Critical Vulnerabilities', 'SysAid On-Prem Software CVE-2023-47246 Vulnerability']","['https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/citrix_sharefile_rce_cve-2023-24489', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/ws_ftp_server_critical_vulnerabilities', 'https://research.splunk.com/stories/sysaid_on-prem_software_cve-2023-47246_vulnerability']","['https://attack.mitre.org/techniques/T1505/003/', 'https://github.com/nsacyber/Mitigating-Web-Shells', 'https://www.hackingarticles.in/multiple-ways-to-exploit-tomcat-manager/']","['Endpoint', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Shell']",['Endpoint']
https://research.splunk.com/endpoint/22ac27b4-7189-4a4f-9375-b9017c9620d7/,Detect RTLO In Process,"['T1036.002', 'T1036']",This search is used to detect the abuse of the right-to-left override (RTLO or RLO) character (U+202E) RTLO. This technique is used by adversaries to disguise a string and/or file name to make it appear benign. The RTLO character is a non-printing Unicode character that causes the text that follows it to be displayed in reverse.,['TTP'],"April 26, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process!=unknown AND Processes.action=allowed by Processes.dest Processes.user Processes.original_file_name Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| regex process=""\\x{202E}"" 
| rex field=process ""(?<RTLO_command_1>.+)(?<RTLO_exist_process>\\x{202E})(?<RTLO_command_2>.+)"" 
| eval process_with_RTLO=process 
| eval process=RTLO_command_1.RTLO_command_2 
| fields - RTLO* 
| `detect_rtlo_in_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.process_guid', 'Processes.parent_process_id', 'Processes.parent_process_name', 'Processes.parent_process']",Implementation in regions that use right to left in native language.,['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://attack.mitre.org/techniques/T1036/002/', 'https://resources.infosecinstitute.com/topic/spoof-using-right-to-left-override-rtlo-technique-2/', 'https://www.trendmicro.com/en_us/research/17/f/following-trail-blacktech-cyber-espionage-campaigns.html']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Right-to-Left Override', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/22d3b118-04df-11ec-8fa3-acde48001122/,GetWmiObject DS User with PowerShell,"['T1087.002', 'T1087']","This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for domain users. The Get-WmiObject commandlet combined with the -class ds_user parameter can be used to return the full list of users in a Windows domain. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain users for situational awareness and Active Directory Discovery.",['TTP'],"August 24, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*get-wmiobject*"" AND Processes.process = ""*ds_user*"" AND Processes.process = ""*root\\directory\\ldap*"" AND Processes.process = ""*-namespace*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_ds_user_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://jpcertcc.github.io/ToolAnalysisResultSheet/details/dsquery.htm'],"['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/23150a40-9301-4195-b802-5bb4f43067fb/,Windows DisableAntiSpyware Registry,"['T1562.001', 'T1562']","The search looks for the Registry Key DisableAntiSpyware set to disable. This is consistent with Ryuk infections across a fleet of endpoints. This particular behavior is typically executed when an ransomware actor gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_value_name=""DisableAntiSpyware"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_disableantispyware_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Azorult', 'Ryuk Ransomware', 'Windows Registry Abuse', 'RedLine Stealer', 'CISA AA22-264A', 'Windows Defense Evasion Tactics', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/23587b6a-c479-11eb-b671-acde48001122/,Excessive distinct processes from Windows Temp,['T1059'],This analytic will identify suspicious series of process executions.  We have observed that post exploit framework tools like Koadic and Meterpreter will launch an excessive number of processes with distinct file paths from Windows\Temp to execute actions on objective.  This behavior is extremely anomalous compared to typical application behaviors that use Windows\Temp.,['Anomaly'],"February 28, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process distinct_count(Processes.process) as distinct_process_count  min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_path = ""*\\Windows\\Temp\\*"" by Processes.dest Processes.user  _time span=20m 
| where distinct_process_count > 37 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_distinct_processes_from_windows_temp_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest', 'Processes.user']","Many benign applications will create processes from executables in Windows\Temp, although unlikely to exceed the given threshold.  Filter as needed.",['Meterpreter'],['https://research.splunk.com/stories/meterpreter'],['https://www.offensive-security.com/metasploit-unleashed/about-meterpreter/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/236e7c8e-c9d9-11eb-a824-acde48001122/,Disable Logs Using WevtUtil,"['T1070', 'T1070.001']",This search is to detect execution of wevtutil.exe to disable logs. This technique was seen in several ransomware to disable the event logs to evade alerts and detections.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""wevtutil.exe"" Processes.process = ""*sl*"" Processes.process = ""*/e:false*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_logs_using_wevtutil_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process_guid']",network operator may disable audit event logs for debugging purposes.,"['Ransomware', 'CISA AA23-347A', 'Rhysida Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://www.bleepingcomputer.com/news/security/new-ransom-x-ransomware-used-in-texas-txdot-cyberattack/'],"['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/238f3a07-8440-480b-b26f-462f41d9a47c/,Windows Masquerading Msdtc Process,['T1036'],"The following analytic identifies a suspicious msdtc.exe with specific command-line parameters, particularly -a or -b, which are regarded as potential indicators of the presence of the insidious PlugX malware. This malware is notorious for its covert operations and is frequently utilized by threat actors for unauthorized access, data exfiltration, and espionage. The analytic's focus on the -a or -b command-line parameters within msdtc.exe is rooted in the PlugX malware's sophisticated tactic of masquerading its activities. To elude detection, PlugX employs a technique where it injects a concealed, headless PlugX Dynamic Link Library (DLL) module into the legitimate msdtc.exe process. By leveraging these specific command-line parameters, the malware attempts to disguise its presence within a system's legitimate processes, thereby evading immediate suspicion.",['TTP'],"November 21, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""msdtc.exe"" Processes.process = ""*msdtc.exe*"" Processes.process IN (""* -a*"", ""* -b*"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_masquerading_msdtc_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['PlugX'],['https://research.splunk.com/stories/plugx'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.plugx'],"['Defense Evasion', 'Endpoint', 'Masquerading', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/23add2a8-ea22-4fd4-8bc0-8c0b822373a1/,Windows Group Policy Object Created,"['T1484', 'T1484.001', 'T1078.002']","The following analytic leverages Event IDs 5136 and 51137 to identify the creation of a new Group Policy Object. With GPOs, system administrators can manage and configure applications, software operations, and user settings throughout an entire organization. GPOs can be abused and leveraged by adversaries to escalate privileges or deploy malware across an Active Directory network. As an example, the Lockbit ransomware malware will create new group policies on the domain controller that are then pushed out to every device on the network. Security teams should monitor the creation of new Group Policy Objects.",['TTP'],"March 27, 2023","`wineventlog_security` EventCode=5137 OR (EventCode=5136 AttributeValue!=""New Group Policy Object"" AND (AttributeLDAPDisplayName=displayName OR AttributeLDAPDisplayName=gPCFileSysPath) ) ObjectClass=groupPolicyContainer 
| stats values(AttributeValue) as details values(SubjectUserSid) as User values(ObjectDN) as ObjectDN by ObjectGUID Computer 
| eval GPO_Name = mvindex(details, 0) 
| eval GPO_Path = mvindex(details, 1) 
| fields - details 
| `windows_group_policy_object_created_filter`",['wineventlog_security'],"['_time', 'EventCode', 'AttributeValue', 'AttributeLDAPDisplayName', 'ObjectClass', 'SubjectUserSid', 'ObjectDN', 'ObjectGUID', 'Computer']","Group Policy Objects are created as part of regular administrative operations, filter as needed.","['Active Directory Privilege Escalation', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716', 'https://www.bleepingcomputer.com/news/security/lockbit-ransomware-now-encrypts-windows-domains-using-group-policies/', 'https://www.varonis.com/blog/group-policy-objects']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Domain Policy Modification', 'Group Policy Modification', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/23fb6787-255f-4d5b-9a66-9fd7504032b5/,Windows Disable Windows Event Logging Disable HTTP Logging,"['T1562.002', 'T1562', 'T1505', 'T1505.004']",The following analytic identifies AppCmd.exe being utilized to disable HTTP logging on IIS. Adversaries may perform this action to disable logging and delete the logs so remove any trace or events on disk.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where NOT (Processes.parent_process_name  IN (""msiexec.exe"", ""iissetup.exe"")) Processes.process_name=appcmd.exe Processes.process IN (""*set config*"", ""*httplogging*"",""*dontlog:true*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_windows_event_logging_disable_http_logging_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present only if scripts or Administrators are disabling logging. Filter as needed by parent process or other.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'IIS Components']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/iis_components']","['https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union', 'https://strontic.github.io/xcyclopedia/library/appcmd.exe-055B2B09409F980BF9B5A3969D01E5B2.html']","['Defense Evasion', 'Defense Evasion', 'Disable Windows Event Logging', 'Endpoint', 'IIS Components', 'Impair Defenses', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2418780f-7c3e-4c45-b8b4-996ea850cd49/,Windows System Discovery Using ldap Nslookup,['T1033'],"The following analytic identifies the execution of nslookup.exe tool to get domain information. Nslookup.exe is a command-line tool that can display information to diagnose domain name systems. This Nslookup feature is being abused by Qakbot malware to gather domain information such as SRV service location records, server name and many more.",['Anomaly'],"October 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = ""nslookup.exe"" OR Processes.original_file_name = ""nslookup.exe"") AND Processes.process = ""*_ldap._tcp.dc._msdcs*"" by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `windows_system_discovery_using_ldap_nslookup_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",dministrator may execute this commandline tool for auditing purposes. Filter as needed.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://securelist.com/qakbot-technical-analysis/103931/', 'https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/verify-srv-dns-records-have-been-created']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/2452e632-9e0d-11eb-34ba-acde48001122/,DNS Exfiltration Using Nslookup App,['T1048'],"This search is to detect potential DNS exfiltration using nslookup application. This technique are seen in couple of malware and APT group to exfiltrated collected data in a infected machine or infected network. This detection is looking for unique use of nslookup where it tries to use specific record type, TXT, A, AAAA, that are commonly used by attacker and also the retry parameter which is designed to query C2 DNS multiple tries.",['TTP'],"December 7, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%-retry=%"" OR process_cmd_line LIKE ""%-type=%"" OR process_cmd_line LIKE ""%-q=%"" OR process_cmd_line LIKE ""%-qt=%"" OR process_cmd_line LIKE ""%-querytype=%"") AND process_file_name=""nslookup.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",It is possible for some legitimate administrative utilities to use similar process parameters. Filter as needed.,"['Suspicious DNS Traffic', 'Dynamic DNS', 'Data Exfiltration', 'Command And Control']","['https://research.splunk.com/stories/suspicious_dns_traffic', 'https://research.splunk.com/stories/dynamic_dns', 'https://research.splunk.com/stories/data_exfiltration', 'https://research.splunk.com/stories/command_and_control']","['https://www.mandiant.com/resources/fin7-spear-phishing-campaign-targets-personnel-involved-sec-filings', 'https://www.varonis.com/blog/dns-tunneling', 'https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/']","['Exfiltration', 'Exfiltration Over Alternative Protocol', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/2452e632-9e0d-11eb-bacd-acde48001122/,DNS Exfiltration Using Nslookup App,['T1048'],"this search is to detect potential DNS exfiltration using nslookup application. This technique are seen in couple of malware and APT group to exfiltrated collected data in a infected machine or infected network. This detection is looking for unique use of nslookup where it tries to use specific record type, TXT, A, AAAA, that are commonly used by attacker and also the retry parameter which is designed to query C2 DNS multiple tries.",['TTP'],"April 15, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id values(Processes.parent_process) as parent_process count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""nslookup.exe"" Processes.process = ""*-querytype=*"" OR Processes.process=""*-qt=*"" OR Processes.process=""*-q=*"" OR Processes.process=""-type=*"" OR Processes.process=""*-retry=*"" by Processes.dest Processes.user Processes.process_name Processes.process Processes.parent_process_name  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `dns_exfiltration_using_nslookup_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",admin nslookup usage,"['Suspicious DNS Traffic', 'Dynamic DNS', 'Data Exfiltration', 'Command And Control']","['https://research.splunk.com/stories/suspicious_dns_traffic', 'https://research.splunk.com/stories/dynamic_dns', 'https://research.splunk.com/stories/data_exfiltration', 'https://research.splunk.com/stories/command_and_control']","['https://www.mandiant.com/resources/fin7-spear-phishing-campaign-targets-personnel-involved-sec-filings', 'https://www.varonis.com/blog/dns-tunneling', 'https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/']","['Endpoint', 'Exfiltration', 'Exfiltration Over Alternative Protocol', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/24869767-8579-485d-9a4f-d9ddfd8f0cac/,Process Execution via WMI,['T1047'],"The following analytic identifies WmiPrvSE.exe spawning a process. This typically occurs when a process is instantiated from a local or remote process using wmic.exe. During triage, review parallel processes for suspicious behavior or commands executed. Review the process and command-line spawning from wmiprvse.exe. Contain and remediate the endpoint as necessary.",['TTP'],"March 16, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=WmiPrvSE.exe by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `process_execution_via_wmi_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.user', 'Processes.dest', 'Processes.process_name']","Although unlikely, administrators may use wmi to execute commands for legitimate purposes.",['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],N/A,"['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/24962154-9524-11ec-9333-acde48001122/,Windows MSHTA Inline HTA Execution,"['T1218.005', 'T1218']","The following analytic identifies ""mshta.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""mshta.exe"" and its parent process.",['TTP'],"February 23, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%about%"" OR process_cmd_line LIKE ""%javascript%"" OR process_cmd_line LIKE ""%vbscript%"") AND process_file_name=""mshta.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Mshta', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/25212358-948e-11ec-ad47-acde48001122/,Windows Service Creation Using Registry Entry,['T1574.011'],"The following analytic detects when reg.exe modify registry keys that define Windows services and their configurations in Windows to detect potential threats earlier and mitigate the risks. This detection is made by a Splunk query that searches for specific keywords in the process name, parent process name, user, and process ID. This detection is important because it suggests that an attacker has modified the registry keys that define Windows services and their configurations, which can allow them to maintain access to the system and potentially move laterally within the network. It is a common technique used by attackers to gain persistence on a compromised system and its impact can lead to data theft, ransomware, or other damaging outcomes. False positives can occur since legitimate uses of reg.exe to modify registry keys for Windows services can also trigger this alert. Next steps include reviewing the process and user context of the reg.exe activity and identify any other concurrent processes that might be associated with the attack upon triage.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\SYSTEM\\CurrentControlSet\\Services*"" Registry.registry_value_name = ImagePath) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_creation_using_registry_entry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Third party tools may used this technique to create services but not so common.,"['Active Directory Lateral Movement', 'Suspicious Windows Registry Activities', 'Windows Persistence Techniques', 'Windows Registry Abuse', 'Brute Ratel C4', 'PlugX', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://github.com/redcanaryco/atomic-red-team/blob/36d49de4c8b00bf36054294b4a1fcbab3917d7c5/atomics/T1574.011/T1574.011.md'],"['Defense Evasion', 'Endpoint', 'Persistence', 'Privilege Escalation', 'Services Registry Permissions Weakness', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/25689101-012a-324a-94d3-08301e6c065a/,Windows LOLBin Binary in Non Standard Path,"['T1036', 'T1036.003', 'T1218', 'T1218.004']","The following analytic identifies native living off the land binaries within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site, and excluded common process names (cmd.exe, explorer.exe, csc.exe, hh.exe, regedit.exe) and DotNet binaries. It also does not include the category of OtherMSBinaries.",['Anomaly'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""bitsadmin.exe"", ""certoc.exe"", ""certreq.exe"", ""certutil.exe"", ""cmdkey.exe"", ""cmdl32.exe"", ""cmstp.exe"", ""configsecuritypolicy.exe"", ""control.exe"", ""cscript.exe"", ""datasvcutil.exe"", ""desktopimgdownldr.exe"", ""dfsvc.exe"", ""diantz.exe"", ""diskshadow.exe"", ""dllhost.exe"", ""dnscmd.exe"", ""esentutl.exe"", ""eventvwr.exe"", ""expand.exe"", ""extexport.exe"", ""extrac32.exe"", ""findstr.exe"", ""finger.exe"", ""fltmc.exe"", ""forfiles.exe"", ""ftp.exe"", ""gfxdownloadwrapper.exe"", ""gpscript.exe"", ""imewdbld.exe"", ""ie4uinit.exe"", ""ieexec.exe"", ""ilasm.exe"", ""infdefaultinstall.exe"", ""makecab.exe"", ""mavinject.exe"", ""microsoft.workflow.compiler.exe"", ""mmc.exe"", ""msconfig.exe"", ""msdt.exe"", ""mshta.exe"", ""msiexec.exe"", ""netsh.exe"", ""odbcconf.exe"", ""offlinescannershell.exe"", ""pcalua.exe"", ""pcwrun.exe"", ""pktmon.exe"", ""pnputil.exe"", ""presentationhost.exe"", ""print.exe"", ""printbrm.exe"", ""psr.exe"", ""rasautou.exe"", ""reg.exe"", ""regini.exe"", ""register-cimprovider.exe"", ""regsvr32.exe"", ""replace.exe"", ""rpcping.exe"", ""rundll32.exe"", ""runonce.exe"", ""runscripthelper.exe"", ""sc.exe"", ""schtasks.exe"", ""scriptrunner.exe"", ""settingsynchost.exe"", ""syncappvpublishingserver.exe"", ""ttdinject.exe"", ""tttracer.exe"", ""vbc.exe"", ""verclsid.exe"", ""wab.exe"", ""wlrmdr.exe"", ""wmic.exe"", ""workfolders.exe"", ""wscript.exe"", ""wsreset.exe"", ""wuauclt.exe"", ""xwizard.exe"")) AND (NOT (match(process_file_path, /(?i)(?i)\\windows\\system32/)=true OR match(process_file_path, /(?i)(?i)\\windows\\syswow64/)=true OR match(process_file_path, /(?i)(?i)\\windows\\networkcontrolle/)=true OR match(process_file_path, /(?i)(?i)\\windows\\systemapps/)=true OR match(process_file_path, /(?i)(?i)\\winsxs/)=true OR match(process_file_path, /(?i)(?i)\\microsoft.net/)=true)) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Ransomware', 'WhisperGate']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/whispergate']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'InstallUtil', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/25ae862a-1ac3-11ec-94a1-acde48001122/,Remcos RAT File Creation in Remcos Folder,['T1113'],"This search is to detect file creation in remcos folder in appdata which is the keylog and clipboard logs that will be send to its c2 server. This is really a good TTP indicator that there is a remcos rat in the system that do keylogging, clipboard grabbing and audio recording.",['TTP'],"September 21, 2021","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.dat"") Filesystem.file_path = ""*\\remcos\\*"" by _time Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.file_create_time 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remcos_rat_file_creation_in_remcos_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'file_create_time', 'file_name', 'file_path']",unknown,['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://success.trendmicro.com/dcx/s/solution/1123281-remcos-malware-information?language=en_US', 'https://blog.malwarebytes.com/threat-intelligence/2021/07/remcos-rat-delivered-via-visual-basic/']","['Collection', 'Endpoint', 'Screen Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/25bdb6cb-2e49-4d34-a93c-d6c567c122fe/,Windows Unusual Count Of Users Failed To Authenticate From Process,"['T1110.003', 'T1110']","The following analytic identifies a source process name failing to authenticate with multiple users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4625 generates on domain controllers, member servers, and workstations when an account fails to logon. Logon Type 2 describes an iteractive logon attempt.
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed. This could be a domain controller as well as a member server or workstation.
The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security`  EventCode=4625 Logon_Type=2 ProcessName!=""-"" 
| bucket span=2m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, ProcessName, SubjectUserName, Computer 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by ProcessName, SubjectUserName, Computer 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_users_failed_to_authenticate_from_process_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'ProcessName', 'SubjectUserName', 'TargetUserName', 'Computer']",A process failing to authenticate with multiple users is not a common behavior for legitimate user sessions. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems.,"['Active Directory Password Spraying', 'Insider Threat', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4625', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/26f02e96-c300-11eb-b611-acde48001122/,Detect AzureHound Command-Line Arguments,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","The following analytic identifies the common command-line argument used by AzureHound Invoke-AzureHound. Being the script is FOSS, function names may be modified, but these changes are dependent upon the operator. In most instances the defaults are used. This analytic works to identify the common command-line attributes used. It does not cover the entirety of every argument in order to avoid false positives.",['TTP'],"June 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*invoke-azurehound*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.parent_process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_azurehound_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Unknown.,['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],"['https://attack.mitre.org/software/S0521/', 'https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors', 'https://posts.specterops.io/introducing-bloodhound-4-0-the-azure-update-9b2b26c5e350', 'https://github.com/BloodHoundAD/BloodHound/blob/master/Collectors/AzureHound.ps1']","['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/27187e0e-c221-471d-a7bd-04f698985ff6/,Windows Snake Malware File Modification Crmlog,['T1027'],"The following analytic identfies a .crmlog written to windows\registration. Per the report, typically, this file has been found within the %windows%\Registration directory with the format of <RANDOM_GUID>.<RANDOM_GUID>.crmlog and is decrypted by Snake's kernel driver.",['TTP'],"May 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_path=""*\\windows\\registration\\*"" AND  Filesystem.file_name=""*.crmlog""  by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_snake_malware_file_modification_crmlog_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']",False positives may be present as the file pattern does match legitimate files on disk. It is possible other native tools write the same file name scheme.,['Snake Malware'],['https://research.splunk.com/stories/snake_malware'],['https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF'],"['Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/272df6de-61f1-4784-877c-1fbc3e2d0838/,Remote WMI Command Attempt,['T1047'],"The following analytic identifies usage of wmic.exe spawning a local or remote process, identified by the node switch. During triage, review parallel processes for additional commands executed. Look for any file modifications before and after wmic.exe execution. In addition, identify the remote endpoint and confirm execution or file modifications. Contain and isolate the endpoint as needed.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process=*node* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_wmi_command_attempt_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.parent_process', 'Processes.parent_process_id', 'Processes.process_id']",Administrators may use this legitimately to gather info from remote systems. Filter as needed.,"['Graceful Wipe Out Attack', 'Volt Typhoon', 'Living Off The Land', 'IcedID', 'Suspicious WMI Use', 'CISA AA23-347A']","['https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/suspicious_wmi_use', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1047/T1047.yaml', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/27958de0-2857-43ca-9d4c-b255cf59dcab/,Windows PowerShell Disable HTTP Logging,"['T1562', 'T1562.002', 'T1505', 'T1505.004']",The following analtyic identifies the use of get-WebConfigurationProperty and Set-ItemProperty attempting to disable HTTP logging on windows via PowerShell. Adversaries may perform this action to disable HTTP logging to cover tracks and delete logs on disk.,['TTP'],"December 21, 2022","`powershell` EventCode=4104 ScriptBlockText IN(""*get-WebConfigurationProperty*"",""*Set-ItemProperty*"") AND ScriptBlockText IN (""*httpLogging*"",""*Logfile.enabled*"") AND ScriptBlockText IN (""*dontLog*"", ""*false*"")   
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_disable_http_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']","It is possible administrators or scripts may run these commands, filtering may be required.","['IIS Components', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/iis_components', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']","['https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union']","['Defense Evasion', 'Defense Evasion', 'Disable Windows Event Logging', 'IIS Components', 'Impair Defenses', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web']",['Endpoint']
https://research.splunk.com/endpoint/27c3a83d-cada-47c6-9042-67baf19d2574/,Detect PsExec With accepteula Flag,"['T1021', 'T1021.002']","This search looks for events where PsExec.exe is run with the accepteula flag in the command line. PsExec is a built-in Windows utility that enables you to execute processes on other systems. It is fully interactive for console applications. This tool is widely used for launching interactive command prompts on remote systems. Threat actors leverage this extensively for executing code on compromised systems. If an attacker is running PsExec for the first time, they will be prompted to accept the end-user license agreement (EULA), which can be passed as the argument accepteula within the command line.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_psexec` Processes.process=*accepteula* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)`
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_psexec_with_accepteula_flag_filter`","['security_content_summariesonly', 'process_psexec', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators can leverage PsExec for accessing remote systems and might pass accepteula as an argument if they are running this tool for the first time. However, it is not likely that you'd see multiple occurrences of this event on a machine","['SamSam Ransomware', 'DHS Report TA18-074A', 'HAFNIUM Group', 'DarkSide Ransomware', 'Active Directory Lateral Movement', 'CISA AA22-320A', 'Sandworm Tools', 'Volt Typhoon', 'IcedID', 'BlackByte Ransomware', 'DarkGate Malware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF'],"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/27e600aa-77f8-4614-bc80-2662a67e2f48/,Windows DnsAdmins New Member Added,['T1098'],"The following analytic leverages Event ID 4732 to identify the addition of a new member to the DnsAdmins group within Active Directory. . Members of the DnsAdmin group can manage the DNS service which most of the times runs on the Domain Controller. By abusing legitimate DNS management functionality, a member of the DnsAdmins group can escalate privileges by executing malicious code on a Domain Controller as SYSTEM. Security teams should monitor the modification of the DnsAdmins group and validate the changes are legitimate.",['TTP'],"November 7, 2023","`wineventlog_security` EventCode=4732 TargetUserName=DnsAdmins 
| stats min(_time) as firstTime max(_time) as lastTime values(TargetUserName) as target_users_added values(user) as user by  dest src_user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_dnsadmins_new_member_added_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'TargetUserName', 'SubjectUserName', 'Computer', 'MemberSid', 'TargetUserName']",New members can be added to the DnsAdmins group as part of legitimate administrative tasks. Filter as needed.,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1098/', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/from-dnsadmins-to-system-to-domain-compromise', 'https://www.hackingarticles.in/windows-privilege-escalation-dnsadmins-to-domainadmin/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4732']","['Account Manipulation', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/27ed3e79-6d86-44dd-b9ab-524451c97a7b/,Windows Modify Registry Disable Windows Security Center Notif,['T1112'],The following analytic is to identify a modification in the Windows registry to disable windows center notifications. This Windows Operating System feature is responsible for alerting or notifying user if application or OS need some updates. Adversaries and malwares like Azorult abuse this technique to disable important update notification in compromised host. This anomaly detection is a good pivot to look for further events related to defense evasion and execution.,['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows\\CurrentVersion\\ImmersiveShell\\UseActionCenterExperience*"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disable_windows_security_center_notif_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,"['Azorult', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-remoteassistance-exe-fallowtogethelp', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/28077620-c9f6-11eb-8785-acde48001122/,Recon AVProduct Through Pwh or WMI,['T1592'],"The following analytic identifies suspicious PowerShell script execution via EventCode 4104 performing checks to identify anti-virus products installed on the endpoint. This technique is commonly found in malware and APT events where the adversary will map all running security applications or services. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 (ScriptBlockText = ""*SELECT*"" OR ScriptBlockText = ""*WMIC*"") AND (ScriptBlockText = ""*AntiVirusProduct*"" OR ScriptBlockText = ""*AntiSpywareProduct*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `recon_avproduct_through_pwh_or_wmi_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",network administrator may used this command for checking purposes,"['Qakbot', 'Windows Post-Exploitation', 'Hermetic Wiper', 'Ransomware', 'Prestige Ransomware', 'Malicious PowerShell', 'Data Destruction']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction']","['https://news.sophos.com/en-us/2020/05/12/maze-ransomware-1-year-counting/', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Gather Victim Host Information', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/28179107-099a-464a-94d3-08301e6c055f/,System Process Running from Unexpected Location,['T1036'],"An attacker tries might try to use different version of a system command without overriding original, or they might try to avoid some detection running the process from a different folder. This detection checks that a list of system processes run inside C:\Windows\System32 or C:\Windows\SysWOW64 The list of system processes has been extracted from https://github.com/splunk/security_content/blob/develop/lookups/is_windows_system_file.csv and the original detection https://github.com/splunk/security_content/blob/develop/detections/system_processes_run_from_unexpected_locations.yml",['Anomaly'],"March 24, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""xwizard.exe"", ""xpsrchvw.exe"", ""xcopy.exe"", ""wusa.exe"", ""wuauclt.exe"", ""wuapp.exe"", ""wuapihost.exe"", ""wsqmcons.exe"", ""wsmprovhost.exe"", ""wscript.exe"", ""write.exe"", ""wpr.exe"", ""wpnpinst.exe"", ""wowreg32.exe"", ""wlrmdr.exe"", ""wlanext.exe"", ""wksprt.exe"", ""wkspbroker.exe"", ""wisptis.exe"", ""winver.exe"", ""winrshost.exe"", ""winrs.exe"", ""winresume.exe"", ""winlogon.exe"", ""winload.exe"", ""wininit.exe"", ""wimserv.exe"", ""wifitask.exe"", ""wiawow64.exe"", ""wiaacmgr.exe"", ""whoami.exe"", ""where.exe"", ""wextract.exe"", ""wevtutil.exe"", ""wermgr.exe"", ""wecutil.exe"", ""wbengine.exe"", ""wbadmin.exe"", ""waitfor.exe"", ""w32tm.exe"", ""vssadmin.exe"", ""vmicsvc.exe"", ""verifiergui.exe"", ""verifier.exe"", ""verclsid.exe"", ""vdsldr.exe"", ""vds.exe"", ""userinit.exe"", ""upnpcont.exe"", ""unregmp2.exe"", ""unlodctr.exe"", ""ucsvc.exe"", ""tzutil.exe"", ""tzsync.exe"", ""typeperf.exe"", ""tskill.exe"", ""tsdiscon.exe"", ""tscon.exe"", ""tracerpt.exe"", ""tpmvscmgrsvr.exe"", ""tpmvscmgr.exe"", ""timeout.exe"", ""tcmsetup.exe"", ""taskmgr.exe"", ""tasklist.exe"", ""taskkill.exe"", ""taskhostw.exe"", ""taskhost.exe"", ""taskeng.exe"", ""takeown.exe"", ""tabcal.exe"", ""systray.exe"", ""systemreset.exe"", ""systeminfo.exe"", ""syskey.exe"", ""sxstrace.exe"", ""svchost.exe"", ""subst.exe"", ""srdelayed.exe"", ""spreview.exe"", ""sppsvc.exe"", ""spoolsv.exe"", ""spinstall.exe"", ""sort.exe"", ""snmptrap.exe"", ""smss.exe"", ""slui.exe"", ""sihost.exe"", ""sigverif.exe"", ""shutdown.exe"", ""shrpubw.exe"", ""shadow.exe"", ""setx.exe"", ""setupugc.exe"", ""setupcl.exe"", ""setspn.exe"", ""sethc.exe"", ""sessionmsg.exe"", ""services.exe"", ""secinit.exe"", ""sdiagnhost.exe"", ""sdclt.exe"", ""sdchange.exe"", ""sdbinst.exe"", ""schtasks.exe"", ""sc.exe"", ""sbunattend.exe"", ""rwinsta.exe"", ""runonce.exe"", ""rundll32.exe"", ""runas.exe"", ""rstrui.exe"", ""rrinstaller.exe"", ""rmttpmvscmgrsvr.exe"", ""resmon.exe"", ""reset.exe"", ""replace.exe"", ""repair-bde.exe"", ""relog.exe"", ""rekeywiz.exe"", ""regsvr32.exe"", ""regini.exe"", ""regedt32.exe"", ""reg.exe"", ""recover.exe"", ""recdisc.exe"", ""rdrleakdiag.exe"", ""rdpinput.exe"", ""rdpclip.exe"", ""rasphone.exe"", ""raserver.exe"", ""rasdial.exe"", ""rasautou.exe"", ""qwinsta.exe"", ""quser.exe"", ""query.exe"", ""qprocess.exe"", ""qappsrv.exe"", ""pwlauncher.exe"", ""psr.exe"", ""provtool.exe"", ""proquota.exe"", ""printui.exe"", ""printfilterpipelinesvc.exe"", ""print.exe"", ""prevhost.exe"", ""powercfg.exe"", ""poqexec.exe"", ""plasrv.exe"", ""phoneactivate.exe"", ""perfmon.exe"", ""pcwrun.exe"", ""pcawrk.exe"", ""pcaui.exe"", ""pcalua.exe"", ""p2phost.exe"", ""osk.exe"", ""openfiles.exe"", ""omadmprc.exe"", ""omadmclient.exe"", ""odbcconf.exe"", ""odbcad32.exe"", ""ocsetup.exe"", ""ntprint.exe"", ""ntoskrnl.exe"", ""nslookup.exe"", ""notepad.exe"", ""nltest.exe"", ""newdev.exe"", ""netsh.exe"", ""netiougc.exe"", ""netcfg.exe"", ""netbtugc.exe"", ""net1.exe"", ""net.exe"", ""ndadmin.exe"", ""nbtstat.exe"", ""mtstocom.exe"", ""mstsc.exe"", ""msra.exe"", ""mspaint.exe"", ""msinfo32.exe"", ""msiexec.exe"", ""mshta.exe"", ""msg.exe"", ""msfeedssync.exe"", ""msdtc.exe"", ""msdt.exe"", ""msconfig.exe"", ""mpnotify.exe"", ""mountvol.exe"", ""mobsync.exe"", ""mmc.exe"", ""mfpmp.exe"", ""mctadmin.exe"", ""mcbuilder.exe"", ""mblctr.exe"", ""manage-bde.exe"", ""makecab.exe"", ""lsm.exe"", ""lsass.exe"", ""lpremove.exe"", ""lpksetup.exe"", ""lpkinstall.exe"", ""logoff.exe"", ""logman.exe"", ""logagent.exe"", ""lodctr.exe"", ""licensingdiag.exe"", ""label.exe"", ""ktmutil.exe"", ""ksetup.exe"", ""klist.exe"", ""isoburn.exe"", ""iscsicpl.exe"", ""iscsicli.exe"", ""irftp.exe"", ""ipconfig.exe"", ""immersivetpmvscmgrsvr.exe"", ""iexpress.exe"", ""ieetwcollector.exe"", ""ieunatt.exe"", ""ie4uinit.exe"", ""icsunattend.exe"", ""icardagt.exe"", ""icacls.exe"", ""hwrreg.exe"", ""hwrcomp.exe"", ""help.exe"", ""hdwwiz.exe"", ""grpconv.exe"", ""gpupdate.exe"", ""gpscript.exe"", ""gpresult.exe"", ""getmac.exe"", ""fveprompt.exe"", ""fvenotify.exe"", ""ftp.exe"", ""fsutil.exe"", ""fsquirt.exe"", ""fsavailux.exe"", ""forfiles.exe"", ""fontview.exe"", ""fontdrvhost.exe"", ""fodhelper.exe"", ""fltmc.exe"", ""fixmapi.exe"", ""finger.exe"", ""findstr.exe"", ""find.exe"", ""fhmanagew.exe"", ""fc.exe"", ""extrac32.exe"", ""expand.exe"", ""eventvwr.exe"", ""eventcreate.exe"", ""eudcedit.exe"", ""esentutl.exe"", ""embeddedapplauncher.exe"", ""efsui.exe"", ""easinvoker.exe"", ""dxdiag.exe"", ""dwm.exe"", ""dvdupgrd.exe"", ""dvdplay.exe"", ""dstokenclean.exe"", ""dsregcmd.exe"", ""drvinst.exe"", ""drvcfg.exe"", ""driverquery.exe"", ""dpnsvr.exe"", ""dpapimig.exe"", ""doskey.exe"", ""dnscacheugc.exe"", ""dmclient.exe"", ""dmcfghost.exe"", ""dmcertinst.exe"", ""dllhst3g.exe"", ""dllhost.exe"", ""djoin.exe"", ""dispdiag.exe"", ""diskraid.exe"", ""diskperf.exe"", ""diskpart.exe"", ""dinotify.exe"", ""diantz.exe"", ""dialer.exe"", ""dfrgui.exe"", ""ddodiag.exe"", ""dcomcnfg.exe"", ""dccw.exe"", ""dashost.exe"", ""cttunesvr.exe"", ""cttune.exe"", ""ctfmon.exe"", ""csrss.exe"", ""cscript.exe"", ""credwiz.exe"", ""convert.exe"", ""control.exe"", ""consent.exe"", ""conhost.exe"", ""compact.exe"", ""comp.exe"", ""colorcpl.exe"", ""cofire.exe"", ""cmstp.exe"", ""cmmon32.exe"", ""cmdl32.exe"", ""cmdkey.exe"", ""cmd.exe"", ""clip.exe"", ""cliconfg.exe"", ""cleanmgr.exe"", ""cipher.exe"", ""choice.exe"", ""chkntfs.exe"", ""chkdsk.exe"", ""chgusr.exe"", ""chgport.exe"", ""chglogon.exe"", ""charmap.exe"", ""changepk.exe"", ""change.exe"", ""certutil.exe"", ""certreq.exe"", ""cdpreference.exe"", ""calc.exe"", ""cacls.exe"", ""bthudtask.exe"", ""browser_broker.exe"", ""bridgeunattend.exe"", ""bootsect.exe"", ""bootim.exe"", ""bootcfg.exe"", ""bitsadmin.exe"", ""bdeunlock.exe"", ""bdechangepin.exe"", ""bcdedit.exe"", ""bcdboot.exe"", ""bcastdvr.exe"", ""backgroundtaskhost.exe"", ""baaupdate.exe"", ""autofmt.exe"", ""autoconv.exe"", ""autochk.exe"", ""auditpol.exe"", ""audiodg.exe"", ""attrib.exe"", ""at.exe"", ""appidpolicyconverter.exe"", ""appidcertstorecheck.exe"", ""alg.exe"", ""aitstatic.exe"", ""aitagent.exe"", ""acu.exe"", ""wpcmon.exe"", ""workfolders.exe"", ""windowsupdateelevatedinstaller.exe"", ""windowsanytimeupgradeui.exe"", ""windowsanytimeupgraderesults.exe"", ""windowsanytimeupgrade.exe"", ""windowsactiondialog.exe"", ""windows.media.backgroundplayback.exe"", ""winsat.exe"", ""werfaultsecure.exe"", ""werfault.exe"", ""webcache.exe"", ""wallpaperhost.exe"", ""wwahost.exe"", ""wudfhost.exe"", ""wsreset.exe"", ""wsmanhttpconfig.exe"", ""wscollect.exe"", ""wpdshextautoplay.exe"", ""wmpdmc.exe"", ""wfs.exe"", ""vaultsysui.exe"", ""vaultcmd.exe"", ""vssvc.exe"", ""utilman.exe"", ""usoclient.exe"", ""useraccountcontrolsettings.exe"", ""useraccountbroker.exe"", ""upgraderesultsui.exe"", ""ui0detect.exe"", ""tswpfwrp.exe"", ""tpminit.exe"", ""tokenbrokercookies.exe"", ""thumbnailextractionhost.exe"", ""taskmgr.exe"", ""tapiunattend.exe"", ""tswbprxy.exe"", ""tstheme.exe"", ""tracert.exe"", ""tcpsvcs.exe"", ""systemsettingsremovedevice.exe"", ""systemsettingsbroker.exe"", ""systemsettingsadminflows.exe"", ""systempropertiesremote.exe"", ""systempropertiesprotection.exe"", ""systempropertiesperformance.exe"", ""systempropertieshardware.exe"", ""systempropertiesdataexecutionprevention.exe"", ""systempropertiescomputername.exe"", ""systempropertiesadvanced.exe"", ""sysreseterr.exe"", ""synchost.exe"", ""stikynot.exe"", ""srtasks.exe"", ""sppextcomobj.exe"", ""spaceagent.exe"", ""soundrecorder.exe"", ""snippingtool.exe"", ""sndvol.exe"", ""smartscreensettings.exe"", ""slidetoshutdown.exe"", ""settingsynchost.exe"", ""setieinstalleddate.exe"", ""sensordataservice.exe"", ""secedit.exe"", ""searchprotocolhost.exe"", ""searchindexer.exe"", ""searchfilterhost.exe"", ""sihclient.exe"", ""runtimebroker.exe"", ""runlegacycplelevated.exe"", ""rpcping.exe"", ""rmclient.exe"", ""remoteposworker.exe"", ""relpost.exe"", ""registeriepkeys.exe"", ""register-cimprovider.exe"", ""recoverydrive.exe"", ""reagentc.exe"", ""rdpsauachelper.exe"", ""rdpsaproxy.exe"", ""rdpsa.exe"", ""route.exe"", ""rmactivate_ssp_isv.exe"", ""rmactivate_ssp.exe"", ""rmactivate_isv.exe"", ""rmactivate.exe"", ""rdspnf.exe"", ""proximityuxhost.exe"", ""printisolationhost.exe"", ""printdialoghost3d.exe"", ""printdialoghost.exe"", ""printbrmui.exe"", ""presentationsettings.exe"", ""presentationhost.exe"", ""pnputil.exe"", ""pnpunattend.exe"", ""pkgmgr.exe"", ""pickerhost.exe"", ""passwordonwakesettingflyout.exe"", ""ping.exe"", ""pathping.exe"", ""optionalfeatures.exe"", ""openwith.exe"", ""networkuxbroker.exe"", ""netplwiz.exe"", ""netproj.exe"", ""netevtfwdr.exe"", ""netcfgnotifyobjecthost.exe"", ""narrator.exe"", ""netstat.exe"", ""napstat.exe"", ""musnotificationux.exe"", ""musnotification.exe"", ""multidigimon.exe"", ""muiunattend.exe"", ""msspellcheckinghost.exe"", ""mpsigstub.exe"", ""migautoplay.exe"", ""mdsched.exe"", ""mdres.exe"", ""mbaeparsertask.exe"", ""magnify.exe"", ""mschedexe.exe"", ""mrt.exe"", ""mrinfo.exe"", ""mdmappinstaller.exe"", ""mdmagent.exe"", ""mdeserver.exe"", ""lsaiso.exe"", ""logonui.exe"", ""lockscreencontentserver.exe"", ""lockapphost.exe"", ""locator.exe"", ""locationnotifications.exe"", ""locationnotificationwindows.exe"", ""licensingui.exe"", ""licensemanagershellext.exe"", ""legacynetuxhost.exe"", ""launchwinapp.exe"", ""launchtm.exe"", ""languagecomponentsinstallercomhandler.exe"", ""installagent.exe"", ""infdefaultinstall.exe"", ""icsentitlementhost.exe"", ""hostname.exe"", ""gettingstarted.exe"", ""genvalobj.exe"", ""gamepanel.exe"", ""fondue.exe"", ""filehistory.exe"", ""fxsunatd.exe"", ""fxssvc.exe"", ""fxscover.exe"", ""ehstorauthn.exe"", ""easeofaccessdialog.exe"", ""easpoliciesbrokerhost.exe"", ""eap3host.exe"", ""eosnotify.exe"", ""edpcleanup.exe"", ""dxpserver.exe"", ""dsmusertask.exe"", ""dpiscaling.exe"", ""dmomacpmo.exe"", ""dmnotificationbroker.exe"", ""displayswitch.exe"", ""dism.exe"", ""disksnapshot.exe"", ""deviceproperties.exe"", ""devicepairingwizard.exe"", ""deviceenroller.exe"", ""deviceeject.exe"", ""devicedisplayobjectprovider.exe"", ""defrag.exe"", ""dataexchangehost.exe"", ""dwwin.exe"", ""dfdwiz.exe"", ""credentialuibroker.exe"", ""computerdefaults.exe"", ""compattelrunner.exe"", ""compmgmtlauncher.exe"", ""cloudstoragewizard.exe"", ""cloudnotifications.exe"", ""cloudexperiencehostbroker.exe"", ""clipup.exe"", ""checknetisolation.exe"", ""certenrollctrl.exe"", ""castsrv.exe"", ""camerasettingsuihost.exe"", ""bytecodegenerator.exe"", ""bitlockerwizardelev.exe"", ""bitlockerwizard.exe"", ""bitlockerdeviceencryption.exe"", ""bdeunlockwizard.exe"", ""bdeuisrv.exe"", ""bdehdcfg.exe"", ""backgroundtransferhost.exe"", ""axinstui.exe"", ""autoworkplace.exe"", ""authhost.exe"", ""atbroker.exe"", ""applicationframehost.exe"", ""adaptertroubleshooter.exe"", ""arp.exe"")) AND (NOT match(process_file_path, /(?i)\\windows\\syswow64/)=true) AND (NOT match(process_file_path, /(?i)\\windows\\system32/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",None,"['Windows Defense Evasion Tactics', 'Masquerading - Rename System Utilities']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities']",N/A,"['Defense Evasion', 'Masquerading', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/2820f032-19eb-497e-8642-25b04a880359/,LOLBAS With Network Traffic,"['T1105', 'T1567', 'T1218']","The following analytic identifies LOLBAS with network traffic. When adversaries abuse LOLBAS they are often used to download malicious code or executables. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like downloading malicious code. Looking for these process can help defenders identify lateral movement, command-and-control, or exfiltration activies.",['TTP'],"December 9, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Network_Traffic.All_Traffic where (All_Traffic.app IN (""*Regsvcs.exe"", ""*\\Ftp.exe"", ""*OfflineScannerShell.exe"", ""*Rasautou.exe"", ""*Schtasks.exe"", ""*Xwizard.exe"", ""*Pnputil.exe"", ""*Atbroker.exe"", ""*Pcwrun.exe"", ""*Ttdinject.exe"", ""*Mshta.exe"", ""*Bitsadmin.exe"", ""*Certoc.exe"", ""*Ieexec.exe"", ""*Microsoft.Workflow.Compiler.exe"", ""*Runscripthelper.exe"", ""*Forfiles.exe"", ""*Msbuild.exe"", ""*Register-cimprovider.exe"", ""*Tttracer.exe"", ""*Ie4uinit.exe"", ""*Bash.exe"", ""*Hh.exe"", ""*SettingSyncHost.exe"", ""*Cmstp.exe"", ""*Stordiag.exe"", ""*Scriptrunner.exe"", ""*Odbcconf.exe"", ""*Extexport.exe"", ""*Msdt.exe"", ""*WorkFolders.exe"", ""*Diskshadow.exe"", ""*Mavinject.exe"", ""*Regasm.exe"", ""*Gpscript.exe"", ""*Regsvr32.exe"", ""*Msiexec.exe"", ""*Wuauclt.exe"", ""*Presentationhost.exe"", ""*Wmic.exe"", ""*Runonce.exe"", ""*Syncappvpublishingserver.exe"", ""*Verclsid.exe"", ""*Infdefaultinstall.exe"", ""*Installutil.exe"", ""*Netsh.exe"", ""*Wab.exe"", ""*Dnscmd.exe"", ""*\\At.exe"", ""*Pcalua.exe"", ""*Msconfig.exe"", ""*makecab.exe"", ""*cscript.exe"", ""*notepad.exe"", ""*\\cmd.exe"", ""*certutil.exe"", ""*\\powershell.exe"", ""*powershell_ise.exe"")) by All_Traffic.app,All_Traffic.src,All_Traffic.src_ip,All_Traffic.user,All_Traffic.dest,All_Traffic.dest_ip 
| `drop_dm_object_name(All_Traffic)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rex field=app "".*\\\(?<process_name>.*)$"" 
| rename app as process 
| `lolbas_with_network_traffic_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.dest', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'All_Traffic.app', 'All_Traffic.src', 'All_Traffic.src_ip', 'All_Traffic.dest', 'All_Traffic.dest_ip', 'All_Traffic.process_id']","Legitmate usage of internal automation or scripting, espically powershell.exe internal to internal or logon scripts. It may be necessary to omit internal IP ranges if extremely noisy. ie NOT dest_ip IN (""10.0.0.0/8"",""172.16.0.0/12"",""192.168.0.0/16"",""170.98.0.0/16"",""0:0:0:0:0:0:0:1"")",['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://lolbas-project.github.io/#', 'https://www.sans.org/presentations/lolbin-detection-methods-seven-common-attacks-revealed/']","['Command And Control', 'Defense Evasion', 'Exfiltration', 'Exfiltration Over Web Service', 'Ingress Tool Transfer', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/2827c0fd-e1be-4868-ae25-59d28e0f9d4f/,Suspicious wevtutil Usage,"['T1070.001', 'T1070']","The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, trace or system event logs.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wevtutil.exe Processes.process IN (""* cl *"", ""*clear-log*"") (Processes.process=""*System*"" OR Processes.process=""*Security*"" OR Processes.process=""*Setup*"" OR Processes.process=""*Application*"" OR Processes.process=""*trace*"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `suspicious_wevtutil_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",The wevtutil.exe application is a legitimate Windows event log utility. Administrators may use it to manage Windows event logs.,"['Windows Log Manipulation', 'Ransomware', 'Rhysida Ransomware', 'Clop Ransomware', 'CISA AA23-347A']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070.001/T1070.001.md'],"['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/28c81306-5c47-11ec-bfea-acde48001122/,Windows Java Spawning Shells,"['T1190', 'T1133']","The following analytic identifies the process name of java.exe and w3wp.exe spawning a Windows shell. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell). The shells included in the macro are ""cmd.exe"", ""powershell.exe"". Upon triage, review parallel processes and command-line arguments to determine legitimacy.",['TTP'],"January 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=java.exe OR Processes.parent_process_name=w3wp.exe `windows_shells` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_java_spawning_shells_filter`","['security_content_summariesonly', 'windows_shells', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Filtering may be required on internal developer build systems or classify assets as web facing and restrict the analytic based on that.,"['Log4Shell CVE-2021-44228', 'SysAid On-Prem Software CVE-2023-47246 Vulnerability']","['https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/sysaid_on-prem_software_cve-2023-47246_vulnerability']","['https://blog.netlab.360.com/ten-families-of-malicious-samples-are-spreading-using-the-log4j2-vulnerability-now/', 'https://gist.github.com/olafhartong/916ebc673ba066537740164f7e7e1d72', 'https://www.horizon3.ai/manageengine-cve-2022-47966-technical-deep-dive/', 'https://github.com/horizon3ai/CVE-2022-47966/blob/3a51c6b72ebbd87392babd955a8fbeaee2090b35/CVE-2022-47966.py', 'https://blog.viettelcybersecurity.com/saml-show-stopper/', 'https://www.horizon3.ai/manageengine-cve-2022-47966-iocs/']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/28e06670-43df-11ec-a569-acde48001122/,Windows InstallUtil URL in Command Line,"['T1218.004', 'T1218']","The following analytic identifies the Windows InstallUtil.exe binary passing a HTTP request on the command-line. This technique may be used to download and execute code while bypassing application control. 
When InstallUtil.exe is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like Cmd.exe, PowerShell.exe or Explorer.exe. 
If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. 
During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",['TTP'],"November 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_installutil` Processes.process IN (""*http://*"",""*https://*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_installutil_url_in_command_line_filter`","['security_content_summariesonly', 'process_installutil', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives should be present as InstallUtil is not typically used to download remote files. Filter as needed based on Developers requirements.,"['Signed Binary Proxy Execution InstallUtil', 'Living Off The Land']","['https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md', 'https://gist.github.com/DanielRTeixeira/0fd06ec8f041f34a32bf5623c6dd479d']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/29228ab4-0762-11ec-94aa-acde48001122/,Exchange PowerShell Abuse via SSRF,"['T1190', 'T1133']","This analytic identifies suspicious behavior related to ProxyShell against on-premise Microsoft Exchange servers. This analytic has been replaced by GUID d436f9e7-0ee7-4a47-864b-6dea2c4e2752 which utilizes the Web Datamodel. 
Modification of this analytic is requried to ensure fields are mapped accordingly. 
A suspicious event will have PowerShell, the method POST and autodiscover.json. This is indicative of accessing PowerShell on the back end of Exchange with SSRF. 
An event will look similar to POST /autodiscover/autodiscover.json a=dsxvu@fnsso.flq/powershell/?X-Rps-CAT=VgEAVAdXaW5kb3d... (abbreviated) 
Review the source attempting to perform this activity against your environment. In addition, review PowerShell logs and access recently granted to Exchange roles.",['TTP'],"July 10, 2023","`exchange` c_uri=""*//autodiscover*"" cs_uri_query=""*PowerShell*"" cs_method=""POST"" 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, cs_uri_query, cs_method, c_uri 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `exchange_powershell_abuse_via_ssrf_filter`","['exchange', 'security_content_ctime']","['_time', 'dest', 'cs_uri_query', 'cs_method', 'c_uri']","Limited false positives, however, tune as needed.","['ProxyShell', 'BlackByte Ransomware', 'ProxyNotShell']","['https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/proxynotshell']","['https://github.com/GossiTheDog/ThreatHunting/blob/master/AzureSentinel/Exchange-Powershell-via-SSRF', 'https://blog.orange.tw/2021/08/proxylogon-a-new-attack-surface-on-ms-exchange-part-1.html', 'https://peterjson.medium.com/reproducing-the-proxyshell-pwn2own-exploit-49743a4ea9a1']","['Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/295ca9ed-e97b-4520-90f7-dfb6469902e1/,Windows DLL Side-Loading Process Child Of Calc,"['T1574.002', 'T1574']",The following analytic identifies the suspicious child process of calc.exe due to dll side loading technique to execute another executable. This technique was seen in qakbot malware that uses dll side loading technique to calc applications to load its malicious dll code. The malicious dll that abuses dll side loading technique will load the actual qakbot loader dll using regsvr32.exe application. This TTP is a good indicator of qakbot since the calc.exe will not load other child processes aside from win32calc.exe.,['Anomaly'],"October 20, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""calc.exe"")  AND Processes.process_name != ""win32calc.exe"" by Processes.parent_process Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_dll_side_loading_process_child_of_calc_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot'],"['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/29b99201-723c-4118-847a-db2b3d3fb8ea/,GetWmiObject Ds Computer with PowerShell Script Block,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-WmiObject commandlet. The DS_Computer class parameter leverages WMI to query for all domain computers. Red Teams and adversaries may leverage this commandlet to enumerate domain computers for situational awareness and Active Directory Discovery.,['TTP'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText=*Get-WmiObject* AND ScriptBlockText=""*namespace root\\directory\\ldap*"" AND ScriptBlockText=""*class ds_computer*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getwmiobject_ds_computer_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2a048c14-4634-11ec-a618-3e22fbd008af/,Remote Process Instantiation via WMI and PowerShell Script Block,['T1047'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Invoke-WmiMethod commandlet with arguments utilized to start a process on a remote endpoint by abusing WMI. Red Teams and adversaries alike may abuse WMI and this commandlet for lateral movement and remote code execution.,['TTP'],"November 15, 2022","`powershell` EventCode=4104 ScriptBlockText=""*Invoke-WmiMethod*"" AND (ScriptBlockText=""*-CN*"" OR ScriptBlockText=""*-ComputerName*"") AND ScriptBlockText=""*-Class Win32_Process*"" AND ScriptBlockText=""*-Name create*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID
|  `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_wmi_and_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']","Administrators may leverage WWMI and powershell.exe to start a process on remote systems, but this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1047/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/invoke-wmimethod?view=powershell-5.1']","['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/2a371608-331d-4034-ae2c-21dda8f1d0ec/,Processes Tapping Keyboard Events,[],"This search looks for processes in an MacOS system that is tapping keyboard events in MacOS, and essentially monitoring all keystrokes made by a user. This is a common technique used by RATs to log keystrokes from a victim, although it can also be used by legitimate processes like Siri to react on human input",['TTP'],"January 25, 2019","| from datamodel Alerts.Alerts 
| search app=osquery:results name=pack_osx-attacks_Keyboard_Event_Taps 
| rename columns.cmdline as cmd, columns.name as process_name, columns.pid as process_id
| dedup host,process_name 
| table host,process_name, cmd, process_id 
| `processes_tapping_keyboard_events_filter`","['_time', 'app', 'name', 'columns.cmdline', 'columns.name', 'columns.pid', 'host']","['_time', 'app', 'name', 'columns.cmdline', 'columns.name', 'columns.pid', 'host']","There might be some false positives as keyboard event taps are used by processes like Siri and Zoom video chat, for some good examples of processes to exclude please see this comment.",['ColdRoot MacOS RAT'],['https://research.splunk.com/stories/coldroot_macos_rat'],N/A,"['Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2acf0e19-4149-451c-a3f3-39cd3c77e37d/,Windows System Binary Proxy Execution Compiled HTML File Decompile,"['T1218.001', 'T1218']","The following analytic identifies the decompile parameter with the HTML Help application, HH.exe. This is a uncommon command to see ran and behavior. Most recently this was seen in a APT41 campaign where a CHM file was delivered and a script inside used a technique for running an arbitrary command in a CHM file via an ActiveX object. This unpacks an HTML help file to a specified path for launching the next stage.",['TTP'],"August 31, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_hh` Processes.process=*-decompile* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_binary_proxy_execution_compiled_html_file_decompile_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_hh']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://attack.mitre.org/techniques/T1218/001/', 'https://docs.microsoft.com/en-us/windows/win32/api/htmlhelp/nf-htmlhelp-htmlhelpa']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/2b85aa3d-f5f6-4c2e-a081-a09f6e1c2e40/,Suspicious Event Log Service Behavior,"['T1070', 'T1070.001']","The following analytic utilizes Windows Event ID 1100 to identify when Windows event log service is shutdown. Note that this is a voluminous analytic that will require tuning or restricted to specific endpoints based on criticality. This event generates every time Windows Event Log service has shut down. It also generates during normal system shutdown. During triage, based on time of day and user, determine if this was planned. If not planned, follow through with reviewing parallel alerts and other data sources to determine what else may have occurred.",['TTP'],"June 17, 2021","(`wineventlog_security` EventCode=1100) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest Message EventCode 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_event_log_service_behavior_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'dest']",It is possible the Event Logging service gets shut down due to system errors or legitimately administration tasks. Filter as needed.,"['Windows Log Manipulation', 'Ransomware', 'Clop Ransomware']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware']","['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-1100', 'https://www.ired.team/offensive-security/defense-evasion/disabling-windows-event-logs-by-suspending-eventlog-service-threads', 'https://attack.mitre.org/techniques/T1070/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070.001/T1070.001.md']","['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2bb1a362-7aa8-444a-92ed-1987e8da83e1/,Windows Command Shell DCRat ForkBomb Payload,"['T1059.003', 'T1059']","The following analytic identifies DCRat ""forkbomb"" payload feature. This technique was seen in dark crystal RAT backdoor capabilities where it will execute several cmd child process executing ""notepad.exe & pause"". The following analytic detects the multiple cmd.exe and child process notepad.exe  execution using batch script in the targeted host within 30s timeframe. this TTP can be a good pivot to check DCRat infection.",['TTP'],"July 28, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.parent_process_id) as parent_process_id values(Processes.process_id) as process_id dc(Processes.parent_process_id) as parent_process_id_count dc(Processes.process_id) as process_id_count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name= ""cmd.exe"" (Processes.process_name = ""notepad.exe"" OR Processes.original_file_name= ""notepad.exe"") Processes.parent_process = ""*.bat*"" by  Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.parent_process Processes.dest Processes.user  _time span=30s 
| where parent_process_id_count>= 10 AND process_id_count >=10 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_command_shell_dcrat_forkbomb_payload_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['DarkCrystal RAT'],['https://research.splunk.com/stories/darkcrystal_rat'],"['https://cert.gov.ua/article/405538', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.dcrat', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/2bcccd20-fc2b-11eb-8d22-acde48001122/,UAC Bypass With Colorui COM Object,"['T1218', 'T1218.003']",This search is to detect a possible uac bypass using the colorui.dll COM Object. this technique was seen in so many malware and ransomware like lockbit where it make use of the colorui.dll COM CLSID to bypass UAC.,['TTP'],"August 13, 2021","`sysmon` EventCode=7 ImageLoaded=""*\\colorui.dll"" process_name != ""colorcpl.exe"" NOT(Image IN(""*\\windows\\*"", ""*\\program files*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest user_id EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `uac_bypass_with_colorui_com_object_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",not so common. but 3rd part app may load this dll.,"['Ransomware', 'LockBit Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/lockbit_ransomware']",['https://news.sophos.com/en-us/2020/04/24/lockbit-ransomware-borrows-tricks-to-keep-up-with-revil-and-maze/'],"['CMSTP', 'Defense Evasion', 'Defense Evasion', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/2c365e57-4414-4540-8dc0-73ab10729996/,Detect Credential Dumping through LSASS access,"['T1003.001', 'T1003']","The following analytic detects the reading of lsass memory, which is consistent with credential dumping. Reading lsass memory is a common technique used by attackers to steal credentials from the Windows operating system. The detection is made by monitoring the sysmon events and filtering for specific access permissions (0x1010 and 0x1410) on the lsass.exe process helps identify potential instances of credential dumping.The detection is important because it suggests that an attacker is attempting to extract credentials from the lsass memory, which can lead to unauthorized access, data breaches, and compromise of sensitive information. Credential dumping is often a precursor to further attacks, such as lateral movement, privilege escalation, or data exfiltration. False positives can occur due to legitimate actions that involve accessing lsass memory. Therefore, extensive triage and investigation are necessary to differentiate between malicious and benign activities.",['TTP'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe (GrantedAccess=0x1010 OR GrantedAccess=0x1410) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, SourceImage, SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_credential_dumping_through_lsass_access_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'TargetImage', 'GrantedAccess', 'dest', 'SourceImage', 'SourceProcessId', 'TargetImage', 'TargetProcessId']","The activity may be legitimate. Other tools can access lsass for legitimate reasons, and it's possible this event could be generated in those cases. In these cases, false positives should be fairly obvious and you may need to tweak the search to eliminate noise.","['Detect Zerologon Attack', 'CISA AA23-347A', 'Credential Dumping']","['https://research.splunk.com/stories/detect_zerologon_attack', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/credential_dumping']",N/A,"['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2c853856-a140-11eb-a5b5-acde48001122/,GPUpdate with no Command Line Arguments with Network,['T1055'],"The following analytic identifies gpupdate.exe with no command line arguments and with a network connection. It is unusual for gpupdate.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. gpupdate.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=gpupdate.exe by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(gpupdate\.exe.{0,4}$)""
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as C2 ] 
| table _time user dest parent_process_name process_name process_path process process_id dest_port C2 
| `gpupdate_with_no_command_line_arguments_with_network_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'EventID', 'process_name', 'process_id', 'parent_process_name', 'dest_port', 'process_path']",Limited false positives may be present in small environments. Tuning may be required based on parent process.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://raw.githubusercontent.com/xx0hcd/Malleable-C2-Profiles/0ef8cf4556e26f6d4190c56ba697c2159faa5822/crimeware/trick_ryuk.profile', 'https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/']","['Defense Evasion', 'Endpoint', 'Network_Traffic', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2cf5cc25-f39a-436d-a790-4857e5995ede/,Network Connection Discovery With Netstat,['T1049'],This analytic looks for the execution of netstat.exe with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use netstat.exe for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""netstat.exe"") (Processes.process=*-a*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_netstat_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Volt Typhoon', 'Active Directory Discovery', 'Prestige Ransomware', 'Windows Post-Exploitation', 'Qakbot', 'CISA AA22-277A', 'CISA AA23-347A', 'PlugX']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/plugx']","['https://attack.mitre.org/techniques/T1049/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/2d10095e-05ae-11ec-8fdf-acde48001122/,Exchange PowerShell Module Usage,"['T1059', 'T1059.001']","The following analytic identifies the usage of Exchange PowerShell modules that were recently used for a proof of concept related to ProxyShell. Adversaries may abuse a limited set of PwSh Modules related to Exchange once gained access via ProxyShell or ProxyNotShell.
Inherently, the usage of the modules is not malicious, but reviewing parallel processes, and user, of the session will assist with determining the intent. 
Module - New-MailboxExportRequest will begin the process of exporting contents of a primary mailbox or archive to a .pst file. 
Module - New-managementroleassignment can assign a management role to a management role group, management role assignment policy, user, or universal security group (USG). 
Module - New-MailboxSearch cmdlet to create a mailbox search and either get an estimate of search results, place search results on In-Place Hold or copy them to a Discovery mailbox. You can also place all contents in a mailbox on hold by not specifying a search query, which accomplishes similar results as Litigation Hold. \ Module - Get-Recipient cmdlet to view existing recipient objects in your organization. This cmdlet returns all mail-enabled objects (for example, mailboxes, mail users, mail contacts, and distribution groups).",['TTP'],"July 10, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*New-MailboxExportRequest*"", ""*New-ManagementRoleAssignment*"", ""*New-MailboxSearch*"", ""*Get-Recipient*"", ""Search-Mailbox"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
|rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `exchange_powershell_module_usage_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['ProxyNotShell', 'CISA AA22-277A', 'ProxyShell', 'BlackByte Ransomware', 'CISA AA22-264A']","['https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cisa_aa22-264a']","['https://docs.microsoft.com/en-us/powershell/module/exchange/new-mailboxexportrequest?view=exchange-ps', 'https://docs.microsoft.com/en-us/powershell/module/exchange/new-managementroleassignment?view=exchange-ps', 'https://blog.orange.tw/2021/08/proxyshell-a-new-attack-surface-on-ms-exchange-part-3.html', 'https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell', 'https://thedfirreport.com/2021/11/15/exchange-exploit-leads-to-domain-wide-ransomware/', 'https://www.cisa.gov/uscert/ncas/alerts/aa22-264a', 'https://learn.microsoft.com/en-us/powershell/module/exchange/new-mailboxsearch?view=exchange-ps', 'https://learn.microsoft.com/en-us/powershell/module/exchange/get-recipient?view=exchange-ps', 'https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2d9fc90c-f11f-11eb-9300-acde48001122/,Office Application Spawn Regsvr32 process,"['T1566', 'T1566.001']",this detection was designed to identifies suspicious spawned process of known MS office application due to macro or malicious code. this technique can be seen in so many malware like IcedID that used MS office as its weapon or attack vector to initially infect the machines.,['TTP'],"February 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""winword.exe"" OR Processes.parent_process_name = ""excel.exe"" OR Processes.parent_process_name = ""powerpnt.exe"" OR Processes.parent_process_name = ""outlook.exe"" OR Processes.parent_process_name = ""onenote.exe"" OR Processes.parent_process_name = ""onenotem.exe"" OR Processes.parent_process_name = ""onenoteviewer.exe"" OR Processes.parent_process_name = ""onenoteim.exe"" OR Processes.parent_process_name=""msaccess.exe"") `process_regsvr32` by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `office_application_spawn_regsvr32_process_filter`","['security_content_summariesonly', 'process_regsvr32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['IcedID', 'Qakbot']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/qakbot']","['https://www.joesandbox.com/analysis/380662/0/html', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2dbeee3a-f067-11eb-96c0-acde48001122/,Rundll32 Create Remote Thread To A Process,['T1055'],This analytic identifies the suspicious Remote Thread execution of rundll32.exe to any process. This technique was seen in IcedID malware to execute its malicious code in normal process for defense evasion and to steal sensitive information in the compromised host.,['TTP'],"July 29, 2021","`sysmon` EventCode=8 SourceImage = ""*\\rundll32.exe"" TargetImage = ""*.exe"" 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage TargetProcessId SourceProcessId StartAddress EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_create_remote_thread_to_a_process_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest']",unknown,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://www.joesandbox.com/analysis/380662/0/html'],"['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2dd719ac-3021-11ec-97b4-acde48001122/,Disable Defender BlockAtFirstSeen Feature,"['T1562.001', 'T1562']","This analytic is intended to detect a suspicious modification of the Windows registry to disable a Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV, specifically the BlockAtFirstSeen feature where it blocks suspicious files the first time seen on the host.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Microsoft\\Windows Defender\\SpyNet*"" Registry.registry_value_name = DisableBlockAtFirstSeen Registry.registry_value_data = 0x00000001) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_blockatfirstseen_feature_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['Azorult', 'CISA AA23-347A', 'IcedID', 'Windows Registry Abuse']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2e58a4ff-398f-42f4-8fd0-e01ebfe2a8ce/,Linux Node Privilege Escalation,"['T1548.003', 'T1548']","Node.js is a back-end JavaScript runtime environment that is open-source, cross-platform, runs on the V8 engine, and executes JavaScript code outside of a web browser. It was created to help create scalable network applications. If the binary is allowed to run as superuser by sudo, it does not drop the elevated privileges and may be used to access the file system, escalate or maintain privileged access.",['Anomaly'],"July 31, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*sudo*node*"" AND Processes.process=""*-e*"" AND Processes.process=""*child_process.spawn*"" AND Processes.process=""*stdio*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_node_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/docker/', 'https://en.wikipedia.org/wiki/Node.js']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/2e65afe0-9a75-4487-bd87-ada9a9f1b9af/,Windows Credentials from Password Stores Chrome Extension Access,['T1012'],"This analytic focuses on identifying non-chrome processes that attempt to access the Chrome extensions file. This file contains crucial settings and information related to the browser's extensions installed on the computer. Adversaries and malware authors have been known to exploit this file to extract sensitive information from the Chrome browser on targeted hosts. Detecting such anomalous behavior provides valuable insights for analyzing suspicious processes beyond the commonly observed chrome.exe and explorer.exe executables. By monitoring for access to the Chrome extensions file by non-chrome processes, we can enhance our ability to detect potential threats and protect sensitive information stored within the browser.",['Anomaly'],"December 27, 2023","`wineventlog_security` EventCode=4663 object_file_path=""*\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Local Extension Settings\\*"" AND NOT (process_path IN (""*:\\Windows\\explorer.exe"", ""*\\chrome.exe"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_chrome_extension_access_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",Uninstall chrome browser extension application may access this file and folder path to removed chrome installation in the target host. Filter is needed.,"['DarkGate Malware', 'CISA AA23-347A', 'Amadey', 'RedLine Stealer', 'Phemedrone Stealer']","['https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/phemedrone_stealer']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2e765c1b-144a-49f0-93d0-1df4287cca04/,Windows System Discovery Using Qwinsta,['T1033'],"The following analytic identifies the execution of qwinsta.exe executable in Windows Operating System. This Windows executable file can display information about sessions on a remote desktop session host server. The information includes servername, sessionname, username and many more. This tool is being abused of Qakbot malware to gather information to the targeted or compromised host that will be send back to its Command And Control server.",['Hunting'],"October 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""qwinsta.exe"" OR Processes.original_file_name = ""qwinsta.exe"" by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `windows_system_discovery_using_qwinsta_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrator may execute this commandline tool for auditing purposes. Filter as needed.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/qwinsta', 'https://securelist.com/qakbot-technical-analysis/103931/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/2e768497-04e0-4188-b800-70dd2be0e30d/,Windows Modify Registry Qakbot Binary Data Registry,['T1112'],"The following analytic identifies a suspicious registry entry created by Qakbot malware as part of its malicious execution. This ""Binary Data"" Registry  was created by newly spawn explorer.exe where its malicious code is injected to it. The registry consist of 8 random registry value name with encrypted binary data on its registry value data. This anomaly detections can be a good pivot for possible Qakbot malware infection or other malware that uses registry to save or store there config or malicious code on the registry data stream.",['Anomaly'],"November 7, 2023","| tstats `security_content_summariesonly` count dc(registry_value_name) as registry_value_name_count FROM datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Microsoft\\*"" AND Registry.registry_value_data = ""Binary Data"" by _time span=1m Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.process_id Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| eval registry_key_name_len = len(registry_key_name) 
| eval registry_value_name_len = len(registry_value_name) 
| regex registry_value_name=""^[0-9a-fA-F]{8}"" 
| where registry_key_name_len < 80 AND registry_value_name_len == 8 
| join process_guid, _time [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name IN (""explorer.exe"", ""wermgr.exe"",""dxdiag.exe"", ""OneDriveSetup.exe"", ""mobsync.exe"", ""msra.exe"", ""xwizard.exe"") by _time span=1m Processes.process_id Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid Processes.process_path 
| `drop_dm_object_name(Processes)` ] 
| stats min(_time) as firstTime max(_time) as lastTime values(registry_value_name) as registry_value_name dc(registry_value_name) as registry_value_name_count values(registry_key_name) by dest process_guid process_name parent_process_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where registry_value_name_count >= 5 
| `windows_modify_registry_qakbot_binary_data_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'user', 'parent_process_name', 'parent_process', 'process_name', 'process_path', 'process', 'proc_guid', 'registry_path', 'registry_value_name', 'registry_value_data', 'process_id', 'registry_key_name', 'registry_key_name_len', 'registry_value_name_len']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/decrypting-qakbots-encrypted-registry-keys/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2e7bfb78-85f6-47b5-bc2f-15813a4ef2b3/,Linux Docker Privilege Escalation,"['T1548.003', 'T1548']","Docker is an open source containerization platform. It helps programmers to bundle applications into containers, which are standardized executable parts that include the application source code along with the OS libraries and dependencies needed to run that code in any setting. The user can add mount the root directory into a container and edit the /etc/password file to add a super user. This requires the user to be privileged enough to run docker, i.e. being in the docker group or being root.",['Anomaly'],"July 31, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN(""*docker*-v*/*:*"",""*docker*--volume*/*:*"") OR Processes.process IN(""*docker*exec*sh*"",""*docker*exec*bash*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_docker_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://gtfobins.github.io/gtfobins/docker/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/2e891cbe-0426-11ec-9c9c-acde48001122/,GetLocalUser with PowerShell Script Block,"['T1087', 'T1087.001', 'T1059.001']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-LocalUser commandlet. The Get-LocalUser commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-LocalUser*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getlocaluser_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Active Directory Discovery', 'Malicious PowerShell']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/malicious_powershell']","['https://attack.mitre.org/techniques/T1087/001/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Account Discovery', 'Discovery', 'Discovery', 'Execution', 'Local Account', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2eba3d36-14a6-11ec-a682-acde48001122/,MS Scripting Process Loading WMI Module,"['T1059', 'T1059.007']",This search is to detect a suspicious MS scripting process such as wscript.exe or cscript.exe that loading wmi module to process wmi query. This behavior was seen in FIN7 implant where it uses javascript to execute wmi query to parse host information that will send to its C2 server. this anomaly detections is a good initial step to hunt further a suspicious wmi query or wmi related events to the host that may give you good information regarding process that are commonly using wmi query or modules or might be an attacker using this technique.,['Anomaly'],"September 13, 2021","`sysmon` EventCode =7 Image IN (""*\\wscript.exe"", ""*\\cscript.exe"") ImageLoaded IN (""*\\fastprox.dll"", ""*\\wbemdisp.dll"", ""*\\wbemprox.dll"", ""*\\wbemsvc.dll"" , ""*\\wmiutils.dll"", ""*\\wbemcomn.dll"") 
| stats min(_time) as firstTime max(_time) as lastTime count by Image EventCode process_name ProcessId ProcessGuid Computer ImageLoaded 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `ms_scripting_process_loading_wmi_module_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'EventCode', 'process_name', 'ProcessId', 'ProcessGuid', 'dest', 'ImageLoaded']",automation scripting language may used by network operator to do ldap query.,['FIN7'],['https://research.splunk.com/stories/fin7'],"['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'JavaScript', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2ed8b538-d284-449a-be1d-82ad1dbd186b/,Creation of Shadow Copy with wmic and powershell,"['T1003.003', 'T1003']","The following analytic detects the use of two specific tools, wmic and Powershell, to create a shadow copy to identify potential threats earlier and take appropriate actions to mitigate the risks. This detection is made by a Splunk query that searches for processes in the Endpoint.Processes data model where either the process name contains ""wmic"" or ""Powershell"" and the process command contains ""shadowcopy"" and ""create"". This detection is important because it suggests that an attacker is attempting to manipulate or access data in an unauthorized manner, which can lead to data theft, data manipulation, or other malicious activities. Attackers might use shadow copies to backup and exfiltrate sensitive data or to hide their tracks by restoring files to a previous state after an attack. Next steps include reviewing the user associated with the process, the process name, the original file name, the process command, and the destination of the process. Additionally, examine any relevant on-disk artifacts and review other concurrent processes to determine the source of the attack.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` OR `process_powershell` Processes.process=*shadowcopy* Processes.process=*create* by Processes.user Processes.process_name Processes.original_file_name Processes.parent_process_name Processes.process Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `creation_of_shadow_copy_with_wmic_and_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_wmic', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Legtimate administrator usage of wmic to create a shadow copy.,"['Credential Dumping', 'Living Off The Land', 'Volt Typhoon']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/volt_typhoon']","['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2eed004c-4c0d-11ec-93e8-3e22fbd008af/,Wsmprovhost LOLBAS Execution Process Spawn,"['T1021', 'T1021.006']","The following analytic identifies Wsmprovhost.exe spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Windows Remote Management (WinRm) protocol, the executed command is spawned as a child processs of Wsmprovhost.exe. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of Wsmprovhost.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",['TTP'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=wsmprovhost.exe) (Processes.process_name IN (""Regsvcs.exe"", ""Ftp.exe"", ""OfflineScannerShell.exe"", ""Rasautou.exe"", ""Schtasks.exe"", ""Xwizard.exe"", ""Dllhost.exe"", ""Pnputil.exe"", ""Atbroker.exe"", ""Pcwrun.exe"", ""Ttdinject.exe"",""Mshta.exe"", ""Bitsadmin.exe"", ""Certoc.exe"", ""Ieexec.exe"", ""Microsoft.Workflow.Compiler.exe"", ""Runscripthelper.exe"", ""Forfiles.exe"", ""Msbuild.exe"", ""Register-cimprovider.exe"", ""Tttracer.exe"", ""Ie4uinit.exe"", ""Bash.exe"", ""Hh.exe"", ""SettingSyncHost.exe"", ""Cmstp.exe"", ""Mmc.exe"", ""Stordiag.exe"", ""Scriptrunner.exe"", ""Odbcconf.exe"", ""Extexport.exe"", ""Msdt.exe"", ""WorkFolders.exe"", ""Diskshadow.exe"", ""Mavinject.exe"", ""Regasm.exe"", ""Gpscript.exe"", ""Rundll32.exe"", ""Regsvr32.exe"", ""Msiexec.exe"", ""Wuauclt.exe"", ""Presentationhost.exe"", ""Wmic.exe"", ""Runonce.exe"", ""Syncappvpublishingserver.exe"", ""Verclsid.exe"", ""Infdefaultinstall.exe"", ""Explorer.exe"", ""Installutil.exe"", ""Netsh.exe"", ""Wab.exe"", ""Dnscmd.exe"", ""At.exe"", ""Pcalua.exe"", ""Msconfig.exe"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `wsmprovhost_lolbas_execution_process_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Legitimate applications may trigger this behavior, filter as needed.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/006/', 'https://lolbas-project.github.io/', 'https://pentestlab.blog/2018/05/15/lateral-movement-winrm/']","['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/2f15e1a4-0fc2-49dd-919e-cbbe60699218/,Windows Scheduled Task with Highest Privileges,"['T1053', 'T1053.005']","The following analytic detects the creation of a new task with the highest execution privilege via Schtasks.exe. This tactic is often observed in AsyncRAT attacks, where the scheduled task is used for persistence and privilege escalation. AsyncRAT sets up a scheduled task with parameters '/rl' and 'highest', triggering this technique. It's a strong indicator of potential malware or adversaries seeking to establish persistence and escalate privileges through scheduled tasks. This is crucial for a Security Operations Center (SOC) as it can prevent unauthorized system access and potential data breaches.
The analytic works by monitoring logs for process name, parent process, and command-line executions. In the presence of the '*/rl ' and ' highest *' commands in a schtasks.exe process, an alert is triggered.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where Processes.process_name = ""schtasks.exe"" Processes.process = ""*/rl *"" Processes.process = ""* highest *"" by Processes.process_name Processes.parent_process_name Processes.parent_process Processes.process Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_scheduled_task_with_highest_privileges_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may arise from legitimate applications that create tasks to run as SYSTEM. Therefore, it's recommended to adjust filters based on parent process or modify the query to include world writable paths for restriction.","['CISA AA23-347A', 'Scheduled Tasks', 'RedLine Stealer', 'AsyncRAT']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/asyncrat']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat'],"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2f3a4092-548b-421c-9caa-84918e1787ef/,Windows App Layer Protocol Wermgr Connect To NamedPipe,['T1071'],"The following analytic identifies a suspicious wermgr.exe process creating or connecting to a named pipe. Wermgr.exe is part of Windows OS Problem reporting application responsible for reporting problems, fault or error happen on the Windows OS. This file is being abused by several Threat actors and malware such as Trickbot and Qakbot to execute their malicious code. This anomaly detection can be a good pivot on possible wermgr.exe processes having injected malicious code that might be related to qakbot infection that communicates via named pipe.",['Anomaly'],"October 28, 2022","`sysmon` EventCode IN (17, 18) Image= ""*\\wermgr.exe"" EventType IN ( ""CreatePipe"", ""ConnectPipe"") 
| stats  min(_time) as firstTime max(_time) as lastTime count by Image EventType ProcessGuid ProcessId PipeName SecurityID EventCode dest UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_app_layer_protocol_wermgr_connect_to_namedpipe_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'EventType', 'ProcessGuid', 'ProcessId', 'PipeName', 'dest', 'UserID', 'SecurityID']",unknown,"['Qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://research.splunk.com/stories/qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://strontic.github.io/xcyclopedia/library/wermgr.exe-0F652BF7ADA772981E8AAB0D108FCC92.html', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['Application Layer Protocol', 'Command And Control', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2fa9dec8-9d8e-46d3-96c1-202c06f0e6e1/,Windows Phishing PDF File Executes URL Link,"['T1566.001', 'T1566']","This analytic is developed to detect suspicious pdf viewer processes that have a browser application child processes. This event was seen in a pdf spear phishing attachment containing a malicious URL link to download the actual payload. When a user clicks the malicious link the pdf viewer application will execute a process of the host default browser to connect to the malicious site. This anomaly detection can be a good indicator that a possible pdf file has a link executed by a user. The pdf viewer and browser list in this detection is still in progress, add the common browser and pdf viewer you use in opening pdf in your network.",['Anomaly'],"January 18, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name  IN (""AcroRd32.exe"", ""FoxitPDFReader.exe"") Processes.process_name IN (""firefox.exe"", ""chrome.exe"", ""iexplore.exe"") by Processes.user Processes.parent_process_name Processes.process_name  Processes.parent_process Processes.process Processes.process_id Processes.dest 
|`drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_phishing_pdf_file_executes_url_link_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives in PDF file opened PDF Viewer having legitimate URL link, however filter as needed.","['Spearphishing Attachments', 'Snake Keylogger']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/snake_keylogger']",['https://twitter.com/pr0xylife/status/1615382907446767616?s=20'],"['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/2ff4e0c2-8256-4143-9c07-1e39c7231111/,Linux Find Privilege Escalation,"['T1548.003', 'T1548']","Find is a command-line utility that locates files based on some user-specified criteria and either prints the pathname of each matched object or, if another action is requested, performs that action on each matched object. If sudo right is given to find utility for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*find*"" AND Processes.process=""*-exec*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_find_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/find/', 'https://en.wikipedia.org/wiki/Find_(Unix)']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/3032741c-d6fc-4c69-8988-be8043d6478c/,Windows Impair Defense Disable Controlled Folder Access,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender Controlled Folder Access feature. The EnableControlledFolderAccess registry setting is associated with the Controlled Folder Access feature in Windows Defender. Controlled Folder Access is a security feature designed to protect certain folders from unauthorized access or modification by malicious applications, including ransomware. When EnableControlledFolderAccess is set to 0, it usually indicates that the Controlled Folder Access feature within Windows Defender is not active. Consequently, the protection mechanism for the specified folders against unauthorized access by potentially malicious applications or ransomware is not enabled.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Windows Defender Exploit Guard\\Controlled Folder Access\\EnableControlledFolderAccess"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_controlled_folder_access_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/303b38b2-c03f-44e2-8f41-4594606fcfc7/,Linux Obfuscated Files or Information Base64 Decode,['T1027'],The following analytic identifies the use of base64 decode on Linux being utilized to deobfuscate a file. Identify the source of the file and determine if legitimate. Review parallel processes for further behavior before and after.,['Anomaly'],"July 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*base64 -d*"",""*base64 --decode*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_obfuscated_files_or_information_base64_decode_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and will require some tuning based on processes. Filter as needed.,['Linux Living Off The Land'],['https://research.splunk.com/stories/linux_living_off_the_land'],"['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1027/T1027.md#atomic-test-1---decode-base64-data-into-script', 'https://redcanary.com/blog/lateral-movement-with-secure-shell/', 'https://linux.die.net/man/1/base64']","['Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3070f8e0-c528-11eb-b2a0-acde48001122/,Known Services Killed by Ransomware,['T1490'],This search detects a suspicioous termination of known services killed by ransomware before encrypting files in a compromised machine. This technique is commonly seen in most of ransomware now a days to avoid exception error while accessing the targetted files it wants to encrypts because of the open handle of those services to the targetted file.,['TTP'],"June 4, 2021","`wineventlog_system` EventCode=7036 Message IN (""*Volume Shadow Copy*"",""*VSS*"", ""*backup*"", ""*sophos*"", ""*sql*"", ""*memtas*"", ""*mepocs*"", ""*veeam*"", ""*svc$*"", ""DefWatch"", ""ccEvtMgr"", ""ccSetMgr"", ""SavRoam"", ""RTVscan"", ""QBFCService"", ""QBIDPService"", ""Intuit.QuickBooks.FCS"", ""QBCFMonitorService"" ""YooBackup"", ""YooIT"", ""*Veeam*"", ""PDVFSService"", ""BackupExecVSSProvider"", ""BackupExecAgentAccelerator"", ""BackupExec*"", ""WdBoot"", ""WdFilter"", ""WdNisDrv"", ""WdNisSvc"", ""WinDefend"", ""wscsvc"", ""Sense"", ""sppsvc"", ""SecurityHealthService"") Message=""*service entered the stopped state*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message dest Type 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `known_services_killed_by_ransomware_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'dest', 'Type']",Admin activities or installing related updates may do a sudden stop to list of services we monitor.,"['Ransomware', 'BlackMatter Ransomware', 'LockBit Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/blackmatter_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware']","['https://krebsonsecurity.com/2021/05/a-closer-look-at-the-darkside-ransomware-gang/', 'https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-atr-analyzes-sodinokibi-aka-revil-ransomware-as-a-service-what-the-code-tells-us/', 'https://news.sophos.com/en-us/2020/04/24/lockbit-ransomware-borrows-tricks-to-keep-up-with-revil-and-maze/', 'https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html']","['Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/309d59dc-1e1b-49b2-9800-7cf18d12f7b7/,Linux Iptables Firewall Modification,"['T1562.004', 'T1562']",This analytic looks for suspicious commandline that modify the iptables firewall setting of a linux machine. This technique was seen in cyclopsblink malware where it modifies the firewall setting of the compromised machine to allow traffic to its tcp port that will be used to communicate with its C2 server.,['Anomaly'],"April 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process = ""*iptables *"" AND Processes.process = ""* --dport *"" AND Processes.process = ""* ACCEPT*"" AND Processes.process = ""*&amp;&gt;/dev/null*"" AND Processes.process = ""* tcp *"" AND NOT(Processes.parent_process_path IN(""/bin/*"", ""/lib/*"", ""/usr/bin/*"", ""/sbin/*"")) by Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest _time span=10s Processes.user Processes.parent_process_name  Processes.parent_process_path Processes.process_path 
| rex field=Processes.process ""--dport (?<port>3269
|636
|989
|994
|995
|8443)"" 
| stats values(Processes.process) as processes_exec values(port) as ports values(Processes.process_guid) as guids values(Processes.process_id) as pids dc(port) as port_count count by Processes.process_name Processes.parent_process_name Processes.parent_process_id Processes.dest Processes.user Processes.parent_process_path Processes.process_path 
| where port_count >=3 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_iptables_firewall_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",administrator may do this commandline for auditing and testing purposes. In this scenario filter is needed.,"['Sandworm Tools', 'CyclopsBLink']","['https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/cyclopsblink']","['https://www.ncsc.gov.uk/files/Cyclops-Blink-Malware-Analysis-Report.pdf', 'https://www.trendmicro.com/en_us/research/22/c/cyclops-blink-sets-sights-on-asus-routers--.html']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/30c32c5c-41fe-45db-84fe-275e4320da3f/,Windows Alternate DataStream - Process Execution,"['T1564', 'T1564.004']",This following analytic detects when a process attempts to execute a file from within an NTFS file system alternate data stream. This behavior could indicate that a threat actor staged malicious code within a difficult to detect area of the file system and is now attempting to execute it.,['TTP'],"October 30, 2023","| tstats count min(_time) as firstTime max(_time) as lastTime values(Processes.process_current_directory) as directory from datamodel=Endpoint.Processes where Processes.parent_process_name != ""unknown"" Processes.process_name IN (""appvlp.exe"",""bitsadmin.exe"",""control.exe"",""cscript.exe"",""forfiles.exe"",""ftp.exe"",""mavinject.exe"",""mshta.exe"",""powershell.exe"",""powershell_ise.exe"",""pwsh.exe"",""regini.exe"",""regscr32.exe"",""rundll32.exe"",""sc.exe"",""wmic.exe"",""wscript.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| regex process=""(\b)\w+(\.\w+)?:\w+(\.\w{2,4})(?!\.)(\b
|\s
|&)"" 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_alternate_datastream___process_execution_filter`",['security_content_ctime'],"['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be generated by process executions within the commandline, regex has been provided to minimize the possibilty.",['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f', 'https://car.mitre.org/analytics/CAR-2020-08-001/', 'https://blogs.juniper.net/en-us/threat-research/bitpaymer-ransomware-hides-behind-windows-alternate-data-streams', 'https://blog.netwrix.com/2022/12/16/alternate_data_stream/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Hide Artifacts', 'NTFS File Attributes', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/310b7da2-ab52-437f-b1bf-0bd458674308/,Linux GDB Privilege Escalation,"['T1548.003', 'T1548']","GDB is the acronym for GNU Debugger. This tool helps to debug the programs written in C, C++, Ada, Fortran, etc. The console can be opened using the gdb command on terminal. If sudo right is given to GDB tool for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*gdb*"" AND Processes.process=""*-nx*"" AND Processes.process=""*-ex*!*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_gdb_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://gtfobins.github.io/gtfobins/gdb/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/31302468-93c9-4eca-9ae3-2d41f53a4e2b/,Windows Security Support Provider Reg Query,"['T1547.005', 'T1547']",The following analytic identifies a process command line related to the discovery of possible Security Support Providers in the registry. This technique is being abused by adversaries or post exploitation tools like winpeas to gather LSA protection and configuration in the registry in the targeted host. This registry entry can contain several information related to LSA that validates users for local and remote sign-ins and enforces local security policies. Understanding LSA protection may give a good information in accessing LSA content in memory which is commonly attack by adversaries and tool like mimikatz to scrape password hashes or clear plain text passwords.,['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_reg` AND Processes.process = ""* query *"" AND Processes.process = ""*\\SYSTEM\\CurrentControlSet\\Control\\LSA*"" Processes.process IN (""*RunAsPPL*"" , ""*LsaCfgFlags*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_security_support_provider_reg_query_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://blog.netwrix.com/2022/01/11/understanding-lsa-protection/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Security Support Provider', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/313681a2-da8e-11eb-adad-acde48001122/,Print Spooler Adding A Printer Driver,"['T1547.012', 'T1547']","The following analytic identifies new printer drivers being load by utilizing the Windows PrintService operational logs, EventCode 316. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. 
Within the proof of concept code, the following event will occur - ""Printer driver 1234 for Windows x64 Version-3 was added or updated. Files:- UNIDRV.DLL, kernelbase.dll, evil.dll. No user action is required."" 
During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events and review the source of where the exploitation began.",['TTP'],"July 1, 2021","`printservice` EventCode=316 category = ""Adding a printer driver"" Message = ""*kernelbase.dll,*"" Message = ""*UNIDRV.DLL,*"" Message = ""*.DLL.*"" 
| stats  count min(_time) as firstTime max(_time) as lastTime by OpCode EventCode ComputerName Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `print_spooler_adding_a_printer_driver_filter`","['printservice', 'security_content_ctime']","['_time', 'OpCode', 'EventCode', 'ComputerName', 'Message']",Unknown. This may require filtering.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://twitter.com/MalwareJake/status/1410421445608476679?s=20', 'https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Boot or Logon Autostart Execution', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/31702fc0-2682-11ec-85c3-acde48001122/,Sdelete Application Execution,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect the execution of sdelete.exe application sysinternal tools. This tool is one of the most use tool of malware and adversaries to remove or clear their tracks and artifact in the targetted host. This tool is designed to delete securely a file in file system that remove the forensic evidence on the machine. A good TTP query to check why user execute this application which is not a common practice.,['TTP'],"October 6, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_sdelete` by  Processes.process_name Processes.original_file_name Processes.dest Processes.user Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `sdelete_application_execution_filter`","['security_content_summariesonly', 'process_sdelete', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",user may execute and use this application,['Masquerading - Rename System Utilities'],['https://research.splunk.com/stories/masquerading_-_rename_system_utilities'],['https://app.any.run/tasks/956f50be-2c13-465a-ac00-6224c14c5f89/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/320099b7-7eb1-4153-a2b4-decb53267de2/,Windows Rundll32 WebDAV Request,['T1048.003'],The following analytic identifies rundll32.exe with the commandline arguments loading davclnt.dll function - davsetcookie - to be used to access a remote WebDav instance. This particular behavior was recently showcased in CVE-2023-23397.,['TTP'],"March 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process IN (""*\\windows\\system32\\davclnt.dll,*davsetcookie*"",""*\\windows\\syswow64\\davclnt.dll,*davsetcookie*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_rundll32_webdav_request_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives will be present based on legitimate software, filtering may need to occur.",['CVE-2023-23397 Outlook Elevation of Privilege'],['https://research.splunk.com/stories/cve-2023-23397_outlook_elevation_of_privilege'],"['https://strontic.github.io/xcyclopedia/library/davclnt.dll-0EA3050E7CC710526E330C413C165DA0.html', 'https://twitter.com/ACEResponder/status/1636116096506818562?s=20', 'https://twitter.com/domchell/status/1635999068282408962?s=20', 'https://msrc.microsoft.com/blog/2023/03/microsoft-mitigates-outlook-elevation-of-privilege-vulnerability/', 'https://www.pwndefend.com/2023/03/15/the-long-game-persistent-hash-theft/']","['Endpoint', 'Exfiltration', 'Exfiltration Over Unencrypted Non-C2 Protocol', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3284e4f4-67f7-49b6-ad5e-a8fcead2eef8/,Windows Rename System Utilities Advpack dll LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies Advpack.dll which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""advpack.dll"" AND (NOT match(process_file_path, /(?i)\\windows\\syswow64/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/32e0baea-b3f1-11eb-a2ce-acde48001122/,Detect RClone Command-Line Usage,['T1020'],"This analytic identifies commonly used command-line arguments used by rclone.exe to initiate a file transfer. Some arguments were negated as they are specific to the configuration used by adversaries. In particular, an adversary may list the files or directories of the remote file share using ls or lsd, which is not indicative of malicious behavior. During triage, at this stage of a ransomware event, exfiltration is about to occur or has already. Isolate the endpoint and continue investigating by review file modifications and parallel processes.",['TTP'],"November 29, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rclone` Processes.process IN (""*copy*"", ""*mega*"", ""*pcloud*"", ""*ftp*"", ""*--config*"", ""*--progress*"", ""*--no-check-certificate*"", ""*--ignore-existing*"", ""*--auto-confirm*"", ""*--transfers*"", ""*--multi-thread-streams*"")  by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
|  `security_content_ctime(lastTime)` 
| `detect_rclone_command_line_usage_filter`","['security_content_summariesonly', 'process_rclone', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.original_file_name']",False positives should be limited as this is restricted to the Rclone process name. Filter or tune the analytic as needed.,"['DarkSide Ransomware', 'Ransomware']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware']","['https://redcanary.com/blog/rclone-mega-extortion/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/', 'https://thedfirreport.com/2021/11/29/continuing-the-bazar-ransomware-story/']","['Automated Exfiltration', 'Endpoint', 'Exfiltration', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/337a46be-600f-11eb-ae93-0242ac130002/,Certutil exe certificate extraction,[],This search looks for arguments to certutil.exe indicating the manipulation or extraction of Certificate. This certificate can then be used to sign new authentication tokens specially inside Federated environments such as Windows ADFS.,['TTP'],"July 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=certutil.exe Processes.process = ""*-exportPFX*"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `certutil_exe_certificate_extraction_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Unless there are specific use cases, manipulating or exporting certificates using certutil is uncommon. Extraction of certificate has been observed during attacks such as Golden SAML and other campaigns targeting Federated services.","['Windows Persistence Techniques', 'Cloud Federated Credential Abuse', 'Living Off The Land', 'Windows Certificate Services']","['https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/cloud_federated_credential_abuse', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_certificate_services']","['https://blog.sygnia.co/detection-and-hunting-of-golden-saml-attack', 'https://strontic.github.io/xcyclopedia/library/certutil.exe-09A8A29BAA3A451713FD3D07943B4A43.html']","['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/339805ce-ac30-11eb-b87d-acde48001122/,Account Discovery With Net App,"['T1087.002', 'T1087']","This search is to detect a potential account discovery series of command used by several malware or attack to recon the target machine. This technique is also seen in some note worthy malware like trickbot where it runs a cmd process, or even drop its module that will execute the said series of net command. This series of command are good correlation search and indicator of attacker recon if seen in the machines within a none technical user or department (HR, finance, ceo and etc) network.",['TTP'],"January 4, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` AND (Processes.process=""* user *"" OR  Processes.process=""*config*"" OR Processes.process=""*view /all*"") by  Processes.process_name Processes.dest Processes.user Processes.parent_process_name 
| where count >=4 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `account_discovery_with_net_app_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Admin or power user may used this series of command.,"['Trickbot', 'IcedID']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/icedid']","['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/', 'https://app.any.run/tasks/48414a33-3d66-4a46-afe5-c2003bb55ccf/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/33f89303-cc6f-49ad-921d-2eaea38a6f7a/,Linux Deleting Critical Directory Using RM Command,['T1485'],"The following analytic identifies a suspicious deletion of a critical folder in Linux machine using rm command. This technique was seen in industroyer2 campaign to wipe or destroy energy facilities of a targeted sector. Deletion in these list of folder is not so common since it need some elevated privileges to access some of it. We recommend to look further events specially in file access or file deletion, process commandline that may related to this technique.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name =rm AND Processes.process= ""* -rf *"" AND Processes.process IN (""*/boot/*"", ""*/var/log/*"", ""*/etc/*"", ""*/dev/*"") by Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_deleting_critical_directory_using_rm_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['AwfulShred', 'Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/33fc9f6f-0ce7-4696-924e-a69ec61a3d57/,Windows PowerShell IIS Components WebGlobalModule Usage,"['T1505', 'T1505.004']","The following analytic identifies the usage of PowerShell Cmdlets - New-WebGlobalModule, Enable-WebGlobalModule and Set-WebGlobalModule being utilized to create (new), enable (start) or modify a current IIS Module. These commands are equivalent to AppCmd.exe parameters. Adversaries may utilize these cmdlets as they are lesser known and perform the same activity as AppCmd.",['Anomaly'],"December 21, 2022","`powershell` EventCode=4104 ScriptBlockText IN(""*New-WebGlobalModule*"",""*Enable-WebGlobalModule*"",""*Set-WebGlobalModule*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`  
| `windows_powershell_iis_components_webglobalmodule_usage_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']","It is possible administrators or scripts may run these commands, filtering may be required.",['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://learn.microsoft.com/en-us/powershell/module/webadministration/new-webglobalmodule?view=windowsserver2022-ps', 'https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web']",['Endpoint']
https://research.splunk.com/endpoint/3428ac18-a410-4823-816c-ce697d26f7a8/,Windows Indirect Command Execution Via pcalua,['T1202'],"The following analytic detects programs that have been started by pcalua.exe. pcalua.exe is the Microsoft Windows Program Compatability Assistant.  While this tool can be used to start legitimate programs, it has been observed being used to evade protections on command line execution.",['TTP'],"April 5, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process=""*pcalua* -a*"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_indirect_command_execution_via_pcalua_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.process_path']",Some legacy applications may be run using pcalua.exe.  Filter these results as needed.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://twitter.com/KyleHanslovan/status/912659279806640128', 'https://lolbas-project.github.io/lolbas/Binaries/Pcalua/']","['Defense Evasion', 'Endpoint', 'Indirect Command Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/34502357-deb1-499a-8261-ffe144abf561/,Windows Time Based Evasion,"['T1497', 'T1497.003']","This analytic is designed to detect potentially malicious processes that initiate a ping delay using an invalid IP address. This evasion technique was observed in NJRAT, where the malware employed ping commands as a means to introduce a time delay before self-deletion on the compromised host. Identifying this (TTP) behavior can serve as a valuable indicator for detecting NJRAT infections or other malware that employ time delays as evasion tactics.",['TTP'],"September 8, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""ping.exe"" Processes.parent_process = ""* ping 0 -n *"" OR Processes.process = ""* ping 0 -n *"" by Processes.parent_process Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_time_based_evasion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Defense Evasion', 'Defense Evasion', 'Discovery', 'Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Time Based Evasion', 'Virtualization/Sandbox Evasion']",['Endpoint']
https://research.splunk.com/endpoint/347e0892-e8f3-4512-afda-dc0e3fa996f3/,Windows DNS Gather Network Info,['T1590.002'],"The following analytic identifies a process command line used to enumerate DNS records. Adversaries, threat actors, or red teamers may employ this technique to gather information about a victim's DNS, which can be utilized during targeting. This method was also observed as part of a tool used by the Sandworm APT group in a geopolitical cyber warfare attack. By using the dnscmd.exe Windows application, an attacker can enumerate DNS records for specific domains within the targeted network, potentially aiding in further attacks. This anomaly detection can serve as a valuable starting point for identifying users and hostnames that may be compromised or targeted by adversaries seeking to collect data information.",['Anomaly'],"April 5, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""dnscmd.exe"" Processes.process = ""* /enumrecords *"" by Processes.parent_process Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_dns_gather_network_info_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",network administrator can execute this command to enumerate DNS record. Filter or add other paths to the exclusion as needed.,"['Sandworm Tools', 'Volt Typhoon']","['https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/volt_typhoon']","['https://cert.gov.ua/article/3718487', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['DNS', 'Endpoint', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/347fd388-da87-11eb-836d-acde48001122/,Spoolsv Writing a DLL - Sysmon,"['T1547.012', 'T1547']","The following analytic identifies a .dll being written by spoolsv.exe. This was identified during our testing of CVE-2021-34527 previously(CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for spoolsv.exe to write a .dll. Current POC code used will write the suspicious DLL to disk within a path of \spool\drivers\x64\. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",['TTP'],"July 1, 2021","`sysmon` EventID=11 process_name=spoolsv.exe file_path=""*\\spool\\drivers\\x64\\*"" file_name=*.dll 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, UserID, process_name, file_path, file_name, TargetFilename, process_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `spoolsv_writing_a_dll___sysmon_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'UserID', 'process_name', 'file_path', 'file_name', 'TargetFilename']",Limited false positives. Filter as needed.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://github.com/cube0x0/impacket/commit/73b9466c17761384ece11e1028ec6689abad6818', 'https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Boot or Logon Autostart Execution', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/35159940-228f-11ec-8a49-acde48001122/,Vbscript Execution Using Wscript App,"['T1059.005', 'T1059']",This analytic is to detect a suspicious wscript commandline to execute vbscript. This technique was seen in several malware to execute malicious vbs file using wscript application. commonly vbs script is associated to cscript process and this can be a technique to evade process parent child detections or even some av script emulation system.,['TTP'],"October 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""wscript.exe"" AND Processes.parent_process = ""*//e:vbscript*"") OR (Processes.process_name = ""wscript.exe"" AND Processes.process = ""*//e:vbscript*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process_id Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `vbscript_execution_using_wscript_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['FIN7', 'Remcos', 'AsyncRAT']","['https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/asyncrat']","['https://www.joesandbox.com/analysis/369332/0/html', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Visual Basic']",['Endpoint']
https://research.splunk.com/endpoint/35307032-a12d-11eb-835f-acde48001122/,Rundll32 with no Command Line Arguments with Network,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe with no command line arguments and performing a network connection. It is unusual for rundll32.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where `process_rundll32` AND Processes.action!=""blocked"" by host _time span=1h Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(rundll32\.exe.{0,4}$)"" 
| rename dest as src 
| join host process_id [
| tstats `security_content_summariesonly` count latest(All_Traffic.dest) as dest latest(All_Traffic.dest_ip) as dest_ip latest(All_Traffic.dest_port) as dest_port FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by host All_Traffic.process_id 
| `drop_dm_object_name(All_Traffic)`] 
| `rundll32_with_no_command_line_arguments_with_network_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of rundll32, triggering a false positive.","['Suspicious Rundll32 Activity', 'Cobalt Strike', 'BlackByte Ransomware', 'PrintNightmare CVE-2021-34527', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/printnightmare_cve-2021-34527', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Network_Traffic', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/35682718-5a85-11ec-b8f7-acde48001122/,Wget Download and Bash Execution,['T1105'],"The following analytic identifies the use of wget on Linux or MacOS attempting to download a file from a remote source and pipe it to bash. This is typically found with coinminers and most recently with CVE-2021-44228, a vulnerability in Log4j.",['TTP'],"December 11, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wget (Processes.process=""*-q *"" OR Processes.process=""*--quiet*""  AND Processes.process=""*-O- *"") OR (Processes.process=""*
|*"" AND Processes.process=""*bash*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wget_download_and_bash_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, however filtering may be required.","['Ingress Tool Transfer', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://www.huntress.com/blog/rapid-response-critical-rce-vulnerability-is-affecting-java', 'https://www.lunasec.io/docs/blog/log4j-zero-day/', 'https://gist.github.com/nathanqthai/01808c569903f41a52e7e7b575caa890']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3596a799-6320-4a2f-8772-a9e98ddb2960/,Windows Data Destruction Recursive Exec Files Deletion,['T1485'],"The following analytic identifies a suspicious process recursively deleting files in a compromised host. This behavior was seen in several destructive malware, wiper like caddy wiper, doublezero, and now swiftslicer that delete or overwrite files with random generated strings to make it unrecoverable. This analytic can also catch a possible recursive file write on multiple files using Sysmon Event 23. Sysmon treats the modified file as a deleted one as soon as it was overwritten. This analytic can be a good indicator that a possible destructive malware is running in a host machine or a big software application is being uninstalled.",['TTP'],"April 14, 2023","`sysmon` EventCode=23  TargetFilename IN (""*.exe"", ""*.sys"", ""*.dll"") 
| bin _time span=2m 
| stats values(TargetFilename) as deleted_files min(_time) as firstTime max(_time) as lastTime count by dest user EventCode Image ProcessID 
| where count >=500 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_data_destruction_recursive_exec_files_deletion_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'TargetFilename', 'dest', 'user', 'Image', 'ProcessID', '_time']",uninstall a big software application may trigger this detection. Filter is needed.,"['Swift Slicer', 'Data Destruction']","['https://research.splunk.com/stories/swift_slicer', 'https://research.splunk.com/stories/data_destruction']",['https://www.welivesecurity.com/2023/01/27/swiftslicer-new-destructive-wiper-malware-ukraine/'],"['Data Destruction', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/35a61ed8-61c4-11ec-bc1e-acde48001122/,Suspicious Computer Account Name Change,"['T1078', 'T1078.002']","As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries need to create a new computer account name and rename it to match the name of a domain controller account without the ending '$'. In Windows Active Directory environments, computer account names always end with $. This analytic leverages Event Id 4781, The name of an account was changed, to identify a computer account rename event with a suspicious name that does not terminate with $. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",['TTP'],"December 20, 2021","`wineventlog_security` EventCode=4781 Old_Account_Name=""*$"" New_Account_Name!=""*$"" 
| table _time, ComputerName, Account_Name, Old_Account_Name, New_Account_Name 
| `suspicious_computer_account_name_change_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ComputerName', 'Account_Name', 'Old_Account_Name', 'New_Account_Name']",Renaming a computer account name to a name that not end with '$' is highly unsual and may not have any legitimate scenarios.,"['sAMAccountName Spoofing and Domain Controller Impersonation', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/samaccountname_spoofing_and_domain_controller_impersonation', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42278', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42287']","['Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/35aeb0e7-7de5-444a-ac45-24d6788796ec/,Windows Spearphishing Attachment Onenote Spawn Mshta,"['T1566.001', 'T1566']","The following detection identifies the latest behavior utilized by different malware families (including TA551, AsyncRat, Redline and DCRAT). This detection identifies onenote Office Product spawning mshta.exe. In malicious instances, the command-line of mshta.exe will contain the hta file locally, or a URL to the remote destination. In addition, Threat Research has released a detections identifying suspicious use of mshta.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or mshta.exe will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"January 24, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""onenote.exe"", ""onenotem.exe"") `process_mshta` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_spearphishing_attachment_onenote_spawn_mshta_filter`","['security_content_summariesonly', 'process_mshta', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",No false positives known. Filter as needed.,"['Spearphishing Attachments', 'AsyncRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/asyncrat']","['https://www.bleepingcomputer.com/news/security/hackers-now-use-microsoft-onenote-attachments-to-spread-malware/', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/35cd29ca-f08c-4489-8815-f715c45460d3/,Windows Ldifde Directory Object Behavior,"['T1105', 'T1069.002']","The following analytic identifies the use of Ldifde.exe, which provides the ability to create, modify, or delete LDAP directory objects. Natively, the binary is only installed on a domain controller. However, adversaries or administrators may install the Windows Remote Server Admin Tools for ldifde.exe. Ldifde.exe is a Microsoft Windows command-line utility used to import or export LDAP directory entries. LDAP stands for Lightweight Directory Access Protocol, which is a protocol used for accessing and managing directory information services over an IP network. LDIF, on the other hand, stands for LDAP Data Interchange Format, a standard plain-text data interchange format for representing LDAP directory entries. -i This is a flag used with Ldifde.exe to denote import mode. In import mode, Ldifde.exe takes an LDIF file and imports its contents into the LDAP directory. The data in the LDIF file might include new objects to be created, or modifications or deletions to existing objects. -f This flag is used to specify the filename of the LDIF file that Ldifde.exe will import from (in the case of the -i flag) or export to (without the -i flag). For example, if you wanted to import data from a file called data.ldif, you would use the command ldifde -i -f data.ldif. Keep in mind that while the use of Ldifde.exe is legitimate in many contexts, it can also be used maliciously. For instance, an attacker who has gained access to a domain controller could potentially use Ldifde.exe to export sensitive data or make unauthorized changes to the directory. Therefore, it's important to monitor for unusual or unauthorized use of this tool.",['TTP'],"May 25, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=ldifde.exe Processes.process IN (""*-i *"", ""*-f *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_ldifde_directory_object_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filter as needed.",['Volt Typhoon'],['https://research.splunk.com/stories/volt_typhoon'],"['https://lolbas-project.github.io/lolbas/Binaries/Ldifde/', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF', 'https://twitter.com/0gtweet/status/1564968845726580736?s=20', 'https://strontic.github.io/xcyclopedia/library/ldifde.exe-45D28FB47E9B6ACC5DCA9FDA3E790210.html']","['Command And Control', 'Discovery', 'Domain Groups', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/360ae6b0-38b5-4328-9e2b-bc9436cddb17/,Windows Process Injection Wermgr Child Process,['T1055'],"The following analytic identifies a suspicious wermgr.exe parent process having a child process not related to error, fault or windows werfault event. This technique was seen in Qakbot malware where it inject its malicious code in wermgr to evade detections and hide from the analyst to execute its recon and its malicious behavior. This Anomaly detection can be a good pivot to start investigating a possible qakbot infection in the network. The Wermgr.exe process is not known to have other child processes aside from itself or werfault.exe",['Anomaly'],"October 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = ""wermgr.exe"" AND NOT (Processes.process_name IN (""WerFaultSecure.exe"", ""wermgr.exe"", ""WerFault.exe"")) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_wermgr_child_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['Qakbot', 'Windows Error Reporting Service Elevation of Privilege Vulnerability']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_error_reporting_service_elevation_of_privilege_vulnerability']",['https://twitter.com/pr0xylife/status/1585612370441031680?s=46&t=Dc3CJi4AnM-8rNoacLbScg'],"['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/36334123-077d-47a2-b70c-6c7b3cc85049/,Windows Unsecured Outlook Credentials Access In Registry,['T1552'],"The following analytic identifies a suspicious query on outlook credentials registry in Windows OS registry. typically refers to user profiles associated with Microsoft Outlook. Within this key, Outlook stores configuration settings, including account information such as email addresses, server details, and authentication credentials. Accessing or modifying this registry key can potentially compromise users' email security, making it a target for attackers seeking to steal sensitive information or execute unauthorized actions within Outlook. This anomaly detection is a good pivot to catch possible Trojan Stealer or RAT that tries to steal sensitive information to its targeted host.",['Anomaly'],"February 14, 2024","`wineventlog_security` EventCode=4663 object_file_path IN (""*\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676*"", ""*\\Windows Messaging Subsystem\\Profiles\\9375CFF0413111d3B88A00104B2A6676*"") AND process_name != *\\outlook.exe 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_unsecured_outlook_credentials_access_in_registry_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",third party software may access this outlook registry.,['Snake Keylogger'],['https://research.splunk.com/stories/snake_keylogger'],"['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/choice', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger']","['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/36e46ebe-065a-11ec-b4c7-acde48001122/,Get ADDefaultDomainPasswordPolicy with Powershell,['T1201'],This analytic looks for the execution of powershell.exe executing the Get-ADDefaultDomainPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['Hunting'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-ADDefaultDomainPasswordPolicy*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_addefaultdomainpasswordpolicy_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-addefaultdomainpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/36f9626c-4272-4808-aadd-267acce681c0/,Windows Modify Registry LongPathsEnabled,['T1112'],"The following analytic identifies a suspicious registry modification of Windows long path enable configuration. This technique was being abused by several adversaries, malware like BlackByte to enable long file path support in the operating system. By default, Windows has a limitation on the maximum length of a file path, which is set to 260 characters. Enabling the LongPathsEnabled setting allows you to work with file paths longer than 260 characters.",['Anomaly'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\CurrentControlSet\\Control\\FileSystem\\LongPathsEnabled"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_longpathsenabled_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['BlackByte Ransomware'],['https://research.splunk.com/stories/blackbyte_ransomware'],['https://www.microsoft.com/en-us/security/blog/2023/07/06/the-five-day-job-a-blackbyte-ransomware-intrusion-case-study/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3742ebfe-64c2-11eb-ae93-0242ac130002/,Dump LSASS via procdump,"['T1003.001', 'T1003']","Detect procdump.exe dumping the lsass process. This query looks for both -mm and -ma usage. -mm will produce a mini dump file and -ma will write a dump file with all process memory. Both are highly suspect and should be reviewed. This query does not monitor for the internal name (original_file_name=procdump) of the PE or look for procdump64.exe. Modify the query as needed.
During triage, confirm this is procdump.exe executing. If it is the first time a Sysinternals utility has been ran, it is possible there will be a -accepteula on the command line. Review other endpoint data sources for cross process (injection) into lsass.exe.",['TTP'],"August 31, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_procdump` (Processes.process=*-ma* OR Processes.process=*-mm*) Processes.process=*lsass* by Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `dump_lsass_via_procdump_filter`","['security_content_summariesonly', 'process_procdump', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",None identified.,"['Credential Dumping', 'HAFNIUM Group', 'CISA AA22-257A']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://attack.mitre.org/techniques/T1003/001/', 'https://docs.microsoft.com/en-us/sysinternals/downloads/procdump', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-2---dump-lsassexe-memory-using-procdump', 'https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/']","['Credential Access', 'Credential Access', 'Endpoint', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/383572e0-04c5-11ec-bdcc-acde48001122/,Domain Account Discovery with Wmic,"['T1087.002', 'T1087']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for domain users. Red Teams and adversaries alike use wmic.exe to enumerate domain users for situational awareness and Active Directory Discovery.,['TTP'],"August 24, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""wmic.exe"" AND Processes.process = ""*/NAMESPACE:\\\\root\\directory\\ldap*"" AND Processes.process = ""*ds_user*"" AND Processes.process = ""*GET*"" AND Processes.process = ""*ds_samaccountname*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_account_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1087/002/'],"['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/386ad394-c9a7-4b4f-b66f-586252de20f0/,Windows Large Number of Computer Service Tickets Requested,"['T1135', 'T1078']","The following analytic leverages Event ID 4769, A Kerberos service ticket was requested, to identify more than 30 computer service ticket requests from one source. When a domain joined endpoint connects to other remote endpoint, it will first request a Kerberos Service Ticket with the computer name as the Service Name. A user requesting a large number of computer service tickets for different endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc.
Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold as needed.",['Anomaly'],"March 20, 2023","`wineventlog_security` EventCode=4769 ServiceName=""*$"" TargetUserName!=""*$"" 
| bucket span=5m _time 
| stats dc(ServiceName) AS unique_targets values(ServiceName) as host_targets by _time, IpAddress, TargetUserName 
| where unique_targets > 30 
| `windows_large_number_of_computer_service_tickets_requested_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ServiceName', 'TargetUserName', 'IpAddress']","An single endpoint requesting a large number of kerberos service tickets is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, administration systems and missconfigured systems.","['Active Directory Privilege Escalation', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_lateral_movement']","['https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://attack.mitre.org/techniques/T1135/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4769']","['Defense Evasion', 'Discovery', 'Initial Access', 'Network Share Discovery', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/387b278a-6326-11ec-aa2c-acde48001122/,Linux Install Kernel Module Using Modprobe Utility,"['T1547.006', 'T1547']",This analytic looks for possible installing a linux kernel module using modprobe utility function. This event can detect a installation of rootkit or malicious kernel module to gain elevated privileges to their malicious code and bypassed detections. This Anomaly detection is a good indicator that someone installing kernel module in a linux host either admin or adversaries. filter is needed in this scenario,['Anomaly'],"December 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN(""kmod"", ""sudo"") AND Processes.process = *modprobe* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_install_kernel_module_using_modprobe_utility_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Rootkit']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_rootkit']","['https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Working_with_Kernel_Modules/', 'https://security.stackexchange.com/questions/175953/how-to-load-a-malicious-lkm-at-startup', 'https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485']","['Boot or Logon Autostart Execution', 'Endpoint', 'Kernel Modules and Extensions', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/387c4e78-f4a4-413d-ad44-e9f7bc4642c9/,Linux Busybox Privilege Escalation,"['T1548.003', 'T1548']","BusyBox combines tiny versions of many common UNIX utilities into a single small executable. It provides minimalist replacements for most of the utilities you usually find in GNU coreutils, util-linux, etc. If sudo right is given to BusyBox application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*busybox*"" AND Processes.process=""*sh*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_busybox_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/busybox/', 'https://man.archlinux.org/man/busybox.1.en']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/38cbd42c-1098-41bb-99cf-9d6d2b296d83/,WMI Temporary Event Subscription,['T1047'],"The following analytic detects the creation of WMI temporary event subscriptions. WMI (Windows Management Instrumentation) is a management technology that allows administrators to perform various tasks on Windows-based systems. Temporary event subscriptions are created to monitor specific events or changes on a system that help to detect potential threats early and take proactive measures to protect the organization's systems and data. The detection is made by using the Splunk query wmi EventCode=5860 Temporary to search for events with EventCode 5860, which indicates the creation of a temporary WMI event subscription. To further refine the search results, the query uses regular expressions (rex) to extract the query used in the event subscription. Then, it filters known benign queries related to system processes such as 'wsmprovhost.exe' and 'AntiVirusProduct', 'FirewallProduct', 'AntiSpywareProduct', which helps to focus on potentially malicious or suspicious queries. The detection is important because it indicates malicious activity since attackers use WMI to run commands, gather information, or maintain persistence within a compromised system. False positives might occur since legitimate uses of WMI event subscriptions in the environment might trigger benign activities to be flagged. Therefore, an extensive triage is necessary to review the specific query and assess its intent. Additionally, capturing and inspecting relevant on-disk artifacts and analyzing concurrent processes can help to identify the source of the attack. Detecting the creation of these event subscriptions to identify potential threats early and take appropriate actions to mitigate the risks.",['TTP'],"October 23, 2018","`wmi` EventCode=5860 Temporary 
| rex field=Message ""NotificationQuery =\s+(?<query>[^;
|^$]+)"" 
| search query!=""SELECT * FROM Win32_ProcessStartTrace WHERE ProcessName = 'wsmprovhost.exe'"" AND query!=""SELECT * FROM __InstanceOperationEvent WHERE TargetInstance ISA 'AntiVirusProduct' OR TargetInstance ISA 'FirewallProduct' OR TargetInstance ISA 'AntiSpywareProduct'"" 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, query  
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `wmi_temporary_event_subscription_filter`","['security_content_ctime', 'wmi']","['_time', 'EventCode', 'Message', 'query']",Some software may create WMI temporary event subscriptions for various purposes. The included search contains an exception for two of these that occur by default on Windows 10 systems. You may need to modify the search to create exceptions for other legitimate events.,['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],N/A,"['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/38fe731c-1f13-43d4-b878-a5bbe44807e3/,Windows IIS Components Add New Module,"['T1505', 'T1505.004']","The following analytic identifies the process AppCmd.exe installing a new module into IIS. AppCmd is a utility to manage IIS web sites and App Pools. An adversary may run this command to install a webshell or backdoor. This has been found to be used for credit card scraping, persistence, and further post-exploitation. An administrator may run this to install new modules for a web site or during IIS updates.",['Anomaly'],"December 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where NOT (Processes.parent_process_name  IN (""msiexec.exe"", ""iissetup.exe"")) Processes.process_name=appcmd.exe Processes.process IN (""*install *"", ""*module *"") AND Processes.process=""*image*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iis_components_add_new_module_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present until properly tuned. Filter as needed.,['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004', 'https://strontic.github.io/xcyclopedia/library/appcmd.exe-055B2B09409F980BF9B5A3969D01E5B2.html']","['Endpoint', 'IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/391329f3-c14b-4b8d-8b37-ac5012637360/,Windows Steal Authentication Certificates Export PfxCertificate,['T1649'],"The following analytic identifies the use of export-pfxcertificate, the PowerShell cmdlet, being utilized on the command-line in an attempt to export the certifcate from the local Windows Certificate Store.",['Anomaly'],"February 1, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*export-pfxcertificate*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_export_pfxcertificate_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Filtering may be requried based on automated utilities and third party applications that may export certificates.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://dev.to/iamthecarisma/managing-windows-pfx-certificates-through-powershell-3pj', 'https://learn.microsoft.com/en-us/powershell/module/pki/export-pfxcertificate?view=windowsserver2022-ps']","['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/39405650-c364-4e1e-a740-32a63ef042a6/,Windows PowerView AD Access Control List Enumeration,"['T1078.002', 'T1069']","The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets Get-ObjectAcl or Get-DomainObjectAcl. This commandlets are used to enumerate Access Control List permissions given to Active Directory objects. In an active directory environment, an object is an entity that represents an available resource within the organizations network, such as domain controllers, users, groups, computers, shares, etc.  Maintaining Active Directory permissions is complicated and hard to manage, especially in complex and large environments with multiple domains. Weak permissions may allow adversaries and red teamers to escalate their privileges in Active Directory. PowerView is a common tool leveraged by attackers to identify and exploit configuration weaknesses.",['TTP'],"April 20, 2023","`powershell` EventCode=4104  (ScriptBlockText=*get-objectacl* OR ScriptBlockText=*Get-DomainObjectAcl* ) 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powerview_ad_access_control_list_enumeration_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Opcode', 'UserID']","Administrators may leverage PowerView for legitimate purposes, filter as needed.","['Active Directory Discovery', 'Active Directory Privilege Escalation', 'Rhysida Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://attack.mitre.org/techniques/T1078/002/', 'https://medium.com/r3d-buck3t/enumerating-access-controls-in-active-directory-c06e2efa8b89', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-active-directory-acls-aces', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainObjectAcl/']","['Defense Evasion', 'Discovery', 'Domain Accounts', 'Initial Access', 'Permission Groups Discovery', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/395163b8-689b-444b-86c7-9fe9ad624734/,PaperCut NG Suspicious Behavior Debug Log,"['T1190', 'T1133']","The following hunting analytic is designed to monitor and detect potential exploitation attempts targeting a PaperCut NG server by analyzing its debug log data. By focusing on public IP addresses accessing the PaperCut NG instance, this analytic aims to identify unauthorized or suspicious access attempts. Furthermore, it searches for specific URIs that have been discovered in the proof of concept code, which are associated with known exploits or vulnerabilities. The analytic is focused on the user admin. Regex is used mainly because the log is not parsed by Splunk and there is no TA for this debug log.",['Hunting'],"May 15, 2023","`papercutng` (loginType=Admin OR userName=admin) 
| eval uri_match=if(match(_raw, ""(?i)(\/app\?service=page\/SetupCompleted
|\/app
|\/app\?service=page\/PrinterList
|\/app\?service=direct\/1\/PrinterList\/selectPrinter&sp=l1001
|\/app\?service=direct\/1\/PrinterDetails\/printerOptionsTab\.tab)""), ""URI matches"", null()) 
| eval ip_match=if(match(_raw, ""(?i)((25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))"") AND NOT match(_raw, ""(?i)(10\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))
|(172\.(1[6-9]
|2[0-9]
|3[0-1])\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))
|(192\.168\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?)\.(25[0-5]
|2[0-4][0-9]
|[01]?[0-9][0-9]?))""), ""IP matches"", null()) 
| where  (isnotnull(uri_match) OR isnotnull(ip_match)) 
| stats sparkline, count, values(uri_match) AS uri_match, values(ip_match) AS ip_match latest(_raw) BY host, index, sourcetype 
| `papercut_ng_suspicious_behavior_debug_log_filter`",['papercutng'],"['uri_match', 'ip_match', 'index', 'sourcetype', 'host']","False positives may be present, as this is based on the admin user accessing the Papercut NG instance from a public IP address. Filter as needed.",['PaperCut MF NG Vulnerability'],['https://research.splunk.com/stories/papercut_mf_ng_vulnerability'],"['https://www.papercut.com/kb/Main/HowToCollectApplicationServerDebugLogs', 'https://github.com/inodee/threathunting-spl/blob/master/hunt-queries/HAFNIUM.md', 'https://www.cisa.gov/news-events/alerts/2023/05/11/cisa-and-fbi-release-joint-advisory-response-active-exploitation-papercut-vulnerability', 'https://www.papercut.com/kb/Main/PO-1216-and-PO-1219', 'https://www.horizon3.ai/papercut-cve-2023-27350-deep-dive-and-indicators-of-compromise/', 'https://www.bleepingcomputer.com/news/security/hackers-actively-exploit-critical-rce-bug-in-papercut-servers/', 'https://www.huntress.com/blog/critical-vulnerabilities-in-papercut-print-management-software']","['Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/395ed5fe-ad13-4366-9405-a228427bdd91/,Windows Impair Defense Delete Win Defender Context Menu,"['T1562.001', 'T1562']","The search looks for the deletion of Windows Defender context menu within the registry. This is consistent behavior with RAT malware across a fleet of endpoints. This particular behavior is executed when an adversary gains access to an endpoint and begins to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",['Hunting'],"June 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\shellex\\ContextMenuHandlers\\EPP"" Registry.action = deleted by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_delete_win_defender_context_menu_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://app.any.run/tasks/45f5d114-91ea-486c-ab01-41c4093d2861/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/396de86f-25e7-4b0e-be09-a330be35249d/,Windows MSExchange Management Mailbox Cmdlet Usage,"['T1059', 'T1059.001']","The following analytic uses the Exchange Management logs, that are enabled by default, to identify suspicious Cmdlet usage related to ProxyShell and ProxyNotShell abuse.",['Anomaly'],"July 10, 2023","`msexchange_management` EventCode=1 Message IN (""*New-MailboxExportRequest*"", ""*New-ManagementRoleAssignment*"", ""*New-MailboxSearch*"", ""*Get-Recipient*"", ""*Search-Mailbox*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by host Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename host AS dest 
| `windows_msexchange_management_mailbox_cmdlet_usage_filter`","['msexchange_management', 'security_content_ctime']","['_time', 'Message', 'dest']",False positives may be present when an Administrator utilizes the cmdlets in the query. Filter or monitor as needed.,"['ProxyShell', 'BlackByte Ransomware', 'ProxyNotShell']","['https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/proxynotshell']",['https://gist.github.com/MHaggis/f66f1d608ea046efb9157020cd34c178'],"['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/39e2605a-90d8-11eb-899e-acde48001122/,PowerShell Start-BitsTransfer,['T1197'],"Start-BitsTransfer is the PowerShell ""version"" of BitsAdmin.exe. Similar functionality is present. This technique variation is not as commonly used by adversaries, but has been abused in the past. Lesser known uses include the ability to set the -TransferType to Upload for exfiltration of files. In an instance where Upload is used, it is highly possible files will be archived. During triage, review parallel processes and process lineage. Capture any files on disk and review. For the remote domain or IP, what is the reputation?",['TTP'],"March 29, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=*start-bitstransfer* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.original_file_name Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_start_bitstransfer_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives. It is possible administrators will utilize Start-BitsTransfer for administrative tasks, otherwise filter based parent process or command-line arguments.",['BITS Jobs'],['https://research.splunk.com/stories/bits_jobs'],"['https://isc.sans.edu/diary/Investigating+Microsoft+BITS+Activity/23281', 'https://docs.microsoft.com/en-us/windows/win32/bits/using-windows-powershell-to-create-bits-transfer-jobs']","['BITS Jobs', 'Defense Evasion', 'Endpoint', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/39ebdc68-25b9-11ec-aec7-acde48001122/,Disable Security Logs Using MiniNt Registry,['T1112'],This analytic is to detect a suspicious registry modification to disable security audit logs. This technique was shared by a researcher to disable Security logs of windows by adding this registry. The Windows will think it is WinPE and will not log any event to the Security Log,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\Control\\MiniNt\\*"") BY _time span=1h  Registry.user Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_security_logs_using_minint_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Unknown.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://twitter.com/0gtweet/status/1182516740955226112'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3a91a212-98a9-11eb-b86a-acde48001122/,Windows Multiple Users Failed To Authenticate Using Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with 30 unique users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4771 is generated when the Key Distribution Center fails to issue a Kerberos Ticket Granting Ticket (TGT). Failure code 0x18 stands for wrong password provided (the attempted user is a legitimate domain user).
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['TTP'],"April 8, 2021","`wineventlog_security` EventCode=4771 TargetUserName!=""*$"" Status=0x18 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| where unique_accounts > 30 
| `windows_multiple_users_failed_to_authenticate_using_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple valid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, missconfigured systems and multi-user systems like Citrix farms.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn319109(v=ws.11)', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4771']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3a9a6806-16a8-4cda-8d73-b49d10a05b16/,Windows Mimikatz Crypto Export File Extensions,['T1649'],"The following analytic identifies hardcoded extensions related to the Crypo module within Mimikatz. Moving certificates or downloading them is not malicious, however with Mimikatz having hardcoded names it helps to identify potential usage of certificates being exported.",['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.keyx.rsa.pvk"",""*sign.rsa.pvk"",""*sign.dsa.pvk"",""*dsa.ec.p8k"",""*dh.ec.p8k"", ""*.pfx"", ""*.der"") by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Filesystem)` 
| `windows_mimikatz_crypto_export_file_extensions_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.file_path']","False positives may be present and may need to be reviewed before this can be turned into a TTP. In addition, remove .pfx (standalone) if it's too much volume.","['Sandworm Tools', 'CISA AA23-347A', 'Windows Certificate Services']","['https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_certificate_services']",['https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_crypto.c#L628-L645'],"['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/3abb2eda-4bb8-11ec-9ae4-3e22fbd008af/,Windows Service Created Within Public Path,"['T1543', 'T1543.003']","The following analytc uses Windows Event Id 7045, New Service Was Installed, to identify the creation of a Windows Service where the service binary path is located in public paths. This behavior could represent the installation of a malicious service. Red Teams and adversaries alike may create malicious Services for lateral movement or remote code execution",['TTP'],"November 22, 2021","`wineventlog_system` EventCode=7045  Service_File_Name = ""*\.exe"" NOT (Service_File_Name IN (""C:\\Windows\\*"", ""C:\\Program File*"", ""C:\\Programdata\\*"", ""%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName EventCode Service_File_Name Service_Name Service_Start_Type Service_Type 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_created_within_public_path_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'Service_File_Name', 'Service_Type', '_time', 'Service_Name', 'Service_Start_Type']",Legitimate applications may install services with uncommon services paths.,"['Active Directory Lateral Movement', 'Snake Malware']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/snake_malware']","['https://docs.microsoft.com/en-us/windows/win32/services/service-control-manager', 'https://pentestlab.blog/2020/07/21/lateral-movement-services/']","['Create or Modify System Process', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/3b132a71-9335-4f33-9932-00bb4f6ac7e8/,Linux Deletion Of Cron Jobs,"['T1485', 'T1070.004', 'T1070']","This analytic is to detect a deletion of cron job in a linux machine. This technique can be related to an attacker, threat actor or malware to disable scheduled cron jobs that might be related to security or to evade some detections. We also saw that this technique can be a good indicator for malware that is trying to wipe or delete several files on the compromised host like the acidrain malware. This anomaly detection can be a good pivot detection to look for process and user doing it why they doing. Take note that this event can be done by administrator so filtering on those possible false positive event is needed.",['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path=""/etc/cron.*"" by _time span=1h Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_deletion_of_cron_jobs_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['AcidRain', 'Data Destruction']","['https://research.splunk.com/stories/acidrain', 'https://research.splunk.com/stories/data_destruction']",['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3b1d09a8-a26f-473e-a510-6c6613573657/,Windows Credentials from Password Stores Chrome LocalState Access,['T1012'],"This analytic is designed to detect non-chrome processes accessing the Chrome user data file called ""local state."" This file contains important settings and information related to the browser's operations on the computer. Threat actors, adversaries, and malware authors have been known to exploit this file in attempts to extract the encrypted master key used for decrypting passwords saved in the Chrome browser. Detecting access to the ""local state"" file by non-chrome processes serves as a valuable pivot for analyzing suspicious processes beyond the commonly observed chrome.exe and explorer.exe executables. By monitoring for this anomaly, we can improve our ability to identify potential threats and safeguard sensitive information stored within the browser.",['Anomaly'],"April 26, 2023","`wineventlog_security` EventCode=4663 object_file_path=""*\\AppData\\Local\\Google\\Chrome\\User Data\\Local State"" NOT (process_name IN (""*\\chrome.exe"",""*:\\Windows\\explorer.exe"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_chrome_localstate_access_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",Uninstall chrome application may access this file and folder path to removed chrome installation in target host. Filter is needed.,"['RedLine Stealer', 'Amadey', 'Warzone RAT', 'NjRAT', 'DarkGate Malware', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3b4e18cb-497f-4073-85ad-1ada7c2107ab/,Windows Registry SIP Provider Modification,['T1553.003'],"The following analytic detects modifications to the Windows Registry SIP Provider. It identifies this behavior by monitoring Sysmon Event ID 7, which logs registry modification events. The analytic specifically looks for changes in registry paths and values associated with Cryptography Providers and OID Encoding Types. This behavior is worth identifying as it may indicate an attempt to subvert trust controls, a technique often used by adversaries to bypass security measures and maintain persistence in an environment. If a true positive is found, it suggests an attacker is trying to manipulate the system's cryptographic functions, potentially leading to unauthorized access, data theft, or other damaging outcomes. Upon triage, review the registry paths and values modified, and look for concurrent processes to identify the attack source. Review the path of the SIP being added. This approach helps analysts detect potential threats earlier and mitigate the risks.",['TTP'],"October 10, 2023","| tstats `security_content_summariesonly` count values(Registry.registry_key_name) as registry_key_name values(Registry.registry_path) as registry_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\*"", ""*\\SOFTWARE\\Microsoft\\Cryptography\\OID\\EncodingType*"", ""*\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\*"", ""*\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\\EncodingType*"") Registry.registry_value_name IN (""Dll"",""$DLL"") by Registry.dest , Registry.user Registry.registry_value_name, Registry.registry_value_data 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)`
| `windows_registry_sip_provider_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['Registry.dest', 'Registry.user', 'Registry.registry_value_name', 'Registry.registry_value_data']",Be aware of potential false positives - legitimate applications may cause benign activities to be flagged.,['Subvert Trust Controls SIP and Trust Provider Hijacking'],['https://research.splunk.com/stories/subvert_trust_controls_sip_and_trust_provider_hijacking'],"['https://attack.mitre.org/techniques/T1553/003/', 'https://github.com/SigmaHQ/sigma/blob/master/rules/windows/registry/registry_set/registry_set_sip_persistence.yml', 'https://specterops.io/wp-content/uploads/sites/3/2022/06/SpecterOps_Subverting_Trust_in_Windows.pdf', 'https://github.com/gtworek/PSBits/tree/master/SIP', 'https://github.com/mattifestation/PoCSubjectInterfacePackage', 'https://pentestlab.blog/2017/11/06/hijacking-digital-signatures/']","['Defense Evasion', 'Endpoint', 'SIP and Trust Provider Hijacking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3bf5541a-6a45-4fdc-b01d-59b899fff961/,Detect Remote Access Software Usage File,['T1219'],"The following analytic detects when a file from a known remote access software is written to disk within the environment. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",['Anomaly'],"February 22, 2024","| tstats `security_content_summariesonly` count, min(_time) as firstTime, max(_time) as lastTime, values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.dest, Filesystem.user, Filesystem.file_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Filesystem)` 
| lookup remote_access_software remote_utility AS file_name OUTPUT isutility, description as signature, comment_reference as desc, category 
| search isutility = TRUE 
| `detect_remote_access_software_usage_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.user', 'Filesystem.file_name']",Known or approved applications used by the organization or usage of built-in functions.,"['Insider Threat', 'Command And Control', 'Ransomware']","['https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/command_and_control', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/techniques/T1219/', 'https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/', 'https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/']","['Command And Control', 'Endpoint', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3cf0dc36-484d-11ec-a6bc-acde48001122/,Suspicious Process DNS Query Known Abuse Web Services,"['T1059.005', 'T1059']","The following analytic detects a suspicious process making a DNS query via known, abused text-paste web services, VoIP, instant messaging, and digital distribution platforms used to download external files. This technique is abused by adversaries, malware actors, and red teams to download a malicious file on the target host. This is a good TTP indicator for possible initial access techniques. A user will experience false positives if the following instant messaging is allowed or common applications like telegram or discord are allowed in the corporate network.",['TTP'],"April 14, 2023","`sysmon` EventCode=22 QueryName IN (""*pastebin*"", ""*discord*"", ""*api.telegram*"",""*t.me*"") process_name IN (""cmd.exe"", ""*powershell*"", ""pwsh.exe"", ""wscript.exe"",""cscript.exe"") OR Image IN (""*\\users\\public\\*"", ""*\\programdata\\*"", ""*\\temp\\*"", ""*\\Windows\\Tasks\\*"", ""*\\appdata\\*"", ""*\\perflogs\\*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryStatus process_name QueryResults Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_process_dns_query_known_abuse_web_services_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryStatus', 'process_name', 'QueryResults', 'dest']","Noise and false positive can be seen if the following instant messaging is allowed to use within corporate network. In this case, a filter is needed.","['Data Destruction', 'WhisperGate', 'Remcos', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']","['https://urlhaus.abuse.ch/url/1798923/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Visual Basic']",['Endpoint']
https://research.splunk.com/endpoint/3d8d201c-aa03-422d-b0ee-2e5ecf9718c0/,Detection of tools built by NirSoft,['T1072'],"This search looks for specific command-line arguments that may indicate the execution of tools made by Nirsoft, which are legitimate, but may be abused by attackers.",['TTP'],"July 21, 2020","| tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""* /stext *"" OR Processes.process=""* /scomma *"" ) by Processes.parent_process Processes.process_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `detection_of_tools_built_by_nirsoft_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process', 'Processes.process_name', 'Processes.user']","While legitimate, these NirSoft tools are prone to abuse. You should verfiy that the tool was used for a legitimate purpose.",['Emotet Malware  DHS Report TA18-201A'],['https://research.splunk.com/stories/emotet_malware__dhs_report_ta18-201a_'],N/A,"['Endpoint', 'Execution', 'Lateral Movement', 'Software Deployment Tools', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3e27af56-fcf0-4113-988d-24969b062be7/,Windows Executable in Loaded Modules,['T1129'],"This analytic identifies potentially malicious 'ImageLoaded' events, particularly when they involve executable files. This behavior was observed in NjRAT instances, where, during each instance of loading a module from its C2 server onto the compromised host, Sysmon recorded the path of the actual Image or Process as an 'ImageLoaded' event, rather than the typical tracking of dynamically loaded DLL modules in memory. This event holds significance because it tracks processes that load modules and libraries, which are typically in the .dll format rather than .exe. Leveraging this 'Time-To-Perform' (TTP) detection method can prove invaluable for the identification of NjRAT malware or other malicious software instances that introduce executable files as modules within a targeted host.",['TTP'],"September 12, 2023","`sysmon` EventCode=7 ImageLoaded= *.exe 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded Signed SignatureStatus OriginalFileName process_name Computer EventCode ProcessId Hashes IMPHASH 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_executable_in_loaded_modules_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'Signed', 'SignatureStatus', 'OriginalFileName', 'process_name', 'Computer', 'EventCode', 'ProcessId', 'Hashes', 'IMPHASH']",unknown.,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Execution', 'Shared Modules', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3ea3851a-8736-41a0-bc09-7e4485b48fa6/,Office Product Spawning Windows Script Host,"['T1566', 'T1566.001']",The following analytic will identify a Windows Office Product spawning WScript.exe or CScript.exe. Tuning may be required based on legitimate application usage that may spawn scripts from an Office product.,['TTP'],"October 12, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""cscript.exe"", ""wscript.exe"")) AND (match(actor_process_file_name, /(?i)visio.exe/)=true OR match(actor_process_file_name, /(?i)mspub.exe/)=true OR match(actor_process_file_name, /(?i)powerpnt.exe/)=true OR match(actor_process_file_name, /(?i)excel.exe/)=true OR match(actor_process_file_name, /(?i)winword.exe/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present based on macro based approved documents in the organization. Filtering may be needed.,['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],['https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/'],"['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/3f519894-4276-11ec-ab02-3e22fbd008af/,Windows Service Initiation on Remote Endpoint,"['T1543', 'T1543.003']",This analytic looks for the execution of sc.exe with command-line arguments utilized to start a Windows Service on a remote endpoint. Red Teams and adversaries alike may abuse the Service Control Manager for lateral movement and remote code execution.,['TTP'],"November 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=sc.exe OR Processes.original_file_name=sc.exe) (Processes.process=*\\\\* AND Processes.process=*start*) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_service_initiation_on_remote_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may start Windows Services on remote systems, but this activity is usually limited to a small set of hosts or users.","['Active Directory Lateral Movement', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://docs.microsoft.com/en-us/windows/win32/services/controlling-a-service-using-sc', 'https://attack.mitre.org/techniques/T1543/003/']","['Create or Modify System Process', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/3f613dc0-21f2-4063-93b1-5d3c15eef22f/,Suspicious Curl Network Connection,['T1105'],"The following analytic identifies the use of a curl contacting suspicious remote domains to checkin to Command And Control servers or download further implants. In the context of Silver Sparrow, curl is identified contacting s3.amazonaws.com. This particular behavior is common with MacOS adware-malicious software.",['TTP'],"February 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=curl Processes.process=s3.amazonaws.com by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `suspicious_curl_network_connection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']",Unknown. Filter as needed.,"['Silver Sparrow', 'Ingress Tool Transfer', 'Linux Living Off The Land']","['https://research.splunk.com/stories/silver_sparrow', 'https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://redcanary.com/blog/clipping-silver-sparrows-wings/', 'https://www.marcosantadev.com/manage-plist-files-plistbuddy/']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3f6bbf22-093e-4cb4-9641-83f47b8444b6/,Elevated Group Discovery With Wmic,"['T1069', 'T1069.002']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for specific domain groups. Red Teams and adversaries alike use net.exe to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.,['TTP'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process=*/NAMESPACE:\\\\root\\directory\\ldap*) (Processes.process=""*Domain Admins*"" OR Processes.process=""*Enterprise Admins*"" OR Processes.process=""*Schema Admins*"" OR Processes.process=""*Account Operators*"" OR Processes.process=""*Server Operators*"" OR Processes.process=""*Protected Users*"" OR Processes.process=""*Dns Admins*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `elevated_group_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory', 'https://adsecurity.org/?p=3658']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3fb2e8e3-7bc0-4567-9722-c5ab9f8595eb/,Windows Create Local Account,"['T1136.001', 'T1136']","The following analytic identifies a new local user account added to a computer. Note that, this should be restricted to critical assets.",['Anomaly'],"October 5, 2022","| tstats `security_content_summariesonly` values(All_Changes.result_id) as result_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Change where All_Changes.result_id=4720 by All_Changes.user All_Changes.dest All_Changes.result All_Changes.action 
| `drop_dm_object_name(""All_Changes"")` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_create_local_account_filter`","['security_content_summariesonly', 'security_content_ctime']","['All_Changes.user', 'All_Changes.dest', 'All_Changes.result', 'All_Changes.action']",It is possible that an administrator created the account. Verifying activity with an administrator is advised. This analytic is set to anomaly to allow for risk to be added. Filter and tune as needed. Restrict to critical infrastructure to reduce any volume.,['Account Monitoring and Controls'],['https://research.splunk.com/stories/account_monitoring_and_controls'],['https://thedfirreport.com/2022/03/21/apt35-automates-initial-access-using-proxyshell/'],"['Change', 'Create Account', 'Local Account', 'Persistence', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/3fc16961-97e5-4a5b-a079-e4ab0d9763eb/,Windows PowerShell Add Module to Global Assembly Cache,"['T1505', 'T1505.004']","The following PowerShell Script Block analytic identifies the native ability to add a DLL to the Windows Global Assembly Cache. Each computer where the Common Language Runtime is installed has a machine-wide code cache called the Global Assembly Cache. The Global Assembly Cache stores assemblies specifically designated to be shared by several applications on the computer. By adding a DLL to the GAC, this allows an adversary to call it via any other means across the operating systems. This is native and built into Windows. Per the Microsoft blog, the more high fidelity method may be to look for W3WP.exe spawning PowerShell that includes the same CommandLine as identified in this analytic.",['TTP'],"January 18, 2023","`powershell` EventCode=4104 ScriptBlockText IN(""*system.enterpriseservices.internal.publish*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_add_module_to_global_assembly_cache_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']",False positives may be present based on developers or third party utilities adding items to the GAC.,['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.microsoft.com/en-us/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4006adac-5937-11eb-ae93-0242ac130002/,Suspicious MSBuild Rename,"['T1036', 'T1127', 'T1036.003', 'T1127.001']","The following analytic identifies renamed instances of msbuild.exe executing. Msbuild.exe is natively found in C:\Windows\Microsoft.NET\Framework\v4.0.30319 and C:\Windows\Microsoft.NET\Framework64\v4.0.30319. During investigation, identify the code executed and what is executing a renamed instance of MSBuild.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=msbuild.exe AND Processes.original_file_name=MSBuild.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_msbuild_rename_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of msbuild, triggering a false positive.","['Trusted Developer Utilities Proxy Execution MSBuild', 'Masquerading - Rename System Utilities', 'Living Off The Land', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1127.001/T1127.001.md', 'https://github.com/infosecn1nja/MaliciousMacroMSBuild/']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'MSBuild', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/404620de-46d8-48b6-90cc-8a8d7b0876a3/,Shim Database Installation With Suspicious Parameters,"['T1546.011', 'T1546']","This search detects the process execution and arguments required to silently create a shim database.  The sdbinst.exe application is used to install shim database files (.sdb). A shim is a small library which transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.",['TTP'],"November 23, 2020","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sdbinst.exe by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `shim_database_installation_with_suspicious_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",None identified,['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],N/A,"['Application Shimming', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4057291a-b8cf-11eb-95fe-acde48001122/,Detect Renamed 7-Zip,"['T1560.001', 'T1560']","The following analytic identifies renamed 7-Zip usage using Sysmon. At this stage of an attack, review parallel processes and file modifications for data that is staged or potentially have been exfiltrated. This analytic utilizes the OriginalFileName to capture the renamed process. During triage, validate this is the legitimate version of 7zip by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.original_file_name=7z*.exe AND Processes.process_name!=7z*.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_7_zip_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives, however this analytic will need to be modified for each environment if Sysmon is not used.",['Collection and Staging'],['https://research.splunk.com/stories/collection_and_staging'],['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1560.001/T1560.001.md'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/406c21d6-6c75-4e9f-9ca9-48049a1dd90e/,Windows Input Capture Using Credential UI Dll,"['T1056.002', 'T1056']","The following analytic identifies a process that loads the credui.dll module. This legitimate module is typically abused by adversaries, threat actors and red teamers to create a credential UI prompt dialog box to lure users for possible credential theft or can be used to dump the credentials of a targeted host. This hunting query is a good pivot to check why the process loaded this dll and if it is a legitimate file. This hunting query may hit false positive for a third party application that uses a credential login UI for user login.",['Hunting'],"August 24, 2022","`sysmon` EventCode=7  (ImageLoaded = ""*\\credui.dll"" AND OriginalFileName = ""credui.dll"") OR (ImageLoaded = ""*\\wincredui.dll"" AND OriginalFileName = ""wincredui.dll"") AND NOT(Image IN(""*\\windows\\explorer.exe"", ""*\\windows\\system32\\*"", ""*\\windows\\sysWow64\\*"", ""*:\\program files*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded OriginalFileName dest EventCode Signed ProcessId ProcessGuid 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_input_capture_using_credential_ui_dll_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",this module can be loaded by a third party application. Filter is needed.,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://docs.microsoft.com/en-us/windows/win32/api/wincred/nf-wincred-creduipromptforcredentialsa', 'https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.002/T1056.002.md#atomic-test-2---powershell---prompt-user-for-password']","['Collection', 'Collection', 'Credential Access', 'Credential Access', 'GUI Input Capture', 'Input Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/40925f12-4709-11ec-bb43-acde48001122/,High Frequency Copy Of Files In Network Share,['T1537'],This analytic is to detect a suspicious high frequency copying/moving of files in network share as part of information sabotage. This anomaly event can be a good indicator of insider trying to sabotage data by transfering classified or internal files within network share to exfitrate it after or to lure evidence of insider attack to other user. This behavior may catch several noise if network share is a common place for classified or internal document processing.,['Anomaly'],"November 16, 2021","`wineventlog_security` EventCode=5145 Relative_Target_Name IN (""*.doc"",""*.docx"",""*.xls"",""*.xlsx"",""*.ppt"",""*.pptx"",""*.log"",""*.txt"",""*.db"",""*.7z"",""*.zip"",""*.rar"",""*.tar"",""*.gz"",""*.jpg"",""*.gif"",""*.png"",""*.bmp"",""*.pdf"",""*.rtf"",""*.key"") Object_Type=File Share_Name IN (""\\\\*\\C$"",""\\\\*\\IPC$"",""\\\\*\\admin$"") Access_Mask= ""0x2"" 
|  bucket _time span=5m 
| stats values(Relative_Target_Name) as valRelativeTargetName, values(Share_Name) as valShareName, values(Object_Type) as valObjectType, values(Access_Mask) as valAccessmask, values(src_port) as valSrcPort, values(Source_Address) as valSrcAddress count as numShareName by dest, _time, EventCode, user 
| eventstats avg(numShareName) as avgShareName, stdev(numShareName) as stdShareName, count as numSlots by dest, _time, EventCode, user 
|  eval upperThreshold=(avgShareName + stdShareName *3) 
|  eval isOutlier=if(avgShareName > 20 and avgShareName >= upperThreshold, 1, 0) 
|  search isOutlier=1 
| `high_frequency_copy_of_files_in_network_share_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Share_Name', 'Relative_Target_Name', 'Object_Type', 'Access_Mask', 'user', 'src_port', 'Source_Address']",this behavior may seen in normal transfer of file within network if network share is common place for sharing documents.,"['Information Sabotage', 'Insider Threat']","['https://research.splunk.com/stories/information_sabotage', 'https://research.splunk.com/stories/insider_threat']",['https://attack.mitre.org/techniques/T1537/'],"['Exfiltration', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Transfer Data to Cloud Account']",['Endpoint']
https://research.splunk.com/endpoint/40bb64f9-f619-4e3d-8732-328d40377c4b/,MacOS - Re-opened Applications,[],This search looks for processes referencing the plist files that determine which applications are re-opened when a user reboots their machine.,['TTP'],"February 7, 2020","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*com.apple.loginwindow*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `macos___re_opened_applications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process', 'Processes.user', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest']","At this stage, there are no known false positives. During testing, no process events refering the com.apple.loginwindow.plist files were observed during normal operation of re-opening applications on reboot. Therefore, it can be asumed that any occurences of this in the process events would be worth investigating. In the event that the legitimate modification by the system of these files is in fact logged to the process log, then the process_name of that process can be added to an allow list.",['ColdRoot MacOS RAT'],['https://research.splunk.com/stories/coldroot_macos_rat'],N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/40c2ba5b-dd6a-496b-9e6e-c9524d0be167/,Windows IIS Components Module Failed to Load,"['T1505', 'T1505.004']",The following analytic utilizes EventCode 2282 which generates when a Module DLL could not be loaded due to a configuration problem. This typically occurs when a IIS module is installed but is failing to load. This typically results in thousands of events until the issue is resolved. Review the module that is failing and determine if it is legitimate or not.,['Anomaly'],"December 20, 2022","`wineventlog_application` EventCode=2282 
| stats  count min(_time) as firstTime max(_time) as lastTime by  EventCode dest Name ModuleDll 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iis_components_module_failed_to_load_filter`","['wineventlog_application', 'security_content_ctime']","['_time', 'OpCode', 'EventCode', 'ComputerName', 'Message']",False positives will be present until all module failures are resolved or reviewed.,['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://social.technet.microsoft.com/wiki/contents/articles/21757.event-id-2282-iis-worker-process-availability.aspx', 'https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004', 'https://strontic.github.io/xcyclopedia/library/appcmd.exe-055B2B09409F980BF9B5A3969D01E5B2.html']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/40ccb8e0-1785-466e-901e-6a8b75c04ecd/,Windows Cached Domain Credentials Reg Query,"['T1003.005', 'T1003']",The following analytic identifies a process command line related to the discovery of cache domain credential logon count in the registry. This Technique was being abused by several post exploitation tool like Winpeas where it query CachedLogonsCount registry value in Winlogon registry. This value can be good information about the login caching setting on the Windows OS target host. A value of 0 means login caching is disable and values > 50 caches only 50 login attempts. By default all versions of Windows 10 save cached logins except Windows Server 2008.,['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_reg` AND Processes.process = ""* query *"" AND Processes.process = ""*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon*"" AND Processes.process = ""*CACHEDLOGONSCOUNT*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_cached_domain_credentials_reg_query_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/', 'https://learn.microsoft.com/de-de/troubleshoot/windows-server/user-profiles-and-logon/cached-domain-logon-information', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS']","['Cached Domain Credentials', 'Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/40e3b299-19a5-4460-96e9-e1467f714f8e/,PowerShell Enable PowerShell Remoting,"['T1059.001', 'T1059']","This analytic utilizes PowerShell Script Block Logging (EventCode 4104) to identify the use of Enable-PSRemoting cmdlet. This cmdlet allows users to enable PowerShell remoting on a local or remote computer, which allows other computers to run commands on the target computer. The ability to remotely execute commands can be abused by attackers to take control of compromised systems and pivot to other systems on the network. By detecting the use of Enable-PSRemoting cmdlet via script block logging, this analytic can help organizations identify potential malicious activity related to attackers attempting to gain remote control of compromised systems.",['Anomaly'],"March 22, 2023","`powershell` EventCode=4104 ScriptBlockText=""*Enable-PSRemoting*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `powershell_enable_powershell_remoting_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer']","Note that false positives may occur due to the use of the Enable-PSRemoting cmdlet by legitimate users, such as system administrators. It is recommended to apply appropriate filters as needed to minimize the number of false positives.",['Malicious PowerShell'],['https://research.splunk.com/stories/malicious_powershell'],['https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enable-psremoting?view=powershell-7.3'],"['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/41243735-89a7-4c83-bcdd-570aa78f00a1/,Domain Controller Discovery with Nltest,['T1018'],"This analytic looks for the execution of nltest.exe with command-line arguments utilized to discover remote systems. The arguments /dclist: and '/dsgetdc:', can be used to return a list of all domain controllers. Red Teams and adversaries alike may use nltest.exe to identify domain controllers in a Windows Domain for situational awareness and Active Directory Discovery.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""nltest.exe"") (Processes.process=""*/dclist:*"" OR Processes.process=""*/dsgetdc:*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_controller_discovery_with_nltest_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A', 'Rhysida Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/415b4306-8bfb-11eb-85c4-acde48001122/,CertUtil Download With URLCache and Split Arguments,['T1105'],"Certutil.exe may download a file from a remote destination using -urlcache. This behavior does require a URL to be passed on the command-line. In addition, -f (force) and -split (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for certutil.exe to contact public IP space. However, it is uncommon for certutil.exe to write files to world writeable paths.\ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question.",['TTP'],"February 3, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` (Processes.process=*urlcache* Processes.process=*split*) OR Processes.process=*urlcache* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.original_file_name Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `certutil_download_with_urlcache_and_split_arguments_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives in most environments, however tune as needed based on parent-child relationship or network connection.","['Ingress Tool Transfer', 'DarkSide Ransomware', 'Living Off The Land', 'ProxyNotShell', 'CISA AA22-277A', 'Flax Typhoon', 'Forest Blizzard']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/forest_blizzard']","['https://attack.mitre.org/techniques/T1105/', 'https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats', 'https://web.archive.org/web/20210921110637/https://www.fireeye.com/blog/threat-research/2019/10/certutil-qualms-they-came-to-drop-fombs.html']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/41a0e58e-884c-11ec-9976-acde48001122/,Windows Schtasks Create Run As System,"['T1053.005', 'T1053']","The following analytic identifies the creation of a new task to start and run as an elevated user - SYSTEM using Schtasks.exe. This behavior is commonly used by adversaries to spawn a process in an elevated state. If a true positive is found, it suggests an attacker is attempting to persist within the environment or potentially deliver additional malicious payloads, leading to data theft, ransomware, or other damaging outcomes. Upon triage, review the scheduled task's source and the command to be executed. Capture and inspect any relevant on-disk artifacts, and look for concurrent processes to identify the attack source. This approach helps analysts detect potential threats earlier and mitigate the risks.",['TTP'],"February 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_schtasks` Processes.process=""*/create *"" AND Processes.process=""*/ru *"" AND Processes.process=""*system*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_schtasks_create_run_as_system_filter`","['security_content_summariesonly', 'process_schtasks', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives will be limited to legitimate applications creating a task to run as SYSTEM. Filter as needed based on parent process, or modify the query to have world writeable paths to restrict it.","['Windows Persistence Techniques', 'Qakbot', 'Scheduled Tasks']","['https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/scheduled_tasks']","['https://pentestlab.blog/2019/11/04/persistence-scheduled-tasks/', 'https://www.ired.team/offensive-security/persistence/t1053-schtask', 'https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/41bbb371-28ba-439c-bb5c-d9930c28365d/,Windows AD Cross Domain SID History Addition,"['T1134.005', 'T1134']","The following analytic looks for changes to the sIDHistory AD attribute of user or computer objects within different domains. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries for inter-domain privilege escalation and persistence.",['TTP'],"November 17, 2022","`wineventlog_security` (EventCode=4742 OR EventCode=4738) NOT SidHistory IN (""%%1793"", -) 
| rex field=SidHistory ""(^%{
|^)(?P<SidHistoryMatch>.*)(\-
|\\\)"" 
| rex field=TargetSid ""^(?P<TargetSidmatch>.*)(\-
|\\\)"" 
| where SidHistoryMatch!=TargetSidmatch AND SidHistoryMatch!=TargetDomainName 
| rename TargetSid as userSid 
| table _time action status host user userSid SidHistory Logon_ID src_user 
| `windows_ad_cross_domain_sid_history_addition_filter`",['wineventlog_security'],"['_time', 'EventCode', 'SidHistory', 'TargetSid', 'TargetDomainName', 'user', 'src_user', 'Logon_ID']",Domain mergers and migrations may generate large volumes of false positives for this analytic.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://adsecurity.org/?p=1772', 'https://learn.microsoft.com/en-us/windows/win32/adschema/a-sidhistory?redirectedfrom=MSDN', 'https://learn.microsoft.com/en-us/defender-for-identity/security-assessment-unsecure-sid-history-attribute']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'SID-History Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/425a6657-c5e4-4cbb-909e-fc9e5d326f01/,Windows Defender ASR Rules Stacking,"['T1566.001', 'T1566.002', 'T1059']","This hunting analytic targets a range of security events from Microsoft Defender, focusing on the Exploit Guard and Attack Surface Reduction (ASR) features. It monitors specific Event IDs - Event IDs 1121 and 1126 indicate active blocking of unauthorized operations or dangerous network connections, whereas Event IDs 1122 and 1125 represent audit logs for similar activities. Event ID 1129 shows user overrides on blocked operations. For ASR-related activities, Event IDs 1131 and 1133 signal blocked operations, while 1132 and 1134 are audit logs. Event ID 5007 alerts on configuration changes, possibly indicating security breaches. 
Additionally, the analytic utilizes a lookup to correlate ASR rule GUIDs with their descriptive names, enhancing understanding of the context behind these security alerts. This includes rules for blocking vulnerable drivers, restricting actions of Adobe Reader and Office applications, and protecting against various malware and unauthorized system changes. This comprehensive approach aids in assessing policy enforcement and potential security risks.",['Hunting'],"November 20, 2023","`ms_defender` EventCode IN (1121, 1122, 1125, 1126, 1129, 1131, 1132, 1133, 1134, 5007) 
| lookup asr_rules ID OUTPUT ASR_Rule 
| fillnull value=NULL 
| stats count min(_time) as firstTime max(_time) as lastTime by host Parent_Commandline, Process_Name, Path, ID, EventCode, ASR_Rule 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| rename host as dest 
| `windows_defender_asr_rules_stacking_filter`","['security_content_ctime', 'ms_defender']","['host', 'Parent_Commandline', 'Target_Commandline', 'ID', 'EventCode', 'ASR_Rule']","False positives are not expected with this analytic, since it is a hunting analytic. It is meant to show the use of ASR rules and how they can be used to detect malicious activity.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],"['https://asrgen.streamlit.app/', 'https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/attack-surface-reduction?view=o365-worldwide']","['Command and Scripting Interpreter', 'Execution', 'Initial Access', 'Initial Access', 'Spearphishing Attachment', 'Spearphishing Link', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/429141be-8311-11eb-adb6-acde48001122/,Windows Service Created with Suspicious Service Path,"['T1569', 'T1569.002']","The following analytics uses Windows Event Id 7045, New Service Was Installed, to identify the creation of a Windows Service where the service binary path path is located in a non-common Service folder in Windows. Red Teams and adversaries alike may create malicious Services for lateral movement or remote code execution as well as persistence and execution. The Clop ransomware has also been seen in the wild abusing Windows services.",['TTP'],"November 14, 2022","`wineventlog_system` EventCode=7045  Service_File_Name = ""*.exe"" NOT (Service_File_Name IN (""*:\\Windows\\*"", ""*:\\Program File*"", ""*:\\Programdata\\*"", ""*%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Service_File_Name Service_Name Service_Start_Type Service_Type dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_created_with_suspicious_service_path_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'Service_File_Name', 'Service_Type', '_time', 'Service_Name', 'Service_Start_Type', 'dest']",Legitimate applications may install services with uncommon services paths.,"['Clop Ransomware', 'Active Directory Lateral Movement', 'Brute Ratel C4', 'Qakbot', 'Snake Malware', 'Flax Typhoon', 'PlugX', 'CISA AA23-347A']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/snake_malware', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/429d611b-3183-49a7-b235-fc4203c4e1cb/,Windows Defender ASR Rule Disabled,['T1112'],"The following analytic identifies when a Windows Defender ASR rule disabled events. ASR is a feature of Windows Defender Exploit Guard that prevents actions and apps that are typically used by exploit-seeking malware to infect machines. ASR rules are applied to processes and applications. When a process or application attempts to perform an action that is blocked by an ASR rule, an event is generated. This detection searches for ASR rule disabled events that are generated when an ASR rule is disabled.",['TTP'],"November 27, 2023","`ms_defender` EventCode IN (5007) 
| rex field=New_Value ""0x(?<New_Registry_Value>\\d+)$"" 
| rex field=Old_Value ""0x(?<Old_Registry_Value>\\d+)$"" 
| rex field=New_Value ""Rules\\\\(?<ASR_ID>[A-Fa-f0-9\\-]+)\\s*="" 
| lookup asr_rules ID AS ASR_ID OUTPUT ASR_Rule 
| eval New_Registry_Value=case(New_Registry_Value==""0"", ""Disabled"", New_Registry_Value==""1"", ""Block"", New_Registry_Value==""2"", ""Audit"", New_Registry_Value==""6"", ""Warn"") 
| eval Old_Registry_Value=case(Old_Registry_Value==""0"", ""Disabled"", Old_Registry_Value==""1"", ""Block"", Old_Registry_Value==""2"", ""Audit"", Old_Registry_Value==""6"", ""Warn"") 
| search New_Registry_Value=""Disabled"" 
| stats count min(_time) as firstTime max(_time) as lastTime by host, New_Value, Old_Value, Old_Registry_Value, New_Registry_Value, ASR_Rule 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| rename host as dest 
| `windows_defender_asr_rule_disabled_filter`","['security_content_ctime', 'ms_defender']","['host', 'New_Value', 'Old_Value', 'Old_Registry_Value', 'New_Registry_Value', 'ASR_Rule']",False positives may occur if applications are typically disabling ASR rules in the environment. Monitor for changes to ASR rules to determine if this is a false positive.,['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],['https://asrgen.streamlit.app/'],"['Defense Evasion', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/42b4b438-beed-11eb-ba1d-acde48001122/,Detect SharpHound File Modifications,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","SharpHound is used as a reconnaissance collector, ingestor, for BloodHound. SharpHound will query the domain controller and begin gathering all the data related to the domain and trusts. For output, it will drop a .zip file upon completion following a typical pattern that is often not changed. This analytic focuses on the default file name scheme. Note that this may be evaded with different parameters within SharpHound, but that depends on the operator. -randomizefilenames and -encryptzip are two examples. In addition, executing SharpHound via .exe or .ps1 without any command-line arguments will still perform activity and dump output to the default filename. Example default filename 20210601181553_BloodHound.zip. SharpHound creates multiple temp files following the same pattern 20210601182121_computers.json, domains.json, gpos.json, ous.json and users.json. Tuning may be required, or remove these json's entirely if it is too noisy. During traige, review parallel processes for further suspicious behavior. Typically, the process executing the .ps1 ingestor will be PowerShell.",['TTP'],"October 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*bloodhound.zip"", ""*_computers.json"", ""*_gpos.json"", ""*_domains.json"", ""*_users.json"", ""*_groups.json"", ""*_ous.json"", ""*_containers.json"") by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.user
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_sharphound_file_modifications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'file_path', 'dest', 'file_name', 'process_id', 'file_create_time']",False positives should be limited as the analytic is specific to a filename with extension .zip. Filter as needed.,"['Discovery Techniques', 'Ransomware']","['https://research.splunk.com/stories/discovery_techniques', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/software/S0521/', 'https://thedfirreport.com/?s=bloodhound', 'https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors', 'https://github.com/BloodHoundAD/SharpHound3', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md#atomic-test-2---run-bloodhound-from-local-disk']","['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/42d40a22-9be3-11eb-8f08-acde48001122/,Excel Spawning PowerShell,"['T1003.002', 'T1003']","The following detection identifies Microsoft Excel spawning PowerShell. Typically, this is not common behavior and not default with Excel.exe. Excel.exe will generally be found in the following path C:\Program Files\Microsoft Office\root\Office16 (version will vary). PowerShell spawning from Excel.exe is common for a spearphishing attachment and is actively used. Albeit, the command executed will most likely be encoded and captured via another detection. During triage, review parallel processes and identify any files that may have been written.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""excel.exe"" `process_powershell` by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.user Processes.dest Processes.original_file_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
|`security_content_ctime(lastTime)` 
| `excel_spawning_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, but if any are present, filter as needed.",['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://redcanary.com/threat-detection-report/techniques/powershell/', 'https://attack.mitre.org/techniques/T1566/001/']","['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/42f8f1a2-4228-11ec-aade-acde48001122/,Windows Curl Upload to Remote Destination,['T1105'],"The following analytic identifies the use of Windows Curl.exe uploading a file to a remote destination. 
-T or --upload-file is used when a file is to be uploaded to a remotge destination. 
-d or --data POST is the HTTP method that was invented to send data to a receiving web application, and it is, for example, how most common HTML forms on the web work. 
HTTP multipart formposts are done with -F, but this appears to not be compatible with the Windows version of Curl. Will update if identified adversary tradecraft. 
Adversaries may use one of the three methods based on the remote destination and what they are attempting to upload (zip vs txt). During triage, review parallel processes for further behavior. In addition, identify if the upload was successful in network logs. If a file was uploaded, isolate the endpoint and review.",['TTP'],"November 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_curl` Processes.process IN (""*-T *"",""*--upload-file *"", ""*-d *"", ""*--data *"", ""*-F *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_curl_upload_to_remote_destination_filter`","['security_content_summariesonly', 'process_curl', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be limited to source control applications and may be required to be filtered out.,['Ingress Tool Transfer'],['https://research.splunk.com/stories/ingress_tool_transfer'],"['https://everything.curl.dev/usingcurl/uploads', 'https://techcommunity.microsoft.com/t5/containers/tar-and-curl-come-to-windows/ba-p/382409', 'https://twitter.com/d1r4c/status/1279042657508081664?s=20']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/435c6b33-adf9-47fe-be87-8e29fd6654f5/,Linux Impair Defenses Process Kill,"['T1562.001', 'T1562']","This analytic looks for PKILL process execution for possible termination of process. This technique is being used by several Threat actors, adversaries and red teamers to terminate processes in a targeted linux machine. This Hunting detection can be a good pivot to check a possible defense evasion technique or termination of security application in a linux host or wiper like Awfulshred that corrupt all files.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN ( ""pgrep"", ""pkill"") Processes.process = ""*pkill *"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_impair_defenses_process_kill_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",network admin can terminate a process using this linux command. Filter is needed.,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/', 'https://cert.gov.ua/article/3718487']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4479539c-71fc-11ec-b2e2-acde48001122/,Linux Possible Access To Sudoers File,"['T1548.003', 'T1548']","This analytic is to detect a possible access or modification of /etc/sudoers file. ""/etc/sudoers"" file controls who can run what command as what users on what machine and can also control whether a specific user need a password for particular commands.  adversaries and threat actors abuse this file to gain persistence and/or privilege escalation during attack on targeted host.",['Anomaly'],"January 10, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN(""cat"", ""nano*"",""vim*"", ""vi*"")  AND Processes.process IN(""*/etc/sudoers*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_access_to_sudoers_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://attack.mitre.org/techniques/T1548/003/', 'https://web.archive.org/web/20210708035426/https://www.cobaltstrike.com/downloads/csmanual43.pdf']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/44fddcb2-8d3b-454c-874e-7c6de5a4f7ac/,Detect Rare Executables,[],"This search will return a table of processes in the a given window, remove process names which are in the allowed list and list out the top 30 rare processes discovered on different hosts.",['Anomaly'],"November 10, 2022","| tstats `security_content_summariesonly` count values(Processes.dest) as dest values(Processes.user) as user min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.process_name 
| rename Processes.process_name as process 
| `filter_rare_process_allow_list` 
| sort count 
| head 30 
| rex field=user ""(?<user_domain>.*)\\\\(?<user_name>.*)"" 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_rare_executables_filter`","['security_content_summariesonly', 'filter_rare_process_allow_list', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.process_name']","Some legitimate processes may be only rarely executed in your environment. As these are identified, update rare_process_allow_list_local.csv to filter them out of your search results.","['Unusual Processes', 'Rhysida Ransomware']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/rhysida_ransomware']",N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4510cae0-96a2-4840-9919-91d262db210a/,Linux AWK Privilege Escalation,"['T1548.003', 'T1548']","Awk is mostly used for processing and scanning patterns. It checks one or more files to determine whether any lines fit the specified patterns, and if so, it does the appropriate action. If sudo right is given to AWK binary for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"July 31, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*sudo*"" AND Processes.process=""*awk*""  AND Processes.process=""*BEGIN*system*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_awk_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://www.hacknos.com/awk-privilege-escalation/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/453a6b0f-b0ea-48fa-9cf4-20537ffdd22c/,Windows UAC Bypass Suspicious Child Process,"['T1548', 'T1548.002']","The following analytic detects when an executable known for User Account Control bypass exploitation, spawns a child process in user controlled location or a command shell executable (cmd, powershell, etc). This behavioral chain may indicate that an attacker has used a UAC Bypass exploit to successfully escalate privileges.",['TTP'],"November 20, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""high"",""system"") AND Processes.parent_process_name IN (`uacbypass_process_name`) AND (Processes.process_name IN (""cmd.exe"",""powershell.exe"",""pwsh.exe"",""wscript"",""cscript.exe"",""bash.exe"",""werfault.exe"") OR Processes.process IN (""*\\\\*"",""*\\Users\\*"",""*\\ProgramData\\*"",""*\\Temp\\*"")) by Processes.dest, Processes.user, Processes.parent_process_guid, Processes.parent_process, Processes.parent_process_name Processes.process_name Processes.process, Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| where parent_process_name != process_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_uac_bypass_suspicious_child_process_filter`","['security_content_summariesonly', 'uacbypass_process_name', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_guid', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name Processes.process', 'Processes.process_path', 'Processes.process_integrity_level', 'Processes.process_current_directory']","Including Werfault.exe may cause some unintended false positives related to normal application faulting, but is used in a number of UAC bypass techniques.","['Windows Defense Evasion Tactics', 'Living Off The Land']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1548/002/', 'https://atomicredteam.io/defense-evasion/T1548.002/', 'https://hadess.io/user-account-control-uncontrol-mastering-the-art-of-bypassing-windows-uac/', 'https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/45b125c4-866f-11eb-a95a-acde48001122/,Windows High File Deletion Frequency,['T1485'],This search looks for high frequency of file deletion relative to process name and process id. These events usually happen when the ransomware tries to encrypt the files with the ransomware file extensions and sysmon treat the original files to be deleted as soon it was replace as encrypted data.,['Anomaly'],"April 14, 2023","`sysmon` EventCode=23 TargetFilename IN (""*.cmd"", ""*.ini"",""*.gif"", ""*.jpg"", ""*.jpeg"", ""*.db"", ""*.ps1"", ""*.doc*"", ""*.xls*"", ""*.ppt*"", ""*.bmp"",""*.zip"", ""*.rar"", ""*.7z"", ""*.chm"", ""*.png"", ""*.log"", ""*.vbs"", ""*.js"", ""*.vhd"", ""*.bak"", ""*.wbcat"", ""*.bkf"" , ""*.backup*"", ""*.dsk"", ""*.win"") 
| stats values(TargetFilename) as deleted_files min(_time) as firstTime max(_time) as lastTime count by dest user EventCode Image ProcessID 
|where count >=100 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_high_file_deletion_frequency_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'TargetFilename', 'dest', 'user', 'Image', 'ProcessID', '_time']",user may delete bunch of pictures or files in a folder.,"['Clop Ransomware', 'DarkCrystal RAT', 'Swift Slicer', 'Data Destruction', 'WhisperGate', 'Sandworm Tools']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/swift_slicer', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/sandworm_tools']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Data Destruction', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/45cd08f8-a2c9-4f4e-baab-e1a0c624b0ab/,Disabling Windows Local Security Authority Defences via Registry,['T1556'],This detection looks for the deletion of registry keys which disable LSA protection and MS Defender Device Guard.,['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` min(_time) as _time from datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\LsaCfgFlags"", ""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\DeviceGuard\\*"", ""*\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\RunAsPPL"") Registry.action IN (deleted, unknown) by Registry.action Registry.registry_path Registry.process_guid Registry.dest Registry.user
| `drop_dm_object_name(Registry)` 
| join type=outer process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by Processes.user Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)`] 
| table _time action dest user parent_process_name parent_process process_name process process_guid registry_path 
| `disabling_windows_local_security_authority_defences_via_registry_filter`",['security_content_summariesonly'],"['_time', 'Registry.action', 'Registry.registry_path', 'Registry.dest', 'Registry.user']",Potential to be triggered by an administrator disabling protections for troubleshooting purposes.,"['Windows Defence Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defence_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://docs.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection', 'https://docs.microsoft.com/en-us/windows/security/identity-protection/credential-guard/credential-guard-manage']","['Credential Access', 'Defense Evasion', 'Endpoint', 'Modify Authentication Process', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/45e52536-ae42-11eb-b5c6-acde48001122/,Excessive Usage Of Net App,['T1531'],"This analytic identifies excessive usage of net.exe or net1.exe within a bucket of time (1 minute). This behavior was seen in a Monero incident where the adversary attempts to create many users, delete and disable users as part of its malicious behavior.",['Anomaly'],"June 13, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_net` by Processes.process_name Processes.parent_process_name Processes.original_file_name Processes.dest Processes.user _time span=1m 
| where count >=10 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_usage_of_net_app_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown. Filter as needed. Modify the time span as needed.,"['Prestige Ransomware', 'Graceful Wipe Out Attack', 'XMRig', 'Windows Post-Exploitation', 'Azorult', 'Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Account Access Removal', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/45ebd21c-f4bf-4ced-bd49-d25b6526cebb/,Windows Query Registry Browser List Application,['T1012'],"The following analytic identifies a suspicious process accessing default internet browsers registry entry. This registry is used by Windows to store information about default internet browsers installed on a system. Malware, adversaries or red-teamers can abuse this registry key to collect data about the installed internet browsers and their associated settings. This information can be used to steal sensitive data such as login credentials, browsing history, and saved passwords. We observed noise that needs to be filter out so we add several known path of Windows Application to make this detection more stable.",['Anomaly'],"April 25, 2023","`wineventlog_security` EventCode=4663 object_file_path IN (""*\\SOFTWARE\\Clients\\StartMenuInternet\\*"", ""*\\SOFTWARE\\Clients\\StartMenuInternet\\*"") AND NOT (process_path IN (""*:\\Windows\\System32\\*"", ""*:\\Windows\\SysWow64\\*"", ""*:\\Program Files*"", ""*:\\Windows\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_query_registry_browser_list_application_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",uninstall application may access this registry to remove the entry of the target application. filter is needed.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/462d17d8-1f71-11ec-ad07-acde48001122/,Change Default File Association,"['T1546.001', 'T1546']","This analytic is developed to detect suspicious registry modification to change the default file association of windows to malicious payload. This technique was seen in some APT where it modify the default process to run file association, like .txt to notepad.exe. Instead notepad.exe it will point to a Script or other payload that will load malicious commands to the compromised host.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path =""*\\shell\\open\\command\\*"" Registry.registry_path = ""*HKCR\\*"" by Registry.dest  Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `change_default_file_association_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name']",unknown,"['Hermetic Wiper', 'Windows Registry Abuse', 'Prestige Ransomware', 'Windows Privilege Escalation', 'Windows Persistence Techniques', 'Data Destruction']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/data_destruction']",['https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-techniques/privilege-escalation/untitled-3/accessibility-features'],"['Change Default File Association', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/46440222-81d5-44b1-a376-19dcd70d1b08/,Windows Powershell DownloadFile,['T1020'],"The following analytic identifies the use of PowerShell downloading a file using DownloadFile method. This particular method is utilized in many different PowerShell frameworks to download files and output to disk. Identify the source (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell transaction logs are available, review for further details of the implant.",['Anomaly'],"February 11, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""powershell_ise.exe"", ""powershell.exe"", ""sqltoolsps.exe"", ""sqlps.exe"", ""pwsh.exe"", ""pwsh.exe"")) AND match(process_cmd_line, /(?i)downloadfile/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering will need to occur by parent process or command line argument. It may be required to modify this query to an EDR product for more granular coverage.,"['Malicious PowerShell', 'Ingress Tool Transfer', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-5.0', 'https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md']","['Automated Exfiltration', 'Exfiltration', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/4662c6b1-0754-455e-b9ff-3ee730af3ba8/,Windows Modify Registry With MD5 Reg Key Name,['T1112'],"This analytic is designed to identify potentially malicious registry modification characterized by MD5-like registry key names. This technique has been notably observed in NjRAT malware, which employs such registries for fileless storage of keylogs and .DLL plugins. Detecting this tactic serves as an effective means of identifying possible NjRAT malware instances that create or modify registries as part of their malicious activities.",['TTP'],"September 25, 2023","| tstats `security_content_summariesonly`  count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where  Registry.registry_path = ""*\\SOFTWARE\\*"" Registry.registry_value_data = ""Binary Data"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| eval dropped_reg_path = split(registry_path, ""\\"") 
| eval dropped_reg_path_split_count = mvcount(dropped_reg_path) 
| eval validation_result= if(match(registry_value_name,""^[0-9a-fA-F]{32}$""),""md5"",""nonmd5"") 
| where validation_result = ""md5"" AND dropped_reg_path_split_count <= 5 
| table dest user registry_path registry_value_name registry_value_data registry_key_name reg_key_name dropped_reg_path_split_count validation_result 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_with_md5_reg_key_name_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",unknown,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/467ed9d9-8035-470e-ad5e-ae5189283033/,Windows Impair Defense Add Xml Applocker Rules,"['T1562.001', 'T1562']",The following analytic is to identify a process that imports applocker xml policy using PowerShell commandlet. This technique was seen in Azorult malware where it drop an xml Applocker policy that will deny several AV products and further executed the PowerShell Applocker commandlet.,['Hunting'],"June 24, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` AND Processes.process=""*Import-Module Applocker*"" AND Processes.process=""*Set-AppLockerPolicy *""  AND Processes.process=""* -XMLPolicy *"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_add_xml_applocker_rules_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",Administrators may execute this command that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/468b7e11-d362-43b8-b6ec-7a2d3b246678/,Detect RTLO In File Name,"['T1036.002', 'T1036']",This search is used to detect the abuse of the right-to-left override (RTLO or RLO) character (U+202E) RTLO. This technique is used by adversaries to disguise a string and/or file name to make it appear benign. The RTLO character is a non-printing Unicode character that causes the text that follows it to be displayed in reverse.,['TTP'],"April 26, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.file_create_time) as file_create_time from datamodel=Endpoint.Filesystem where Filesystem.file_name!=unknown by Filesystem.dest Filesystem.user Filesystem.process_id Filesystem.file_name Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex file_name =  ""\\x{202E}"" 
| rex field=file_name ""(?<RTLO_file_1>.+)(?<RTLO_exist_file>\\x{202E})(?<RTLO_file_2>.+)"" 
| eval file_name_with_RTLO=file_name 
| eval file_name=RTLO_file_1.RTLO_file_2 
| fields - RTLO* 
| `detect_rtlo_in_file_name_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.user', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.process_id']",Implementation in regions that use right to left in native language.,['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://attack.mitre.org/techniques/T1036/002/', 'https://resources.infosecinstitute.com/topic/spoof-using-right-to-left-override-rtlo-technique-2/', 'https://www.trendmicro.com/en_us/research/17/f/following-trail-blacktech-cyber-espionage-campaigns.html']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Right-to-Left Override', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/46ba0082-61af-11ec-9826-acde48001122/,Linux File Creation In Profile Directory,"['T1546.004', 'T1546']","This analytic looks for suspicious file creation in /etc/profile.d directory to automatically execute scripts by shell upon boot up of a linux machine. This technique is commonly abused by adversaries, malware and red teamers as a persistence mechanism to the targeted or compromised host. This Anomaly detection is a good indicator that someone wants to run a code after boot up which can be done also by the administrator or network operator for automation purposes.",['Anomaly'],"December 20, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/etc/profile.d/*"") by Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_file_creation_in_profile_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create file in profile.d folders for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://attack.mitre.org/techniques/T1546/004/', 'https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/']","['Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell Configuration Modification']",['Endpoint']
https://research.splunk.com/endpoint/46d676aa-40c6-4fe6-b917-d23b621f0f89/,Windows Credentials from Password Stores Deletion,['T1555'],"The following analytic identifies a process execution of Windows OS cmdkey.exe tool. This tool is being abused or used by several post exploitation tool and malware such as Darkgate malware to delete stored user names, passwords or credentials in the targeted Windows OS host. This information can be used by the attacker to gain privilege escalation and persistence in the targeted hosts for further attacks.",['TTP'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""cmdkey.exe"" OR Processes.original_file_name = ""cmdkey.exe"" AND Processes.process = ""*/delete*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_deletion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this tool for auditing process.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Credential Access', 'Credentials from Password Stores', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/477e068e-8b6d-11ec-b6c1-81af21670352/,Windows Powershell Connect to Internet With Hidden Window,['T1020'],"The following hunting analytic identifies PowerShell commands utilizing the WindowStyle parameter to hide the window on the compromised endpoint. This combination of command-line options is suspicious because it is overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet. Removed in this version of the query is New-Object. The analytic identifies all variations of WindowStyle, as PowerShell allows the ability to shorten the parameter. For example w, win, windowsty and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash.",['Anomaly'],"February 11, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""powershell_ise.exe"", ""powershell.exe"", ""sqltoolsps.exe"", ""sqlps.exe"", ""pwsh.exe"")) AND match(process_cmd_line, /(?i)[\-
|\/]w(in*d*o*w*s*t*y*l*e*)*\s+h(i*d*d*e*n*)\s+/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Legitimate process can have this combination of command-line options, but it's not common.","['Malicious PowerShell', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'HAFNIUM Group', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://regexr.com/663rr', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1059.001_PowerShell/OutPowerShellCommandLineParameter.ps1', 'https://ss64.com/ps/powershell.html', 'https://twitter.com/M_haggis/status/1440758396534214658?s=20', 'https://blog.netlab.360.com/ten-families-of-malicious-samples-are-spreading-using-the-log4j2-vulnerability-now/']","['Automated Exfiltration', 'Exfiltration', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/47c69803-2c09-408b-b40a-063c064cbb16/,Windows PowerShell WMI Win32 ScheduledJob,"['T1059.001', 'T1059']","The following analytic detects the use of the PowerShell script block logging mechanism to detect the use of the Win32_ScheduledJob WMI class. This class allows the creation and management of scheduled tasks on Windows systems. However, due to security concerns, the class has been disabled by default in Windows systems, and its use must be explicitly enabled by modifying the registry. As a result, the detection of the use of this class may indicate malicious activity, especially if the class was enabled on the system by the attacker. Therefore, it is recommended to monitor the use of Win32_ScheduledJob through PowerShell script block logging and to investigate any suspicious activity.",['TTP'],"March 27, 2023","`powershell` EventCode=4104 ScriptBlockText=""*win32_scheduledjob*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_wmi_win32_scheduledjob_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode']",False positives may be present based on legacy applications or utilities. Win32_ScheduledJob uses the Remote Procedure Call (RPC) protocol to create scheduled tasks on remote computers. It uses the DCOM (Distributed Component Object Model) infrastructure to establish a connection with the remote computer and invoke the necessary methods. The RPC service needs to be running on both the local and remote computers for the communication to take place.,['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://securityonline.info/wmiexec-regout-get-outputdata-response-from-registry/', 'https://learn.microsoft.com/en-us/windows/win32/cimwin32prov/win32-scheduledjob']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4807e716-43a4-11ec-a0e7-acde48001122/,Runas Execution in CommandLine,"['T1134', 'T1134.001']","This analytic look for a spawned runas.exe process with a administrator user option parameter. This parameter was abused by adversaries, malware author or even red teams to gain elevated privileges in target host. This is a good hunting query to figure out privilege escalation tactics that may used for different stages like lateral movement but take note that administrator may use this command in purpose so its better to see other event context before and after this analytic.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_runas` AND Processes.process = ""*/user:*"" AND Processes.process = ""*admin*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `runas_execution_in_commandline_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_runas']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated or manual execute this command that may generate false positives. filter is needed.,"['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation']",['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/'],"['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Token Impersonation/Theft']",['Endpoint']
https://research.splunk.com/endpoint/48cc1605-538c-4223-8382-e36bee5b540d/,Windows LSA Secrets NoLMhash Registry,['T1003.004'],"The following analytic identifies a modification in the Windows registry related to the Local Security Authority (LSA) in Windows. This registry value is used to determine whether the system should store passwords in the weaker Lan Manager (LM) hash format. Setting it to 0 disables this feature, meaning LM hashes will be stored. Modifying these settings should be done carefully and with a clear understanding of the impact it might have on system security and functionality. This command is often used in security configurations to enforce stronger password storage methods and prevent the storage of weaker LM hashes, which are more susceptible to certain types of attacks. This TTP detection can be a good indicator of any process or user that tries to modify the LSA security configuration.",['TTP'],"December 15, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\System\\CurrentControlSet\\Control\\Lsa\\NoLMHash"" Registry.registry_value_data = 0x00000000) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_lsa_secrets_nolmhash_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.user', 'Registry.dest', 'Registry.action', 'Registry.registry_value_data', 'Registry.process_guid']",Administrator may change this registry setting.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Credential Access', 'Endpoint', 'LSA Secrets', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4902d7aa-0134-11ec-9d65-acde48001122/,Local Account Discovery With Wmic,"['T1087', 'T1087.001']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for local users. The argument useraccount is used to leverage WMI to return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` (Processes.process=*useraccount*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `local_account_discovery_with_wmic_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']",['_time'],Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4927c6f1-4667-42e6-bd7a-f5222116386b/,Windows Modify Registry DisableRemoteDesktopAntiAlias,['T1112'],The following analytic identifies a modification in the Windows registry to DisableRemoteDesktopAntiAlias. This registry setting might be intended to manage or control anti-aliasing behavior (smoothing of edges and fonts) within Remote Desktop sessions. DarkGate malware modify this registry as part of its malicious installation in a targeted host for its remote desktop capabilities.,['TTP'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Terminal Services\\DisableRemoteDesktopAntiAlias""  Registry.registry_value_data = 0x00000001 by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disableremotedesktopantialias_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/492f09cf-5d60-4d87-99dd-0bc325532dda/,Windows Process Injection With Public Source Path,"['T1055', 'T1055.002']","The following analytic identifies a process in a non-standard file path on Windows attempting to create a remote thread into a process. This Windows API,CreateRemoteThread, is commonly used by adversaries for process injection to evade detections or gain privilege escalation.",['Hunting'],"August 24, 2022","`sysmon` EventCode=8 TargetImage = ""*.exe"" AND NOT(SourceImage IN(""C:\\Windows\\*"", ""C:\\Program File*"", ""%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage signature TargetProcessGuid SourceProcessGuid TargetProcessId SourceProcessId StartAddress EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_with_public_source_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest', 'signature', 'TargetProcessGuid', 'SourceProcessGuid', 'StartAddress']","Some security products or third party applications may utilize CreateRemoteThread, filter as needed before enabling as a notable.",['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],['https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/'],"['Defense Evasion', 'Defense Evasion', 'Portable Executable Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/493a879d-519d-428f-8f57-a06a0fdc107e/,Samsam Test File Write,['T1486'],"The search looks for a file named ""test.txt"" written to the windows system directory tree, which is consistent with Samsam propagation.",['TTP'],"December 14, 2018","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_name) as file_name from datamodel=Endpoint.Filesystem where Filesystem.file_path=*\\windows\\system32\\test.txt by Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `samsam_test_file_write_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_name', 'Filesystem.file_path']",No false positives have been identified.,['SamSam Ransomware'],['https://research.splunk.com/stories/samsam_ransomware'],N/A,"['Data Encrypted for Impact', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/49c0d4d6-c55d-4d3a-b3d5-7709fafed70d/,Windows Multiple Accounts Deleted,"['T1098', 'T1078']","The following analytic flags when more than five unique Windows accounts are deleted within a 10-minute period, identified by Event Code 4726 in the Windows Security Event Log. Using the wineventlog_security dataset, it segments data into 10-minute intervals to monitor account deletions, a pattern that could suggest malicious intent like an attacker erasing traces. Teams should adjust the detection's threshold and timeframe to suit their specific environment.",['TTP'],"February 21, 2024","`wineventlog_security` EventCode=4726 status=success 
| bucket span=10m _time 
| stats count dc(user) as unique_users values(user) as user by EventCode signature _time src_user SubjectDomainName TargetDomainName Logon_ID 
| where unique_users > 5 
| `windows_multiple_accounts_deleted_filter`",['wineventlog_security'],"['_time', 'EventCode', 'success', 'TargetUserName', 'SubjectUserName', 'src_user', 'SubjectDomainName', 'TargetDomainName', 'Logon_ID', 'user']","Service accounts may be responsible for the creation, deletion or modification of accounts for legitimate purposes. Filter as needed.",['Azure Active Directory Persistence'],['https://research.splunk.com/stories/azure_active_directory_persistence'],['https://attack.mitre.org/techniques/T1098/'],"['Account Manipulation', 'Defense Evasion', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/4a3f2a7d-6402-4e64-a76a-869588ec3b57/,PowerShell Script Block With URL Chain,"['T1059.001', 'T1105']","The following analytic identifies a suspicious PowerShell script execution via EventCode 4104 that contains multiple URLs within a function or array. This is typically found in obfuscated PowerShell or PowerShell executing embedded .NET or binary files that are attempting to download 2nd stage payloads. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['TTP'],"June 13, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*http:*"",""*https:*"") 
| regex ScriptBlockText=""(\""?(https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*))\""?(?:,
|\))?){2,}"" 
| rex max_match=20 field=ScriptBlockText ""(?<url>https?:\/\/(?:www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b(?:[-a-zA-Z0-9()@:%_\+.~#?&\/=]*))"" 
| eval Path = case(isnotnull(Path),Path,true(),""unknown"") 
| stats count min(_time) as firstTime max(_time) as lastTime list(ScriptBlockText) as command values(Path) as file_name values(UserID) as user values(url) as url dc(url) as url_count by ActivityID, Computer, EventCode 
| rename Computer as dest, EventCode as signature_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_script_block_with_url_chain_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ActivityID', 'Computer', 'ScriptBlockText']","Unknown, possible custom scripting.",['Malicious PowerShell'],['https://research.splunk.com/stories/malicious_powershell'],"['https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations', 'https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/', 'https://attack.mitre.org/techniques/T1059/001/']","['Command And Control', 'Execution', 'Ingress Tool Transfer', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4aa5d062-e893-11eb-9eb2-acde48001122/,Mshta spawning Rundll32 OR Regsvr32 Process,"['T1218', 'T1218.005']",This search is to detect a suspicious mshta.exe process that spawn rundll32 or regsvr32 child process. This technique was seen in several malware nowadays like trickbot to load its initial .dll stage loader to execute and download the the actual trickbot payload.,['TTP'],"July 19, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = ""mshta.exe""  `process_rundll32` OR `process_regsvr32` by Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.process_guid Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `mshta_spawning_rundll32_or_regsvr32_process_filter`","['security_content_summariesonly', 'process_regsvr32', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",limitted. this anomaly behavior is not commonly seen in clean host.,"['Trickbot', 'IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://twitter.com/cyb3rops/status/1416050325870587910?s=21'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/4aefadfe-9abd-4bf8-b3fd-867e9ef95bf8/,Detect Rundll32 Application Control Bypass - advpack,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe loading advpack.dll and ieadvpack.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",['TTP'],"February 4, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*advpack* by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_rundll32_application_control_bypass___advpack_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use advpack.dll or ieadvpack.dll, triggering a false positive.","['Suspicious Rundll32 Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://lolbas-project.github.io/lolbas/Libraries/Advpack/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/4b00f134-6d6a-11ec-a90c-acde48001122/,Linux Sudo OR Su Execution,"['T1548.003', 'T1548']","This analytic is to detect the execution of sudo or su command in linux operating system. The ""sudo"" command allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments. This command is commonly abused by adversaries, malware author and red teamers to elevate privileges to the targeted host. This command can be executed by administrator for legitimate purposes or to execute process that need admin privileges, In this scenario filter is needed.",['Hunting'],"January 4, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""sudo"", ""su"") OR Processes.parent_process_name IN (""sudo"", ""su"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_sudo_or_su_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://attack.mitre.org/techniques/T1548/003/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/4bc788d3-c83a-48c5-a4e2-e0c6dba57889/,Windows Modify Registry DisAllow Windows App,['T1112'],The following analytic identifies modification in the Windows registry to prevent user running specific computer programs that could aid them in manually removing malware or detecting it using security products. This technique was recently identified in Azorult malware where it uses this registry value to prevent several AV products to execute on the compromised host machine.,['TTP'],"June 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\DisallowRun*"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disallow_windows_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",Administrators may enable or disable this feature that may cause some false positive. Filter as needed.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4be54858-432f-11ec-8209-3e22fbd008af/,Scheduled Task Creation on Remote Endpoint using At,"['T1053', 'T1053.002']","The following analytic detects the creation of suspicious tasks on a remote Windows endpoint using the at.exe command with command-line arguments. This technique is commonly used by red teams and adversaries for lateral movement and remote code execution. The at.exe binary leverages the deprecated AT protocol, which may still work on previous versions of Windows. Attackers can enable this protocol on demand by modifying a system registry key. It is important to consider potential false positives. While administrators may create scheduled tasks on remote systems, this activity is typically limited to a small set of hosts or users.
Identifying the creation of scheduled tasks on remote endpoints is crucial for a Security Operations Center (SOC) because it indicates potential unauthorized activity or an attacker attempting to establish persistence or execute malicious code. The impact of a true positive can be significant, leading to unauthorized access, data theft, or other damaging outcomes. During triage, investigate the source and purpose of the scheduled task, inspect relevant on-disk artifacts, and analyze concurrent processes to identify the extent of the attack and take appropriate response actions.",['TTP'],"November 11, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=at.exe OR Processes.original_file_name=at.exe) (Processes.process=*\\\\*) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `scheduled_task_creation_on_remote_endpoint_using_at_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may create scheduled tasks on remote systems, but this activity is usually limited to a small set of hosts or users.","['Active Directory Lateral Movement', 'Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/at', 'https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-scheduledjob?redirectedfrom=MSDN']","['At', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4c2d198b-da58-48d7-ba27-9368732d0054/,Windows Multi hop Proxy TOR Website Query,"['T1071.003', 'T1071']","The following analytic identifies a dns query to a known TOR proxy website. This technique was seen in several adversaries, threat actors and malware like AgentTesla to To disguise the source of its malicious traffic. adversaries may chain together multiple proxies. This Anomaly detection might be a good pivot for a process trying to download or use TOR proxies in a compromised host machine.",['Anomaly'],"September 16, 2022","`sysmon` EventCode=22 QueryName IN (""*.torproject.org"", ""www.theonionrouter.com"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryStatus ProcessId  Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_multi_hop_proxy_tor_website_query_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryStatus', 'ProcessId', 'dest']",third party application may use this proxies if allowed in production environment. Filter is needed.,['AgentTesla'],['https://research.splunk.com/stories/agenttesla'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla'],"['Application Layer Protocol', 'Command And Control', 'Command And Control', 'Mail Protocols', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4c38c264-1f74-11ec-b5fa-acde48001122/,Logon Script Event Trigger Execution,"['T1037', 'T1037.001']",This search is to detect a suspicious modification of registry entry to persist and gain privilege escalation upon booting up of compromised host. This technique was seen in several APT and malware where it modify UserInitMprLogonScript registry entry to its malicious payload to be executed upon boot up of the machine.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\Environment\\UserInitMprLogonScript"") by Registry.dest  Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `logon_script_event_trigger_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name']",unknown,"['Data Destruction', 'Windows Privilege Escalation', 'Hermetic Wiper', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_persistence_techniques']",['https://attack.mitre.org/techniques/T1037/001/'],"['Boot or Logon Initialization Scripts', 'Endpoint', 'Logon Script (Windows)', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4c461f5a-c2cc-4e86-b132-c262fc9edca7/,Windows Special Privileged Logon On Multiple Hosts,"['T1087', 'T1021.002', 'T1135']","The following analytic leverages Event ID 4672 to identify a source user authenticating with special privileges across a large number remote endpoints. Specifically, the logic will trigger when a source user obtains special privileges across 30 or more target computers within a 5 minute timespan. Special privileges are assigned to a new logon session when sensitive privileges like SeDebugPrivilege and SeImpersonatePrivilege are assigned. This behavior could represent an adversary who is moving laterally and executing remote code across the network. It can also be triggered by other behavior like an adversary enumerating network shares. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",['TTP'],"November 7, 2023","`wineventlog_security` EventCode=4672 AND NOT(Caller_User_Name IN (""DWM-1"",""DWM-2"",""DWM-3"",""LOCAL SERVICE"",""NETWORK SERVICE"",""SYSTEM"",""*$"")) 
| bucket span=5m _time 
| stats dc(Computer) AS unique_targets values(Computer) as host_targets values(PrivilegeList) as privileges by _time, Caller_User_Name 
| rename Caller_User_Name as user
| where unique_targets > 30 
| `windows_special_privileged_logon_on_multiple_hosts_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Caller_User_Name', 'Computer', 'PrivilegeList']",Vulnerability scanners or system administration tools may also trigger this detection. Filter as needed.,"['Active Directory Privilege Escalation', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_lateral_movement']","['https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4672', 'https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn319113(v=ws.11)', 'https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://attack.mitre.org/tactics/TA0008/']","['Account Discovery', 'Discovery', 'Discovery', 'Lateral Movement', 'Network Share Discovery', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4d015ef2-7adf-11eb-95da-acde48001122/,Any Powershell DownloadString,"['T1059', 'T1059.001', 'T1105']","The following analytic identifies the use of PowerShell downloading a file using DownloadString method. This particular method is utilized in many different PowerShell frameworks to download files and output to disk. Identify the source (IP/domain) and destination file and triage appropriately. If AMSI logging or PowerShell transaction logs are available, review for further details of the implant.",['TTP'],"April 5, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=*.DownloadString*  by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `any_powershell_downloadstring_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering will need to occur by parent process or command line argument. It may be required to modify this query to an EDR product for more granular coverage.,"['Winter Vivern', 'Ingress Tool Transfer', 'Hermetic Wiper', 'Malicious PowerShell', 'HAFNIUM Group', 'Data Destruction', 'IcedID', 'SysAid On-Prem Software CVE-2023-47246 Vulnerability', 'Phemedrone Stealer']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/sysaid_on-prem_software_cve-2023-47246_vulnerability', 'https://research.splunk.com/stories/phemedrone_stealer']","['https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-5.0', 'https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Command And Control', 'Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Ingress Tool Transfer', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4d1409df-40c7-4b11-aec4-bd0e709dfc12/,Windows Modify Registry Auto Update Notif,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update notification. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will switch the automatic windows update to ""Notify before download"".",['Anomaly'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\AUOptions"" AND Registry.registry_value_data=""0x00000002"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_auto_update_notif_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4d33a488-5b5f-11eb-ae93-0242ac130002/,Suspicious mshta spawn,"['T1218', 'T1218.005']","The following analytic identifies wmiprvse.exe spawning mshta.exe. This behavior is indicative of a DCOM object being utilized to spawn mshta from wmiprvse.exe or svchost.exe. In this instance, adversaries may use LethalHTA that will spawn mshta.exe from svchost.exe.",['TTP'],"January 20, 2021","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=svchost.exe OR Processes.parent_process_name=wmiprvse.exe) AND `process_mshta` by Processes.dest Processes.parent_process Processes.user Processes.original_file_name
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_mshta_spawn_filter`","['security_content_summariesonly', 'process_mshta', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://codewhitesec.blogspot.com/2018/07/lethalhta.html', 'https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/4d4332ae-792c-11ec-89c1-acde48001122/,Suspicious Process With Discord DNS Query,"['T1059.005', 'T1059']","This analytic identifies a process making a DNS query to Discord, a well known instant messaging and digital distribution platform. Discord can be abused by adversaries, as seen in the WhisperGate campaign, to host and download malicious. external files. A process resolving a Discord DNS name could be an indicator of malware trying to download files from Discord for further execution.",['Anomaly'],"April 14, 2023","`sysmon` EventCode=22 QueryName IN (""*discord*"") Image != ""*\\AppData\\Local\\Discord\\*"" AND Image != ""*\\Program Files*"" AND Image != ""discord.exe"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Image QueryName QueryStatus process_name QueryResults Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_process_with_discord_dns_query_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryStatus', 'process_name', 'QueryResults', 'dest']","Noise and false positive can be seen if the following instant messaging is allowed to use within corporate network. In this case, a filter is needed.","['Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Visual Basic']",['Endpoint']
https://research.splunk.com/endpoint/4d5a05fa-77d9-4fd0-af9c-05704f9f9a88/,Linux APT Privilege Escalation,"['T1548.003', 'T1548']","Advanced Package Tool, more commonly known as APT, is a collection of tools used to install, update, remove, and otherwise manage software packages on Debian and its derivative operating systems, including Ubuntu and Linux Mint. If sudo right is given to the tool for user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*apt*"" AND Processes.process=""*APT::Update::Pre-Invoke::*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_apt_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/apt/', 'https://www.digitalocean.com/community/tutorials/what-is-apt']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/4e127857-1fc9-4c95-9d69-ba24c91d52d7/,ConnectWise ScreenConnect Path Traversal Windows SACL,['T1190'],"This analytic detects attempts to exploit the ConnectWise ScreenConnect CVE-2024-1708 vulnerability utilizing Windows SACL EventCode 4663, which allows an attacker to perform path traversal attacks by manipulating the file_path and file_name parameters in the URL. The vulnerability, identified as critical with a CVSS score of 9.8, enables unauthorized users to access sensitive files and directories on the host system, potentially leading to the exfiltration of sensitive data or the execution of arbitrary code. The search query provided looks for file system events that could indicate exploitation attempts. This detection is crucial for identifying and responding to active exploitation of this vulnerability in environments running affected versions of ScreenConnect (23.9.7 and prior). It is recommended to update to version 23.9.8 or above immediately to remediate the issue, as detailed in the ConnectWise security advisory and further analyzed by Huntress researchers.",['TTP'],"February 21, 2024","`wineventlog_security` EventCode=4663  ProcessName=*\\ScreenConnect.Service.exe file_path IN (""*\\ScreenConnect\\App_Extensions\\*"") file_name IN (""*.aspx"",""*.ashx"") 
| stats count min(_time) as firstTime max(_time) as lastTime by  ObjectName ObjectType ProcessName AccessMask process_id EventCode Computer Caller_User_Name 
| rename Computer as dest Caller_User_Name as user ProcessName as process_name 
|  `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `connectwise_screenconnect_path_traversal_windows_sacl_filter`","['wineventlog_security', 'security_content_ctime']","['ObjectName', 'ObjectType', 'ProcessName', 'AccessMask', 'process_id', 'EventCode', 'Computer', 'Caller_User_Name']","False positives should be limited as the analytic is specific to ScreenConnect path traversal attempts. Tune as needed, or restrict to specific hosts if false positives are encountered.",['ConnectWise ScreenConnect Vulnerabilities'],['https://research.splunk.com/stories/connectwise_screenconnect_vulnerabilities'],"['https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4663', 'https://www.huntress.com/blog/a-catastrophe-for-control-understanding-the-screenconnect-authentication-bypass', 'https://www.huntress.com/blog/detection-guidance-for-connectwise-cwe-288-2', 'https://www.connectwise.com/company/trust/security-bulletins/connectwise-screenconnect-23.9.8']","['Exploit Public-Facing Application', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4e5e024e-fabb-11eb-8b8f-acde48001122/,Fsutil Zeroing File,['T1070'],This search is to detect a suspicious fsutil process to zeroing a target file. This technique was seen in lockbit ransomware where it tries to zero out its malware path as part of its defense evasion after encrypting the compromised host.,['TTP'],"August 11, 2021","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe Processes.process=""*setzerodata*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  Processes.process Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `fsutil_zeroing_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.process', 'Processes.parent_process']",unknown,"['Ransomware', 'LockBit Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/lockbit_ransomware']","['https://app.any.run/tasks/e0ac072d-58c9-4f53-8a3b-3e491c7ac5db/', 'https://news.sophos.com/en-us/2020/04/24/lockbit-ransomware-borrows-tricks-to-keep-up-with-revil-and-maze/']","['Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4f7e3913-4db3-4ccd-afe4-31198982305d/,Windows BootLoader Inventory,"['T1542.001', 'T1542']","The following hunting query utilizes a PowerShell Scripted input that captures the bootloader paths for each Windows endpoint it is deployed to. The template inputs.conf is located in the references link. By default, it only captures the path, but may be modified to capture everything that BCDedit provides. It can be verbose, but may be worth it.",['Hunting'],"April 14, 2023","`bootloader_inventory` 
| stats count min(_time) as firstTime max(_time) as lastTime values(_raw) by host 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_bootloader_inventory_filter`","['bootloader_inventory', 'security_content_ctime']","['_time', '_raw']","No false positives here, only bootloaders. Filter as needed or create a lookup as a baseline.","['BlackLotus Campaign', 'Windows BootKits']","['https://research.splunk.com/stories/blacklotus_campaign', 'https://research.splunk.com/stories/windows_bootkits']","['https://gist.github.com/MHaggis/26518cd2844b0e03de6126660bb45707', 'https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/']","['Defense Evasion', 'Defense Evasion', 'Persistence', 'Persistence', 'Pre-OS Boot', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Firmware']",['Endpoint']
https://research.splunk.com/endpoint/4fa7f846-054a-11ec-a836-acde48001122/,Get-DomainTrust with PowerShell,['T1482'],"This analytic identifies Get-DomainTrust from PowerView in order to gather domain trust information. Typically, this is utilized within a script being executed and used to enumerate the domain trust information. This grants the adversary an understanding of how large or small the domain is. During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity.",['TTP'],"August 24, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*get-domaintrust* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domaintrust_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives as this requires an active Administrator or adversary to bring in, import, and execute.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://blog.harmj0y.net/redteaming/a-guide-to-attacking-domain-trusts/'],"['Discovery', 'Domain Trust Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/4fbf9270-43da-11ec-9486-acde48001122/,Windows InstallUtil Remote Network Connection,"['T1218.004', 'T1218']","The following analytic identifies the Windows InstallUtil.exe binary making a remote network connection. This technique may be used to download and execute code while bypassing application control. 
When InstallUtil.exe is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like Cmd.exe, PowerShell.exe or Explorer.exe. 
If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. 
During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_installutil` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as C2 ] 
| table _time user dest parent_process_name process_name process_path process process_id dest_port C2 
| `windows_installutil_remote_network_connection_filter`","['security_content_summariesonly', 'process_installutil', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Ports.process_guid', 'Ports.dest', 'Ports.dest_port']",Limited false positives should be present as InstallUtil is not typically used to download remote files. Filter as needed based on Developers requirements.,"['Signed Binary Proxy Execution InstallUtil', 'Living Off The Land']","['https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/living_off_the_land']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/4fc4c031-e5be-4cc0-8cf9-49f9f507bcb5/,Linux PHP Privilege Escalation,"['T1548.003', 'T1548']","PHP is a general-purpose scripting language geared toward web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994. The PHP reference implementation is now produced by The PHP Group. If sudo right is given to php application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*php*-r*"" AND Processes.process=""*system*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_php_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/php/', 'https://en.wikipedia.org/wiki/PHP']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/4fee57b8-d825-4bf3-9ea8-bf405cdb614c/,Windows System Shutdown CommandLine,['T1529'],"This detection rule is designed to identify the execution of the Windows shutdown command via command line interface. The shutdown command can be utilized by system administrators to properly halt, power off, or reboot a computer. However, in a security context, attackers who have gained unauthorized access to a system may also use this command in an effort to erase tracks, or to cause disruption and denial of service. In some instances, they might execute the shutdown command after installing a backdoor, to force the system to restart, ensuring that changes take effect or evading detection by security tools. Monitoring for the use of the Windows shutdown command, especially in conjunction with other unusual or unauthorized activities, can be an important part of identifying malicious behavior within a network. It is advised that security professionals analyze the context in which the shutdown command is being executed to differentiate between legitimate administrative functions and potentially malicious activity.",['Anomaly'],"June 20, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = shutdown.exe OR Processes.original_file_name = shutdown.exe) Processes.process=""*shutdown*"" AND Processes.process IN(""* /s*"", ""* -s*"") AND Processes.process IN (""* /t*"",""* -t*"",""* /f*"",""* -f*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_shutdown_commandline_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrator may execute this commandline to trigger shutdown or restart the host machine.,"['DarkCrystal RAT', 'Sandworm Tools', 'NjRAT', 'DarkGate Malware']","['https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/darkgate_malware']","['https://attack.mitre.org/techniques/T1529/', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Shutdown/Reboot']",['Endpoint']
https://research.splunk.com/endpoint/4ff9767b-fdf2-489c-83a5-c6c34412d72e/,Windows Modify Registry DontShowUI,['T1112'],"The following analytic identifies a modification in the Windows Error Reporting registry to DontShowUI. DarkGate malware modify this registry as part of its malicious installation in a targeted host for its remote desktop capabilities. When this registry value is present and set to a specific configuration, it can influence the behavior of error reporting dialogs or prompts, suppressing them from being displayed to the user.For instance, setting DontShowUI to a value of 1 often indicates that the Windows Error Reporting UI prompts will be suppressed, meaning users won't see error reporting pop-ups when errors occur.",['TTP'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\SOFTWARE\\Microsoft\\Windows\\Windows Error Reporting\\DontShowUI""  Registry.registry_value_data = 0x00000001 by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_dontshowui_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/503d17cb-9eab-4cf8-a20e-01d5c6987ae3/,Batch File Write to System32,"['T1204', 'T1204.002']",The search looks for a batch file (.bat) written to the Windows system directory tree.,['TTP'],"April 11, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=* by _time span=1h Processes.process_guid Processes.process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\system32\\*"", ""*\\syswow64\\*"") Filesystem.file_name=""*.bat"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid 
| `drop_dm_object_name(Filesystem)`] 
| table dest user file_create_time, file_name, file_path, process_name, firstTime, lastTime 
| dedup file_create_time 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `batch_file_write_to_system32_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.file_path', 'Processes.process_name', 'Processes.dest', 'Filesystem.process_guid', 'Processes.process_guid', 'Processes.dest', 'Processes.process_name']","It is possible for this search to generate a notable event for a batch file write to a path that includes the string ""system32"", but is not the actual Windows system directory. As such, you should confirm the path of the batch file identified by the search. In addition, a false positive may be generated by an administrator copying a legitimate batch file in this directory tree. You should confirm that the activity is legitimate and modify the search to add exclusions, as necessary.",['SamSam Ransomware'],['https://research.splunk.com/stories/samsam_ransomware'],N/A,"['Endpoint', 'Execution', 'Execution', 'Malicious File', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/50998483-bb15-457b-a870-965080d9e3d3/,Windows AD Replication Request Initiated from Unsanctioned Location,"['T1003.006', 'T1003']","This alert was written to detect activity associated with the DCSync attack performed by computer accounts. When a domain controller receives a replication request, the account permissions are validated, however no checks are performed to validate the request was initiated by a Domain Controller. Once an attacker gains control of an account with the necessary privileges, they can request password hashes for any or all users within the domain. This alert detects when a computer account account creates a handle to domainDNS with the necessary replication permissions. These requests are then filtered to exclude where the events originate from a known domain controller IP address.",['TTP'],"January 5, 2024","`wineventlog_security` EventCode=4662 ObjectType IN (""%{19195a5b-6da0-11d0-afd3-00c04fd930c9}"", ""domainDNS"") AND Properties IN (""*Replicating Directory Changes All*"", ""*{1131f6ad-9c07-11d1-f79f-00c04fc2dcd2}*"", ""*{9923a32a-3607-11d2-b9be-0000f87a36b2}*"",""*{1131f6ac-9c07-11d1-f79f-00c04fc2dcd2}*"") AND AccessMask=""0x100"" AND (SubjectUserSid=""NT AUT*"" OR SubjectUserSid=""S-1-5-18"" OR SubjectDomainName=""Window Manager"" OR SubjectUserName=""*$"") 
| stats min(_time) as attack_time, count by SubjectDomainName, SubjectUserName, Computer, Logon_ID, ObjectName, ObjectServer, ObjectType, OperationType, status 
| rename SubjectDomainName as Target_Domain, SubjectUserName as user, Logon_ID as TargetLogonId 
| appendpipe [
| map search=""search `wineventlog_security` EventCode=4624 TargetLogonId=$TargetLogonId$""] 
| table attack_time, AuthenticationPackageName, LogonProcessName, LogonType, TargetUserSid, Target_Domain, user, Computer, TargetLogonId, status, src_ip, src_category, ObjectName, ObjectServer, ObjectType, OperationType 
| stats min(attack_time) as _time, values(TargetUserSid) as TargetUserSid, values(Target_Domain) as Target_Domain, values(user) as user, values(Computer) as Computer, values(status) as status, values(src_category) as src_category, values(src_ip) as src_ip by TargetLogonId 
| search NOT src_category=""domain_controller"" 
| `windows_ad_replication_request_initiated_from_unsanctioned_location_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ObjectType', 'Properties', 'AccessMask', 'SubjectDomainName', 'SubjectUserName', 'SubjectUserSid', 'Computer', 'Logon_ID', 'ObjectName', 'ObjectServer', 'ObjectType', 'OperationType', 'status']",Genuine DC promotion may trigger this alert.,"['Sneaky Active Directory Persistence Tricks', 'Credential Dumping']","['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks', 'https://research.splunk.com/stories/credential_dumping']","['https://adsecurity.org/?p=1729', 'https://www.linkedin.com/pulse/mimikatz-dcsync-event-log-detections-john-dwyer', 'https://github.com/SigmaHQ/sigma/blob/0.22-699-g29a5c6278/rules/windows/builtin/security/win_security_dcsync.yml']","['Authentication', 'Change', 'Credential Access', 'Credential Access', 'DCSync', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/510ea428-4731-4d2f-8829-a28293e427aa/,Windows Linked Policies In ADSI Discovery,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the [Adsisearcher] type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage [Adsisearcher] to enumerate domain organizational unit for situational awareness and Active Directory Discovery.,['Anomaly'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*[adsisearcher]*"" ScriptBlockText = ""*objectcategory=organizationalunit*"" ScriptBlockText = ""*findAll()*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| rename Computer as dest, user_id as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_linked_policies_in_adsi_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'user_id']",Administrators or power users may use this command for troubleshooting.,"['Data Destruction', 'Active Directory Discovery', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/51307514-1236-49f6-8686-d46d93cc2821/,Windows AD Replication Request Initiated by User Account,"['T1003.006', 'T1003']","This alert was written to detect activity associated with the DCSync attack. When a domain controller receives a replication request, the user account permissions are validated, however no checks are performed to validate the request was initiated by a Domain Controller. Once an attacker gains control of an account with the necessary privileges, they can request password hashes for any or all users within the domain. This alert detects when a user account creates a handle to domainDNS with the necessary replication permissions.",['TTP'],"January 5, 2024","`wineventlog_security` EventCode=4662 ObjectType IN (""%{19195a5b-6da0-11d0-afd3-00c04fd930c9}"", ""domainDNS"") AND Properties IN (""*Replicating Directory Changes All*"", ""*{1131f6ad-9c07-11d1-f79f-00c04fc2dcd2}*"", ""*{9923a32a-3607-11d2-b9be-0000f87a36b2}*"",""*{1131f6ac-9c07-11d1-f79f-00c04fc2dcd2}*"") AND AccessMask=""0x100"" AND NOT (SubjectUserSid=""NT AUT*"" OR SubjectUserSid=""S-1-5-18"" OR SubjectDomainName=""Window Manager"" OR SubjectUserName=""*$"") 
| stats min(_time) as _time, count by SubjectDomainName, SubjectUserName, Computer, Logon_ID, ObjectName, ObjectServer, ObjectType, OperationType, status 
| rename SubjectDomainName as Target_Domain, SubjectUserName as user, Logon_ID as TargetLogonId, _time as attack_time 
| appendpipe [
| map search=""search `wineventlog_security` EventCode=4624 TargetLogonId=$TargetLogonId$""] 
| table attack_time, AuthenticationPackageName, LogonProcessName, LogonType, TargetUserSid, Target_Domain, user, Computer, TargetLogonId, status, src_ip, src_category, ObjectName, ObjectServer, ObjectType, OperationType 
| stats min(attack_time) as _time values(TargetUserSid) as TargetUserSid, values(Target_Domain) as Target_Domain, values(user) as user, values(Computer) as Computer, values(status) as status, values(src_category) as src_category, values(src_ip) as src_ip by TargetLogonId 
| `windows_ad_replication_request_initiated_by_user_account_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ObjectType', 'Properties', 'AccessMask', 'SubjectDomainName', 'SubjectUserName', 'SubjectUserSid', 'Computer', 'Logon_ID', 'ObjectName', 'ObjectServer', 'ObjectType', 'OperationType', 'status']",Azure AD Connect syncing operations.,"['Sneaky Active Directory Persistence Tricks', 'Credential Dumping']","['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks', 'https://research.splunk.com/stories/credential_dumping']","['https://adsecurity.org/?p=1729', 'https://www.linkedin.com/pulse/mimikatz-dcsync-event-log-detections-john-dwyer', 'https://github.com/SigmaHQ/sigma/blob/0.22-699-g29a5c6278/rules/windows/builtin/security/win_security_dcsync.yml']","['Authentication', 'Change', 'Credential Access', 'Credential Access', 'DCSync', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/51fbcaf2-6259-11ec-b0f3-acde48001122/,Linux Add User Account,"['T1136.001', 'T1136']","This analytic looks for commands to create user accounts on the linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to persist on the targeted or compromised host by creating new user with an elevated privilege. This Hunting query may catch normal creation of user by administrator so filter is needed.",['Hunting'],"December 21, 2021","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where Processes.process_name IN (""useradd"", ""adduser"") OR Processes.process IN (""*useradd *"", ""*adduser *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_add_user_account_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://linuxize.com/post/how-to-create-users-in-linux-using-the-useradd-command/'],"['Create Account', 'Endpoint', 'Local Account', 'Persistence', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5211c260-820e-4366-b983-84bbfb5c263a/,Windows Impair Defense Change Win Defender Health Check Intervals,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to change the health check interval of Windows Defender. Specifically, a value of 1 typically signifies that Windows Defender would perform health checks at a much higher frequency than the default settings. However, it's important to note that modifying this value to 1 might not necessarily conform to the actual behavior, as certain registry settings may have specific accepted values or a defined range that differs from a simple binary representation. Changing registry values, especially those related to system services, should be approached cautiously. Incorrect modifications can potentially impact system stability or performance. Always ensure you understand the implications and have a backup before altering registry settings.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\ServiceKeepAlive"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_change_win_defender_health_check_intervals_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/523c2684-a101-11eb-916b-acde48001122/,Schedule Task with HTTP Command Arguments,['T1053'],"The following analytic detects the registration of suspicious tasks on Windows using the Windows Security EventCode 4698, ""A scheduled task was created."" It specifically looks for tasks registered through schtasks.exe or TaskService that have command arguments containing the string ""HTTP."" This behavior is often associated with malware or attacks that utilize Living off the Land binaries (lolbins) to download additional files or payloads to the compromised machine.
The search returns information about the task, such as the task name, command, author, enabled status, hidden status, and arguments. Upon triage, it is important to identify the source of the scheduled task, whether it was registered through schtasks.exe or TaskService. Review the details of the created task and the command to be executed. Capture relevant artifacts on disk and examine them. Additionally, identify any parallel processes occurring within the same timeframe to determine the source of the attack.
Implementing this analytic requires ingesting logs with information about task schedules, specifically Windows Security Log EventCode 4698, from your endpoints. It is recommended to tune and filter known instances of task schedules used in your environment to minimize false positives.
Detecting the registration of suspicious tasks with HTTP command arguments is valuable for a SOC as it indicates potential malicious activity or an attempt to establish persistence on the system. If a true positive is found, further investigation is warranted to analyze the nature and purpose of the scheduled task, identify any downloaded files or payloads, and mitigate the associated risks. The impact of a true positive can vary but may include data exfiltration, malware propagation, or unauthorized access to sensitive information.",['TTP'],"April 5, 2023","`wineventlog_security` EventCode=4698 
| xmlkv Message
| search Arguments IN (""*http*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, Task_Name, Command, Author, Enabled, Hidden, Arguments 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schedule_task_with_http_command_arguments_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Task_Name', 'Command', 'Author', 'Enabled', 'Hidden', 'Arguments']",unknown,"['Living Off The Land', 'Winter Vivern', 'Windows Persistence Techniques', 'Scheduled Tasks']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/scheduled_tasks']",['https://app.any.run/tasks/92d7ef61-bfd7-4c92-bc15-322172b4ebec/'],"['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/52f6d751-1fd4-4c74-a4c9-777ecfeb5c58/,Linux Adding Crontab Using List Parameter,"['T1053.003', 'T1053']","The following analytic identifies suspicious modifications to cron jobs on Linux systems using the crontab command with list parameters. This command line parameter can be abused by malware like Industroyer2, as well as adversaries and red teamers, to add a crontab entry for executing their malicious code on a schedule of their choice. However, it's important to note that administrators or normal users may also use this command for legitimate automation purposes, so filtering is required to minimize false positives. Identifying the modification of cron jobs using list parameters is valuable for a SOC as it indicates potential malicious activity or an attempt to establish persistence on the system. If a true positive is detected, further investigation should be conducted to analyze the added cron job, its associated command, and the impact it may have on the system. This includes examining the purpose of the job, reviewing any on-disk artifacts, and identifying any related processes or activities occurring concurrently. The impact of a true positive can range from unauthorized execution of malicious code to data destruction or other damaging outcomes.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""crontab"" Processes.process= ""* -l*"" by  Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_adding_crontab_using_list_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['Industroyer2', 'Linux Privilege Escalation', 'Linux Living Off The Land', 'Data Destruction', 'Linux Persistence Techniques', 'Scheduled Tasks']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/scheduled_tasks']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/52fd468b-cb6d-48f5-b16a-92f1c9bb10cf/,Linux Ingress Tool Transfer Hunting,['T1105'],The following analytic hunts for curl and wget being utilized in the environment. This is meant to help with identifying normal usage and potentially malicious. Utilize this query to tune other curl and wget analytics.,['Hunting'],"July 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=curl OR Processes.process_name=wget) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_ingress_tool_transfer_hunting_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present. This query is meant to help tune other curl and wget analytics.,"['Linux Living Off The Land', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/ingress_tool_transfer']","['https://gtfobins.github.io/gtfobins/curl/', 'https://curl.se/docs/manpage.html#-I', 'https://gtfobins.github.io/gtfobins/curl/', 'https://github.com/rapid7/metasploit-framework/search?q=curl']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/535cb214-8b47-11ec-a2c7-acde48001122/,Linux System Network Discovery,['T1016'],This analytic is to look for possible enumeration of local network configuration. This technique is commonly used as part of recon of adversaries or threat actor to know some network information for its next or further attack. This anomaly detections may capture normal event made by administrator during auditing or testing network connection of specific host or network to network.,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name_list values(Processes.process) as process_list values(Processes.process_id) as process_id_list values(Processes.parent_process_id) as parent_process_id_list values(Processes.process_guid) as process_guid_list dc(Processes.process_name) as process_name_count from datamodel=Endpoint.Processes where Processes.process_name IN (""arp"", ""ifconfig"", ""ip"", ""netstat"", ""firewall-cmd"", ""ufw"", ""iptables"", ""ss"", ""route"") by _time span=30m Processes.dest Processes.user 
| where process_name_count >=4 
| `drop_dm_object_name(Processes)`
| `linux_system_network_discovery_filter`",['security_content_summariesonly'],"['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Data Destruction', 'Network Discovery', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/network_discovery', 'https://research.splunk.com/stories/industroyer2']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1016/T1016.md'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery']",['Endpoint']
https://research.splunk.com/endpoint/535fd4fc-7151-4062-9d7e-e896bea77bf6/,Windows Query Registry UnInstall Program List,['T1012'],"The following analytic identifies a suspicious query on uninstall application list in Windows OS registry. This registry  is commonly used by legitimate software to store information about installed applications on a Windows system, such as their name, version, publisher, and installation path. However, malware, adversaries or even red-teamers can abuse this registry key to retrieve information stored in the ""Uninstall"" key to gather data about installed applications in the target host. This Anomaly detection can be a good pivot to detect a possible suspicious process accessing this registry which is not commonly accessed by a normal user.",['Anomaly'],"April 25, 2023","`wineventlog_security` EventCode=4663 object_file_path=""\\REGISTRY\\MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by object_file_name object_file_path process_name process_path  process_id EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_query_registry_uninstall_program_list_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'object_file_name', 'object_file_path', 'process_name', 'process_path', 'process_id', 'EventCode', 'dest']",Uninstall application may access this registry to remove the entry of the target application. Filter is needed.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Discovery', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/538d0152-7aaa-11eb-beaa-acde48001122/,Ryuk Wake on LAN Command,"['T1059', 'T1059.003']","This Splunk query identifies the use of Wake-on-LAN utilized by Ryuk ransomware. The Ryuk Ransomware uses the Wake-on-Lan feature to turn on powered off devices on a compromised network to have greater success encrypting them. This is a high fidelity indicator of Ryuk ransomware executing on an endpoint. Upon triage, isolate the endpoint. Additional file modification events will be within the users profile (\appdata\roaming) and in public directories (users\public). Review all Scheduled Tasks on the isolated endpoint and across the fleet. Suspicious Scheduled Tasks will include a path to a unknown binary and those endpoints should be isolated until triaged.",['TTP'],"March 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*8 LAN*"" OR Processes.process=""*9 REP*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `ryuk_wake_on_lan_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Limited to no known false positives.,['Ryuk Ransomware'],['https://research.splunk.com/stories/ryuk_ransomware'],"['https://www.bleepingcomputer.com/news/security/ryuk-ransomware-uses-wake-on-lan-to-encrypt-offline-devices/', 'https://www.bleepingcomputer.com/news/security/ryuk-ransomware-now-self-spreads-to-other-windows-lan-devices/', 'https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/5434f670-155d-11ec-8cca-acde48001122/,Get WMIObject Group Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of Get-WMIObject Win32_Group being used with PowerShell to identify local groups on the endpoint. \ Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. \ During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=powershell.exe OR processes.process_name=cmd.exe) (Processes.process=""*Get-WMIObject*"" AND Processes.process=""*Win32_Group*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`  
| `get_wmiobject_group_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5438113c-cdd9-11eb-93b8-acde48001122/,WevtUtil Usage To Clear Logs,"['T1070', 'T1070.001']","The wevtutil.exe application is the windows event log utility. This searches for wevtutil.exe with parameters for clearing the application, security, setup, powershell, sysmon, or system event logs.",['TTP'],"June 15, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (match(process_cmd_line, /(?i)powershell/)=true OR match(process_cmd_line, /(?i)setup/)=true OR match(process_cmd_line, /(?i)application/)=true OR match(process_cmd_line, /(?i)sysmon/)=true OR match(process_cmd_line, /(?i)system/)=true OR match(process_cmd_line, /(?i)security/)=true) AND process_cmd_line LIKE ""% cl %"" AND process_file_name=""wevtutil.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",The wevtutil.exe application is a legitimate Windows event log utility. Administrators may use it to manage Windows event logs.,"['Windows Log Manipulation', 'Ransomware', 'Clop Ransomware', 'Insider Threat', 'CISA AA22-264A']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/cisa_aa22-264a']",['https://www.splunk.com/en_us/blog/security/detecting-clop-ransomware.html'],"['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Indicator Removal', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/54a6ed00-3256-11ec-b031-acde48001122/,CMD Carry Out String Command Parameter,"['T1059.003', 'T1059']",The following analytic identifies command-line arguments where cmd.exe /c is used to execute a program. cmd /c is used to run commands in MS-DOS and terminate after command or process completion. This technique is commonly seen in adversaries and malware to execute batch command using different shell like PowerShell or different process other than cmd.exe. This is a good hunting query for suspicious command-line made by a script or relative process execute it.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` AND Processes.process=""* /c*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cmd_carry_out_string_command_parameter_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.parent_process_id']",False positives may be high based on legitimate scripted code in any environment. Filter as needed.,"['AsyncRAT', 'Winter Vivern', 'WhisperGate', 'Living Off The Land', 'DarkGate Malware', 'ProxyNotShell', 'Log4Shell CVE-2021-44228', 'NjRAT', 'RedLine Stealer', 'Rhysida Ransomware', 'IcedID', 'Chaos Ransomware', 'PlugX', 'Azorult', 'Qakbot', 'Hermetic Wiper', 'Warzone RAT', 'DarkCrystal RAT', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/54c95f4d-3e5d-44be-9521-ea19ba62f7a8/,Linux c89 Privilege Escalation,"['T1548.003', 'T1548']","The c89 and cc commands compile, assemble, and link-edit C programs; the cxx or c++ command does the same for C++ programs. The c89 command should be used when compiling C programs that are written according to Standard C. If sudo right is given to c89 application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*c89*"" AND Processes.process=""*-wrapper*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_c89_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/c89/', 'https://www.ibm.com/docs/en/zos/2.1.0?topic=guide-c89-compiler-invocation-using-host-environment-variables']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/54f5201e-155b-11ec-a6e2-acde48001122/,Net Localgroup Discovery,"['T1069', 'T1069.001']","The following hunting analytic will identify the use of localgroup discovery using net localgroup. During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=net.exe OR Processes.process_name=net1.exe (Processes.process=""*localgroup*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `net_localgroup_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,"['Prestige Ransomware', 'Volt Typhoon', 'Graceful Wipe Out Attack', 'IcedID', 'Windows Discovery Techniques', 'Windows Post-Exploitation', 'Azorult', 'Active Directory Discovery', 'Rhysida Ransomware']","['https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_discovery_techniques', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/553d0429-1a1c-44bf-b3f5-a8513deb9ee5/,Hunting 3CXDesktopApp Software,['T1195.002'],"The hunting analytic outlined below is designed to detect any version of the 3CXDesktopApp, also known as the 3CX Desktop App, operating on either Mac or Windows systems. It is important to note that this particular analytic employs the Endpoint datamodel Processes node, which means that the file version information is not provided. Recently, 3CX has identified a vulnerability specifically in versions 18.12.407 and 18.12.416 of the desktop app.",['Hunting'],"March 30, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=3CXDesktopApp.exe OR Processes.process_name=""3CX Desktop App"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `hunting_3cxdesktopapp_software_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","There may be false positives generated due to the reliance on version numbers for identification purposes. Despite this limitation, the primary goal of this approach is to aid in the detection of the software within the environment.",['3CX Supply Chain Attack'],['https://research.splunk.com/stories/3cx_supply_chain_attack'],"['https://www.sentinelone.com/blog/smoothoperator-ongoing-campaign-trojanizes-3cx-software-in-software-supply-chain-attack/', 'https://www.cisa.gov/news-events/alerts/2023/03/30/supply-chain-attack-against-3cxdesktopapp', 'https://www.reddit.com/r/crowdstrike/comments/125r3uu/20230329_situational_awareness_crowdstrike/', 'https://www.3cx.com/community/threads/crowdstrike-endpoint-security-detection-re-3cx-desktop-app.119934/page-2#post-558898', 'https://www.3cx.com/community/threads/3cx-desktopapp-security-alert.119951/']","['Compromise Software Supply Chain', 'Endpoint', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/55f22929-cfd3-4388-ba5c-4d01fac7ee7e/,Windows IIS Components New Module Added,"['T1505', 'T1505.004']","The following analytic uses the Windows Event log - Microsoft-IIS-Configuration/Operational - which must be enabled and logged on Windows IIS servers before it can be Splunked. The following analytic identifies newly installed IIS modules. Per Microsoft, IIS modules are not commonly added to a production IIS server, so alerting on this event ID should be enabled.IIS modules can be installed at a global level or at a site level. In detecting malicious IIS modules, it is important to check both the global and site level for unauthorized modules. Regular monitoring of these locations for such modules and comparing against a known good list can help detect and identify malicious IIS modules.",['TTP'],"December 19, 2022","`iis_operational_logs` EventCode=29 
| stats  count min(_time) as firstTime max(_time) as lastTime by OpCode EventCode ComputerName Message 
| rename ComputerName AS dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iis_components_new_module_added_filter`","['iis_operational_logs', 'security_content_ctime']","['_time', 'OpCode', 'EventCode', 'ComputerName', 'Message']",False positives may be present when updates or an administrator adds a new module to IIS. Monitor and filter as needed.,['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://gist.github.com/MHaggis/64396dfd9fc3734e1d1901a8f2f07040', 'https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.crowdstrike.com/wp-content/uploads/2022/05/crowdstrike-iceapple-a-novel-internet-information-services-post-exploitation-framework-1.pdf', 'https://unit42.paloaltonetworks.com/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/', 'https://www.secureworks.com/research/bronze-union', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1505.004', 'https://strontic.github.io/xcyclopedia/library/appcmd.exe-055B2B09409F980BF9B5A3969D01E5B2.html']","['IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/55fb2958-9ecd-11ec-a06a-acde48001122/,Windows Disable Shutdown Button Through Registry,['T1112'],This analytic is to detect a suspicious registry modification to disable shutdown button on the logon user. This technique was seen in several malware especially in ransomware family like killdisk malware variant to make the compromised host un-useful and hard to remove other registry modification made on the machine that needs restart to take effect. This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.,['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE ((Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\shutdownwithoutlogon"" Registry.registry_value_data = ""0x00000000"") OR (Registry.registry_path=""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoClose"" Registry.registry_value_data = ""0x00000001"")) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_shutdown_button_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.,"['Ransomware', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom.msil.screenlocker.a/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5672819c-be09-11eb-bbfb-acde48001122/,SecretDumps Offline NTDS Dumping Tool,"['T1003.003', 'T1003']","The following analytic detects a potential usage of secretsdump.py tool for dumping credentials (ntlm hash) from a copy of ntds.dit and SAM.Security,SYSTEM registrry hive. This technique was seen in some attacker that dump ntlm hashes offline after having a copy of ntds.dit and SAM/SYSTEM/SECURITY registry hive.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""python*.exe"" Processes.process = ""*.py*"" Processes.process = ""*-ntds*"" (Processes.process = ""*-system*"" OR Processes.process = ""*-sam*"" OR Processes.process = ""*-security*"" OR Processes.process = ""*-bootkey*"") by Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `secretdumps_offline_ntds_dumping_tool_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process_guid']",unknown,"['Credential Dumping', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py'],"['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/56a3ac65-e747-41f7-b014-dff7423c1dda/,ConnectWise ScreenConnect Path Traversal,['T1190'],"This analytic detects attempts to exploit the ConnectWise ScreenConnect CVE-2024-1708 vulnerability, which allows an attacker to perform path traversal attacks by manipulating the file_path and file_name parameters in the URL. The vulnerability, identified as critical with a CVSS score of 9.8, enables unauthorized users to access sensitive files and directories on the host system, potentially leading to the exfiltration of sensitive data or the execution of arbitrary code. The search query provided looks for file system events that could indicate exploitation attempts. This detection is crucial for identifying and responding to active exploitation of this vulnerability in environments running affected versions of ScreenConnect (23.9.7 and prior). It is recommended to update to version 23.9.8 or above immediately to remediate the issue, as detailed in the ConnectWise security advisory and further analyzed by Huntress researchers.",['TTP'],"February 21, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\ScreenConnect\\App_Extensions\\*"") Filesystem.file_name IN (""*.aspx"",""*.ashx"") by Filesystem.file_create_time Filesystem.process_id Filesystem.process_guid Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `connectwise_screenconnect_path_traversal_filter`","['security_content_summariesonly', 'security_content_ctime']","['Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.process_guid', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']","False positives are not expected, as the detection is based on the presence of file system events that indicate path traversal attempts. The analytic may be modified to look for any file writes to this path as it is not common for files to write here.",['ConnectWise ScreenConnect Vulnerabilities'],['https://research.splunk.com/stories/connectwise_screenconnect_vulnerabilities'],"['https://www.huntress.com/blog/a-catastrophe-for-control-understanding-the-screenconnect-authentication-bypass', 'https://www.huntress.com/blog/detection-guidance-for-connectwise-cwe-288-2', 'https://www.connectwise.com/company/trust/security-bulletins/connectwise-screenconnect-23.9.8']","['Endpoint', 'Exploit Public-Facing Application', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/56d7cfcc-da63-11eb-92d4-acde48001122/,SilentCleanup UAC Bypass,"['T1548.002', 'T1548']",This search is to detect a suspicious modification of registry that may related to UAC bypassed. This registry will be trigger once the attacker abuse the silentcleanup task schedule to gain high privilege execution that will bypass User control account.,['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\Environment\\windir"" Registry.registry_value_data = ""*.exe*"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `silentcleanup_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://github.com/hfiref0x/UACME', 'https://www.intezer.com/blog/malware-analysis/klingon-rat-holding-on-for-dear-life/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57551656-ebdb-11eb-afdf-acde48001122/,SAM Database File Access Attempt,"['T1003.002', 'T1003']","The following analytic identifies access to SAM, SYSTEM or SECURITY databases' within the file path of windows\system32\config using Windows Security EventCode 4663. This particular behavior is related to credential access, an attempt to either use a Shadow Copy or recent CVE-2021-36934 to access the SAM database. The Security Account Manager (SAM) is a database file in Windows XP, Windows Vista, Windows 7, 8.1 and 10 that stores users' passwords.",['Hunting'],"June 13, 2023","`wineventlog_security` (EventCode=4663)  process_name!=*\\dllhost.exe Object_Name IN (""*\\Windows\\System32\\config\\SAM*"",""*\\Windows\\System32\\config\\SYSTEM*"",""*\\Windows\\System32\\config\\SECURITY*"") 
| stats values(Accesses) count by process_name Object_Name  dest user 
| `sam_database_file_access_attempt_filter`",['wineventlog_security'],"['_time', 'process_name', 'Object_Name', 'dest', 'user']","Natively, dllhost.exe will access the files. Every environment will have additional native processes that do as well. Filter by process_name. As an aside, one can remove process_name entirely and add Object_Name=*ShadowCopy*.","['Credential Dumping', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4663', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4663', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934', 'https://github.com/GossiTheDog/HiveNightmare', 'https://github.com/JumpsecLabs/Guidance-Advice/tree/main/SAM_Permissions', 'https://en.wikipedia.org/wiki/Security_Account_Manager']","['Credential Access', 'Credential Access', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57ad5a64-9df7-11eb-a290-acde48001122/,Windows Multiple Invalid Users Failed To Authenticate Using NTLM,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with 30 unique invalid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC0000064 stands for The username you typed does not exist (the attempted user is a legitimate domain user).
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",['TTP'],"April 15, 2021","`wineventlog_security` EventCode=4776 TargetUserName!=*$ Status=0xc0000064 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, Workstation 
| where unique_accounts > 30 
| `windows_multiple_invalid_users_failed_to_authenticate_using_ntlm_filter`",['wineventlog_security'],"['_time', 'EventCode', 'TargetUserName', 'Workstation', 'Status']","A host failing to authenticate with multiple invalid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems. If this detection triggers on a host other than a Domain Controller, the behavior could represent a password spraying attack against the host's local accounts.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-credential-validation', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57d44d70-28d9-4ed1-acf5-1c80ae2bbce3/,Ryuk Test Files Detected,['T1486'],"The search looks for files that contain the key word Ryuk under any folder in the C drive, which is consistent with Ryuk propagation.",['TTP'],"November 6, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem WHERE ""Filesystem.file_path""=C:\\*Ryuk* BY ""Filesystem.dest"", ""Filesystem.user"", ""Filesystem.file_path"" 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `ryuk_test_files_detected_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_path', 'Filesystem.dest', 'Filesystem.user']","If there are files with this keywoord as file names it might trigger false possitives, please make use of our filters to tune out potential FPs.",['Ryuk Ransomware'],['https://research.splunk.com/stories/ryuk_ransomware'],N/A,"['Data Encrypted for Impact', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57e27f27-369c-4df8-af08-e8c7ee8373d4/,Windows AD Short Lived Domain Controller SPN Attribute,['T1207'],"The following analytic identifies when either a global catalog SPN or a DRS RPC SPN are temporarily added to an Active Directory computer object, both of which can be evidence of a DCShadow attack. DCShadow allows an attacker who has obtained privileged access to register a rogue Domain Controller (DC). Once registered, the rogue DC may be able to inject and replicate changes into the AD infrastructure for any domain object, including credentials and keys. This technique was initially released in 2018 by security researchers Benjamin Delpy and Vincent Le Toux. No event logs are written for changes to AD attributes, allowing for stealthy backdoors to be implanted in the domain, or metadata such as timestamps overwritten to cover tracks.",['TTP'],"November 7, 2023","`wineventlog_security` EventCode=5136 AttributeLDAPDisplayName=servicePrincipalName (AttributeValue=""GC/*"" OR AttributeValue=""E3514235-4B06-11D1-AB04-00C04FC2DCD2/*"") 
| stats min(_time) as _time range(_time) as duration values(OperationType) as OperationType values(user) as user values(src_ip) as src_ip values(src_nt_domain) as src_nt_domain values(src_user) as src_user values(Computer) as dest, values(ObjectDN) as ObjectDN by Logon_ID 
| eval short_lived=case((duration<30),""TRUE"") 
| where short_lived=""TRUE"" AND mvcount(OperationType)>1 
| replace ""%%14674"" with ""Value Added"", ""%%14675"" with ""Value Deleted"" in OperationType 
| rename Logon_ID as TargetLogonId 
| appendpipe [
| map search=""search `wineventlog_security` EventCode=4624 TargetLogonId=$TargetLogonId$""] 
| stats min(_time) as _time, values(ObjectDN) as ObjectDN values(OperationType) as OperationType by TargetLogonId src_user dest 
| `windows_ad_short_lived_domain_controller_spn_attribute_filter`",['wineventlog_security'],"['_time', 'EventCode', 'AttributeLDAPDisplayName', 'AttributeValue', 'src_nt_domain', 'src_user', 'Computer', 'ObjectDN', 'Logon_ID', 'signature']",None.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://www.dcshadow.com/', 'https://blog.netwrix.com/2022/09/28/dcshadow_attack/', 'https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2', 'https://attack.mitre.org/techniques/T1207/', 'https://blog.alsid.eu/dcshadow-explained-4510f52fc19d']","['Defense Evasion', 'Rogue Domain Controller', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57edaefa-a73b-45e5-bbae-f39c1473f941/,Unusually Long Command Line - MLTK,[],Command lines that are extremely long may be indicative of malicious activity on your hosts. This search leverages the Machine Learning Toolkit (MLTK) to help identify command lines with lengths that are unusual for a given user.,['Anomaly'],"May 8, 2019","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| eval processlen=len(process) 
| search user!=unknown 
| apply cmdline_pdfmodel threshold=0.01 
| rename ""IsOutlier(processlen)"" as isOutlier 
| search isOutlier > 0 
| table firstTime lastTime user dest process_name process processlen count 
| `unusually_long_command_line___mltk_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_name', 'Processes.process']","Some legitimate applications use long command lines for installs or updates. You should review identified command lines for legitimacy. You may modify the first part of the search to omit legitimate command lines from consideration. If you are seeing more results than desired, you may consider changing the value of threshold in the search to a smaller value. You should also periodically re-run the support search to re-build the ML model on the latest data. You may get unexpected results if the user identified in the results is not present in the data used to build the associated model.","['Suspicious Command-Line Executions', 'Unusual Processes', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'Ransomware']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/ransomware']",N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57fb8656-141e-4d8a-9f51-62cff4ecb82a/,Windows Autostart Execution LSASS Driver Registry Modification,['T1547.008'],"The following analytic identifies the abuse of two undocumented registry keys that allow for a DLL to load into lsass.exe to potentially capture credentials. Upon successful modification of \CurrentControlSet\Services\NTDS\DirectoryServiceExtPt or \CurrentControlSet\Services\NTDS\LsaDbExtPt, a DLL either remote or local will be set as the value and load up into lsass.exe. Based on POC code a text file may be written to disk with credentials.",['TTP'],"August 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt"",""*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt"") by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_autostart_execution_lsass_driver_registry_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","False positives may be present on recent Windows Operating Systems. Filtering may be required based on process_name. In addition, look for non-standard, unsigned, module loads into LSASS. If query is too noisy, modify by adding Endpoint.processes process_name to query to identify the process making the modification.",['Windows Registry Abuse'],['https://research.splunk.com/stories/windows_registry_abuse'],"['https://blog.xpnsec.com/exploring-mimikatz-part-1/', 'https://github.com/oxfemale/LogonCredentialsSteal/tree/master/lsass_lib']","['Endpoint', 'LSASS Driver', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/57fe880a-9be3-11eb-9bf3-acde48001122/,Excel Spawning Windows Script Host,"['T1003.002', 'T1003']","The following detection identifies Microsoft Excel spawning Windows Script Host - cscript.exe or wscript.exe. Typically, this is not common behavior and not default with Excel.exe. Excel.exe will generally be found in the following path C:\Program Files\Microsoft Office\root\Office16 (version will vary). cscript.exe or wscript.exe default location is c:\windows\system32\ or c:windows\syswow64. cscript.exe or wscript.exe` spawning from Excel.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line executed will most likely be obfuscated and captured via another detection. During triage, review parallel processes and identify any files that may have been written. Review the reputation of the remote destination and block accordingly.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count values(Processes.process) min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""excel.exe"" Processes.process_name IN (""cscript.exe"", ""wscript.exe"")  by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
|`security_content_ctime(lastTime)` 
| `excel_spawning_windows_script_host_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'process_name', 'process_id', 'parent_process_name', 'dest', 'user', 'parent_process_id']","False positives should be limited, but if any are present, filter as needed. In some instances, cscript.exe is used for legitimate business practices.",['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://app.any.run/tasks/8ecfbc29-03d0-421c-a5bf-3905d29192a2/', 'https://attack.mitre.org/techniques/T1566/001/']","['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/58194e28-ae5e-11eb-8912-acde48001122/,Download Files Using Telegram,['T1105'],"The following analytic will identify a suspicious download by the Telegram application on a Windows system. This behavior was identified on a honeypot where the adversary gained access, installed Telegram and followed through with downloading different network scanners (port, bruteforcer, masscan) to the system and later used to mapped the whole network and further move laterally.",['TTP'],"May 6, 2021","`sysmon` EventCode= 15 process_name = ""telegram.exe"" TargetFilename = ""*:Zone.Identifier"" 
|stats count min(_time) as firstTime max(_time) as lastTime by dest EventCode process_name process_id TargetFilename Hash 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `download_files_using_telegram_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'EventCode', 'Image', 'process_id', 'TargetFilename', 'Hash']",normal download of file in telegram app. (if it was a common app in network),"['XMRig', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Command And Control', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/583e8a68-f2f7-45be-8fc9-bf725f0e22fd/,Active Directory Privilege Escalation Identified,['T1484'],"The primary objective of this correlation rule is to detect and alert on potential privilege escalation activities within an organization's Active Directory (AD) environment. By identifying multiple analytics associated with the Active Directory Privilege Escalation analytic story, security analysts can gain better insight into possible threats and respond accordingly to mitigate risks. The correlation rule will trigger an alert when multiple analytics from the Active Directory Privilege Escalation analytic story are detected within a specified time frame. The rule will generate an alert if a predetermined threshold of correlated analytics is reached within the specified time frame. This threshold can be customized to suit the needs and risk appetite of the organization.",['Correlation'],"May 23, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories=""Active Directory Privilege Escalation"" All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 4 
| `active_directory_privilege_escalation_identified_filter`","['security_content_summariesonly', 'security_content_ctime']","['All_Risk.calculated_risk_score', 'All_Risk.annotations.mitre_attack.mitre_tactic_id', 'All_Risk.annotations.mitre_attack.mitre_technique_id', 'All_Risk.tag', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic']","False positives will most likely be present based on risk scoring and how the organization handles system to system communication. Filter, or modify as needed. In addition to count by analytics, adding a risk score may be useful. In our testing, with 22 events over 30 days, the risk scores ranged from 500 to 80,000. Your organization will be different, monitor and modify as needed.","['Active Directory Privilege Escalation', 'https://research.splunk.com/stories/active_directory_privilege_escalation/']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_privilege_escalation/']","['https://attack.mitre.org/tactics/TA0004/', 'https://research.splunk.com/stories/active_directory_privilege_escalation/']","['Defense Evasion', 'Domain Policy Modification', 'Privilege Escalation', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/584f4884-0bf1-11ec-a5ec-acde48001122/,Get-ForestTrust with PowerShell,['T1482'],"This analytic identifies Get-ForestTrust from PowerSploit in order to gather domain trust information. Typically, this is utilized within a script being executed and used to enumerate the domain trust information. This grants the adversary an understanding of how large or small the domain is. During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity.",['TTP'],"September 2, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe Processes.process=*get-foresttrust* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_foresttrust_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives as this requires an active Administrator or adversary to bring in, import, and execute.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://powersploit.readthedocs.io/en/latest/Recon/Get-ForestTrust/'],"['Discovery', 'Domain Trust Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5876d429-0240-4709-8b93-ea8330b411b5/,Cobalt Strike Named Pipes,['T1055'],"The following analytic identifies the use of default or publicly known named pipes used with Cobalt Strike. A named pipe is a named, one-way or duplex pipe for communication between the pipe server and one or more pipe clients. Cobalt Strike uses named pipes in many ways and has default values used with the Artifact Kit and Malleable C2 Profiles. The following query assists with identifying these default named pipes. Each EDR product presents named pipes a little different. Consider taking the values and generating a query based on the product of choice. 
Upon triage, review the process performing the named pipe. If it is explorer.exe, It is possible it was injected into by another process. Review recent parallel processes to identify suspicious patterns or behaviors. A parallel process may have a network connection, review and follow the connection back to identify any file modifications.",['TTP'],"July 10, 2023","`sysmon` EventID=17 OR EventID=18 PipeName IN (\\msagent_*, \\DserNamePipe*, \\srvsvc_*, \\postex_*, \\status_*, \\MSSE-*, \\spoolss_*, \\win_svc*, \\ntsvcs*, \\winsock*, \\UIA_PIPE*)  
| stats count min(_time) as firstTime max(_time) as lastTime by dest, process_name, process_id process_path, PipeName 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cobalt_strike_named_pipes_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventID', 'PipeName', 'dest', 'process_name', 'process_path', 'process_id']","The idea of using named pipes with Cobalt Strike is to blend in. Therefore, some of the named pipes identified and added may cause false positives. Filter by process name or pipe name to reduce false positives.","['Trickbot', 'DarkSide Ransomware', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack', 'LockBit Ransomware']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/lockbit_ransomware']","['https://attack.mitre.org/techniques/T1218/009/', 'https://docs.microsoft.com/en-us/windows/win32/ipc/named-pipes', 'https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/index.htm#cshid=1040', 'https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/', 'https://gist.github.com/MHaggis/6c600e524045a6d49c35291a21e10752', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations']","['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/58adae9e-8ea3-11ec-90f6-acde48001122/,Windows Diskshadow Proxy Execution,['T1218'],"DiskShadow.exe is a Microsoft Signed binary present on Windows Server. It has a scripting mode intended for complex scripted backup operations. This feature also allows for execution of arbitrary unsigned code. This analytic looks for the usage of the scripting mode flags in executions of DiskShadow. During triage, compare to known backup behavior in your environment and then review the scripts called by diskshadow.",['TTP'],"February 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_diskshadow` (Processes.process=*-s* OR Processes.process=*/s*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_diskshadow_proxy_execution_filter`","['security_content_summariesonly', 'process_diskshadow', 'security_content_ctime']","['_time', 'Processes.process', 'Porcesses.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.original_file_name']",Administrators using the DiskShadow tool in their infrastructure as a main backup tool with scripts will cause false positives that can be filtered with windows_diskshadow_proxy_execution_filter,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],['https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/'],"['Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/58cea3ec-1f6d-11ec-8560-acde48001122/,Screensaver Event Trigger Execution,"['T1546', 'T1546.002']",This analytic is developed to detect possible event trigger execution through screensaver registry entry modification for persistence or privilege escalation. This technique was seen in several APT and malware where they put the malicious payload path to the SCRNSAVE.EXE registry key to redirect the execution to their malicious payload path. This TTP is a good indicator that some attacker may modify this entry for their persistence and privilege escalation.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=""*\\Control Panel\\Desktop\\SCRNSAVE.EXE*"") by Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `screensaver_event_trigger_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name']",unknown,"['Hermetic Wiper', 'Windows Privilege Escalation', 'Windows Persistence Techniques', 'Windows Registry Abuse', 'Data Destruction']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/data_destruction']","['https://attack.mitre.org/techniques/T1546/002/', 'https://dmcxblue.gitbook.io/red-team-notes-2-0/red-team-techniques/privilege-escalation/untitled-3/screensaver']","['Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Screensaver', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/58d270fb-5b39-418e-a855-4b8ac046805e/,MacOS LOLbin,"['T1059.004', 'T1059']",Detect multiple executions of Living off the Land (LOLbin) binaries in a short period of time.,['TTP'],"November 7, 2023","`osquery` name=es_process_events columns.cmdline IN (""find*"", ""crontab*"", ""screencapture*"", ""openssl*"", ""curl*"", ""wget*"", ""killall*"", ""funzip*"") 
| rename columns.* as * 
| stats  min(_time) as firstTime max(_time) as lastTime values(cmdline) as cmdline, values(pid) as pid, values(parent) as parent, values(path) as path, values(signing_id) as signing_id,  dc(path) as dc_path by username host 
| rename username as user, cmdline as process, path as process_path, host as dest 
| where dc_path > 3 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `macos_lolbin_filter`","['osquery', 'security_content_ctime']","['_time', 'columns.cmdline', 'columns.pid', 'columns.parent', 'columns.path', 'columns.signing_id', 'columns.username', 'host']",None identified.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],['https://osquery.readthedocs.io/en/stable/deployment/process-auditing/'],"['Command and Scripting Interpreter', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell']",['Endpoint']
https://research.splunk.com/endpoint/58fcdeb1-728d-415d-b0d7-3ab18a275ec2/,Windows Command and Scripting Interpreter Path Traversal Exec,['T1059'],The following analytic identifies path traversal command-line execution. This technique was seen in malicious document that execute malicious code using msdt.exe and path traversal technique that serve as defense evasion. This TTP is a good pivot to look for more suspicious process and command-line that runs before and after this execution. This may help you to find possible downloaded malware or other lolbin execution.,['TTP'],"June 1, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where  Processes.process=""*\/..\/..\/..\/*"" OR Processes.process=""*\\..\\..\\..\\*"" OR Processes.process=""*\/\/..\/\/..\/\/..\/\/*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id Processes.process_hash 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_command_and_scripting_interpreter_path_traversal_exec_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Not known at this moment.,"['Windows Defense Evasion Tactics', 'Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190']",['https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/59b51620-94c9-11ec-b3d5-acde48001122/,Kerberos Pre-Authentication Flag Disabled with PowerShell,"['T1558', 'T1558.004']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Set-ADAccountControl commandlet with specific parameters. Set-ADAccountControl is part of the Active Directory PowerShell module used to manage Windows Active Directory networks. As the name suggests, Set-ADAccountControl is used to modify User Account Control values for an Active Directory domain account. With the appropiate parameters, Set-ADAccountControl allows adversaries to disable Kerberos Pre-Authentication for an account to to easily perform a brute force attack against the user's password offline leveraging the ASP REP Roasting technique. Red Teams and adversaries alike who have obtained privileges in an Active Directory network may use this technique as a backdoor or a way to escalate privileges.",['TTP'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Set-ADAccountControl*"" AND ScriptBlockText=""*DoesNotRequirePreAuth:$true*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `kerberos_pre_authentication_flag_disabled_with_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'user_id']","Although unlikely, Administrators may need to set this flag for legitimate purposes.",['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/59e54602-9680-11ec-a8a6-acde48001122/,Windows Disable Memory Crash Dump,['T1485'],"The following analytic identifies a process that is attempting to disable the ability on Windows to generate a memory crash dump. This was recently identified being utilized by HermeticWiper. To disable crash dumps, the value must be set to 0. This feature is typically modified to perform a memory crash dump when a computer stops unexpectedly because of a Stop error (also known as a blue screen, system crash, or bug check).",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry where (Registry.registry_path=""*\\CurrentControlSet\\Control\\CrashControl\\CrashDumpEnabled"") AND Registry.registry_value_data=""0x00000000"" by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.registry_key_name  
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_memory_crash_dump_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Ransomware', 'Data Destruction', 'Windows Registry Abuse', 'Hermetic Wiper']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/hermetic_wiper']","['https://blog.talosintelligence.com/2022/02/threat-advisory-hermeticwiper.html', 'https://docs.microsoft.com/en-us/troubleshoot/windows-server/performance/memory-dump-file-options']","['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/59e8bf41-7472-412a-90d3-00f3afa452e9/,Windows Exfiltration Over C2 Via Powershell UploadString,['T1041'],"The following analytic identifies potential data exfiltration using the PowerShell net.webclient command. This technique was observed in the Winter-Vivern malware, which uploads desktop screenshots and files from compromised or targeted hosts. Detecting this TTP can serve as a valuable indicator that a process is attempting to upload files to an external or internal URI link. We recommend examining the process, the files it is trying to upload, and the URL link or C2 destination where the data is being uploaded.",['TTP'],"April 5, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Net.webclient*"" AND ScriptBlockText = ""*.UploadString*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_exfiltration_over_c2_via_powershell_uploadstring_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'UserID', 'EventCode']",False positives should be limited. Filter as needed.,['Winter Vivern'],['https://research.splunk.com/stories/winter_vivern'],"['https://twitter.com/_CERT_UA/status/1620781684257091584', 'https://cert.gov.ua/article/3761104']","['Exfiltration', 'Exfiltration Over C2 Channel', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5a5351cd-ba7e-499e-ad82-2ce160ffa637/,Windows Privilege Escalation System Process Without System Parent,"['T1068', 'T1548', 'T1134']",The following analytic detects any system integrity level process that was spawned by a process not running as a system account. This behavior is often seen when attackers successfully escalate privileges to SYSTEM from a user controlled process or service.,['TTP'],"November 30, 2023","`sysmon` EventCode=1 IntegrityLevel=""system"" ParentUser=* NOT ParentUser IN (""*SYSTEM"",""*LOCAL SERVICE"",""*NETWORK SERVICE"",""*DWM-*"",""*$"",""-"") 
| eval src_user = replace(ParentUser,""^[^\\\]+\\\\"","""") 
| stats count min(_time) as firstTime max(_time) as lastTime values(process_name) as process_name values(process) as process, values(process_path) as process_path, values(process_current_directory) as process_current_directory values(parent_process) as parent_process by dest, user, src_user, parent_process_name, parent_process_guid 
| `security_content_ctime(firstTime)`  
| `security_content_ctime(lastTime)` 
| `windows_privilege_escalation_system_process_without_system_parent_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'user', 'ParentUser', 'parent_process_name', 'parent_process_guid', 'IntegrityLevel']",Unknown,['Windows Privilege Escalation'],['https://research.splunk.com/stories/windows_privilege_escalation'],"['https://attack.mitre.org/techniques/T1068/', 'https://vuls.cert.org/confluence/display/Wiki/2021/06/21/Finding+Privilege+Escalation+Vulnerabilities+in+Windows+using+Process+Monitor', 'https://redcanary.com/blog/getsystem-offsec/', 'https://atomicredteam.io/privilege-escalation/T1134.001/']","['Abuse Elevation Control Mechanism', 'Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5a83ce44-8e0f-4786-a775-8249a525c879/,Windows Unsigned DLL Side-Loading,['T1574.002'],"This analytic focuses on detecting potentially malicious unsigned DLLs created in either the c:\windows\system32 or c:\windows\syswow64 folders. This particular technique was observed in the context of the Warzone (Ave Maria) RAT, where it employed a method known as DLL hijacking (dll-side-loading) by dropping the ""dismcore.dll"" to achieve privilege escalation. DLL hijacking is a stealthy attack technique used by cybercriminals to exploit the way Windows searches and loads DLLs. By placing a malicious DLL with the same name as one that a legitimate application is expected to load, the attacker can gain unauthorized access and execute malicious code. In the case of Warzone RAT (Ave Maria), the dropped ""dismcore.dll"" was intended to deceive the system into loading the rogue DLL instead of the legitimate version, thereby granting the malware elevated privileges and enabling further compromise of the target system. Detecting such suspicious DLLs is crucial in preventing privilege escalation attacks and other potential security breaches. Regular security assessments, thorough monitoring, and implementing security best practices are essential in safeguarding systems from such threats.",['Anomaly'],"July 26, 2023","`sysmon` EventCode=7 Signed=false OriginalFileName = ""-"" SignatureStatus=""unavailable"" ImageLoaded IN (""*:\\windows\\system32\\*"", ""*:\\windows\\syswow64\\*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded Signed SignatureStatus OriginalFileName process_name dest EventCode ProcessId Hashes IMPHASH 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_unsigned_dll_side_loading_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'Signed', 'SignatureStatus', 'OriginalFileName', 'process_name', 'dest', 'EventCode', 'ProcessId', 'Hashes', 'IMPHASH']","It is possible some Administrative utilities will load dismcore.dll outside of normal system paths, filter as needed.","['Warzone RAT', 'NjRAT']","['https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/njrat']","['https://asec.ahnlab.com/en/17692/', 'https://www.blackberry.com/us/en/solutions/endpoint-security/ransomware-protection/warzone#:~:text=Warzone%20RAT%20(AKA%20Ave%20Maria)%20is%20a%20remote%20access%20trojan,is%20as%20an%20information%20stealer.']","['Defense Evasion', 'DLL Side-Loading', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5a8a2a72-8322-11eb-9ee9-acde48001122/,Clop Common Exec Parameter,['T1204'],"The following analytics are designed to identifies some CLOP ransomware variant that using arguments to execute its main code or feature of its code. In this variant if the parameter is ""runrun"", CLOP ransomware will try to encrypt files in network shares and if it is ""temp.dat"", it will try to read from some stream pipe or file start encrypting files within the infected local machines. This technique can be also identified as an anti-sandbox technique to make its code non-responsive since it is waiting for some parameter to execute properly.",['TTP'],"March 17, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name != ""*temp.dat*"" Processes.process = ""*runrun*"" OR Processes.process = ""*temp.dat*"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `clop_common_exec_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Operators can execute third party tools using these parameters.,['Clop Ransomware'],['https://research.splunk.com/stories/clop_ransomware'],"['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/5adbc5f1-9a2f-41c1-a810-f37e015f8179/,Notepad with no Command Line Arguments,['T1055'],"The following analytic identifies behavior related to default SliverC2 framework where it will inject into Notepad.exe and spawn Notepad.exe with no command line arguments. In testing, this is a common procedure for SliverC2 usage, however may be modified or changed. From Microsoft, ""The Sideload, SpawnDll, and Execute-Assembly commands spawn and inject into notepad.exe by default. The following query finds process creation events where the same process creates and injects into notepad.exe within 10 seconds.""",['TTP'],"February 22, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=notepad.exe AND Processes.action!=""blocked"" by host _time span=1h Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(notepad\.exe.{0,4}$)"" 
| `notepad_with_no_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering may need to occur based on organization endpoint behavior.,['BishopFox Sliver Adversary Emulation Framework'],['https://research.splunk.com/stories/bishopfox_sliver_adversary_emulation_framework'],"['https://www.microsoft.com/en-us/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/', 'https://www.cybereason.com/blog/sliver-c2-leveraged-by-many-threat-actors#Purple-Team-Section']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5b2f4596-7d4c-11ec-88a7-acde48001122/,Windows NirSoft Utilities,['T1588.002'],"The following hunting analytic assists with identifying the proces execution of commonly used utilities from NirSoft. Potentially not adversary behavior, but worth identifying to know if the software is present and being used.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_path Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `is_nirsoft_software` 
| `windows_nirsoft_utilities_filter`","['security_content_summariesonly', 'is_nirsoft_software', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Filtering may be required before setting to alert.,"['Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['https://www.cisa.gov/uscert/ncas/alerts/TA18-201A', 'http://www.nirsoft.net/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Endpoint', 'Resource Development', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Tool']",['Endpoint']
https://research.splunk.com/endpoint/5ba382c4-2105-11ec-8d8f-acde48001122/,Time Provider Persistence Registry,"['T1547.003', 'T1547']",This analytic is to detect a suspicious modification of time provider registry for persistence and autostart. This technique can allow the attacker to persist on the compromised host and autostart as soon as the machine boot up. This TTP can be a good indicator of suspicious behavior since this registry is not commonly modified by normal user or even an admin.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\CurrentControlSet\\Services\\W32Time\\TimeProviders*"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `time_provider_persistence_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Hermetic Wiper', 'Windows Privilege Escalation', 'Windows Persistence Techniques', 'Windows Registry Abuse', 'Data Destruction']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/data_destruction']","['https://pentestlab.blog/2019/10/22/persistence-time-providers/', 'https://attack.mitre.org/techniques/T1547/003/']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Time Providers']",['Endpoint']
https://research.splunk.com/endpoint/5be109e6-1ac5-11ec-b421-acde48001122/,Suspicious WAV file in Appdata Folder,['T1113'],This analytic is to detect a suspicious creation of .wav file in appdata folder. This behavior was seen in Remcos RAT malware where it put the audio recording in the appdata\audio folde as part of data collection. this recording can be send to its C2 server as part of its exfiltration to the compromised machine. creation of wav files in this folder path is not a ussual disk place used by user to save audio format file.,['TTP'],"July 7, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=*.exe Processes.process_path=""*\\appdata\\Roaming\\*"" by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid 
| `drop_dm_object_name(Processes)` 
|rename process_guid as proc_guid 
| join proc_guid, _time [ 
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.wav"") Filesystem.file_path = ""*\\appdata\\Roaming\\*"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid 
| `drop_dm_object_name(Filesystem)` 
|rename process_guid as proc_guid 
| fields file_name file_path process_name process_path process dest file_create_time _time proc_guid] 
| `suspicious_wav_file_in_appdata_folder_filter`",['security_content_summariesonly'],"['_time', 'dest', 'file_create_time', 'file_name', 'file_path', 'process_name', 'process_path', 'process']",unknown,['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://success.trendmicro.com/dcx/s/solution/1123281-remcos-malware-information?language=en_US', 'https://blog.malwarebytes.com/threat-intelligence/2021/07/remcos-rat-delivered-via-visual-basic/']","['Collection', 'Endpoint', 'Screen Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5c1c2877-06c0-40ee-a1a2-db71f1372b5b/,Windows Private Keys Discovery,"['T1552.004', 'T1552']","The following analytic identifies a process command line that retrieves information related to private keys files. This technique was seen in several post exploitation tools like winpeas that are being used by Ransomware Prestige to search for private key certificates on the compromised host for insecurely stored credentials. This files can be used by adversaries to gain privileges, persistence or remote service authentication to collect more sensitive information. Some private keys required password for operation, so in this case adversaries may need to have that passphrase either via keylogging or brute force attack.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*dir *"" OR  Processes.process = ""*findstr*"" AND Processes.process IN ( ""*.rdg*"", ""*.gpg*"", ""*.pgp*"", ""*.p12*"", ""*.der*"", ""*.csr*"", ""*.cer*"", ""*.ovpn*"", ""*.key*"",  ""*.ppk*"", ""*.p12*"", ""*.pem*"", ""*.pfx*"", ""*.p7b*"", ""*.asc*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_private_keys_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://attack.mitre.org/techniques/T1552/004/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Credential Access', 'Endpoint', 'Private Keys', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/5c7ee6ad-baf4-44fb-b2f0-0cfeddf82dbc/,Windows User Execution Malicious URL Shortcut File,"['T1204.002', 'T1204']",This analytic will identify suspicious creation of URL shortcut link files. This technique was seen in CHAOS ransomware where it will drop this .url link file in %startup% folder that contains the path of its malicious dropped file to execute upon the reboot of the targeted host. The creation of this file can be created by a normal application or software but it is a good practice to verify this type of file specially the resource it tries to execute which is commonly a website.,['TTP'],"January 12, 2023","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where NOT(Filesystem.file_path IN (""*\\Program Files*"")) Filesystem.file_name = *.url by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.user Filesystem.file_path Filesystem.process_guid Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_user_execution_malicious_url_shortcut_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.file_path', 'Filesystem.process_guid', 'Filesystem.dest']",Administrators may allow creation of script or exe in this path.,"['Chaos Ransomware', 'NjRAT', 'Snake Keylogger']","['https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/snake_keylogger']","['https://attack.mitre.org/techniques/T1204/002/', 'https://www.fortinet.com/blog/threat-research/chaos-ransomware-variant-sides-with-russia']","['Endpoint', 'Execution', 'Execution', 'Malicious File', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/5cc67381-44fa-4111-8a37-7a230943f027/,Kerberoasting spn request with RC4 encryption,"['T1558', 'T1558.003']","The following analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential kerberoasting attack against Active Directory networks. Kerberoasting allows an adversary to request kerberos tickets for domain accounts typically used as service accounts and attempt to crack them offline allowing them to obtain privileged access to the domain. This analytic looks for a specific combination of the Ticket_Options field based on common kerberoasting tools. Defenders should be aware that it may be possible for a Kerberoast attack to use different Ticket_Options.",['TTP'],"April 14, 2023","`wineventlog_security` EventCode=4769 Service_Name!=""*$"" (Ticket_Options=0x40810000 OR Ticket_Options=0x40800000 OR Ticket_Options=0x40810010) Ticket_Encryption_Type=0x17 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, service, service_id, Ticket_Encryption_Type, Ticket_Options 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `kerberoasting_spn_request_with_rc4_encryption_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'Ticket_Options', 'Ticket_Encryption_Type', 'dest', 'service', 'service_id']",Older systems that support kerberos RC4 by default like NetApp may generate false positives. Filter as needed,"['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://github.com/redcanaryco/atomic-red-team/blob/4e3e9c8096dde00639a6b98845ec349135554ed5/atomics/T1208/T1208.md', 'https://www.hub.trimarcsecurity.com/post/trimarc-research-detecting-kerberoasting-activity']","['Credential Access', 'Credential Access', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/5ced34b4-ab32-4bb0-8f22-3b8f186f0a38/,Potential password in username,"['T1078.003', 'T1552.001']","This search identifies users who have entered their passwords in username fields. This is done by looking for failed authentication attempts using usernames with a length longer than 7 characters and a high Shannon entropy, and looks for the next successful authentication attempt from the same source system to the same destination system as the failed attempt.",['Hunting'],"May 11, 2022","| tstats `security_content_summariesonly` earliest(_time) AS starttime latest(_time) AS endtime latest(sourcetype) AS sourcetype values(Authentication.src) AS src values(Authentication.dest) AS dest count FROM datamodel=Authentication WHERE nodename=Authentication.Failed_Authentication BY ""Authentication.user"" 
| `drop_dm_object_name(Authentication)` 
| lookup ut_shannon_lookup word AS user 
| where ut_shannon>3 AND len(user)>=8 AND mvcount(src) == 1 
| sort count, - ut_shannon 
| eval incorrect_cred=user 
| eval endtime=endtime+1000 
| map maxsearches=70 search=""
| tstats `security_content_summariesonly` earliest(_time) AS starttime latest(_time) AS endtime latest(sourcetype) AS sourcetype values(Authentication.src) AS src values(Authentication.dest) AS dest count FROM datamodel=Authentication WHERE nodename=Authentication.Successful_Authentication Authentication.src=\""$src$\"" Authentication.dest=\""$dest$\"" sourcetype IN (\""$sourcetype$\"") earliest=\""$starttime$\"" latest=\""$endtime$\"" BY \""Authentication.user\"" 
| `drop_dm_object_name(\""Authentication\"")` 
| `potential_password_in_username_false_positive_reduction` 
| eval incorrect_cred=\""$incorrect_cred$\"" 
| eval ut_shannon=\""$ut_shannon$\"" 
| sort count"" 
| where user!=incorrect_cred 
| outlier action=RM count 
| `potential_password_in_username_filter`","['security_content_summariesonly', 'potential_password_in_username_false_positive_reduction']","['Authentication.user', 'Authentication.src', 'Authentication.dest', 'sourcetype']",Valid usernames with high entropy or source/destination system pairs with multiple authenticating users will make it difficult to identify the real user authenticating.,"['Credential Dumping', 'Insider Threat']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/insider_threat']",['https://medium.com/@markmotig/search-for-passwords-accidentally-typed-into-the-username-field-975f1a389928'],"['Authentication', 'Credential Access', 'Credentials In Files', 'Defense Evasion', 'Initial Access', 'Local Accounts', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5d0d4830-0133-11ec-bae3-acde48001122/,Local Account Discovery with Net,"['T1087', 'T1087.001']","This analytic looks for the execution of net.exe or net1.exe with command-line arguments utilized to query for local users. The two arguments user and 'users', return a list of all local users. Red Teams and adversaries alike use net.exe to enumerate users for situational awareness and Active Directory Discovery.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` (Processes.process=*user OR Processes.process=*users) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `local_account_discovery_with_net_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']",['_time'],Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Sandworm Tools']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/sandworm_tools']",['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5d814af1-1041-47b5-a9ac-d754e82e9a26/,Process Creating LNK file in Suspicious Location,"['T1566', 'T1566.002']",This search looks for a process launching an *.lnk file under C:\User* or *\Local\Temp\*. This is common behavior used by various spear phishing tools.,['TTP'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.lnk"" AND (Filesystem.file_path=""C:\\User\\*"" OR Filesystem.file_path=""*\\Temp\\*"") by _time span=1h Filesystem.process_guid Filesystem.file_name Filesystem.file_path Filesystem.file_hash Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| rename process_guid as lnk_guid 
| join lnk_guid, _time [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=* by _time span=1h Processes.parent_process_guid Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process 
| `drop_dm_object_name(Processes)` 
| rename parent_process_guid as lnk_guid 
| fields _time lnk_guid process_id dest process_name process_path process] 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| table firstTime, lastTime, lnk_guid, process_id, user, dest, file_name, file_path, process_name, process, process_path, file_hash 
| `process_creating_lnk_file_in_suspicious_location_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.file_hash', 'Filesystem.user']",This detection should yield little or no false positive results. It is uncommon for LNK files to be executed from temporary or user directories.,"['Spearphishing Attachments', 'Qakbot', 'IcedID', 'Amadey']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/amadey']","['https://attack.mitre.org/techniques/T1566/001/', 'https://www.trendmicro.com/en_us/research/17/e/rising-trend-attackers-using-lnk-files-download-malware.html', 'https://twitter.com/pr0xylife/status/1590394227758104576']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Link', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5d93894e-befa-4429-abde-7fc541020b7b/,Windows Multiple Accounts Disabled,"['T1098', 'T1078']","This Splunk detection focuses on instances where more than five unique Windows accounts are disabled within a 10-minute window, as indicated by Event Code 4725 in the Windows Security Event Log. The query analyzes the wineventlog_security dataset, grouping data into 10-minute segments, and tracks the count and distinct count of TargetUserName, the accounts being disabled. This pattern of disabling multiple accounts rapidly is unusual and could signal internal policy breaches or an external attacker's attempt to disrupt normal operations. Teams are advised to tailor the threshold and timeframe of this detection to their environment's specifics",['TTP'],"February 21, 2024","`wineventlog_security` EventCode=4725 status=success 
| bucket span=10m _time 
| stats count dc(user) as unique_users values(user) as user by EventCode signature _time src_user SubjectDomainName TargetDomainName Logon_ID 
| where unique_users > 5 
| `windows_multiple_accounts_disabled_filter`",['wineventlog_security'],"['_time', 'EventCode', 'success', 'TargetUserName', 'SubjectUserName', 'src_user', 'SubjectDomainName', 'TargetDomainName', 'Logon_ID', 'user']","Service accounts may be responsible for the creation, deletion or modification of accounts for legitimate purposes. Filter as needed.",['Azure Active Directory Persistence'],['https://research.splunk.com/stories/azure_active_directory_persistence'],['https://attack.mitre.org/techniques/T1098/'],"['Account Manipulation', 'Defense Evasion', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/5d9c6eee-988c-11eb-8253-acde48001122/,WinEvent Scheduled Task Created Within Public Path,"['T1053.005', 'T1053']","The following analytic utilizes Windows Security EventCode 4698, which indicates the creation of a scheduled task on a Windows system. The purpose of this query is to identify suspicious tasks that have been registered using either schtasks.exe or TaskService and involve executing a command from a user-writable file path.
When this analytic is triggered, it provides information such as the first and last registration time of the task, the command to be executed, the task name, author, and whether it is set as hidden or not. It is worth noting that schtasks.exe is commonly located in C:\Windows\system32 and C:\Windows\syswow64, and it loads the taskschd.dll DLL when launched. If this DLL is loaded by another process, it suggests that a scheduled task may be registered within that process's context in memory.
During the triage process, it is essential to identify the source of the scheduled task creation, whether it was initiated through schtasks.exe or TaskService. The analyst should review the task that was created, including the command to be executed. Additionally, any artifacts on disk related to the task should be captured and analyzed. It is also recommended to identify any parallel processes that occurred within the same timeframe to determine the source of the task creation.
By conducting this triage process, security analysts can gain insights into potentiallymalicious or suspicious scheduled tasks, helping them identify the source and assess the impact of the task. This analytic is valuable for a Security Operations Center (SOC) as it can detect unauthorized or suspicious activity that could indicate an attacker's attempt to establish persistence or execute unauthorized commands on the system.",['TTP'],"February 6, 2024","`wineventlog_security` EventCode=4698 
| xmlkv Message 
| search Command IN (""*\\users\\public\\*"", ""*\\programdata\\*"", ""*\\temp\\*"", ""*\\Windows\\Tasks\\*"", ""*\\appdata\\*"", ""*\\perflogs\\*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, Task_Name, Command, Author, Enabled, Hidden 
|  rename ComputerName as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winevent_scheduled_task_created_within_public_path_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Task_Name', 'Description', 'Command']",False positives are possible if legitimate applications are allowed to register tasks in public paths. Filter as needed based on paths that are used legitimately.,"['Industroyer2', 'Ryuk Ransomware', 'Scheduled Tasks', 'AsyncRAT', 'Winter Vivern', 'Ransomware', 'Windows Persistence Techniques', 'Active Directory Lateral Movement', 'Prestige Ransomware', 'IcedID', 'Data Destruction', 'CISA AA23-347A', 'CISA AA22-257A']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4698', 'https://redcanary.com/threat-detection-report/techniques/scheduled-task-job/', 'https://docs.microsoft.com/en-us/windows/win32/taskschd/time-trigger-example--scripting-?redirectedfrom=MSDN', 'https://app.any.run/tasks/e26f1b2e-befa-483b-91d2-e18636e2faf3/']","['Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5e0b1936-8f99-4399-8ee2-9edc5b32e170/,Windows Screen Capture Via Powershell,['T1113'],"The following analytic identifies a potential PowerShell script that captures screen images on compromised or targeted hosts. This technique was observed in the Winter-Vivern malware, which attempts to capture desktop screens using a PowerShell script and send the images to its C2 server as part of its exfiltration strategy. This TTP serves as a useful indicator that a PowerShell process may be gathering desktop screenshots from a host system, potentially signaling malicious activity.",['TTP'],"April 5, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*[Drawing.Graphics]::FromImage(*"" AND ScriptBlockText = ""*New-Object Drawing.Bitmap*"" AND ScriptBlockText = ""*.CopyFromScreen*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_screen_capture_via_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'UserID', 'EventCode']",unknown,['Winter Vivern'],['https://research.splunk.com/stories/winter_vivern'],"['https://twitter.com/_CERT_UA/status/1620781684257091584', 'https://cert.gov.ua/article/3761104']","['Collection', 'Screen Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5e38ded4-c964-41f4-8cb6-4a1a53c6929f/,Windows PowerShell Export Certificate,"['T1552.004', 'T1552', 'T1649']",The following analytic identifies the PowerShell Cmdlet export-certificate utilizing Script Block Logging. This particular behavior is related to an adversary attempting to steal certificates local to the Windows endpoint within the Certificate Store.,['Anomaly'],"February 1, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*export-certificate*"") 
| rename Computer as dest  
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_export_certificate_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode']","It is possible administrators or scripts may run these commands, filtering may be required.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://dev.to/iamthecarisma/managing-windows-pfx-certificates-through-powershell-3pj', 'https://learn.microsoft.com/en-us/powershell/module/pki/export-certificate?view=windowsserver2022-ps']","['Credential Access', 'Credential Access', 'Credential Access', 'Private Keys', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/5eb479b1-a5ea-4e01-8365-780078613776/,Windows Modify Registry Risk Behavior,['T1112'],"This analytic is designed to identify instances where three or more distinct analytics associated with Mitre ID T1112 - Modification of registry information are triggered. Such occurrences could indicate the presence of multiple malicious registry modifications on a host. Malicious actors frequently manipulate the Windows Registry to hide important configuration details within specific Registry keys. This technique allows them to obscure their activities, erase any evidence during cleanup operations, and establish continuous access and execution of malicious code.",['Correlation'],"June 15, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where source IN (""*registry*"") All_Risk.annotations.mitre_attack.mitre_technique_id IN (""*T1112*"") by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 3 
| `windows_modify_registry_risk_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']",False positives will be present based on many factors. Tune the correlation as needed to reduce too many triggers.,['Windows Registry Abuse'],['https://research.splunk.com/stories/windows_registry_abuse'],"['https://www.splunk.com/en_us/blog/security/do-not-cross-the-redline-stealer-detections-and-analysis.html', 'https://www.splunk.com/en_us/blog/security/asyncrat-crusade-detections-and-defense.html', 'https://www.splunk.com/en_us/blog/security/from-registry-with-love-malware-registry-abuses.html', 'https://www.splunk.com/en_us/blog/security/-applocker-rules-as-defense-evasion-complete-analysis.html']","['Defense Evasion', 'Modify Registry', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5ed8c50a-8869-11ec-876f-acde48001122/,Rubeus Kerberos Ticket Exports Through Winlogon Access,"['T1550', 'T1550.003']","The following analytic looks for a process accessing the winlogon.exe system process. The Splunk Threat Research team identified this behavior when using the Rubeus tool to monitor for and export kerberos tickets from memory. Before being able to export tickets. Rubeus will try to escalate privileges to SYSTEM by obtaining a handle to winlogon.exe before trying to monitor for kerberos tickets. Exporting tickets from memory is typically the first step for pass the ticket attacks. Red teams and adversaries alike may use the pass the ticket technique using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Defenders should be aware that adversaries may customize the source code of Rubeus to potentially bypass this analytic.",['TTP'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=C:\\Windows\\system32\\winlogon.exe (GrantedAccess=0x1f3fff) (SourceImage!=C:\\Windows\\system32\\svchost.exe AND SourceImage!=C:\\Windows\\system32\\lsass.exe AND SourceImage!=C:\\Windows\\system32\\LogonUI.exe AND SourceImage!=C:\\Windows\\system32\\smss.exe AND SourceImage!=C:\\Windows\\system32\\wbem\\wmiprvse.exe) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, SourceImage, SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess  
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `rubeus_kerberos_ticket_exports_through_winlogon_access_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'TargetImage', 'CallTrace', 'dest', 'TargetProcessId', 'SourceImage', 'SourceProcessId']",Legitimate applications may obtain a handle for winlogon.exe. Filter as needed,"['CISA AA23-347A', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://github.com/GhostPack/Rubeus', 'https://web.archive.org/web/20210725005734/http://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/', 'https://attack.mitre.org/techniques/T1550/003/']","['Defense Evasion', 'Defense Evasion', 'Lateral Movement', 'Lateral Movement', 'Pass the Ticket', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/5ee2bcd0-b2ff-11eb-bb34-acde48001122/,Delete ShadowCopy With PowerShell,['T1490'],This following analytic detects PowerShell command to delete shadow copy using the WMIC PowerShell module. This technique was seen used by a recent adversary to deploy DarkSide Ransomware where it executed a child process of PowerShell to execute a hex encoded command to delete shadow copy. This hex encoded command was able to be decrypted by PowerShell log.,['TTP'],"May 2, 2022","`powershell` EventCode=4104 ScriptBlockText= ""*ShadowCopy*"" (ScriptBlockText = ""*Delete*"" OR ScriptBlockText = ""*Remove*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `delete_shadowcopy_with_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",unknown,"['DarkSide Ransomware', 'Ransomware', 'Revil Ransomware', 'DarkGate Malware']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware', 'https://research.splunk.com/stories/darkgate_malware']","['https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://www.techtarget.com/searchwindowsserver/tutorial/Set-up-PowerShell-script-block-logging-for-added-security']","['Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5ee98b2f-8b9e-457a-8bdc-dd41aaba9e87/,Windows Registry Certificate Added,"['T1553.004', 'T1553']","The following analytic identifies installation of a root CA certificate by monitoring the registry. The base paths may be found here. In short, there are specific certificate registry paths that will be written to (SetValue) when a new certificate is added. The high-fidelity events to pay attention to are SetValue events where the TargetObject property ends with ""<THUMBPRINT_VALUE>\Blob"" as this indicates the direct installation or modification of a root certificate binary blob. The other high fidelity reference will be which process is making the registry modifications. There are very few processes that modify these day to day, therefore monitoring for all to start (hunting) provides a great beginning.",['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\certificates\\*"") AND Registry.registry_value_name=""Blob"" by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.process_guid Registry.registry_key_name Registry.registry_value_data 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_registry_certificate_added_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest']","False positives will be limited to a legitimate business applicating consistently adding new root certificates to the endpoint. Filter by user, process, or thumbprint.","['Windows Drivers', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://posts.specterops.io/code-signing-certificate-cloning-attacks-and-defenses-6f98657fc6ec', 'https://github.com/redcanaryco/atomic-red-team/tree/master/atomics/T1553.004']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Install Root Certificate', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Subvert Trust Controls']",['Endpoint']
https://research.splunk.com/endpoint/5f1c168e-118b-11ec-84ff-acde48001122/,MSHTML Module Load in Office Product,"['T1566', 'T1566.001']","The following detection identifies the module load of mshtml.dll into an Office product. This behavior has been related to CVE-2021-40444, whereas the malicious document will load ActiveX, which activates the MSHTML component. The vulnerability resides in the MSHTML component. During triage, identify parallel processes and capture any file modifications for analysis.",['TTP'],"November 7, 2023","`sysmon` EventID=7  parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""wordpad.exe"",""wordview.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"", ""msaccess.exe"",""Graph.exe"",""winproj.exe"") ImageLoaded IN (""*\\mshtml.dll"", ""*\\Microsoft.mshtml.dll"",""*\\IE.Interop.MSHTML.dll"",""*\\MshtmlDac.dll"",""*\\MshtmlDed.dll"",""*\\MshtmlDer.dll"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, process_name, ImageLoaded, OriginalFileName, ProcessGuid  
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `mshtml_module_load_in_office_product_filter`","['security_content_ctime', 'sysmon']","['_time', 'ImageLoaded', 'process_name', 'OriginalFileName', 'process_id', 'dest']","Limited false positives will be present, however, tune as necessary.","['Spearphishing Attachments', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://strontic.github.io/xcyclopedia/index-dll', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5fde0b7c-df7a-40b1-9b3a-294c00f0289d/,Windows AD Same Domain SID History Addition,"['T1134.005', 'T1134']","The following analytic looks for changes to the sIDHistory AD attribute of user or computer objects which exist within the same domain. The SID history AD attribute allows users to inherit permissions from a separate AD account without group changes. Initially developed for access continuity when migrating user accounts to different domains, this attribute can also be abused by adversaries to stealthily grant access to a backdoor account within the same domain. This analytic was written to pick up on activity via Mimikatz sid::patch. Please note there are additional avenues to abuse SID history such as DCShadow & Golden / Diamond tickets which won't be detected using these event codes.",['TTP'],"September 9, 2022","`wineventlog_security` (EventCode=4742 OR EventCode=4738) NOT SidHistory IN (""%%1793"", -) 
| rex field=SidHistory ""(^%{
|^)(?P<SidHistoryMatch>.*)(\-
|\\\)"" 
| rex field=TargetSid ""^(?P<TargetSidmatch>.*)(\-
|\\\)"" 
| where SidHistoryMatch=TargetSidmatch OR SidHistoryMatch=TargetDomainName 
| rename TargetSid as userSid, TargetDomainName as userDomainName 
| table _time action status host user userSid userDomainName SidHistory Logon_ID src_user 
| `windows_ad_same_domain_sid_history_addition_filter`",['wineventlog_security'],"['_time', 'EventCode', 'SidHistory', 'TargetSid', 'TargetDomainName', 'user', 'src_user', 'Logon_ID']",Unknown,"['Sneaky Active Directory Persistence Tricks', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks', 'https://research.splunk.com/stories/windows_persistence_techniques']","['https://adsecurity.org/?p=1772', 'https://learn.microsoft.com/en-us/windows/win32/adschema/a-sidhistory?redirectedfrom=MSDN', 'https://learn.microsoft.com/en-us/defender-for-identity/security-assessment-unsecure-sid-history-attribute', 'https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/sid-history-injection']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'SID-History Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/5ffaa42c-acdb-11eb-9ad3-acde48001122/,Process Kill Base On File Path,"['T1562.001', 'T1562']",The following analytic identifies the use of wmic.exe using delete to remove a executable path. This is typically ran via a batch file during beginning stages of an adversary setting up for mining on an endpoint.,['TTP'],"May 4, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_wmic` AND Processes.process=""*process*"" AND Processes.process=""*executablepath*"" AND Processes.process=""*delete*"" by  Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `process_kill_base_on_file_path_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Unknown.,['XMRig'],['https://research.splunk.com/stories/xmrig'],['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/60023bb6-5500-11eb-ae93-0242ac130002/,Suspicious mshta child process,"['T1218', 'T1218.005']","The following analytic identifies child processes spawning from  ""mshta.exe"". The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, parent process ""mshta.exe"" and its child process.",['TTP'],"January 1, 2024","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=mshta.exe AND (Processes.process_name=powershell.exe OR Processes.process_name=colorcpl.exe OR Processes.process_name=msbuild.exe OR Processes.process_name=microsoft.workflow.compiler.exe OR Processes.process_name=searchprotocolhost.exe OR Processes.process_name=scrcons.exe OR Processes.process_name=cscript.exe OR Processes.process_name=wscript.exe OR Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe) by Processes.dest Processes.parent_process Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_mshta_child_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.dest', 'Processes.parent_process', 'Processes.user']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6078fa20-a6d2-11eb-b662-acde48001122/,Office Product Spawning MSHTA,"['T1566', 'T1566.001']","The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning mshta.exe. In malicious instances, the command-line of mshta.exe will contain the hta file locally, or a URL to the remote destination. In addition, Threat Research has released a detections identifying suspicious use of mshta.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or mshta.exe will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"", ""onenote.exe"",""onenotem.exe"", ""msaccess.exe"",""Graph.exe"",""winproj.exe"") `process_mshta` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_mshta_filter`","['security_content_summariesonly', 'process_mshta', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",No false positives known. Filter as needed.,"['Spearphishing Attachments', 'IcedID', 'Azorult', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability', 'NjRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability', 'https://research.splunk.com/stories/njrat']",['https://redcanary.com/threat-detection-report/threats/TA551/'],"['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/60df805d-4605-41c8-bbba-57baa6a4eb97/,Windows Replication Through Removable Media,['T1091'],"This analytic is developed to detect suspicious executable or script files created or dropped in the root drive of a targeted host. This technique is commonly used by threat actors, adversaries or even red teamers to replicate or spread in possible removable drives. Back then, WORM malware was popular for this technique where it would drop a copy of itself in the root drive to be able to spread or to have a lateral movement in other network machines. Nowadays, Ransomware like CHAOS ransomware also use this technique to spread its malicious code in possible removable drives. This TTP detection can be a good indicator that a process might create a persistence technique or lateral movement of a targeted machine. We suggest checking the process name that creates this event, the file created, user type, and the reason why that executable or scripts are dropped in the root drive.",['TTP'],"September 7, 2023","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name = *.exe OR Filesystem.file_name = *.dll OR Filesystem.file_name = *.sys OR Filesystem.file_name = *.com OR Filesystem.file_name = *.vbs OR Filesystem.file_name = *.vbe OR Filesystem.file_name = *.js  OR Filesystem.file_name= *.bat OR Filesystem.file_name = *.cmd OR Filesystem.file_name = *.pif) by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.file_path Filesystem.user Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| eval dropped_file_path = split(file_path, ""\\"") 
| eval dropped_file_path_split_count = mvcount(dropped_file_path) 
| eval root_drive = mvindex(dropped_file_path,0) 
| where LIKE(root_drive, ""%:"") AND dropped_file_path_split_count = 2  AND root_drive!= ""C:"" 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_replication_through_removable_media_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_path', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user']",Administrators may allow creation of script or exe in the paths specified. Filter as needed.,"['Chaos Ransomware', 'NjRAT', 'PlugX']","['https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/plugx']","['https://attack.mitre.org/techniques/T1204/002/', 'https://www.fortinet.com/blog/threat-research/chaos-ransomware-variant-sides-with-russia']","['Endpoint', 'Initial Access', 'Lateral Movement', 'Replication Through Removable Media', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/61490da9-52a1-4855-a0c5-28233c88c481/,Windows Masquerading Explorer As Child Process,"['T1574.002', 'T1574']",The following analytic identifies a suspicious parent process of explorer.exe. Explorer is usually executed by userinit.exe that will exit after execution that causes the main explorer.exe no parent process. Some malware like qakbot spawn another explorer.exe to inject its code. This TTP detection is a good indicator that a process spawning explorer.exe might inject code or masquerading its parent child process to evade detections.,['TTP'],"October 20, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN(""cmd.exe"", ""powershell.exe"", ""regsvr32.exe"") AND Processes.process_name = ""explorer.exe"" by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest Processes.parent_process_id 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `windows_masquerading_explorer_as_child_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.qakbot'],"['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/61994268-04f4-11ec-865c-acde48001122/,Get DomainUser with PowerShell Script Block,"['T1087.002', 'T1087']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainUser commandlet. GetDomainUser is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain users for situational awareness and Active Directory Discovery.",['TTP'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Get-DomainUser*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domainuser_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainUser/'],"['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/61e7b44a-6088-4f26-b788-9a96ba13b37a/,Detect Rundll32 Application Control Bypass - setupapi,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe loading setupapi.dll and iesetupapi.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",['TTP'],"February 4, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*setupapi* by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_rundll32_application_control_bypass___setupapi_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use setupapi triggering a false positive.","['Suspicious Rundll32 Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://lolbas-project.github.io/lolbas/Libraries/Setupapi/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/61e9a56a-20fa-11ec-8ba3-acde48001122/,Verclsid CLSID Execution,"['T1218.012', 'T1218']",This analytic is to detect a possible abuse of verclsid to execute malicious file through generate CLSID. This process is a normal application of windows to verify the CLSID COM object before it is instantiated by Windows Explorer. This hunting query can be a good pivot point to analyze what is he CLSID or COM object pointing too to check if it is a valid application or not.,['Hunting'],"September 29, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_verclsid` AND Processes.process=""*/S*"" Processes.process=""*/C*"" AND  Processes.process=""*{*"" AND Processes.process=""*}*"" by  Processes.process_name Processes.original_file_name Processes.dest Processes.user Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `verclsid_clsid_execution_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_verclsid']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",windows can used this application for its normal COM object validation.,['Unusual Processes'],['https://research.splunk.com/stories/unusual_processes'],"['https://gist.github.com/NickTyrer/0598b60112eaafe6d07789f7964290d5', 'https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution', 'Verclsid']",['Endpoint']
https://research.splunk.com/endpoint/622f08d0-69ef-42c2-8139-66088bc25acd/,Windows CAB File on Disk,['T1566.001'],"The following analytic identifies .cab files being written to disk. Utilize this analytic as a way to hunt for suspect .cab files being written to non-standard paths and tune as needed. Cab files were recently being utilized to deliver .url files embedded. The .url files were then used to deliver malicious payloads. The search specifically looks for instances where the file name is '*.cab' and the action is 'write'. During the triage process, it is recommended to review the file path for additional artifacts that may provide further insights into the event.",['Anomaly'],"November 8, 2023","| tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name=*.cab) by Filesystem.dest Filesystem.action Filesystem.process_id Filesystem.file_name 
| `drop_dm_object_name(""Filesystem"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_cab_file_on_disk_filter`","['security_content_summariesonly', 'security_content_ctime']","['Filesystem.dest', 'Filesystem.action', 'Filesystem.process_id', 'Filesystem.file_name']",False positives will only be present if a process legitimately writes a .cab file to disk. Modify the analytic as needed by file path. Filter as needed.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://github.com/PaloAltoNetworks/Unit42-timely-threat-intel/blob/main/2023-10-25-IOCs-from-DarkGate-activity.txt'],"['Endpoint', 'Initial Access', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/624919bc-c382-11eb-adcc-acde48001122/,Conti Common Exec parameter,['T1204'],This search detects the suspicious commandline argument of revil ransomware to encrypt specific or all local drive and network shares of the compromised machine or host.,['TTP'],"June 2, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*-m local*"" OR Processes.process = ""*-m net*"" OR Processes.process = ""*-m all*"" OR Processes.process = ""*-nomutex*"" by Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `conti_common_exec_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",3rd party tool may have commandline parameter that can trigger this detection.,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.conti'],"['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/62606c77-d53d-4182-9371-b02cdbbbcef7/,Windows Rapid Authentication On Multiple Hosts,['T1003.002'],"The following analytic leverages Event ID 4624 to identify a source computer authenticating to a large number of remote endpoints within an Active Directory network. Specifically, the logic will trigger when a source endpoint authenticates to 30 or more target computers within a 5 minute timespan. This behavior could represent an adversary who is moving laterally across the environment or enumerating network shares in the search for sensitive files. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",['TTP'],"March 23, 2023","`wineventlog_security` EventCode=4624 LogonType=3 TargetUserName!=""ANONYMOUS LOGON"" TargetUserName!=""*$"" 
| bucket span=5m _time 
| stats dc(Computer) AS unique_targets values(Computer) as host_targets by _time, IpAddress, TargetUserName 
| where unique_targets > 30 
| `windows_rapid_authentication_on_multiple_hosts_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'TargetUserName', 'Computer', 'IpAddress']",Vulnerability scanners or system administration tools may also trigger this detection. Filter as needed.,"['Active Directory Privilege Escalation', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_lateral_movement']","['https://attack.mitre.org/techniques/T1135/', 'https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624']","['Credential Access', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/62732736-6250-11eb-ae93-0242ac130002/,Suspicious Regsvr32 Register Suspicious Path,"['T1218', 'T1218.010']","Adversaries may abuse Regsvr32.exe to proxy execution of malicious code by using non-standard file extensions to load DLLs. Upon investigating, look for network connections to remote destinations (internal or external). Review additional parrallel processes and child processes for additional activity.",['TTP'],"March 2, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_regsvr32` Processes.process IN (""*\\appdata\\*"", ""*\\programdata\\*"",""*\\windows\\temp\\*"") NOT (Processes.process IN (""*.dll*"", ""*.ax*"", ""*.ocx*"")) by Processes.dest Processes.user  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `suspicious_regsvr32_register_suspicious_path_filter`","['security_content_summariesonly', 'process_regsvr32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives with the query restricted to specified paths. Add more world writeable paths as tuning continues.,"['Suspicious Regsvr32 Activity', 'Icedid', 'Living Off The Land', 'Qakbot']","['https://research.splunk.com/stories/suspicious_regsvr32_activity', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/qakbot']","['https://attack.mitre.org/techniques/T1218/010/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.010/T1218.010.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/', 'https://support.microsoft.com/en-us/topic/how-to-use-the-regsvr32-tool-and-troubleshoot-regsvr32-error-messages-a98d960a-7392-e6fe-d90a-3f4e0cb543e5', 'https://any.run/report/f29a7d2ecd3585e1e4208e44bcc7156ab5388725f1d29d03e7699da0d4598e7c/0826458b-5367-45cf-b841-c95a33a01718']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/628d9c7c-3242-43b5-9620-7234c080a726/,Windows Snake Malware Kernel Driver Comadmin,['T1547.006'],"The following analytic identifies the comadmin.dat file written to disk, which is related to Snake Malware. From the report, Snakes installer drops the kernel driver and a custom DLL which is used to load the driver into a single AES encrypted file on disk. Typically, this file is named comadmin.dat and is stored in the %windows%\system32\Com directory.",['TTP'],"May 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_path=""*\\windows\\system32\\com\\*"" AND Filesystem.file_name=""comadmin.dat""  by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_snake_malware_kernel_driver_comadmin_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']","False positives may be present, filter as needed.",['Snake Malware'],['https://research.splunk.com/stories/snake_malware'],['https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF'],"['Endpoint', 'Kernel Modules and Extensions', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/62fed254-513b-460e-953d-79771493a9f3/,Detect HTML Help Renamed,"['T1218', 'T1218.001']","The following analytic identifies a renamed instance of hh.exe (HTML Help) executing a Compiled HTML Help (CHM). This particular technique will load Windows script code from a compiled help file. CHM files may contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Validate it is the legitimate version of hh.exe by reviewing the PE metadata. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['Hunting'],"April 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=hh.exe AND Processes.original_file_name=HH.EXE by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_html_help_renamed_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely a renamed instance of hh.exe will be used legitimately, filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6338266a-ee2a-11eb-bf68-acde48001122/,Rundll32 Process Creating Exe Dll Files,"['T1218', 'T1218.011']",This search is to detect a suspicious rundll32 process that drops executable (.exe or .dll) files. This behavior seen in rundll32 process of IcedID that tries to drop copy of itself in temp folder or download executable drop it either appdata or programdata as part of its execution.,['TTP'],"November 7, 2023","`sysmon` EventCode=11 Image=""*rundll32.exe"" TargetFilename IN (""*.exe"", ""*.dll"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image TargetFilename Computer 
| rename Computer as dest 
| rename TargetFilename as file_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_process_creating_exe_dll_files_filter`","['security_content_ctime', 'sysmon']","['_time', 'process_name', 'file_name', 'process_guid', 'dest', 'user_id']",unknown,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://any.run/malware-trends/icedid'],"['Defense Evasion', 'Defense Evasion', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/63614a58-10e2-4c6c-ae81-ea1113681439/,Anomalous usage of Archive Tools,"['T1560.001', 'T1560']",The following detection identifies the usage of archive tools from the command line.,['Anomaly'],"November 22, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name=""winrar.exe"" OR process_file_name LIKE ""7z%"" OR process_file_name LIKE ""winzip%"") AND (actor_process_file_name LIKE ""%powershell.exe"" OR actor_process_file_name LIKE ""%cmd.exe"") --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives can be ligitmate usage of archive tools from the command line.,"['Cobalt Strike', 'NOBELIUM Group', 'Insider Threat']","['https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/insider_threat']",['https://attack.mitre.org/techniques/T1560/001/'],"['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/637557ec-ca08-11eb-bd0a-acde48001122/,Powershell Creating Thread Mutex,"['T1027', 'T1027.005', 'T1059.001']","The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is using the mutex function. This function is commonly seen in some obfuscated PowerShell scripts to make sure that only one instance of there process is running on a compromise machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['TTP'],"May 2, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Threading.Mutex*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_creating_thread_mutex_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",powershell developer may used this function in their script for instance checking too.,['Malicious PowerShell'],['https://research.splunk.com/stories/malicious_powershell'],"['https://isc.sans.edu/forums/diary/Some+Powershell+Malicious+Code/22988/', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Defense Evasion', 'Defense Evasion', 'Execution', 'Indicator Removal from Tools', 'Obfuscated Files or Information', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/637b603e-1799-40fd-bf87-47ecbd551b66/,Linux Decode Base64 to Shell,"['T1027', 'T1059.004']","The following analytic detects the behavior of decoding base64-encoded data and passing it to a Linux shell. Additionally, it mitigates the potential damage and protects the organization's systems and data.The detection is made by searching for specific commands in the Splunk query, namely ""base64 -d"" and ""base64 –decode"", within the Endpoint.Processes data model. The analytic also includes a filter for Linux shells. The detection is important because  it indicates the presence of malicious activity since Base64 encoding is commonly used to obfuscate malicious commands or payloads, and decoding it can be a step in running those commands. It suggests that an attacker is attempting to run malicious commands on a Linux system to gain unauthorized access, for data exfiltration, or perform other malicious actions.",['TTP'],"July 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*base64 -d*"",""*base64 --decode*"") AND Processes.process=""*
|*"" `linux_shells` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_decode_base64_to_shell_filter`","['security_content_summariesonly', 'linux_shells', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on legitimate software being utilized. Filter as needed.,['Linux Living Off The Land'],['https://research.splunk.com/stories/linux_living_off_the_land'],"['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1027/T1027.md#atomic-test-1---decode-base64-data-into-script', 'https://redcanary.com/blog/lateral-movement-with-secure-shell/', 'https://linux.die.net/man/1/base64']","['Defense Evasion', 'Endpoint', 'Execution', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell']",['Endpoint']
https://research.splunk.com/endpoint/637e1b5c-9be1-11eb-9c32-acde48001122/,Winword Spawning Windows Script Host,"['T1566', 'T1566.001']","The following detection identifies Microsoft Winword.exe spawning Windows Script Host - cscript.exe or wscript.exe. Typically, this is not common behavior and not default with Winword.exe. Winword.exe will generally be found in the following path C:\Program Files\Microsoft Office\root\Office16 (version will vary). cscript.exe or wscript.exe default location is c:\windows\system32\ or c:windows\syswow64`. cscript.exe or wscript.exe spawning from Winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line executed will most likely be obfuscated and captured via another detection. During triage, review parallel processes and identify any files that may have been written. Review the reputation of the remote destination and block accordingly.",['TTP'],"April 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""winword.exe"" Processes.process_name IN (""cscript.exe"", ""wscript.exe"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winword_spawning_windows_script_host_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'process_name', 'process_id', 'parent_process_name', 'dest', 'user', 'parent_process_id']",There will be limited false positives and it will be different for every environment. Tune by child process or command-line as needed.,"['Spearphishing Attachments', 'CVE-2023-21716 Word RTF Heap Corruption']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/cve-2023-21716_word_rtf_heap_corruption']",['https://attack.mitre.org/techniques/T1566/001/'],"['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/63a2c15e-9448-43c5-a4a8-9852266aaada/,Windows App Layer Protocol Qakbot NamedPipe,['T1071'],The following analytic identifies a suspicious process creating or connecting to a possible Qakbot named pipe . This technique was seen in Qakbot malware that creates named pipe after injecting its code in legitimate process to communicate on other process that also has an injected code to steal information on the compromised host. This Anomaly detection can be a good pivot for possible Qakbot infection. This detection looks for possible random generated named pipe (in GUID form) created by known process being abused by Qakbot.,['Anomaly'],"November 10, 2022","`sysmon` EventCode IN (17, 18) EventType IN ( ""CreatePipe"", ""ConnectPipe"") Image IN (""*\\calc.exe"", ""*\\notepad.exe"", ""*\\rdpclip.exe"", ""*\\explorer.exe"", ""*\\wermgr.exe"", ""*\\ping.exe"", ""*\\OneDriveSetup.exe"", ""*\\dxdiag.exe"", ""*\\mobsync.exe"", ""*\\msra.exe"", ""*\\xwizard.exe"") 
| regex PipeName=""^\\\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{8}"" 
| stats  min(_time) as firstTime max(_time) as lastTime count by Image EventType ProcessGuid ProcessId PipeName SecurityID EventCode dest UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_app_layer_protocol_qakbot_namedpipe_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'EventType', 'ProcessGuid', 'ProcessId', 'PipeName', 'dest', 'UserID', 'SecurityID']",unknown,"['Qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://research.splunk.com/stories/qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://strontic.github.io/xcyclopedia/library/wermgr.exe-0F652BF7ADA772981E8AAB0D108FCC92.html', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html', 'https://www.elastic.co/security-labs/qbot-malware-analysis']","['Application Layer Protocol', 'Command And Control', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/63a449ae-9f04-11ec-945e-acde48001122/,Windows Disable Windows Group Policy Features Through Registry,['T1112'],This analytic is to detect a suspicious registry modification to disable windows features. These techniques are seen in several ransomware malware to impair the compromised host to make it hard for analyst to mitigate or response from the attack. Disabling these known features make the analysis and forensic response more hard. Disabling these feature is not so common but can still be implemented by the administrator for security purposes. In this scenario filters for users that are allowed doing this is needed.,['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\*"" OR Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\*"" Registry.registry_value_name IN (""NoDesktop"", ""NoFind"", ""NoControlPanel"", ""NoFileMenu"", ""NoSetTaskbar"", ""NoTrayContextMenu"", ""TaskbarLockAll"", ""NoThemesTab"",""NoPropertiesMyDocuments"",""NoVisualStyleChoice"",""NoColorChoice"",""NoPropertiesMyDocuments"") Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_windows_group_policy_features_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Disabling these features for legitimate purposes is not a common use case but can still be implemented by the administrators. Filter as needed.,"['Ransomware', 'CISA AA23-347A', 'Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://hybrid-analysis.com/sample/ef1c427394c205580576d18ba68d5911089c7da0386f19d1ca126929d3e671ab?environmentId=120&lang=en', 'https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/Troj~Krotten-N/detailed-analysis', 'https://www.virustotal.com/gui/file/2d7855bf6470aa323edf2949b54ce2a04d9e38770f1322c3d0420c2303178d91/details']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6401d583-0052-4dc5-a713-68b510826d2b/,Windows Rename System Utilities At exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies At.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""at.exe"" AND (NOT match(process_file_path, /(?i)\\windows\\syswow64/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/640337e5-6e41-4b7f-af06-9d9eab5e1e2d/,Network Connection Discovery With Net,['T1049'],This analytic looks for the execution of net.exe with command-line arguments utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use net.exe for situational awareness and Active Directory Discovery.,['Hunting'],"September 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=*use*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Azorult', 'Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']",['https://attack.mitre.org/techniques/T1049/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/640b0eda-0429-11ec-accd-acde48001122/,GetWmiObject User Account with PowerShell Script Block,"['T1087', 'T1087.001', 'T1059.001']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-WmiObject commandlet used with specific parameters. The Win32_UserAccount parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"April 5, 2023","`powershell` EventCode=4104 (ScriptBlockText=""*Get-WmiObject*"" AND ScriptBlockText=""*Win32_UserAccount*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `getwmiobject_user_account_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery', 'Malicious PowerShell']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/malicious_powershell']","['https://attack.mitre.org/techniques/T1087/001/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Account Discovery', 'Discovery', 'Discovery', 'Execution', 'Local Account', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6410a403-36bb-490f-a06a-11c3be7d2a41/,Windows Modify Registry AuthenticationLevelOverride,['T1112'],The following analytic identifies a modification in the Windows registry related to authentication level settings. This registry is the configuration for authentication level settings within the Terminal Server Client settings in Windows. AuthenticationLevelOverride might be used to control or override the authentication level used by the Terminal Server Client for remote connections. DarkGate malware modify this registry as part of its malicious installation in a targeted host for its remote desktop capabilities.,['Anomaly'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Terminal Server Client\\AuthenticationLevelOverride""  Registry.registry_value_data = 0x00000000 by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_authenticationleveloverride_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Authentication', 'Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/64c7adaa-48ee-483c-b0d6-7175bc65e6cc/,Domain Controller Discovery with Wmic,['T1018'],This analytic looks for the execution of wmic.exe with command-line arguments utilized to discover remote systems. The arguments utilized in this command line return a list of all domain controllers in a Windows domain. Red Teams and adversaries alike use *.exe to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"September 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process="""" OR Processes.process=""*DomainControllerAddress*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_controller_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/64eb091f-8cab-4b41-9b09-8fb4942377df/,Windows Snake Malware Service Create,"['T1547.006', 'T1569.002']","The following analytic identifies a new service WerFaultSvc being created with a binary path located in the windows winsxs path. Per the report, the Snake version primarily discussed in this advisory registers a service to maintain persistence on a system. Typically this service is named WerFaultSvc which we assess was used to blend in with the legitimate Windows service WerSvc. On boot, this service will execute Snakes WerFault.exe, which Snake developers chose to hide among the numerous valid Windows WerFault.exe files in the windows WinSxS directory. Executing WerFault.exe will start the process of decrypting Snakes components and loading them into memory.",['TTP'],"May 11, 2023","`wineventlog_system` EventCode=7045  ImagePath=""*\\windows\\winSxS\\*"" ImagePath=""*\Werfault.exe"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ImagePath ServiceName ServiceType 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_snake_malware_service_create_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'Service_File_Name', 'Service_Type', '_time', 'Service_Name', 'Service_Start_Type', 'Service_Account', 'user']",False positives should be limited as this is a strict primary indicator used by Snake Malware.,['Snake Malware'],['https://research.splunk.com/stories/snake_malware'],['https://media.defense.gov/2023/May/09/2003218554/-1/-1/0/JOINT_CSA_HUNTING_RU_INTEL_SNAKE_MALWARE_20230509.PDF'],"['Execution', 'Kernel Modules and Extensions', 'Persistence', 'Privilege Escalation', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/651ee958-a433-471c-b264-39725b788b83/,PowerShell Invoke CIMMethod CIMSession,['T1047'],"This analytic identifies the use of the New-CIMSession cmdlet being created along with the Invoke-CIMMethod cmdlet being used within PowerShell. This particular behavior is similar to the usage of the Invoke-WMIMethod cmdlet, which is known for executing WMI commands on targets using NTLMv2 pass-the-hash authentication. The New-CIMSession cmdlet allows users to create a new CIM session object for a specified computer system, which can then be used to execute CIM operations remotely. Similarly, the Invoke-CIMMethod cmdlet is used to invoke a specified method on one or more CIM objects. Therefore, the combination of New-CIMSession and Invoke-CIMMethod cmdlets in PowerShell can potentially indicate malicious behavior, and this analytic can help detect such activity.",['Anomaly'],"March 22, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*invoke-CIMMethod*"", ""*New-CimSession*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_invoke_cimmethod_cimsession_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer']",False positives may be present based on third-party applications or administrators using CIM. It is recommended to apply appropriate filters as needed to minimize the number of false positives.,"['Malicious PowerShell', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/active_directory_lateral_movement']",['https://learn.microsoft.com/en-us/powershell/module/cimcmdlets/invoke-cimmethod?view=powershell-7.3'],"['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/65615b3a-62ea-4d65-bb9f-6f07c17df4ea/,Windows WinLogon with Public Network Connection,['T1542.003'],"The following analytic is designed to detect anomalous behavior associated with the BlackLotus Campaign, a sophisticated bootkit attack reported by ESET and further investigated in a blog by Microsoft, which provided hunting queries for security analysts. The primary focus of this analytic is to identify instances of Winlogon.exe, a critical Windows process, connecting to public IP space, which is indicative of potential malicious activity.\ The BlackLotus Campaign is a bootkit-based attack that compromises system integrity by infecting the Master Boot Record (MBR) and Volume Boot Record (VBR). This malware variant can bypass traditional security measures, load before the operating system, and maintain persistence on the target system.
Winlogon.exe is a critical Windows process responsible for managing user logon and logoff processes. Under normal circumstances, Winlogon.exe should not be connecting to public IP addresses. However, if it does, it may indicate that the process has been compromised as part of the BlackLotus Campaign or another malicious operation.
This analytic monitors network connections made by Winlogon.exe and triggers an alert if it detects connections to public IP space. By identifying such anomalous behavior, security analysts can investigate further and respond swiftly to potential threats.",['Hunting'],"January 30, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (winlogon.exe)  Processes.process!=unknown by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 NOT (All_Traffic.dest IN (127.0.0.1,10.0.0.0/8,172.16.0.0/12, 192.168.0.0/16, 0:0:0:0:0:0:0:1)) by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as publicIp ] 
| table dest parent_process_name process_name process_path process process_id dest_port publicIp 
| `windows_winlogon_with_public_network_connection_filter`","['security_content_summariesonly', 'security_content_ctime']","['dest', 'parent_process_name', 'process_name', 'process_path', 'process', 'process_id', 'dest_port', 'publicIp']",False positives will be present and filtering will be required. Legitimate IPs will be present and need to be filtered.,['BlackLotus Campaign'],['https://research.splunk.com/stories/blacklotus_campaign'],['https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/'],"['Bootkit', 'Defense Evasion', 'Endpoint', 'Network_Traffic', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/65711630-f9bf-11eb-8d72-acde48001122/,Powershell Execute COM Object,"['T1546.015', 'T1546', 'T1059.001']",This search is to detect a COM CLSID execution through powershell. This technique was seen in several adversaries and malware like ransomware conti where it has a feature to execute command using COM Object. This technique may use by network operator at some cases but a good indicator if some application want to gain privilege escalation or bypass uac.,['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*CreateInstance([type]::GetTypeFromCLSID*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_execute_com_object_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']",network operrator may use this command.,"['Ransomware', 'Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://threadreaderapp.com/thread/1423361119926816776.html', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Component Object Model Hijacking', 'Event Triggered Execution', 'Execution', 'Persistence', 'Persistence', 'PowerShell', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/65d4b105-ec52-48ec-ac46-289d0fbf7d96/,Windows Impair Defense Delete Win Defender Profile Registry,"['T1562.001', 'T1562']","The search looks for the deletion of Windows Defender main profile within the registry. This was used by RAT malware across a fleet of endpoints. This particular behavior is typically executed when an adversary gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",['Anomaly'],"June 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Policies\\Microsoft\\Windows Defender"" Registry.action = deleted by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action  Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_delete_win_defender_profile_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://app.any.run/tasks/45f5d114-91ea-486c-ab01-41c4093d2861/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/664f0fd0-91ff-11eb-a56f-acde48001122/,Disable Windows SmartScreen Protection,"['T1562.001', 'T1562']",The following search identifies a modification of registry to disable the smartscreen protection of windows machine. This is windows feature provide an early warning system against website that might engage in phishing attack or malware distribution. This modification are seen in RAT malware to cover their tracks upon downloading other of its component or other payload.,['TTP'],"February 14, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE Registry.registry_path IN (""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SmartScreenEnabled"", ""*\\Microsoft\\Windows\\System\\EnableSmartScreen"") Registry.registry_value_data  IN (""Off"", ""0"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_windows_smartscreen_protection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable this windows features.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/66ab15c0-63d0-11ec-9e70-acde48001122/,Linux Common Process For Elevation Control,"['T1548.001', 'T1548']","This analytic is to look for possible elevation control access using a common known process in linux platform to change the attribute and file ownership. This technique is commonly abused by adversaries, malware author and red teamers to gain persistence or privilege escalation on the target or compromised host. This common process is used to modify file attribute, file ownership or SUID. This tools can be used in legitimate purposes so filter is needed.",['Hunting'],"December 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""chmod"", ""chown"", ""fchmod"", ""fchmodat"", ""fchown"", ""fchownat"", ""fremovexattr"", ""fsetxattr"", ""lchown"", ""lremovexattr"", ""lsetxattr"", ""removexattr"", ""setuid"", ""setgid"", ""setreuid"", ""setregid"", ""chattr"") OR Processes.process IN (""*chmod *"", ""*chown *"", ""*fchmod *"", ""*fchmodat *"", ""*fchown *"", ""*fchownat *"", ""*fremovexattr *"", ""*fsetxattr *"", ""*lchown *"", ""*lremovexattr *"", ""*lsetxattr *"", ""*removexattr *"", ""*setuid *"", ""*setgid *"", ""*setreuid *"", ""*setregid *"", ""*setcap *"", ""*chattr *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_common_process_for_elevation_control_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://attack.mitre.org/techniques/T1548/001/', 'https://github.com/Neo23x0/auditd/blob/master/audit.rules#L285-L297', 'https://github.com/bfuzzy1/auditd-attack/blob/master/auditd-attack/auditd-attack.rules#L269-L270', 'https://github.com/microsoft/MSTIC-Sysmon/blob/main/linux/configs/attack-based/privilege_escalation/T1548.001_ElevationControl_CommonProcesses.xml']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Setuid and Setgid', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/676b600a-a94d-4951-b346-11329431e6c1/,GetDomainController with PowerShell Script Block,['T1018'],"The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainController commandlet. Get-DomainController is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain computers for situational awareness and Active Directory Discovery.",['TTP'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-DomainController*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getdomaincontroller_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainController/']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/67740bd3-1506-469c-b91d-effc322cc6e5/,GetWmiObject Ds Group with PowerShell Script Block,"['T1069', 'T1069.002']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-WmiObject commandlet used with specific parameters . The DS_Group parameter leverages WMI to query for all domain groups. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['TTP'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText=*Get-WmiObject* AND ScriptBlockText=""*namespace root\\directory\\ldap*"" AND ScriptBlockText=""*class ds_group*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
|`getwmiobject_ds_group_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/67d2a52e-a7e2-4a5d-ae44-a21212048bc2/,Windows Process Commandline Discovery,['T1057'],The following analytic detects Windows Management Instrumentation Command-line (WMIC) command used to retrieve information about running processes and specifically fetches the command lines used to launch those processes. This Hunting detection can be a good indicator for possible suspicious user or process getting list of process with its command line using wmic application which is not a common practice for a non-technical user.,['Hunting'],"December 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process= ""* process *"" Processes.process= ""* get commandline *"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_commandline_discovery_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting. Filter as needed.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Discovery', 'Endpoint', 'Process Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/67d4dbef-9564-4699-8da8-03a151529edc/,Create Remote Thread into LSASS,"['T1003.001', 'T1003']","The following analytic detects the creation of a remote thread in the Local Security Authority Subsystem Service (LSASS), which is a common tactic used by adversaries to steal user authentication credentials, known as credential dumping. The detection is made by leveraging Sysmon Event ID 8 logs and searches for processes that create remote threads in lsass.exe. This is an unusual activity that is generally linked to credential theft or credential dumping, which is a significant threat to network security. The detection is important because it helps to detect potential credential dumping attacks, which can result in significant damage to an organization's security. False positives might occur though the confidence level of this alert is high. There might be cases where legitimate tools can access LSASS and generate similar logs. Therefore, you must understand the broader context of such events and differentiate between legitimate activities and possible threats.",['TTP'],"December 6, 2019","`sysmon` EventID=8 TargetImage=*lsass.exe 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, EventCode, TargetImage, TargetProcessId 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `create_remote_thread_into_lsass_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventID', 'TargetImage', 'dest', 'EventCode', 'TargetImage', 'TargetProcessId', 'dest']","Other tools can access LSASS for legitimate reasons and generate an event. In these cases, tweaking the search may help eliminate noise.",['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf'],"['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/683e6196-b8e8-11eb-9a79-acde48001122/,Detect Renamed PSExec,"['T1569', 'T1569.002']","The following analytic identifies renamed instances of PsExec.exe being utilized on an endpoint. Most instances, it is highly probable to capture Psexec.exe or other SysInternal utility usage with the command-line argument of -accepteula. During triage, validate this is the legitimate version of PsExec by reviewing the PE metadata. In addition, review parallel processes for further suspicious behavior.",['Hunting'],"April 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name!=psexec.exe OR Processes.process_name!=psexec64.exe) AND Processes.original_file_name=psexec.c by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_psexec_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives should be present. It is possible some third party applications may use older versions of PsExec, filter as needed.","['SamSam Ransomware', 'DHS Report TA18-074A', 'HAFNIUM Group', 'DarkSide Ransomware', 'Active Directory Lateral Movement', 'CISA AA22-320A', 'Sandworm Tools', 'BlackByte Ransomware', 'DarkGate Malware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1569.002/T1569.002.yaml', 'https://redcanary.com/blog/threat-hunting-psexec-lateral-movement/']","['Endpoint', 'Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/683f48de-982f-4a7e-9aac-9cec550da498/,Windows Alternate DataStream - Base64 Content,"['T1564', 'T1564.004']","This analytic leverages Sysmon Event ID 15, a critical file creation event, to detect the creation of Alternate Data Streams (ADS) on Windows systems. ADS is a feature of the NTFS file system that allows the storage of data in hidden streams attached to files. These streams are not visible in standard file listings, making them a popular technique for concealing malicious activity. Event ID 15 captures both the hash of the primary file content (unnamed stream) and the content of any additional named streams, which can include executables, scripts, or configuration data. Malware often exploits ADS to hide payloads, leveraging browser downloads to attach a Zone.Identifier stream, marking the file as originating from the Internet (Mark Of The Web, MOTW). This analytic is designed to identify such misuse by analyzing the content and creation patterns of named streams, including those under 1KB which may contain MOTW information. It is essential for detecting sophisticated threats that utilize non-executable file types or conceal malicious scripts within ADS, beyond the traditional focus on PE executables. The detection process involves monitoring for the creation of named streams, which are part of the NTFS structure and can be examined using tools like PowerShell for the presence of additional data streams or MOTW information. This approach helps in uncovering hidden payloads and tracking the origin of suspicious files downloaded via browsers or email clients, providing a comprehensive defense against ADS abuse.",['TTP'],"February 15, 2024","`sysmon` EventCode=15 NOT Contents IN (""-"",""[ZoneTransfer]*"") 
| regex TargetFilename=""(?<!\/)\b\w+(\.\w+)?:\w+(\.\w+)?$"" 
| regex Contents=""(?:[A-Za-z0-9+/]{128,})(?:[A-Za-z0-9+/]{2}==
|[A-Za-z0-9+/]{3}=)?$"" 
| eval file_name = replace(TargetFilename,""(.*\\\)"",""""), process = Image , file_path = TargetFilename , base64 = Contents, file_hash = coalesce(SHA256,SHA1,MD5,Hash) 
| stats count min(_time) as firstTime max(_time) as lastTime values(user) as user by dest, process, process_guid, file_name, file_path, file_hash, base64 
| `base64decode(base64)` 
| fields - base64 
| rename base64_decode as command 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_alternate_datastream___base64_content_filter`","['base64decode', 'security_content_ctime', 'sysmon']","['_time', 'TargetFilename', 'Image', 'Contents', 'file_hash', 'process_guid']",Unknown,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f', 'https://car.mitre.org/analytics/CAR-2020-08-001/', 'https://blogs.juniper.net/en-us/threat-research/bitpaymer-ransomware-hides-behind-windows-alternate-data-streams', 'https://blog.netwrix.com/2022/12/16/alternate_data_stream/', 'https://github.com/trustedsec/SysmonCommunityGuide/blob/master/chapters/file-stream-creation-hash.md']","['Defense Evasion', 'Defense Evasion', 'Hide Artifacts', 'NTFS File Attributes', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6860a62c-9203-11eb-9e05-acde48001122/,Disabling Firewall with Netsh,"['T1562.001', 'T1562']",This search is to identifies suspicious firewall disabling using netsh application. this technique is commonly seen in malware that tries to communicate or download its component or other payload to its C2 server.,['Anomaly'],"March 31, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process= ""*firewall*"" (Processes.process= ""*off*"" OR  Processes.process= ""*disable*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_firewall_with_netsh_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",admin may disable firewall during testing or fixing network problem.,"['Windows Defense Evasion Tactics', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/blackbyte_ransomware']",['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/68a0056c-34cb-455f-b03d-df935ea62c4f/,Network Traffic to Active Directory Web Services Protocol,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']",The following analytic identifies network traffic to Active Directory Web Services Protocol. This protocol is used to manage Active Directory. The analytic is meant to be tuned and filtered to the specific environment. It will assist defenders in identifying suspicious processes accessing port 9389.,['Hunting'],"February 12, 2024","| tstats count from datamodel=Network_Traffic where All_Traffic.dest_port=9389 by All_Traffic.src_ip, All_Traffic.dest_ip, All_Traffic.app, All_Traffic.user, All_Traffic.dest_port 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(""All_Traffic"")` 
| `network_traffic_to_active_directory_web_services_protocol_filter`",['security_content_ctime'],"['All_Traffic.src_ip', 'All_Traffic.dest_ip', 'All_Traffic.app', 'All_Traffic.user', 'All_Traffic.dest_port']","False positives should be limited as the destination port is specific to Active Directory Web Services Protocol, however we recommend utilizing this analytic to hunt for non-standard processes querying the ADWS port. Filter by App or dest_ip to AD servers and remove known proceses querying ADWS.",['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],['https://github.com/FalconForceTeam/SOAPHound'],"['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Local Account', 'Local Groups', 'Network_Traffic', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/69201633-30d9-48ef-b1b6-e680805f0582/,Windows Admon Group Policy Object Created,"['T1484', 'T1484.001']","The following analytic leverages Splunks Admon to identify the creation of a new Group Policy Object. With GPOs, system administrators can manage and configure applications, software operations, and user settings throughout an entire organization. GPOs can be abused and leveraged by adversaries to escalate privileges or deploy malware across an Active Directory network. As an example, the Lockbit ransomware malware will create new group policies on the domain controller that are then pushed out to every device on the network. Security teams should monitor the creation of new Group Policy Objects.",['TTP'],"April 6, 2023","`admon` admonEventType=Update objectCategory=""CN=Group-Policy-Container,CN=Schema,CN=Configuration,DC=*"" versionNumber=0 displayName!=""New Group Policy Object"" 
| stats min(_time) as firstTime max(_time) as lastTime values(gPCFileSysPath) by dcName, displayName 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_admon_group_policy_object_created_filter`","['admon', 'security_content_ctime']","['_time', 'admonEventType', 'objectCategory', 'displayName', 'gPCFileSysPath', 'dcName']","Group Policy Objects are created as part of regular administrative operations, filter as needed.","['Active Directory Privilege Escalation', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716', 'https://docs.splunk.com/Documentation/SplunkCloud/8.1.2101/Data/MonitorActiveDirectory']","['Defense Evasion', 'Defense Evasion', 'Domain Policy Modification', 'Group Policy Modification', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6925fe72-a6d5-11eb-9e17-acde48001122/,Office Product Spawning CertUtil,"['T1566', 'T1566.001']","The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning certutil.exe. In malicious instances, the command-line of certutil.exe will contain a URL to a remote destination. In addition, Threat Research has released a detections identifying suspicious use of certutil.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or certutil.exe will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"", ""Graph.exe"",""winproj.exe"") `process_certutil` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_certutil_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",No false positives known. Filter as needed.,"['Spearphishing Attachments', 'AgentTesla', 'Trickbot', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://redcanary.com/threat-detection-report/threats/TA551/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1105/T1105.md', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/695bfad6-9662-4f9e-a576-bf02a951aa60/,Windows Ingress Tool Transfer Using Explorer,['T1105'],"The following analytic identifies the Windows Explorer process with a URL within the command-line. Explorer.exe is known Windows process that handles start menu, taskbar, desktop and file manager. Many adversaries abuse this process, like DCRat malware, where it attempts to open the URL with the default browser application on the target host by putting the URL as a parameter on explorer.exe process. This anomaly detection might be a good pivot to check which user and how this process was executed, what is the parent process and what is the URL link. This technique is not commonly used to open an URL.",['TTP'],"September 13, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%https://%"" OR process_cmd_line LIKE ""%http://%"") AND process_file_name=""explorer.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present based on legitimate applications or third party utilities. Filter out any additional parent process names.,['DarkCrystal RAT'],['https://research.splunk.com/stories/darkcrystal_rat'],['https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor'],"['Command And Control', 'Ingress Tool Transfer', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/69934363-e1dd-4c49-8651-9d7663dd4d2f/,Windows Account Discovery for Sam Account Name,['T1087'],"The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets Get-NetUser. In the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user account's ""samccountname"". This hunting query is a good pivot to look for suspicious process or malware that gather user account information in a host or within network system.",['Anomaly'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetUser*"" ScriptBlockText IN (""*samaccountname*"", ""*pwdlastset*"") 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_account_discovery_for_sam_account_name_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Account Discovery', 'Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/69c12d59-d951-431e-ab77-ec426b8d65e6/,Windows Security Account Manager Stopped,['T1489'],The search looks for a Windows Security Account Manager (SAM) was stopped via command-line. This is consistent with Ryuk infections across a fleet of endpoints.,['TTP'],"February 6, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE (""Processes.process_name""=""net*.exe"" ""Processes.process""=""*stop \""samss\""*"") BY Processes.dest Processes.user Processes.process Processes.process_guid Processes.process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_security_account_manager_stopped_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user']","SAM is a critical windows service, stopping it would cause major issues on an endpoint this makes false positive rare. AlthoughNo false positives have been identified.",['Ryuk Ransomware'],['https://research.splunk.com/stories/ryuk_ransomware'],N/A,"['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/69df7f7c-155d-11ec-a055-acde48001122/,Get WMIObject Group Discovery with Script Block Logging,"['T1069', 'T1069.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies the usage of Get-WMIObject Win32_Group, which is typically used as a way to identify groups on the endpoint.  Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Get-WMIObject*"" AND ScriptBlockText = ""*Win32_Group*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_wmiobject_group_discovery_with_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.splunk.com/en_us/blog/security/powershell-detections-threat-research-release-august-2021.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Discovery', 'Discovery', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6a12fa9f-580d-4627-8c7f-313e359bdc6a/,Windows Modify Registry No Auto Reboot With Logon User,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will allow ""Logged-on user gets to choose whether or not to restart his or her compute"".",['Anomaly'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\NoAutoRebootWithLoggedOnUsers"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_no_auto_reboot_with_logon_user_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6a1b6cbe-6612-44c3-92b9-1a1bd77412eb/,Windows Defender ASR Registry Modification,['T1112'],"This detection searches for Windows Defender ASR registry modification events. ASR is a feature of Windows Defender Exploit Guard that prevents actions and apps that are typically used by exploit-seeking malware to infect machines. ASR rules are applied to processes and applications. When a process or application attempts to perform an action that is blocked by an ASR rule, an event is generated. This detection searches for ASR registry modification events that are generated when a process or application attempts to modify a registry key that is blocked by an ASR rule. Typically, these will be enabled in block most after auditing and tuning the ASR rules themselves. Set to TTP once tuned.",['Hunting'],"November 27, 2023","`ms_defender` EventCode IN (5007) 
| rex field=New_Value ""0x(?<New_Registry_Value>\\d+)$"" 
| rex field=Old_Value ""0x(?<Old_Registry_Value>\\d+)$"" 
| rex field=New_Value ""Rules\\\\(?<ASR_ID>[A-Fa-f0-9\\-]+)\\s*="" 
| lookup asr_rules ID AS ASR_ID OUTPUT ASR_Rule 
| eval New_Registry_Value=case(New_Registry_Value==""0"", ""Disabled"", New_Registry_Value==""1"", ""Block"", New_Registry_Value==""2"", ""Audit"", New_Registry_Value==""6"", ""Warn"") 
| eval Old_Registry_Value=case(Old_Registry_Value==""0"", ""Disabled"", Old_Registry_Value==""1"", ""Block"", Old_Registry_Value==""2"", ""Audit"", Old_Registry_Value==""6"", ""Warn"") 
| stats count min(_time) as firstTime max(_time) as lastTime by host, New_Value, Old_Value, Old_Registry_Value, New_Registry_Value, ASR_Rule 
| `security_content_ctime(firstTime)`
| rename host as dest 
| `security_content_ctime(lastTime)` 
| `windows_defender_asr_registry_modification_filter`","['security_content_ctime', 'ms_defender']","['host', 'New_Value', 'Old_Value', 'Old_Registry_Value', 'New_Registry_Value', 'ASR_Rule']","False positives are expected from legitimate applications generating events that are similar to those generated by malicious activity. For example, Event ID 5007 is generated when a process attempts to modify a registry key that is related to ASR rules. This can be triggered by legitimate applications that attempt to modify registry keys that are not blocked by ASR rules.",['Windows Attack Surface Reduction'],['https://research.splunk.com/stories/windows_attack_surface_reduction'],['https://asrgen.streamlit.app/'],"['Defense Evasion', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6a80300a-9f8a-4f22-bd3e-09ca577cfdfc/,Windows Privilege Escalation Suspicious Process Elevation,"['T1068', 'T1548', 'T1134']",The following analytic detects when any low->high integrity level process running from a user account spawns an elevated (high/system integrity) process in a suspicious location or with system level process integrity. This behavior may indicate when a threat actor has successfully elevated privileges.,['TTP'],"November 30, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""low"",""medium"",""high"") NOT Processes.user IN (""*SYSTEM"",""*LOCAL SERVICE"",""*NETWORK SERVICE"",""DWM-*"",""*$"") by Processes.dest, Processes.user, Processes.parent_process_guid, Processes.parent_process, Processes.parent_process_name Processes.process_name Processes.process, Processes.process_path, Processes.process_guid, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| eval join_guid = process_guid, integrity_level = CASE(match(process_integrity_level,""low""),1,match(process_integrity_level,""medium""),2,match(process_integrity_level,""high""),3,match(process_integrity_level,""system""),4,true(),0) 
| rename user as src_user, parent_process* as orig_parent_process*, process* as parent_process* 
| join max=0 dest join_guid  [
| tstats `security_content_summariesonly` count max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_integrity_level IN (""system"") NOT Processes.user IN (""*SYSTEM"",""*LOCAL SERVICE"",""*NETWORK SERVICE"",""DWM-*"",""*$"")) OR (Processes.process_integrity_level IN (""high"",""system"") AND (Processes.parent_process_path IN (""*\\\\*"",""*\\Users\\*"",""*\\Temp\\*"",""*\\ProgramData\\*"") OR Processes.process_path IN (""*\\\\*"",""*\\Users\\*"",""*\\Temp\\*"",""*\\ProgramData\\*""))) by Processes.dest, Processes.user, Processes.parent_process_guid, Processes.process_name, Processes.process, Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| eval elevated_integrity_level = CASE(match(process_integrity_level,""low""),1,match(process_integrity_level,""medium""),2,match(process_integrity_level,""high""),3,match(process_integrity_level,""system""),4,true(),0) 
| rename parent_process_guid as join_guid ] 
| where elevated_integrity_level > integrity_level OR user != elevated_user 
| fields dest, user, src_user, parent_process_name, parent_process, parent_process_path, parent_process_guid, parent_process_integrity_level, parent_process_current_directory, process_name, process, process_path, process_guid, process_integrity_level, process_current_directory, orig_parent_process_name, orig_parent_process, orig_parent_process_guid, firstTime, lastTime, count  
| `security_content_ctime(firstTime)`  
| `security_content_ctime(lastTime)` 
|  `windows_privilege_escalation_suspicious_process_elevation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_guid', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.process_guid', 'Processes.process_integrity_level', 'Processes.process_current_directory']",False positives may be generated by administrators installing benign applications using run-as/elevation.,['Windows Privilege Escalation'],['https://research.splunk.com/stories/windows_privilege_escalation'],"['https://attack.mitre.org/techniques/T1068/', 'https://vuls.cert.org/confluence/display/Wiki/2021/06/21/Finding+Privilege+Escalation+Vulnerabilities+in+Windows+using+Process+Monitor', 'https://redcanary.com/blog/getsystem-offsec/', 'https://atomicredteam.io/privilege-escalation/T1134.001/']","['Abuse Elevation Control Mechanism', 'Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6aa49ff2-3c92-4586-83e0-d83eb693dfda/,Windows MSIExec Remote Download,['T1218.007'],"The following analytic identifies msiexec.exe with http in the command-line. This procedure will utilize msiexec.exe to download a remote file and load it. During triage, review parallel processes and capture any artifacts on disk for review.",['TTP'],"June 16, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_msiexec` Processes.process IN (""*http://*"", ""*https://*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_msiexec_remote_download_filter`","['security_content_summariesonly', 'process_msiexec', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filter by destination or parent process as needed.",['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6aa6f9dd-adfe-45a8-8f74-c4c7a0d7d037/,Active Directory Lateral Movement Identified,['T1210'],"The primary objective of this correlation rule is to detect and alert on potential lateral movement activities within an organization's Active Directory (AD) environment. By identifying multiple analytics associated with the Active Directory Lateral Movement analytic story, security analysts can gain better insight into possible threats and respond accordingly to mitigate risks. The correlation rule will trigger an alert when multiple analytics from the Active Directory Lateral Movement analytic story are detected within a specified time frame. The rule will generate an alert if a predetermined threshold of correlated analytics is reached within the specified time frame. This threshold can be customized to suit the needs and risk appetite of the organization.",['Correlation'],"November 7, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories=""Active Directory Lateral Movement"" All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 4 
| `active_directory_lateral_movement_identified_filter`","['security_content_summariesonly', 'security_content_ctime']","['All_Risk.calculated_risk_score', 'All_Risk.annotations.mitre_attack.mitre_tactic_id', 'All_Risk.annotations.mitre_attack.mitre_technique_id', 'All_Risk.tag', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic']","False positives will most likely be present based on risk scoring and how the organization handles system to system communication. Filter, or modify as needed. In addition to count by analytics, adding a risk score may be useful. In our testing, with 22 events over 30 days, the risk scores ranged from 500 to 80,000. Your organization will be different, monitor and modify as needed.","['Active Directory Lateral Movement', 'https://research.splunk.com/stories/active_directory_lateral_movement/']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/active_directory_lateral_movement/']","['https://attack.mitre.org/tactics/TA0008/', 'https://research.splunk.com/stories/active_directory_lateral_movement/']","['Exploitation of Remote Services', 'Lateral Movement', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6ae0148e-9215-11eb-a94a-acde48001122/,Disabling ControlPanel,"['T1562.001', 'T1562', 'T1112']","this search is to identify registry modification to disable control panel window. This technique is commonly seen in malware to prevent their artifacts , persistence removed on the infected machine.",['TTP'],"February 14, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoControlPanel"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_controlpanel_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6b521149-b91c-43aa-ba97-c2cac59ec830/,Windows AD Privileged Account SID History Addition,"['T1134.005', 'T1134']",This detection identifies when the SID of a privileged user is added to the SID History attribute of another user. Useful for tracking SID history abuse across multiple domains. This detection leverages the Asset and Identities framework. See the implementation section for further details on configuration.,['TTP'],"November 7, 2023","`wineventlog_security` (EventCode=4742 OR EventCode=4738) NOT SidHistory IN (""%%1793"", -) 
| rex field=SidHistory ""(^%{
|^)(?P<SidHistory>.*?)(}$
|$)"" 
| eval category=""privileged"" 
| lookup identity_lookup_expanded category, identity as SidHistory OUTPUT identity_tag as match 
| where isnotnull(match) 
| rename TargetSid as userSid 
| table _time action status host user userSid SidHistory Logon_ID src_user 
| `windows_ad_privileged_account_sid_history_addition_filter`",['wineventlog_security'],"['_time', 'EventCode', 'SidHistory', 'TargetSid', 'TargetDomainName', 'user', 'src_user', 'Logon_ID']",Migration of privileged accounts.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],['https://adsecurity.org/?p=1772'],"['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'SID-History Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6b74d578-a02e-4e94-a0d1-39440d0bf254/,Detect Regsvcs with No Command Line Arguments,"['T1218', 'T1218.009']",The SPL above uses the following Macros:,['TTP'],"March 15, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_regsvcs` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process  Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(regsvcs\.exe.{0,4}$)""
| `detect_regsvcs_with_no_command_line_arguments_filter`","['security_content_summariesonly', 'process_regsvcs', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, limited instances of regsvcs.exe may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6bc5243e-ef36-45dc-9b12-f4a6be131159/,Attempt To Add Certificate To Untrusted Store,"['T1553.004', 'T1553']","The following analytic detects whether a process is attempting to add a certificate to the untrusted certificate store, which might result in security tools being disabled. The detection is made by focusing on process activities and command-line arguments that are related to the 'certutil -addstore' command. This detection is important because it helps to identify attackers who might add a certificate to the untrusted certificate store to disable security tools and gain unauthorized access to a system. False positives might occur since legitimate reasons might exist for a process to add a certificate to the untrusted certificate store, such as system administration tasks. Next steps include conducting an extensive triage and investigation prior to taking any action. Additionally, you must understand the importance of trust and its subversion in system security.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` (Processes.process=*-addstore*) by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `attempt_to_add_certificate_to_untrusted_store_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']","There may be legitimate reasons for administrators to add a certificate to the untrusted certificate store. In such cases, this will typically be done on a large number of systems.",['Disabling Security Tools'],['https://research.splunk.com/stories/disabling_security_tools'],['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1553.004/T1553.004.md'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Install Root Certificate', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Subvert Trust Controls']",['Endpoint']
https://research.splunk.com/endpoint/6c077f81-2a83-4537-afbc-0e62e3215d55/,Linux Indicator Removal Service File Deletion,"['T1070.004', 'T1070']",This analytic looks for suspicious linux processes that delete service unit configuration files. This technique was seen in several malware to delete service configuration files to corrupt a services or security product as part of its defense evasion. This TTP detection can be a good indicator of possible malware try to kill several services or a wiper like AwfulShred shell script that wipes the targeted linux host,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""rm""  AND Processes.process = ""*rm *""  AND Processes.process = ""*.service"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_indicator_removal_service_file_deletion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",network admin can delete services unit configuration file as part of normal software installation. Filter is needed.,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/', 'https://cert.gov.ua/article/3718487']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6c135f8d-5e60-454e-80b7-c56eed739833/,RunDLL Loading DLL By Ordinal,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe loading an export function by ordinal value. Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly, may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Utilizing ordinal values makes it a bit more complicated for analysts to understand the behavior until the DLL is reviewed.",['TTP'],"February 8, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""rundll32.+\#\d+"") 
| `rundll_loading_dll_by_ordinal_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives are possible with native utilities and third party applications. Filtering may be needed based on command-line, or add world writeable paths to restrict query.","['Unusual Processes', 'Suspicious Rundll32 Activity', 'Living Off The Land', 'IcedID']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/icedid']","['https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/', 'https://twitter.com/M_haggis/status/1491109262428635136', 'https://twitter.com/pr0xylife/status/1590394227758104576']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6c3f7dd8-153c-11ec-ac2d-acde48001122/,Cmdline Tool Not Executed In CMD Shell,"['T1059', 'T1059.007']","The following analytic identifies a non-standard parent process (not matching CMD, PowerShell, or Explorer) spawning ipconfig.exe or systeminfo.exe. This particular behavior was seen in FIN7's JSSLoader .NET payload. This is also typically seen when an adversary is injected into another process performing different discovery techniques. This event stands out as a TTP since these tools are commonly executed with a shell application or Explorer parent, and not by another application. This TTP is a good indicator for an adversary gathering host information, but one possible false positive might be an automated tool used by a system administator.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = ""ipconfig.exe"" OR Processes.process_name = ""systeminfo.exe"" OR Processes.process_name = ""net.exe"" OR Processes.process_name = ""net1.exe"" OR Processes.process_name = ""arp.exe"" OR Processes.process_name = ""nslookup.exe"" OR Processes.process_name = ""route.exe"" OR Processes.process_name = ""netstat.exe"" OR Processes.process_name = ""whoami.exe"") AND NOT (Processes.parent_process_name = ""cmd.exe"" OR Processes.parent_process_name = ""powershell*"" OR Processes.parent_process_name=""pwsh.exe"" OR Processes.parent_process_name = ""explorer.exe"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process_id Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cmdline_tool_not_executed_in_cmd_shell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated host discovery application that may generate false positives. Filter as needed.,"['Volt Typhoon', 'Rhysida Ransomware', 'FIN7', 'DarkGate Malware', 'Qakbot', 'CISA AA22-277A', 'CISA AA23-347A']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'JavaScript', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6dca1124-b3ec-11eb-9328-acde48001122/,Detect Renamed RClone,['T1020'],"The following analytic identifies the usage of rclone.exe, renamed, being used to exfiltrate data to a remote destination. RClone has been used by multiple ransomware groups to exfiltrate data. In many instances, it will be downloaded from the legitimate site and executed accordingly. During triage, isolate the endpoint and begin to review parallel processes for additional behavior. At this stage, the adversary may have staged data to be exfiltrated.",['Hunting'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.original_file_name=rclone.exe AND Processes.process_name!=rclone.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_renamed_rclone_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited as this analytic identifies renamed instances of rclone.exe. Filter as needed if there is a legitimate business use case.,"['DarkSide Ransomware', 'Ransomware']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware']","['https://redcanary.com/blog/rclone-mega-extortion/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/']","['Automated Exfiltration', 'Endpoint', 'Exfiltration', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6df99886-0e04-4c11-8b88-325747419278/,Linux Kernel Module Enumeration,"['T1082', 'T1014']","The following analytic identifies the process kmod being utilized to list kernel modules in use. Typically, this is not seen as malicious, however it may be a precurser to the use of insmod to install a module.",['Anomaly'],"July 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=kmod Processes.process IN (""*lsmod*"", ""*list*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_kernel_module_enumeration_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,['Linux Rootkit'],['https://research.splunk.com/stories/linux_rootkit'],['https://man7.org/linux/man-pages/man8/kmod.8.html'],"['Defense Evasion', 'Discovery', 'Endpoint', 'Rootkit', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Information Discovery']",['Endpoint']
https://research.splunk.com/endpoint/6e4c4588-ba2f-42fa-97e6-9f6f548eaa33/,Shim Database File Creation,"['T1546.011', 'T1546']","This search looks for shim database files being written to default directories. The sdbinst.exe application is used to install shim database files (.sdb). According to Microsoft, a shim is a small library that transparently intercepts an API, changes the parameters passed, handles the operation itself, or redirects the operation elsewhere.",['TTP'],"December 8, 2020","| tstats `security_content_summariesonly` count values(Filesystem.action) values(Filesystem.file_hash) as file_hash values(Filesystem.file_path) as file_path  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path=*Windows\\AppPatch\\Custom* by Filesystem.file_name Filesystem.dest 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
|`drop_dm_object_name(Filesystem)` 
| `shim_database_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_hash', 'Filesystem.file_path', 'Filesystem.file_name', 'Filesystem.dest']","Because legitimate shim files are created and used all the time, this event, in itself, is not suspicious. However, if there are other correlating events, it may warrant further investigation.",['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],N/A,"['Application Shimming', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6e5a3ae4-90a3-462d-9aa6-0119f638c0f1/,Hiding Files And Directories With Attrib exe,"['T1222', 'T1222.001']","Attackers leverage an existing Windows binary, attrib.exe, to mark specific as hidden by using specific flags so that the victim does not see the file.  The search looks for specific command-line arguments to detect the use of attrib.exe to hide files.",['TTP'],"January 1, 2024","| tstats `security_content_summariesonly` count min(_time) values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=attrib.exe (Processes.process=*+h*) by Processes.parent_process_name Processes.process_name Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
|`security_content_ctime(lastTime)`
| `hiding_files_and_directories_with_attrib_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_name', 'Processes.parent_process', 'Processes.user', 'Processes.dest']",Some applications and users may legitimately use attrib.exe to interact with the files.,"['Windows Defense Evasion Tactics', 'Windows Persistence Techniques', 'Azorult']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/azorult']",N/A,"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows File and Directory Permissions Modification']",['Endpoint']
https://research.splunk.com/endpoint/6ece9ed0-5f92-4315-889d-48560472b188/,Windows Access Token Manipulation SeDebugPrivilege,"['T1134.002', 'T1134']","The following analytic identifies a suspicious process enabling the ""SeDebugPrivilege"" privilege token. SeDebugPrivilege allows a process to inspect and adjust the memory of other processes, and has long been a security concern. SeDebugPrivilege allows the token bearer to access any process or thread, regardless of security descriptors, per Palantir. This technique is abused by adversaries to gain debug privileges with their malicious software to be able to access or debug a process to dump credentials or to inject malicious code.",['Anomaly'],"December 27, 2023","`wineventlog_security` EventCode=4703 EnabledPrivilegeList = ""*SeDebugPrivilege*"" AND NOT(ProcessName IN (""*\\Program File*"", ""*\\System32\\lsass.exe*"", ""*\\SysWOW64\\lsass.exe*"", ""*\\SysWOW64\\svchost.exe*"", ""*\\System32\\svchost.exe*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer ProcessName ProcessId SubjectDomainName SubjectUserName SubjectUserSid TargetUserName TargetLogonId TargetDomainName EnabledPrivilegeList action 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_access_token_manipulation_sedebugprivilege_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'ProcessName', 'Security_ID', 'action', 'result', 'Process_ID', 'Message', 'member_dn', 'ComputerName', 'user']",Some native binaries and browser applications may request SeDebugPrivilege. Filter as needed.,"['Brute Ratel C4', 'AsyncRAT', 'DarkGate Malware', 'CISA AA23-347A', 'PlugX']","['https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/plugx']","['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4703', 'https://devblogs.microsoft.com/oldnewthing/20080314-00/?p=23113', 'https://blog.palantir.com/windows-privilege-abuse-auditing-detection-and-defense-3078a403d74e', 'https://atomicredteam.io/privilege-escalation/T1134.001/#atomic-test-2---%60sedebugprivilege%60-token-duplication', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Access Token Manipulation', 'Create Process with Token', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6f3ccfa2-91fe-11eb-8f9b-acde48001122/,Disable Show Hidden Files,"['T1564.001', 'T1562.001', 'T1564', 'T1562', 'T1112']",The following analytic is to identify a modification in the Windows registry to prevent users from seeing all the files with hidden attributes. This event or techniques are known on some worm and trojan spy malware that will drop hidden files on the infected machine.,['Anomaly'],"February 14, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Hidden"" OR (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\HideFileExt"" Registry.registry_value_data = ""0x00000001"") OR (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\ShowSuperHidden"" Registry.registry_value_data = ""0x00000000"" )) BY _time span=1h Registry.user Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_show_hidden_files_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'Azorult']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/azorult']",['https://www.sophos.com/en-us/threat-center/threat-analyses/viruses-and-spyware/W32~Tiotua-P/detailed-analysis'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Hidden Files and Directories', 'Hide Artifacts', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6f42b8be-8e96-11ec-ad5a-acde48001122/,Windows Rasautou DLL Execution,"['T1055.001', 'T1218', 'T1055']","The following analytic identifies the Windows Windows Remote Auto Dialer, rasautou.exe executing an arbitrary DLL. This technique is used to execute arbitrary shellcode or DLLs via the rasautou.exe LOLBin capability. During triage, review parent and child process behavior including file and image loads.",['TTP'],"February 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rasautou.exe Processes.process=""* -d *""AND Processes.process=""* -p *"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_rasautou_dll_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be limited to applications that require Rasautou.exe to load a DLL from disk. Filter as needed.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://github.com/mandiant/DueDLLigence', 'https://github.com/MHaggis/notes/blob/master/utilities/Invoke-SPLDLLigence.ps1', 'https://gist.github.com/NickTyrer/c6043e4b302d5424f701f15baf136513', 'https://www.mandiant.com/resources/staying-hidden-on-the-endpoint-evading-detection-with-shellcode']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Dynamic-link Library Injection', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6f42b8ce-1e15-11ec-ad5a-acde48001122/,Windows Rasautou DLL Execution,"['T1055.001', 'T1218', 'T1055']","The following analytic identifies the Windows Windows Remote Auto Dialer, rasautou.exe executing an arbitrary DLL. This technique is used to execute arbitrary shellcode or DLLs via the rasautou.exe LOLBin capability. During triage, review parent and child process behavior including file and image loads.",['TTP'],"February 15, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""rasautou.exe"" AND match(process_cmd_line, /(?i)-p /)=true AND match(process_cmd_line, /(?i)-d /)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives will be limited to applications that require Rasautou.exe to load a DLL from disk. Filter as needed.,"['Windows Defense Evasion Tactics', 'Living Off The Land']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/mandiant/DueDLLigence', 'https://github.com/MHaggis/notes/blob/master/utilities/Invoke-SPLDLLigence.ps1', 'https://gist.github.com/NickTyrer/c6043e4b302d5424f701f15baf136513', 'https://www.mandiant.com/resources/staying-hidden-on-the-endpoint-evading-detection-with-shellcode']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Dynamic-link Library Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/6f6c8fd7-6a6b-4af9-a0e9-57cfc47a58b4/,Windows Unusual Count Of Users Failed To Authenticate Using NTLM,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with multiple valid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC000006A means: misspelled or bad password (the attempted user is a legitimate domain user).
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security`  EventCode=4776 TargetUserName!=*$ Status=0xC000006A 
| bucket span=2m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, Workstation 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by Workstation 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_users_failed_to_authenticate_using_ntlm_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'Workstation']","A host failing to authenticate with multiple valid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems. If this detection triggers on a host other than a Domain Controller, the behavior could represent a password spraying attack against the host's local accounts.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-credential-validation', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6fa31414-546e-11ec-adfa-acde48001122/,Short Lived Scheduled Task,['T1053.005'],"The following analytic utilizes Windows Security EventCode 4698, ""A scheduled task was created,"" and EventCode 4699, ""A scheduled task was deleted,"" to identify scheduled tasks that are created and deleted within a short time frame of less than 30 seconds. This behavior is indicative of a potential lateral movement attack where the Task Scheduler is abused to achieve code execution. Both red teams and adversaries may exploit the Task Scheduler for lateral movement and remote code execution.
To implement this analytic, ensure that you are ingesting Windows Security Event Logs with EventCode 4698 enabled. Additionally, the Windows TA (Technology Add-on) is required to parse and extract the necessary information from the logs.
It's important to note that while uncommon, legitimate applications may create and delete scheduled tasks within a short duration. Analysts should filter the results based on the specific context and environment to reduce false positives.
Identifying short-lived scheduled tasks is valuable for a SOC as it can indicate malicious activities attempting to move laterally or execute unauthorized code on Windows systems. By detecting and investigating these events, security analysts can respond promptly to prevent further compromise and mitigate potential risks. The impact of a true positive could range from unauthorized access to data exfiltration or the execution of malicious payloads.",['TTP'],"December 27, 2023","`wineventlog_security` EventCode=4698 OR EventCode=4699 
| xmlkv Message 
| transaction Task_Name  startswith=(EventCode=4698) endswith=(EventCode=4699) 
| eval short_lived=case((duration<30),""TRUE"") 
| search  short_lived = TRUE 
| rename ComputerName as dest
| table _time, dest, Account_Name, Command, Task_Name, short_lived 
| `short_lived_scheduled_task_filter`",['wineventlog_security'],"['_time', 'dest', 'ComputerName', 'Account_Name', 'Task_Name', 'Description', 'Command']","Although uncommon, legitimate applications may create and delete a Scheduled Task within 30 seconds. Filter as needed.","['CISA AA23-347A', 'Active Directory Lateral Movement', 'Scheduled Tasks', 'CISA AA22-257A']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://attack.mitre.org/techniques/T1053/005/', 'https://docs.microsoft.com/en-us/windows/win32/taskschd/about-the-task-scheduler']","['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6fcbaedc-a37b-11eb-956b-acde48001122/,Winword Spawning Cmd,"['T1566', 'T1566.001']","The following detection identifies Microsoft Word spawning cmd.exe. Typically, this is not common behavior and not default with winword.exe. Winword.exe will generally be found in the following path C:\Program Files\Microsoft Office\root\Office16 (version will vary). Cmd.exe spawning from winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command-line will indicate what is being executed. During triage, review parallel processes and identify any files that may have been written. It is possible that COM is utilized to trampoline the child process to explorer.exe or wmiprvse.exe.",['TTP'],"April 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=winword.exe `process_cmd` by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winword_spawning_cmd_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, but if any are present, filter as needed.","['Spearphishing Attachments', 'DarkCrystal RAT', 'CVE-2023-21716 Word RTF Heap Corruption']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cve-2023-21716_word_rtf_heap_corruption']",['https://app.any.run/tasks/73af0064-a785-4c0a-ab0d-cde593fe16ef/'],"['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6fed27d2-9ec7-11eb-8fe4-aa665a019aa3/,Office Document Spawned Child Process To Download,"['T1566', 'T1566.001']",This search is to detect potential malicious office document executing lolbin child process to download payload or other malware. Since most of the attacker abused the capability of office document to execute living on land application to blend it to the normal noise in the infected machine to cover its track.,['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"", ""Graph.exe"",""winproj.exe"") Processes.process IN (""*http:*"",""*https:*"") NOT (Processes.original_file_name IN(""firefox.exe"", ""chrome.exe"",""iexplore.exe"",""msedge.exe""))  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `office_document_spawned_child_process_to_download_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Default browser not in the filter list.,"['Spearphishing Attachments', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability', 'PlugX', 'NjRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/njrat']","['https://app.any.run/tasks/92d7ef61-bfd7-4c92-bc15-322172b4ebec/', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/6ffc7f88-415b-4278-a80d-b957d6539e1a/,Windows SIP WinVerifyTrust Failed Trust Validation,['T1553.003'],"The following analytic utilizes a Windows Event Log - CAPI2 - or CryptoAPI 2, to identify failed trust validation. Typically, this event log is meant for diagnosing PKI issues, however is a great source to identify failed trust validation. Note that this event log is noisy as it captures common PKI requests from many different processes. EventID 81 is generated anytime a trust validation fails. The description for EventID 81 is ""The digital signature of the object did not verify."" STRT tested this analytic using Mimikatz binary.",['Anomaly'],"October 10, 2023","`capi2_operational` EventID=81 ""The digital signature of the object did not verify."" 
| xmlkv UserData_Xml 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer, UserData_Xml 
| rename Computer as dest 
| `windows_sip_winverifytrust_failed_trust_validation_filter`",['capi2_operational'],"['_time', 'Computer', 'UserData_Xml']",False positives may be present in some instances of legitimate binaries with invalid signatures. Filter as needed.,['Subvert Trust Controls SIP and Trust Provider Hijacking'],['https://research.splunk.com/stories/subvert_trust_controls_sip_and_trust_provider_hijacking'],"['https://attack.mitre.org/techniques/T1553/003/', 'https://specterops.io/wp-content/uploads/sites/3/2022/06/SpecterOps_Subverting_Trust_in_Windows.pdf', 'https://github.com/gtworek/PSBits/tree/master/SIP', 'https://github.com/mattifestation/PoCSubjectInterfacePackage', 'https://pentestlab.blog/2017/11/06/hijacking-digital-signatures/']","['Defense Evasion', 'SIP and Trust Provider Hijacking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/701a8740-e8db-40df-9190-5516d3819787/,Sunburst Correlation DLL and Network Event,['T1203'],"The malware sunburst will load the malicious dll by SolarWinds.BusinessLayerHost.exe. After a period of 12-14 days, the malware will attempt to resolve a subdomain of avsvmcloud.com. This detections will correlate both events.",['TTP'],"December 14, 2020","(`sysmon` EventCode=7 ImageLoaded=*SolarWinds.Orion.Core.BusinessLayer.dll) OR (`sysmon` EventCode=22 QueryName=*avsvmcloud.com) 
| eventstats dc(EventCode) AS dc_events 
| where dc_events=2 
| stats min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) AS ImageLoaded values(QueryName) AS QueryName by host 
| rename host as dest 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `sunburst_correlation_dll_and_network_event_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'ImageLoaded', 'QueryName']",unknown,['NOBELIUM Group'],['https://research.splunk.com/stories/nobelium_group'],['https://www.mandiant.com/resources/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor'],"['Execution', 'Exploitation for Client Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/70803451-0047-4e12-9d63-77fa7eb8649c/,Remote System Discovery with Adsisearcher,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the [Adsisearcher] type accelerator being used to query Active Directory for domain computers. Red Teams and adversaries may leverage [Adsisearcher] to enumerate domain computers for situational awareness and Active Directory Discovery.,['TTP'],"June 29, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*adsisearcher*"" AND ScriptBlockText = ""*objectcategory=computer*"" AND ScriptBlockText IN (""*findAll()*"",""*findOne()*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `remote_system_discovery_with_adsisearcher_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",Administrators or power users may use Adsisearcher for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/70f7c952-0758-46d6-9148-d8969c4481d1/,Windows Gather Victim Network Info Through Ip Check Web Services,"['T1590.005', 'T1590']",The following analytic identifies process that attempts to connect to a known IP web services. This technique is commonly used by trickbot and other malware to perform reconnaissance against the infected machine and look for its IP address.,['Hunting'],"February 15, 2024","`sysmon` EventCode=22  QueryName IN (""*wtfismyip.com"", ""*checkip.*"", ""*ipecho.net"", ""*ipinfo.io"", ""*api.ipify.org"", ""*icanhazip.com"", ""*ip.anysrc.com"",""*api.ip.sb"", ""ident.me"", ""www.myexternalip.com"", ""*zen.spamhaus.org"", ""*cbl.abuseat.org"", ""*b.barracudacentral.org"", ""*dnsbl-1.uceprotect.net"", ""*spam.dnsbl.sorbs.net"", ""*iplogger.org*"", ""*ip-api.com*"", ""*geoip.*"") 
|  stats  min(_time) as firstTime max(_time) as lastTime count by  Image ProcessId QueryName QueryStatus QueryResults EventCode Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_gather_victim_network_info_through_ip_check_web_services_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ProcessId', 'QueryName', 'QueryStatus', 'QueryResults', 'dest', 'EventCode']",Filter internet browser application to minimize the false positive of this detection.,"['Azorult', 'DarkCrystal RAT', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Gather Victim Network Information', 'IP Addresses', 'Reconnaissance', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/70fac80e-0bf1-11ec-9ba0-acde48001122/,Get-ForestTrust with PowerShell Script Block,"['T1482', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies Get-ForestTrust from PowerSploit in order to gather domain trust information. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"February 24, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*get-foresttrust*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_foresttrust_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Path', 'Opcode', 'Computer', 'UserID']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://powersploit.readthedocs.io/en/latest/Recon/Get-ForestTrust/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Discovery', 'Domain Trust Discovery', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7141122c-3bc2-4aaa-ab3b-7a85a0bbefc3/,GetWmiObject Ds Computer with PowerShell,['T1018'],"This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. The Get-WmiObject commandlet combined with the DS_Computer parameter can be used to return a list of all domain computers. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain groups for situational awareness and Active Directory Discovery.",['TTP'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-WmiObject* AND Processes.process=""*namespace root\\directory\\ldap*"" AND Processes.process=""*class ds_computer*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_ds_computer_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7173b2ad-6146-418f-85ae-c3479e4515fc/,Linux Clipboard Data Copy,['T1115'],"The following analytic identifies the use of Linux Xclip copying data out of the clipboard. Adversaries have utilized this technique to capture passwords, IP addresses, or store payloads.",['Anomaly'],"July 28, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=xclip Processes.process IN (""*-o *"", ""*-sel *"", ""*-selection *"", ""*clip *"",""*clipboard*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_clipboard_data_copy_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present on Linux desktop as it may commonly be used by administrators or end users. Filter as needed.,['Linux Living Off The Land'],['https://research.splunk.com/stories/linux_living_off_the_land'],"['https://attack.mitre.org/techniques/T1115/', 'https://linux.die.net/man/1/xclip']","['Clipboard Data', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/71b289db-5f2c-4c43-8256-8bf26ae7324a/,Windows AD Abnormal Object Access Activity,"['T1087', 'T1087.002']",Windows Active Directory contains numerous objects. A statistically significant increase in access to these objects may be evidence of attacker enumeration of Active Directory.,['Anomaly'],"June 1, 2023","`wineventlog_security` EventCode=4662 
| stats min(_time) AS firstTime, max(_time) AS lastTime, dc(ObjectName) AS ObjectName_count, values(ObjectType) AS ObjectType, latest(Computer) AS dest count BY SubjectUserName 
| eventstats avg(ObjectName_count) AS average stdev(ObjectName_count) AS standarddev 
| eval limit = round((average+(standarddev*3)),0), user = SubjectUserName 
| where ObjectName_count > limit 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_ad_abnormal_object_access_activity_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'ObjectName', 'EventCode', 'SubjectUserName']",Service accounts or applications that routinely query Active Directory for information.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://medium.com/securonix-tech-blog/detecting-ldap-enumeration-and-bloodhound-s-sharphound-collector-using-active-directory-decoys-dfc840f2f644', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4662', 'https://attack.mitre.org/tactics/TA0007/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/71b9bf37-cde1-45fb-b899-1b0aa6fa1183/,Detect Rundll32 Application Control Bypass - syssetup,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe loading syssetup.dll by calling the LaunchINFSection function on the command line. This particular technique will load script code from a file. Upon a successful execution, the following module loads may occur - clr.dll, jscript.dll and scrobj.dll. During investigation, identify script content origination. Generally, a child process will spawn from rundll32.exe, but that may be bypassed based on script code contents. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, review any network connections and obtain the script content executed. It's possible other files are on disk.",['TTP'],"February 4, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*syssetup* by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_rundll32_application_control_bypass___syssetup_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use syssetup.dll, triggering a false positive.","['Suspicious Rundll32 Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://lolbas-project.github.io/lolbas/Libraries/Syssetup/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/71bfdb13-f200-4c6c-b2c9-a2e07adf437d/,WMI Permanent Event Subscription,['T1047'],"The following analytic detects the creation of permanent event subscriptions using Windows Management Instrumentation (WMI), which is used by attackers to achieve persistence in a compromised system. By creating a permanent event subscription, an attacker can run malicious scripts or binaries in response to specific system events that enables them to maintain access to the system undetected. The detection is made by using Sysmon Event ID 5 data to detect instances where the consumers of these events are not the expected ""NTEventLogEventConsumer."" The detection is important because it identifies unusual or unexpected subscription creation, which suggests that an attacker is attempting to achieve persistence within the environment and might be executing malicious scripts or binaries in response to specific system events. The impact of such an attack can be severe, potentially leading to data theft, ransomware, or other damaging outcomes. False positives might occur since False positives might occur since WMI event subscriptions can be used for legitimate purposes by system administrators. You must have a thorough understanding of WMI activity within the context of the monitored environment to effectively differentiate between legitimate and malicious activity.Next steps include investigating the associated scripts or binaries and identifying the source of the attack.",['TTP'],"October 23, 2018","`wmi` EventCode=5861 Binding 
| rex field=Message ""Consumer =\s+(?<consumer>[^;
|^$]+)"" 
| search consumer!=""NTEventLogEventConsumer=\""SCM Event Log Consumer\"""" 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, consumer, Message 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| rename ComputerName as dest 
| `wmi_permanent_event_subscription_filter`","['security_content_ctime', 'wmi']","['_time', 'EventCode', 'Message', 'consumer', 'ComputerName']","Although unlikely, administrators may use event subscriptions for legitimate purposes.",['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],N/A,"['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/71efbf52-4dbb-4c00-a520-306aa546cbb7/,WBAdmin Delete System Backups,['T1490'],This search looks for flags passed to wbadmin.exe (Windows Backup Administrator Tool) that delete backup files. This is typically used by ransomware to prevent recovery.,['TTP'],"December 7, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""wbadmin.exe"" AND (process_cmd_line LIKE ""%systemstatebackup%"" OR process_cmd_line LIKE ""%catalog%"" OR process_cmd_line LIKE ""%delete%"") --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",Administrators may modify the boot configuration.,"['Ryuk Ransomware', 'Ransomware']","['https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.md', 'https://thedfirreport.com/2020/10/08/ryuks-return/', 'https://attack.mitre.org/techniques/T1490/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin']","['Impact', 'Inhibit System Recovery', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/7215831c-8252-4ae3-8d43-db588e82f952/,Windows Impair Defense Define Win Defender Threat Action,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to define the threat action of Windows Defender. The ThreatSeverityDefaultAction registry setting in Windows Defender is used to define the default action taken by Windows Defender when it encounters threats of specific severity levels. A setting like ThreatSeverityDefaultAction is designed to define how Windows Defender responds to threats based on their severity. For example, it might determine whether Windows Defender quarantines, removes, or takes other actions against threats based on their severity levels. In this context, a registry value of 1 typically indicates an action to ""clean,"" aiming to disinfect or resolve the detected threat, while a registry value of 9 signifies ""no action,"" meaning that the antivirus software refrains from taking immediate steps against the identified threat.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Threats\\ThreatSeverityDefaultAction*"" Registry.registry_value_data IN (""0x00000001"", ""9"") by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_define_win_defender_threat_action_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/72170ec5-f7d2-42f5-aefb-2b8be6aad15f/,Detect Regasm Spawning a Process,"['T1218', 'T1218.009']",The SPL above uses the following Macros:,['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=regasm.exe by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_regasm_spawning_a_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Although unlikely, limited instances of regasm.exe or regsvcs.exe may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land', 'DarkGate Malware', 'Snake Keylogger']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/snake_keylogger']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/', 'https://lolbas-project.github.io/lolbas/Binaries/Regasm/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/723716de-ee55-4cd4-9759-c44e7e55ba4b/,Detect HTML Help Spawn Child Process,"['T1218', 'T1218.001']","The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) that spawns a child process. This particular technique will load Windows script code from a compiled help file. CHM files may contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Review child process events and investigate further. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=hh.exe by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_html_help_spawn_child_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications (ex. web browsers) may spawn a child process. Filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land', 'AgentTesla']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/agenttesla']","['https://attack.mitre.org/techniques/T1218/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/', 'https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7', 'https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/729aab57-d26f-4156-b97f-ab8dda8f44b1/,Linux Deletion Of Init Daemon Script,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a deletion of init daemon script in a linux machine. daemon script that place in /etc/init.d/ is a directory that can start and stop some daemon services in linux machines. attacker may delete or modify daemon script to impair some security features or act as defense evasion in a compromised linux machine. This TTP can be also a good indicator of a malware trying to wipe or delete several files in compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path IN ( ""/etc/init.d/*"") by _time span=1h Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_deletion_of_init_daemon_script_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['AcidRain', 'Data Destruction']","['https://research.splunk.com/stories/acidrain', 'https://research.splunk.com/stories/data_destruction']",['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7349a9e9-3cf6-4171-bb0c-75607a8dcd1a/,Windows Regsvr32 Renamed Binary,"['T1218.010', 'T1218']","The following hunting analytic identifies renamed instances of regsv32.exe executing. regsv32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. During investigation, validate if it is the legitimate regsv32.exe executing and what dll module content it is loading. This query relies on the original filename or internal name from the PE meta data. Expand the query as needed by looking for specific command line arguments outlined in other analytics.",['TTP'],"October 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name != regsvr32.exe AND Processes.original_file_name=regsvr32.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_regsvr32_renamed_binary_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://twitter.com/pr0xylife/status/1585612370441031680?s=46&t=Dc3CJi4AnM-8rNoacLbScg'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/737e1eb0-065a-11ec-921a-acde48001122/,Get ADUserResultantPasswordPolicy with Powershell Script Block,['T1201'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-ADUserResultantPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['TTP'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText=""*Get-ADUserResultantPasswordPolicy*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduserresultantpasswordpolicy_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduserresultantpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73922ff8-3022-11ec-bf5e-acde48001122/,Disable Defender Submit Samples Consent Feature,"['T1562.001', 'T1562']","This analytic is intended to detect a suspicious modification of the Windows registry to disable a Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV, specifically the feature that submits samples for further analysis.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Microsoft\\Windows Defender\\SpyNet*"" Registry.registry_value_name = SubmitSamplesConsent Registry.registry_value_data = 0x00000000) BY _time span=1h Registry.user Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_submit_samples_consent_feature_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['Azorult', 'CISA AA23-347A', 'IcedID', 'Windows Registry Abuse']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73a56508-1cf5-4df7-b8d9-5737fbdc27d2/,Linux Account Manipulation Of SSH Config and Keys,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a deletion of ssh key in a linux machine. attacker may delete or modify ssh key to impair some security features or act as defense evasion in compromised linux machine. This Anomaly can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted AND Filesystem.file_path IN (""/etc/ssh/*"", ""~/.ssh/*"") by _time span=1h Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_account_manipulation_of_ssh_config_and_keys_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,['Acidrain'],['https://research.splunk.com/stories/acidrain'],['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73a931db-1830-48b3-8296-cd9cfa09c3c8/,Windows Valid Account With Never Expires Password,['T1489'],"The following analytic identifies net.exe updating user account policies for password requirement with non-expiring password. This technique was seen in several adversaries and malware like Azorult to maintain the foothold (persistence), gaining privilege escalation, defense evasion and possible for lateral movement for specific users or created user account on the targeted host. This TTP detections is a good pivot to see further what other events that users executes on the machines.",['TTP'],"June 23, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` AND Processes.process=""* accounts *"" AND Processes.process=""* /maxpwage:unlimited"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_valid_account_with_never_expires_password_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This behavior is not commonly seen in production environment and not advisable, filter as needed.",['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/net-commands-on-operating-systems']","['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73ce70c4-146d-11ec-9184-acde48001122/,Office Application Drop Executable,"['T1566', 'T1566.001']",This search is to detect a suspicious MS office application that drops or creates executables or scripts in a Windows Operating System. This behavior is commonly seen in spear phishing office attachment where it drop malicious files or script to compromised the host. It might be some normal macro may drop script or tools as part of automation but still this behavior is reallly suspicious and not commonly seen in normal office application,['TTP'],"February 15, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""wordpad.exe"",""wordview.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"") by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid 
| `drop_dm_object_name(Processes)` 
|join process_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.exe"",""*.dll"",""*.pif"",""*.scr"",""*.js"",""*.vbs"",""*.vbe"",""*.ps1"") by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| fields _time dest file_create_time file_name file_path process_name process_path process process_guid] 
| dedup file_create_time 
| table dest, process_name, process, file_create_time, file_name, file_path, process_guid 
| `office_application_drop_executable_filter`",['security_content_summariesonly'],"['_time', 'process_name', 'file_name', 'process_guid', 'dest', 'user_id']",office macro for automation may do this behavior,"['FIN7', 'AgentTesla', 'CVE-2023-21716 Word RTF Heap Corruption', 'Warzone RAT', 'PlugX']","['https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/cve-2023-21716_word_rtf_heap_corruption', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/plugx']","['https://www.mandiant.com/resources/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation', 'https://attack.mitre.org/groups/G0046/', 'https://www.joesandbox.com/analysis/702680/0/html', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73cf5dcb-cf36-4167-8bbe-384fe5384d05/,Windows Remote Access Software BRC4 Loaded Dll,"['T1219', 'T1003']","The following anomaly detection identifies the behavior related to 4 native Windows DLLs being loaded by a non-standard process. Identified by MDSec during their research into Brute Ratel, MDSec identified a high signal analytic by calling out these 4 DLLs being loaded into a process. LogonCLI.dll is the Net Logon Client DLL and is related to users and other domain services to get authenticated. Credui.dll is Credential Manager User Interface. Credential managers receive notifications when authentication information changes. For example, credential managers are notified when a user logs on or an account password changes. Samcli.dll is the Security Accounts Manager Client DLL. Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. Dbghelp.dll is Windows Image Helper. Windows Image Helper is commonly seen in credential dumping due to native functions. All of these modules are important to monitor and track and combined may lead to credentail access or dumping.",['Anomaly'],"August 24, 2022","`sysmon` EventCode=7 
|bin _time span=30s 
| eval BRC4_AnomalyLoadedDll=case(OriginalFileName==""credui.dll"", 1, OriginalFileName==""DBGHELP.DLL"", 1, OriginalFileName==""SAMCLI.DLL"", 1, OriginalFileName==""winhttp.dll"", 1, 1=1, 0) 
| eval BRC4_LoadedDllPath=case(match(ImageLoaded, ""credui.dll""), 1, match(ImageLoaded, ""dbghelp.dll""), 1, match(ImageLoaded, ""samcli.dll""), 1, match(ImageLoaded, ""winhttp.dll""), 1, 1=1, 0) 
| stats count min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) as ImageLoaded values(OriginalFileName) as OriginalFileName dc(ImageLoaded) as ImageLoadedCount by Image  BRC4_LoadedDllPath BRC4_AnomalyLoadedDll dest EventCode Signed 
| where  ImageLoadedCount == 4 AND (BRC4_LoadedDllPath == 1 OR BRC4_AnomalyLoadedDll == 1) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_access_software_brc4_loaded_dll_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",This module can be loaded by a third party application. Filter is needed.,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/', 'https://www.mdsec.co.uk/2022/08/part-3-how-i-met-your-beacon-brute-ratel/', 'https://strontic.github.io/xcyclopedia/library/logoncli.dll-138871DBE68D0696D3D7FA91BC2873B1.html', 'https://strontic.github.io/xcyclopedia/library/credui.dll-A5BD797BBC2DD55231B9DE99837E5461.html', 'https://docs.microsoft.com/en-us/windows/win32/secauthn/credential-manager', 'https://strontic.github.io/xcyclopedia/library/samcli.dll-522D6D616EF142CDE965BD3A450A9E4C.html', 'https://strontic.github.io/xcyclopedia/library/dbghelp.dll-15A55EAB307EF8C190FE6135C0A86F7C.html']","['Command And Control', 'Credential Access', 'OS Credential Dumping', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/73ed0f19-080e-4917-b7c6-56e1760a50d4/,Windows Findstr GPP Discovery,"['T1552', 'T1552.006']","The following analytic identifies the use of the findstr command employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",['TTP'],"May 2, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""findstr.exe"" AND process_cmd_line LIKE ""%cpassword%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",Administrators may leverage findstr to find passwords in GPO to validate exposure. Filter as needed.,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1552/006/', 'https://pentestlab.blog/2017/03/20/group-policy-preferences/', 'https://adsecurity.org/?p=2288', 'https://www.hackingarticles.in/credential-dumping-group-policy-preferences-gpp/', 'https://support.microsoft.com/en-us/topic/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevation-of-privilege-may-13-2014-60734e15-af79-26ca-ea53-8cd617073c30']","['Credential Access', 'Credential Access', 'Group Policy Preferences', 'Splunk Behavioral Analytics', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/743a322c-9a68-4a0f-9c17-85d9cce2a27c/,Create or delete windows shares using net exe,"['T1070', 'T1070.005']","The following analytic detects the creation or deletion of hidden shares using the net.exe command for prompt response and mitigation to enhance the overall security posture of the organization and protect against potential data breaches, malware infections, and other damaging outcomes. This detection is made by searching for processes that involve the use of net.exe and filters for actions related to creation or deletion of shares. This detection is important because it suggests that an attacker is attempting to manipulate or exploit the network by creating or deleting hidden shares. The creation or deletion of hidden shares can indicate malicious activity since attackers might use hidden shares to exfiltrate data, distribute malware, or establish persistence within a network. The impact of such an attack can vary, but it often involves unauthorized access to sensitive information, disruption of services, or the introduction of malware. False positives might occur since legitimate actions can also involve the use of net.exe. An extensive triage and investigation is necessary to determine the intent and nature of the detected activity. Next steps include reviewing the details of the process involving the net.exe command, including the user, parent process, and timestamps during the triage. Additionally, capture and inspect any relevant on-disk artifacts and review concurrent processes to identify the source of the attack.",['TTP'],"September 16, 2020","| tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` by Processes.process Processes.process_name  Processes.parent_process_name Processes.original_file_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| search process=*share* 
| `create_or_delete_windows_shares_using_net_exe_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators often leverage net.exe to create or delete network shares. You should verify that the activity was intentional and is legitimate.,"['Hidden Cobra Malware', 'CISA AA22-277A', 'Windows Post-Exploitation', 'Prestige Ransomware', 'DarkGate Malware']","['https://research.splunk.com/stories/hidden_cobra_malware', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/darkgate_malware']",['https://attack.mitre.org/techniques/T1070/005/'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Indicator Removal', 'Network Share Connection Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/747d7800-2eaa-422d-b994-04d8bb9e06d0/,Windows Steal Authentication Certificates Certificate Request,['T1649'],"The following analytic identifies when a new certificate is requested against the Certificate Services - AD CS. By its very nature this is not malicious, but should be tracked and correlated with other events related to certificate requests. When an account requests a certificate, the CA generates event ID (EID) 4886 ""Certificate Services received a certificate request"".",['Anomaly'],"February 6, 2023","`wineventlog_security` EventCode=4886 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, name, Requester, action, Attributes 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_certificate_request_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'name', 'Requester', 'action', 'Attributes']","False positives will be generated based on normal certificate requests. Leave enabled to generate Risk, as this is meant to be an anomaly analytic.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf'],"['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/74a8133f-93e7-4b71-9bd3-13a66124fd57/,Windows System LogOff Commandline,['T1529'],"The following analytic identifies Windows commandline to logoff a windows host machine. This technique was seen in several APT, RAT like dcrat and other commodity malware to shutdown the machine to add more impact, interrupt access, aid destruction of the system like wiping disk or inhibit system recovery. This TTP is a good pivot to check why application trigger this commandline which is not so common way to logoff a machine.",['Anomaly'],"July 27, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = shutdown.exe OR Processes.original_file_name = shutdown.exe) Processes.process=""*shutdown*"" Processes.process IN (""* /l*"", ""* -l*"") Processes.process IN (""* /t*"",""* -t*"",""* /f*"",""* -f*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_logoff_commandline_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrator may execute this commandline to trigger shutdown, logoff or restart the host machine.","['DarkCrystal RAT', 'NjRAT']","['https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/njrat']","['https://attack.mitre.org/techniques/T1529/', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Shutdown/Reboot']",['Endpoint']
https://research.splunk.com/endpoint/74c5a3b0-27a7-463c-9d00-1a5bb12cb7b5/,Windows Archive Collected Data via Powershell,['T1560'],"The following analytic identifies suspicious PowerShell script that archive files to a temp folder. This anomaly detection serves as a valuable indicator to uncover threats from adversaries utilizing PowerShell scripts for data archiving purposes. Identifying this method becomes pivotal in flagging and investigating potential threats, enabling proactive measures threat actors leveraging similar PowerShell-based data collection and archiving techniques.",['Anomaly'],"December 19, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Compress-Archive*""  ScriptBlockText = ""*\\Temp\\*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_archive_collected_data_via_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'dest', 'user', 'Score']",powershell may used this function to archive data.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Archive Collected Data', 'Collection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7567a72f-bada-489d-aef1-59743fb64a66/,Windows Impair Defense Disable Win Defender Signature Retirement,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable windows defender Signature Retirement. The DisableSignatureRetirement registry setting in Windows Defender controls the retirement or expiration of antivirus signatures used by Windows Defender Antivirus. When DisableSignatureRetirement is set to 1, it usually indicates that Windows Defender won't automatically retire or expire antivirus signatures. Antivirus signatures are files containing information about known malware and are used by Windows Defender to detect and protect against threats. Disabling signature retirement might prevent Windows Defender from automatically removing or retiring older or less relevant antivirus signatures. This can potentially increase the number of signatures in use and might impact system resources or the effectiveness of threat detection.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\NIS\\Consumers\\IPS\\DisableSignatureRetirement"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_signature_retirement_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/75b00fd8-a0ff-11eb-8b31-acde48001122/,Schedule Task with Rundll32 Command Trigger,['T1053'],"The following analytic detects the creation of suspicious tasks in Windows, specifically tasks using the rundll32 command. It's implemented using Windows Security EventCode 4698 for A scheduled task was created, and looks for tasks executed either via schtasks.exe or TaskService. This behavior is worth identifying as it is commonly used by malware, such as TrickBot, that leverages rundll32 to execute its downloader.
If a true positive is found, it suggests an attacker is trying to persist within the environment or potentially deliver additional malicious payloads, leading to data theft, ransomware, or other damaging outcomes.
To implement this analytic, ensure you are ingesting logs with task schedule information from your endpoints. Be aware of potential false positives - legitimate uses of Task Scheduler in your environment may cause benign activities to be flagged.
Upon triage, review the scheduled task's source and the command to be executed. Capture and inspect any relevant on-disk artifacts, and look for concurrent processes to identify the attack source. This approach helps analysts detect potential threats earlier and mitigate the risks.",['TTP'],"April 19, 2021","`wineventlog_security` EventCode=4698 
| xmlkv Message 
| search Command IN (""*rundll32*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, Task_Name, Command, Author, Enabled, Hidden, Arguments 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schedule_task_with_rundll32_command_trigger_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Task_Name', 'Command', 'Author', 'Enabled', 'Hidden', 'Arguments']",unknown,"['Windows Persistence Techniques', 'Trickbot', 'IcedID', 'Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/']","['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/76406a0f-f5e0-4167-8e1f-337fdc0f1b0c/,Windows Impair Defenses Disable Win Defender Auto Logging,"['T1562.001', 'T1562']","The search looks for the Registry Key DefenderApiLogger or DefenderAuditLogger set to disable. This is consistent with RAT malware across a fleet of endpoints. This particular behavior is typically executed when an adversary gains access to an endpoint and beings to perform execution. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications.",['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where (Registry.registry_path = ""*WMI\\Autologger\\DefenderApiLogger\\Start"" OR Registry.registry_path = ""*WMI\\Autologger\\DefenderAuditLogger\\Start"")  Registry.registry_value_data =""0x00000000"" by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defenses_disable_win_defender_auto_logging_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://app.any.run/tasks/45f5d114-91ea-486c-ab01-41c4093d2861/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/76753bab-f116-4ea3-8fb9-89b638be58a9/,Windows Ingress Tool Transfer Using Explorer,['T1105'],"The following analytic identifies the Windows Explorer process with a URL within the command-line. Explorer.exe is known Windows process that handles start menu, taskbar, desktop and file manager. Many adversaries abuse this process, like DCRat malware, where it attempts to open the URL with the default browser application on the target host by putting the URL as a parameter on explorer.exe process. This anomaly detection might be a good pivot to check which user and how this process was executed, what is the parent process and what is the URL link. This technique is not commonly used to open an URL.",['Anomaly'],"August 30, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = explorer.exe OR Processes.original_file_name = explorer.exe) AND NOT (Processes.parent_process_name IN(""userinit.exe"", ""svchost.exe"")) Processes.process IN (""* http://*"", ""* https://*"") by  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_ingress_tool_transfer_using_explorer_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on legitimate applications or third party utilities. Filter out any additional parent process names.,['DarkCrystal RAT'],['https://research.splunk.com/stories/darkcrystal_rat'],['https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor'],"['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/76b3b290-9b31-11ec-a934-acde48001122/,Windows WMIPrvse Spawn MSBuild,"['T1127', 'T1127.001']","The following analytic identifies wmiprvse.exe spawning msbuild.exe. This behavior is indicative of a COM object being utilized to spawn msbuild from wmiprvse.exe. It is common for MSBuild.exe to be spawned from devenv.exe while using Visual Studio. In this instance, there will be command line arguments and file paths. In a malicious instance, MSBuild.exe will spawn from non-standard processes and have no command line arguments. For example, MSBuild.exe spawning from explorer.exe, powershell.exe is far less common and should be investigated.",['TTP'],"March 3, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""msbuild.exe"" AND match(actor_process_file_name, /(?i)wmiprvse.exe/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Trusted Developer Utilities Proxy Execution MSBuild', 'Living Off The Land']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/living_off_the_land']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1127.001/T1127.001.md']","['Defense Evasion', 'Defense Evasion', 'MSBuild', 'Splunk Behavioral Analytics', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/76bb9e35-f314-4c3d-a385-83c72a13ce4e/,Windows Rundll32 Comsvcs Memory Dump,"['T1003.003', 'T1003']",The following analytic identifies memory dumping using comsvcs.dll with the minidump function with rundll32.exe. This technique is common with adversaries who would like to dump the memory of lsass.exe.,['TTP'],"April 14, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (match(process_cmd_line, /(?i)minidump/)=true AND process_file_name=""rundll32.exe"") AND match(process_cmd_line, /(?i)comsvcs.dll/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives should be limited, filter as needed.","['Credential Dumping', 'Suspicious Rundll32 Activity']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/suspicious_rundll32_activity']","['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-3---dump-lsassexe-memory-using-comsvcsdll']","['Credential Access', 'Credential Access', 'NTDS', 'OS Credential Dumping', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/76d79d6e-25bb-40f6-b3b2-e0a6b7e5ea13/,BCDEdit Failure Recovery Modification,['T1490'],This search looks for flags passed to bcdedit.exe modifications to the built-in Windows error recovery boot configurations. This is typically used by ransomware to prevent recovery.,['TTP'],"December 7, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""bcdedit.exe"" AND (process_cmd_line LIKE ""%no%"" AND process_cmd_line LIKE ""%recoveryenabled%"") --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",Administrators may modify the boot configuration.,"['Ryuk Ransomware', 'Ransomware', 'Information Sabotage']","['https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/information_sabotage']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.md#atomic-test-4---windows---disable-windows-recovery-console-repair'],"['Impact', 'Inhibit System Recovery', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/773b66fe-4dd9-11ec-8289-acde48001122/,Add or Set Windows Defender Exclusion,"['T1562.001', 'T1562']","This analytic will identify a suspicious process command-line related to Windows Defender exclusion feature. This command is abused by adversaries, malware authors and red teams to bypass Windows Defender Antivirus products by excluding folder path, file path, process and extensions. From its real time or schedule scan to execute their malicious code. This is a good indicator for defense evasion and to look further for events after this behavior.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process = ""*Add-MpPreference *"" OR Processes.process = ""*Set-MpPreference *"") AND Processes.process=""*-exclusion*"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `add_or_set_windows_defender_exclusion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Admin or user may choose to use this windows features. Filter as needed.,"['CISA AA22-320A', 'AgentTesla', 'Remcos', 'Windows Defense Evasion Tactics', 'Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html', 'https://app.any.run/tasks/cf1245de-06a7-4366-8209-8e3006f2bfe5/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7742aa92-c9d9-11eb-bbfc-acde48001122/,Prevent Automatic Repair Mode using Bcdedit,['T1490'],This search is to detect a suspicious bcdedit.exe execution to ignore all failures. This technique was used by ransomware to prevent the compromise machine automatically boot in repair mode.,['TTP'],"June 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""bcdedit.exe"" Processes.process = ""*bootstatuspolicy*""  Processes.process = ""*ignoreallfailures*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `prevent_automatic_repair_mode_using_bcdedit_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process_guid']",Administrators may modify the boot configuration ignore failure during testing and debugging.,"['Ransomware', 'Chaos Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/chaos_ransomware']",['https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_1_tamada-yamazaki-nakatsuru_en.pdf'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/77592bec-d5cc-11eb-9e60-acde48001122/,Excessive number of service control start as disabled,"['T1562.001', 'T1562']","This detection targets behaviors observed when threat actors have used sc.exe to modify services. We observed malware in a honey pot spawning numerous sc.exe processes in a short period of time, presumably to impair defenses, possibly to block others from compromising the same machine.  This detection will alert when we see both an excessive number of sc.exe processes launched with specific commandline arguments to disable the start of certain services.",['Anomaly'],"June 25, 2021","| tstats `security_content_summariesonly` distinct_count(Processes.process) as distinct_cmdlines values(Processes.process_id) as process_ids min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE Processes.process_name = ""sc.exe"" AND Processes.process=""*start= disabled*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.parent_process_id, _time span=30m 
| where distinct_cmdlines >= 8 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_number_of_service_control_start_as_disabled_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Legitimate programs and administrators will execute sc.exe with the start disabled flag.  It is possible, but unlikely from the telemetry of normal Windows operation we observed, that sc.exe will be called more than seven times in a short period of time.",['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/sc-create', 'https://attack.mitre.org/techniques/T1562/001/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/77f41d9e-b8be-47e3-ab35-5776f5ec1d20/,User Discovery With Env Vars PowerShell Script Block,['T1033'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the use of PowerShell environment variables to identify the current logged user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*$env:UserName*"" OR ScriptBlockText = ""*[System.Environment]::UserName*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| rename Computer as dest, user_id as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `user_discovery_with_env_vars_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'Path', 'Message', 'OpCode', 'ComputerName', 'User', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/783f0798-f679-4c17-b3b3-187febf0b9b8/,Windows Impair Defense Change Win Defender Quick Scan Interval,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to change Windows Defender Quick Scan Interval. The ""QuickScanInterval"" in Windows Defender, specifically within the context of antivirus software, typically refers to the interval or frequency at which the system conducts quick scans for malware or potential threats. This setting dictates how often Windows Defender performs quick scans on the system. Quick scans are less comprehensive than full system scans but provide a faster way to check critical areas for potential threats or malware. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Scan\\QuickScanInterval"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_change_win_defender_quick_scan_interval_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/787e9dd0-4328-11ec-a029-acde48001122/,WMIC XSL Execution via URL,['T1220'],"The following analytic identifies wmic.exe loading a remote XSL (eXtensible Stylesheet Language) script. This originally was identified by Casey Smith, dubbed Squiblytwo, as an application control bypass. Many adversaries will utilize this technique to invoke JScript or VBScript within an XSL file. This technique can also execute local/remote scripts and, similar to its Regsvr32 ""Squiblydoo"" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in Windows Management Instrumentation provided they utilize the /FORMAT switch. Upon identifying a suspicious execution, review for confirmed network connnection and script download.",['TTP'],"November 11, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process IN (""*http://*"", ""*https://*"") Processes.process=""*/format:*"" by Processes.parent_process_name Processes.original_file_name Processes.parent_process Processes.process_name Processes.process_id Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wmic_xsl_execution_via_url_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives are limited as legitimate applications typically do not download files or xsl using WMIC. Filter as needed.,['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],"['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.md', 'https://web.archive.org/web/20190814201250/https://subt0x11.blogspot.com/2018/04/wmicexe-whitelisting-bypass-hacking.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.md#atomic-test-4---wmic-bypass-using-remote-xsl-file']","['Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'XSL Script Processing']",['Endpoint']
https://research.splunk.com/endpoint/78f7487d-42ce-4f7f-8685-2159b25fb477/,Linux Octave Privilege Escalation,"['T1548.003', 'T1548']","GNU Octave is a high-level programming language primarily intended for scientific computing and numerical computation. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. If sudo right is given to the application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*octave-cli*"" AND Processes.process=""*--eval*"" AND Processes.process=""*system*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_octave_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/octave/', 'https://en.wikipedia.org/wiki/GNU_Octave']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/791b727c-deec-4fbe-a732-756131b3c5a1/,3CX Supply Chain Attack Network Indicators,['T1195.002'],"The analytic provided below employs the Network_Resolution datamodel to detect domain indicators associated with the 3CX supply chain attack. By leveraging this query, you can efficiently conduct retrospective analysis of your data to uncover potential compromises.",['TTP'],"March 30, 2023","| tstats `security_content_summariesonly` values(DNS.answer) as IPs min(_time) as firstTime from datamodel=Network_Resolution by DNS.src, DNS.query 
| `drop_dm_object_name(DNS)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| lookup 3cx_ioc_domains domain as query OUTPUT Description isIOC 
| search isIOC=true 
| `3cx_supply_chain_attack_network_indicators_filter`","['security_content_summariesonly', 'security_content_ctime']","['DNS.src', 'DNS.query', '_time']",False positives will be present for accessing the 3cx[.]com website. Remove from the lookup as needed.,['3CX Supply Chain Attack'],['https://research.splunk.com/stories/3cx_supply_chain_attack'],"['https://www.sentinelone.com/blog/smoothoperator-ongoing-campaign-trojanizes-3cx-software-in-software-supply-chain-attack/', 'https://www.cisa.gov/news-events/alerts/2023/03/30/supply-chain-attack-against-3cxdesktopapp', 'https://www.reddit.com/r/crowdstrike/comments/125r3uu/20230329_situational_awareness_crowdstrike/', 'https://www.3cx.com/community/threads/crowdstrike-endpoint-security-detection-re-3cx-desktop-app.119934/page-2#post-558898', 'https://www.3cx.com/community/threads/3cx-desktopapp-security-alert.119951/']","['Compromise Software Supply Chain', 'Initial Access', 'Network_Resolution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/79439cae-9200-11eb-a4d3-acde48001122/,Disable Windows Behavior Monitoring,"['T1562.001', 'T1562']","This search is to identifies a modification in registry to disable the windows denfender real time behavior monitoring. This event or technique is commonly seen in RAT, bot, or Trojan to disable AV to evade detections.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableBehaviorMonitoring"" OR Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableOnAccessProtection"" OR Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableScanOnRealtimeEnable"" OR Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection\\DisableRealtimeMonitoring"" OR Registry.registry_path= ""*\\Real-Time Protection\\DisableIntrusionPreventionSystem"" OR Registry.registry_path= ""*\\Real-Time Protection\\DisableIOAVProtection"" OR Registry.registry_path= ""*\\Real-Time Protection\\DisableScriptScanning"" AND Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_windows_behavior_monitoring_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable this windows features.,"['Azorult', 'Ransomware', 'Windows Registry Abuse', 'RedLine Stealer', 'Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Revil Ransomware']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/revil_ransomware']",['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/799b606e-da81-11eb-93f8-acde48001122/,Spoolsv Suspicious Process Access,['T1068'],"This analytic identifies a suspicious behavior related to PrintNightmare, or CVE-2021-34527 previously (CVE-2021-1675),  to gain privilege escalation on the vulnerable machine. This exploit attacks a critical Windows Print Spooler Vulnerability to elevate privilege. This detection is to look for suspicious process access made by the spoolsv.exe that may related to the attack.",['TTP'],"July 1, 2021","`sysmon` EventCode=10 SourceImage = ""*\\spoolsv.exe"" CallTrace = ""*\\Windows\\system32\\spool\\DRIVERS\\x64\\*"" TargetImage IN (""*\\rundll32.exe"", ""*\\spoolsv.exe"") GrantedAccess = 0x1fffff 
| stats  count min(_time) as firstTime max(_time) as lastTime by dest SourceImage TargetImage GrantedAccess CallTrace  EventCode ProcessID
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `spoolsv_suspicious_process_access_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'GrantedAccess', 'CallTrace', 'EventCode']",Unknown. Filter as needed.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://github.com/cube0x0/impacket/commit/73b9466c17761384ece11e1028ec6689abad6818', 'https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/79c7d0fc-60c7-41be-a616-ccda752efe89/,Windows DLL Search Order Hijacking Hunt,"['T1574.001', 'T1574']","The following hunting analytic is an experimental query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.user!=unknown NOT (Processes.process_path IN (""*\\system32\\*"", ""*\\syswow64\\*"",""*\\winsxs\\*"",""*\\wbem\\*""))  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process_path 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup hijacklibs library AS process_name OUTPUT islibrary 
| search islibrary = True 
| rename parent_process_name as process_name , process_name AS ImageLoaded, process_path AS Module_Path 
| `windows_dll_search_order_hijacking_hunt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process_path']",False positives will be present based on paths. Filter or add other paths to the exclusion as needed.,"['Living Off The Land', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']",['https://hijacklibs.net'],"['Defense Evasion', 'Defense Evasion', 'DLL Search Order Hijacking', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/79c7d1fc-64c7-91be-a616-ccda752efe81/,Windows DLL Search Order Hijacking Hunt with Sysmon,"['T1574.001', 'T1574']","The following hunting analytic is query built against a accidental feature using the latest Sysmon TA 3.0 (https://splunkbase.splunk.com/app/5709/) which maps the module load (ImageLoaded) to process_name. This analytic will deprecate once this is fixed. This hunting analytic identifies known libraries in Windows that may be used in a DLL search order hijack or DLL Sideloading setting. This may require recompiling the DLL, moving the DLL or moving the vulnerable process. The query looks for any running out of system32 or syswow64. Some libraries natively run out of other application paths and will need to be added to the exclusion as needed. The lookup is comprised of Microsoft native libraries identified within the Hijacklibs.net project.",['Hunting'],"November 7, 2023","`sysmon` EventCode=7 NOT (process_path IN (""*\\system32\\*"", ""*\\syswow64\\*"",""*\\winsxs\\*"",""*\\wbem\\*"")) 
| lookup hijacklibs library AS process_name OUTPUT islibrary 
| search islibrary = True 
|rename process_name AS ImageLoaded process_path AS Module_Path 
| stats count values(parent_process_name) as parent_process_name by _time dest ImageLoaded Module_Path 
| `windows_dll_search_order_hijacking_hunt_with_sysmon_filter`",['sysmon'],"['_time', 'dest', 'ImageLoaded', 'Module_Path']",False positives will be present based on paths. Filter or add other paths to the exclusion as needed.,"['Living Off The Land', 'Windows Defense Evasion Tactics', 'Qakbot']","['https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/qakbot']",['https://hijacklibs.net'],"['Defense Evasion', 'Defense Evasion', 'DLL Search Order Hijacking', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7a85eb24-72da-11ec-ac76-acde48001122/,Linux Possible Access Or Modification Of sshd Config File,"['T1098.004', 'T1098']","This analytic is to look for suspicious process command-line that might be accessing or modifying sshd_config. This file is the ssh configuration file that might be modify by threat actors or adversaries to redirect port connection, allow user using authorized key generated during attack. This anomaly detection might catch noise from administrator auditing or modifying ssh configuration file. In this scenario filter is needed",['Anomaly'],"January 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN(""cat"", ""nano*"",""vim*"", ""vi*"")  AND Processes.process IN(""*/etc/ssh/sshd_config"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_access_or_modification_of_sshd_config_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://www.hackingarticles.in/ssh-penetration-testing-port-22/', 'https://attack.mitre.org/techniques/T1098/004/']","['Account Manipulation', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'SSH Authorized Keys']",['Endpoint']
https://research.splunk.com/endpoint/7ab3c319-a4e7-4211-9e8c-40a049d0dba6/,Windows Terminating Lsass Process,"['T1562.001', 'T1562']",This analytic is to detect a suspicious process terminating Lsass process. Lsass process is known to be a critical process that is responsible for enforcing security policy system. This process was commonly targetted by threat actor or red teamer to gain privilege escalation or persistence in the targeted machine because it handles credentials of the logon users. In this analytic we tried to detect a suspicious process having a granted access PROCESS_TERMINATE to lsass process to modify or delete protected registrys. This technique was seen in doublezero malware that tries to wipe files and registry in compromised hosts. This anomaly detection can be a good pivot of incident response for possible credential dumping or evading security policy in a host or network environment.,['Anomaly'],"April 14, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe GrantedAccess = 0x1 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage, TargetImage, TargetProcessId, SourceProcessId, GrantedAccess CallTrace, dest 
| rename dest as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_terminating_lsass_process_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'TargetImage', 'CallTrace', 'dest', 'TargetProcessId', 'SourceImage', 'SourceProcessId', 'GrantedAccess']",unknown,"['Data Destruction', 'Double Zero Destructor']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/double_zero_destructor']",['https://blog.talosintelligence.com/2022/03/threat-advisory-doublezero.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7aec015b-cd69-46c3-85ed-dac152056aa4/,Windows WinDBG Spawning AutoIt3,['T1059'],"The following analytic identifies instances of the WinDBG process spawning AutoIt3. This behavior may indicate malicious activity as AutoIt3 is often used by threat actors for scripting malicious automation. The search specifically looks for instances where the parent process name is 'windbg.exe' and the process name is 'autoit3.exe' or 'autoit*.exe'. During the triage process, it is recommended to review the file path for additional artifacts that may provide further insights into the event.",['TTP'],"October 31, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes  where Processes.parent_process_name=windbg.exe  AND (Processes.process_name IN (""autoit3.exe"", ""autoit*.exe"") OR Processes.original_file_name IN (""autoit3.exe"", ""autoit*.exe"")) by Processes.dest, Processes.user, Processes.parent_process_name, Processes.process_name, Processes.original_file_name, Processes.process, Processes.process_id, Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| eval matches_extension=if(match(process, ""\\.(au3
|a3x
|exe
|aut
|aup)$""), ""Yes"", ""No"") 
| search matches_extension=""Yes"" 
| `windows_windbg_spawning_autoit3_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.original_file_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives will only be present if the WinDBG process legitimately spawns AutoIt3. Filter as needed.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://github.com/PaloAltoNetworks/Unit42-timely-threat-intel/blob/main/2023-10-25-IOCs-from-DarkGate-activity.txt'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7b09db8a-5c20-11ec-9945-acde48001122/,Linux Java Spawning Shell,"['T1190', 'T1133']","The following analytic identifies the process name of Java, Apache, or Tomcat spawning a Linux shell. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell). The shells included in the macro are ""sh"", ""ksh"", ""zsh"", ""bash"", ""dash"", ""rbash"", ""fish"", ""csh', ""tcsh', ""ion"", ""eshell"". Upon triage, review parallel processes and command-line arguments to determine legitimacy.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=java OR Processes.parent_process_name=apache OR Processes.parent_process_name=tomcat `linux_shells` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_java_spawning_shell_filter`","['security_content_summariesonly', 'linux_shells', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Filtering may be required on internal developer build systems or classify assets as web facing and restrict the analytic based on asset type.,"['Data Destruction', 'Spring4Shell CVE-2022-22965', 'Hermetic Wiper', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/spring4shell_cve-2022-22965', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://blog.netlab.360.com/ten-families-of-malicious-samples-are-spreading-using-the-log4j2-vulnerability-now/', 'https://gist.github.com/olafhartong/916ebc673ba066537740164f7e7e1d72']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7b6c3fac-0c37-4efc-a85e-de88f42b6763/,Windows Odbcconf Load Response File,"['T1218.008', 'T1218']","The following analytic identifies the odbcconf.exe, Windows Open Database Connectivity utility, loading up a resource file. The file extension is arbitrary and may be named anything. The resource file itself may have different commands supported by Odbcconf to load up a DLL (REGSVR) on disk or additional commands. During triage, review file modifications and parallel processes.",['TTP'],"September 15, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where ((process_cmd_line LIKE ""%/f %"" OR process_cmd_line LIKE ""%-f %"") AND process_file_name=""odbcconf.exe"") AND process_cmd_line LIKE ""%.rsp%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may need to occur based on legitimate application usage. Filter as needed.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://strontic.github.io/xcyclopedia/library/odbcconf.exe-07FBA12552331355C103999806627314.html', 'https://twitter.com/redcanary/status/1541838407894171650?s=20&t=kp3WBPtfnyA3xW7D7wx0uw']","['Defense Evasion', 'Defense Evasion', 'Odbcconf', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/7b83f666-900c-11ec-a2d9-acde48001122/,Windows Raw Access To Master Boot Record Drive,"['T1561.002', 'T1561']","This analytic is to look for suspicious raw access read to drive where the master boot record is placed. This technique was seen in several attacks by adversaries or threat actor to wipe, encrypt or overwrite the master boot record code as part of their impact payload. This detection is a good indicator that there is a process try to read or write on MBR sector.",['TTP'],"June 13, 2023","`sysmon` EventCode=9 Device = \\Device\\Harddisk0\\DR0 NOT (Image IN(""*\\Windows\\System32\\*"", ""*\\Windows\\SysWOW64\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer Image Device ProcessGuid ProcessId EventDescription EventCode 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_raw_access_to_master_boot_record_drive_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'Image', 'Device', 'ProcessGuid', 'ProcessId', 'EventDescription', 'EventCode']",This event is really notable but we found minimal number of normal application from system32 folder like svchost.exe accessing it too. In this case we used 'system32' and 'syswow64' path as a filter for this detection.,"['CISA AA22-264A', 'WhisperGate', 'Graceful Wipe Out Attack', 'Data Destruction', 'Hermetic Wiper', 'Caddy Wiper', 'BlackByte Ransomware', 'NjRAT']","['https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/caddy_wiper', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/njrat']","['https://www.splunk.com/en_us/blog/security/threat-advisory-strt-ta02-destructive-software.html', 'https://www.crowdstrike.com/blog/technical-analysis-of-whispergate-malware/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Disk Structure Wipe', 'Disk Wipe', 'Impact', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7bc20606-5f40-11ec-a586-acde48001122/,Linux Possible Append Command To At Allow Config File,"['T1053.002', 'T1053']","The following analytic is designed to identify suspicious command lines that may append user entries to either /etc/at.allow or /etc/at.deny. These files can be exploited by malicious actors for persistence on a compromised Linux host by altering permissions for scheduled tasks using the at command.
In this context, an attacker can create a user or add an existing user to these configuration files to execute their malicious code through scheduled tasks. The detection of such anomalous behavior can serve as an effective indicator warranting further investigation to validate if the activity is indeed malicious or a false positive.",['Anomaly'],"May 26, 2022","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where Processes.process = ""*echo*"" AND Processes.process IN(""*/etc/at.allow"", ""*/etc/at.deny"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_append_command_to_at_allow_config_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/scheduled_tasks']","['https://linuxize.com/post/at-command-in-linux/', 'https://attack.mitre.org/techniques/T1053/001/']","['At', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7c025ef0-9e65-4c57-be39-1c13dbb1613e/,Windows Server Software Component GACUtil Install to GAC,"['T1505', 'T1505.004']","The following analytic identifies the Windows SDK utility - GACUtil.exe, being utilized to add a DLL into the Global Assembly Cache (GAC). Each computer where the Common Language Runtime is installed has a machine-wide code cache called the Global Assembly Cache. The Global Assembly Cache stores assemblies specifically designated to be shared by several applications on the computer. By adding a DLL to the GAC, this allows an adversary to call it via any other means across the operating systems. As outlined by Microsoft in their blog, it is not common to see this spawning from W3WP.exe, however, in a non-development environment it may not be common at all. Note that in order to utilize GACutil.exe, The Windows SDK must be installed, this is not a native binary.",['TTP'],"January 17, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=gacutil.exe Processes.process IN (""*-i *"",""*/i *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_server_software_component_gacutil_install_to_gac_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present if gacutil.exe is utilized day to day by developers. Filter as needed.,['IIS Components'],['https://research.splunk.com/stories/iis_components'],"['https://strontic.github.io/xcyclopedia/library/gacutil.exe-F2FE4DF74BD214EDDC1A658043828089.html', 'https://www.microsoft.com/en-us/security/blog/2022/12/12/iis-modules-the-evolution-of-web-shells-and-how-to-detect-them/', 'https://www.microsoft.com/en-us/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/', 'https://learn.microsoft.com/en-us/dotnet/framework/app-domains/gac']","['Endpoint', 'IIS Components', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7d4c618e-4716-11ec-951c-3e22fbd008af/,Remote Process Instantiation via WinRM and PowerShell Script Block,"['T1021', 'T1021.006']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of PowerShell with arguments utilized to start a process on a remote endpoint by abusing the WinRM protocol. Specifically, this search looks for the abuse of the Invoke-Command commandlet. Red Teams and adversaries alike may abuse WinRM for lateral movement and remote code execution.",['TTP'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText=""*Invoke-Command*"" AND ScriptBlockText=""*-ComputerName*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_winrm_and_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']","Administrators may leverage WinRM and Invoke-Command to start a process on remote systems for system administration or automation use cases. This activity is usually limited to a small set of hosts or users. In certain environments, tuning may not be possible.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/006/', 'https://pentestlab.blog/2018/05/15/lateral-movement-winrm/']","['Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/7d90f334-a482-11ec-908c-acde48001122/,Kerberos Service Ticket Request Using RC4 Encryption,"['T1558', 'T1558.001']","The following analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential Kerberos Service Ticket request related to a Golden Ticket attack. Adversaries who have obtained the Krbtgt account NTLM password hash may forge a Kerberos Granting Ticket (TGT) to obtain unrestricted access to an Active Directory environment. Armed with a Golden Ticket, attackers can request service tickets to move laterally and execute code on remote systems. Looking for Kerberos Service Ticket requests using the legacy RC4 encryption mechanism could represent the second stage of a Golden Ticket attack. RC4 usage should be rare on a modern network since Windows Vista & Windows Sever 2008 and newer support AES Kerberos encryption.\ Defenders should note that if an attacker does not leverage the NTLM password hash but rather the AES key to create a golden ticket, this detection may be bypassed.",['TTP'],"March 15, 2022","`wineventlog_security` EventCode=4769 Service_Name=""*$"" (Ticket_Options=0x40810000 OR Ticket_Options=0x40800000 OR Ticket_Options=0x40810010) Ticket_Encryption_Type=0x17 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, service, service_id, Ticket_Encryption_Type, Ticket_Options 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `kerberos_service_ticket_request_using_rc4_encryption_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'Ticket_Options', 'Ticket_Encryption_Type', 'dest', 'service', 'service_id']","Based on Microsoft documentation, legacy systems or applications will use RC4-HMAC as the default encryption for Kerberos Service Ticket requests. Specifically, systems before Windows Server 2008 and Windows Vista. Newer systems will use AES128 or AES256.","['Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://attack.mitre.org/techniques/T1558/001/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4769', 'https://adsecurity.org/?p=1515', 'https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a', 'https://en.hackndo.com/kerberos-silver-golden-tickets/']","['Credential Access', 'Credential Access', 'Golden Ticket', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/7de17d7a-c9d8-11eb-a812-acde48001122/,Allow Operation with Consent Admin,['T1548'],This analytic identifies a potential privilege escalation attempt to perform malicious task. This registry modification is designed to allow the Consent Admin to perform an operation that requires elevation without consent or credentials. We also found this in some attacker to gain privilege escalation to the compromise machine.,['TTP'],"March 29, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\Microsoft\\Windows\\CurrentVersion\\Policies\\System*"" Registry.registry_value_name = ConsentPromptBehaviorAdmin Registry.registry_value_data = ""0x00000000"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `allow_operation_with_consent_admin_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Ransomware', 'Windows Registry Abuse', 'Azorult']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/azorult']","['https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-gpsb/341747f5-6b5d-4d30-85fc-fa1cc04038d4', 'https://www.trendmicro.com/vinfo/no/threat-encyclopedia/malware/Ransom.Win32.MRDEC.MRA/']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7e03b682-3965-4598-8e91-a60a40a3f7e4/,Windows Scheduled Task Created Via XML,"['T1053.005', 'T1053']","The following analytic detects the creation of suspicious scheduled tasks in Windows, specifically tasks created using schtasks.exe with the -create flag and an XML parameter in the command-line. This technique is commonly employed by threat actors, adversaries, and red teamers to establish persistence or achieve privilege escalation on targeted hosts. Notably, malware like Trickbot and Winter-Vivern have been observed using XML files to create scheduled tasks. Monitoring and investigating this activity is crucial to mitigate potential security risks. It is important to be aware that scripts or administrators may trigger this analytic, leading to potential false positives. To minimize false positives, adjust the filter based on the parent process or application.
When a true positive is detected, it suggests an attacker's attempt to gain persistence or execute additional malicious payloads, potentially resulting in data theft, ransomware, or other damaging outcomes. During triage, review the source of the scheduled task, the command to be executed, and capture any relevant on-disk artifacts. Analyze concurrent processes to identify the source of the attack. This analytic enables analysts to detect and respond to potential threats early, mitigating the associated risks effectively.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe Processes.process=*create* Processes.process=""* /xml *"" by Processes.user  Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_guid Processes.process_id Processes.parent_process_guid Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_scheduled_task_created_via_xml_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.parent_process_id']","It is possible scripts or administrators may trigger this analytic. Filter as needed based on parent process, application.","['Winter Vivern', 'CISA AA23-347A', 'Scheduled Tasks']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/scheduled_tasks']","['https://twitter.com/_CERT_UA/status/1620781684257091584', 'https://cert.gov.ua/article/3761104']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7e3df743-b1d8-4631-8fa8-bd5819688876/,Detect Certipy File Modifications,"['T1649', 'T1560']",The following analytic identifies when the attacker tool Certipy is used to enumerate Active Directory Certificate Services (AD CS) environments. The default behavior of this toolkit drops a number of file uniquely named files or file extensions related to it's information gathering and exfiltration process.,['TTP'],"June 25, 2023","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime values(Processes.process_current_directory) as process_current_directory FROM datamodel=Endpoint.Processes where Processes.action=""allowed"" BY _time span=1h Processes.user Processes.dest Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.parent_process_name Processes.parent_process Processes.process_guid Processes.action 
|`drop_dm_object_name(Processes)` 
| join max=0 dest process_guid [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*_certipy.zip"", ""*_certipy.txt"", ""*_certipy.json"", ""*.ccache"") by Filesystem.file_create_time Filesystem.process_id Filesystem.process_guid Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` ] 
| fields firstTime lastTime user dest file_create_time file_name file_path parent_process_name parent_process process_name process_path process_current_directory process process_guid process_id 
| where isnotnull(file_name) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_certipy_file_modifications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Processes.action', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.process_guid', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']",Unknown,"['Windows Certificate Services', 'Data Exfiltration', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/windows_certificate_services', 'https://research.splunk.com/stories/data_exfiltration', 'https://research.splunk.com/stories/ingress_tool_transfer']",['https://github.com/ly4k/Certipy'],"['Archive Collected Data', 'Collection', 'Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/7e8458cc-acca-11eb-9e3f-acde48001122/,Modify ACL permission To Files Or Folder,['T1222'],This analytic identifies suspicious modification of ACL permission to a files or folder to make it available to everyone. This technique may be used by the adversary to evade ACLs or protected files access. This changes is commonly configured by the file or directory owner with appropriate permission. This behavior is a good indicator if this command seen on a machine utilized by an account with no permission to do so.,['Anomaly'],"March 17, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = ""cacls.exe"" OR Processes.process_name = ""icacls.exe"" OR Processes.process_name = ""xcacls.exe"") AND Processes.process = ""*/G*"" AND (Processes.process = ""* everyone:*""  OR Processes.process = ""* SYSTEM:*"" OR Processes.process = ""* S-1-1-0:*"") by Processes.parent_process_name Processes.process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `modify_acl_permission_to_files_or_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.process', 'Processes.process_id']",administrators may use this command. Filter as needed.,['XMRig'],['https://research.splunk.com/stories/xmrig'],['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7eb9c3d5-c98c-4088-acc5-8240bad15379/,GetCurrent User with PowerShell,['T1033'],This analytic looks for the execution of powerhsell.exe with command-line arguments that execute the GetCurrent method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*System.Security.Principal.WindowsIdentity* OR Processes.process=*GetCurrent()*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getcurrent_user_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/7ed272a4-9c77-11eb-af22-acde48001122/,Windows Multiple Users Failed To Authenticate From Host Using NTLM,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with 30 unique valid users using the NTLM protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using NTLM to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4776 is generated on the computer that is authoritative for the provided credentials. For domain accounts, the domain controller is authoritative. For local accounts, the local computer is authoritative. Error code 0xC000006A means: misspelled or bad password (the attempted user is a legitimate domain user).
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source workstation name and attempted user accounts.",['TTP'],"April 13, 2021","`wineventlog_security` EventCode=4776 TargetUserName!=*$ Status=0xC000006A 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, Workstation 
| where unique_accounts > 30 
| `windows_multiple_users_failed_to_authenticate_from_host_using_ntlm_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'Workstation']","A host failing to authenticate with multiple valid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems. If this detection triggers on a host other than a Domain Controller, the behavior could represent a password spraying attack against the host's local accounts.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/audit-credential-validation', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7f04349c-e30d-11eb-bc7f-acde48001122/,UAC Bypass MMC Load Unsigned Dll,"['T1548.002', 'T1548', 'T1218.014']",This search is to detect a suspicious loaded unsigned dll by MMC.exe application. This technique is commonly seen in attacker that tries to bypassed UAC feature or gain privilege escalation. This is done by modifying some CLSID registry that will trigger the mmc.exe to load the dll path,['TTP'],"July 12, 2021","`sysmon` EventCode=7  ImageLoaded = ""*.dll"" Image = ""*\\mmc.exe"" Signed=false Company != ""Microsoft Corporation"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded Signed ProcessId OriginalFileName dest EventCode Company 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `uac_bypass_mmc_load_unsigned_dll_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'Signed', 'ProcessId', 'OriginalFileName', 'dest', 'EventCode', 'Company']",unknown. all of the dll loaded by mmc.exe is microsoft signed dll.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],['https://offsec.almond.consulting/UAC-bypass-dotnet.html'],"['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'MMC', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/7feb7972-7ac3-11eb-bac8-acde48001122/,Suspicious Scheduled Task from Public Directory,"['T1053.005', 'T1053']","The following analytic, ""Suspicious Scheduled Task from Public Directory"", detects the registration of scheduled tasks aimed to execute a binary or script from public directories, a behavior often associated with malware deployment. It utilizes the Sysmon Event ID 1 data source, searching for instances where schtasks.exe is connected with the directories users\public, \programdata\, or \windows\temp and involves the /create command.
The registration of such scheduled tasks in public directories could suggest that an attacker is trying to maintain persistence or execute malicious scripts. If confirmed as a true positive, this could lead to data compromise, unauthorized access, and potential lateral movement within the network.",['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process=*\\users\\public\\* OR Processes.process=*\\programdata\\* OR Processes.process=*windows\\temp*)  Processes.process=*/create* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `suspicious_scheduled_task_from_public_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.parent_process_id']","The main source of false positives could be the legitimate use of scheduled tasks from these directories. Careful tuning of this search may be necessary to suit the specifics of your environment, reducing the rate of false positives.","['Azorult', 'Ryuk Ransomware', 'Scheduled Tasks', 'Ransomware', 'Windows Persistence Techniques', 'Living Off The Land', 'DarkCrystal RAT', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://attack.mitre.org/techniques/T1053/005/'],"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/801ad9e4-8bfb-11eb-8b31-acde48001122/,CertUtil Download With VerifyCtl and Split Arguments,['T1105'],"Certutil.exe may download a file from a remote destination using -VerifyCtl. This behavior does require a URL to be passed on the command-line. In addition, -f (force) and -split (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for certutil.exe to contact public IP space. \ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question. Using -VerifyCtl, the file will either be written to the current working directory or %APPDATA%\..\LocalLow\Microsoft\CryptnetUrlCache\Content\&lt;hash&gt;.",['TTP'],"February 3, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` (Processes.process=*verifyctl* Processes.process=*split*) OR Processes.process=*verifyctl* by Processes.dest Processes.user Processes.original_file_name Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `certutil_download_with_verifyctl_and_split_arguments_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives in most environments, however tune as needed based on parent-child relationship or network connection.","['Ingress Tool Transfer', 'DarkSide Ransomware', 'Living Off The Land']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1105/', 'https://www.hexacorn.com/blog/2020/08/23/certutil-one-more-gui-lolbin/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732443(v=ws.11)#-verifyctl', 'https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/80630ff4-8e4c-11eb-aab5-acde48001122/,BITSAdmin Download File,"['T1197', 'T1105']","The following query identifies Microsoft Background Intelligent Transfer Service utility bitsadmin.exe using the transfer parameter to download a remote object. In addition, look for download or upload on the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Note that the network connection or file modification events related will not spawn or create from bitsadmin.exe, but the artifacts will appear in a parallel process of svchost.exe with a command-line similar to svchost.exe -k netsvcs -s BITS. It's important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can use bitsadmin /list /verbose to list out the jobs during investigation.",['TTP'],"November 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_bitsadmin` Processes.process IN (""*transfer*"", ""*addfile*"") by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `bitsadmin_download_file_filter`","['security_content_summariesonly', 'process_bitsadmin', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives, however it may be required to filter based on parent process name or network connection.","['Ingress Tool Transfer', 'BITS Jobs', 'DarkSide Ransomware', 'Living Off The Land', 'Flax Typhoon']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/bits_jobs', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/flax_typhoon']","['https://github.com/redcanaryco/atomic-red-team/blob/8eb52117b748d378325f7719554a896e37bccec7/atomics/T1105/T1105.md#atomic-test-9---windows---bitsadmin-bits-download', 'https://github.com/redcanaryco/atomic-red-team/blob/bc705cb7aaa5f26f2d96585fac8e4c7052df0ff9/atomics/T1197/T1197.md', 'https://docs.microsoft.com/en-us/windows/win32/bits/bitsadmin-tool', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/']","['BITS Jobs', 'Command And Control', 'Defense Evasion', 'Endpoint', 'Ingress Tool Transfer', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/80879283-c30f-44f7-8471-d1381f6d437a/,GetCurrent User with PowerShell Script Block,['T1033'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the GetCurrent method of the WindowsIdentity .NET class. This method returns an object that represents the current Windows user. Red Teams and adversaries may leverage this method to identify the logged user on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*[System.Security.Principal.WindowsIdentity]*""  ScriptBlockText = ""*GetCurrent()*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getcurrent_user_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'Path', 'Message', 'OpCode', 'ComputerName', 'User', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1033/', 'https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.windowsidentity.getcurrent?view=net-6.0&viewFallbackFrom=net-5.0']","['Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/809b31d2-5462-11eb-ae93-0242ac130002/,BCDEdit Failure Recovery Modification,['T1490'],This search looks for flags passed to bcdedit.exe modifications to the built-in Windows error recovery boot configurations. This is typically used by ransomware to prevent recovery.,['TTP'],"December 21, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = bcdedit.exe Processes.process=""*recoveryenabled*"" (Processes.process=""* no*"") by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `bcdedit_failure_recovery_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",Administrators may modify the boot configuration.,"['Ryuk Ransomware', 'Ransomware']","['https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.md#atomic-test-4---windows---disable-windows-recovery-console-repair'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/80b22836-5091-4944-80ee-f733ac443f4f/,Linux Make Privilege Escalation,"['T1548.003', 'T1548']","The Linux make command is used to build and maintain groups of programs and files from the source code. In Linux, it is one of the most frequently used commands by the developers. It assists developers to install and compile many utilities from the terminal. If sudo right is given to make utility for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*make*-s*"" AND Processes.process=""*--eval*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_make_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/make/', 'https://www.javatpoint.com/linux-make-command']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/80f9d53e-9ca1-11eb-b0d6-acde48001122/,Windows Multiple Users Remotely Failed To Authenticate From Host,"['T1110.003', 'T1110']","The following analytic identifies a source host failing to authenticate against a remote host with 30 unique users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4625 documents each and every failed attempt to logon to the local computer. This event generates on domain controllers, member servers, and workstations. Logon Type 3 describes an remote authentication attempt.
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the host that is the target of the password spraying attack. This could be a domain controller as well as a member server or workstation.
The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",['TTP'],"April 13, 2021","`wineventlog_security` EventCode=4625 Logon_Type=3 IpAddress!=""-"" 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress, Computer 
| rename Computer as dest
| where unique_accounts > 30 
| `windows_multiple_users_remotely_failed_to_authenticate_from_host_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'TargetUserName', 'Computer', 'IpAddress']","A host failing to authenticate with multiple valid users against a remote host is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, remote administration tools, missconfigyred systems, etc.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4625', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/80ffaede-1f12-49d5-a86e-b4b599b68b3c/,Windows Root Domain linked policies Discovery,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the [Adsisearcher] type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage [Adsisearcher] to enumerate root domain linked policies for situational awareness and Active Directory Discovery.,['Anomaly'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*[adsisearcher]*"" ScriptBlockText = ""*.SearchRooT*"" ScriptBlockText = ""*.gplink*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| rename Computer as dest, user_id as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_root_domain_linked_policies_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'user_id']",Administrators or power users may use this command for troubleshooting.,"['Data Destruction', 'Active Directory Discovery', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://medium.com/@pentesttas/discover-hidden-gpo-s-on-active-directory-using-ps-adsi-a284b6814c81']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/81263de4-160a-11ec-944f-acde48001122/,Non Chrome Process Accessing Chrome Default Dir,"['T1555', 'T1555.003']","This search is to detect an anomaly event of a non-chrome process accessing the files in chrome user default folder. This folder contains all the sqlite database of the chrome browser related to users login, history, cookies and etc. Most of the RAT, trojan spy as well as FIN7 jssloader try to parse the those sqlite database to collect information on the compromised host. This SACL Event (4663) need to be enabled to tthe firefox profile directory to be eable to use this. Since you monitoring this access to the folder,  we observed noise that needs to be filter out and hence added sqlite db browser and explorer .exe to make this detection more stable.",['Anomaly'],"December 27, 2023","`wineventlog_security` EventCode=4663 NOT (process_name IN (""*\\chrome.exe"", ""*\\explorer.exe"", ""*sql*"")) Object_Name=""*\\Google\\Chrome\\User Data\\Default*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Object_Name Object_Type process_name Access_Mask Accesses process_id EventCode dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `non_chrome_process_accessing_chrome_default_dir_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'Object_Name', 'Object_Type', 'process_name', 'Access_Mask', 'Accesses', 'process_id', 'EventCode', 'dest', 'user']",other browser not listed related to firefox may catch by this rule.,"['Remcos', 'NjRAT', 'Warzone RAT', '3CX Supply Chain Attack', 'RedLine Stealer', 'FIN7', 'DarkGate Malware', 'AgentTesla', 'CISA AA23-347A', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/3cx_supply_chain_attack', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",N/A,"['Credential Access', 'Credential Access', 'Credentials from Password Stores', 'Credentials from Web Browsers', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8148c29c-c952-11eb-9255-acde48001122/,Detect Mimikatz With PowerShell Script Block Logging,"['T1003', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. 
This analytic identifies common Mimikatz functions that may be identified in the script block, including mimikatz. This will catch the most basic use cases for Pass the Ticket, Pass the Hash and -DumprCreds. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText IN (*mimikatz*, *-dumpcr*, *sekurlsa::pth*, *kerberos::ptt*, *kerberos::golden*) 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_mimikatz_with_powershell_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives should be limited as the commands being identifies are quite specific to EventCode 4104 and Mimikatz. Filter as needed.,"['Malicious PowerShell', 'Hermetic Wiper', 'Sandworm Tools', 'CISA AA22-264A', 'CISA AA22-320A', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Credential Access', 'Execution', 'OS Credential Dumping', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/81f1dce0-0f18-11ec-a5d7-acde48001122/,Change To Safe Mode With Network Config,['T1490'],This search is to detect a suspicious bcdedit commandline to configure the host to boot in safe mode with network config. This technique was seen in blackMatter ransomware where it force the compromised host to boot in safe mode to continue its encryption and bring back to normal boot using bcdedit deletevalue command. This TTP can be a good alert for host that booted from safe mode forcefully since it need to modify the boot configuration to bring it back to normal.,['TTP'],"September 6, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = bcdedit.exe Processes.process=""*/set*"" Processes.process=""*{current}*""  Processes.process=""*safeboot*"" Processes.process=""*network*"" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
|`drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `change_to_safe_mode_with_network_config_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.dest', 'Processes.user']",unknown,['BlackMatter Ransomware'],['https://research.splunk.com/stories/blackmatter_ransomware'],['https://news.sophos.com/en-us/2021/08/09/blackmatter-ransomware-emerges-from-the-shadow-of-darkside/'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/823136f2-d755-4b6d-ae04-372b486a5808/,First Time Seen Running Windows Service,"['T1569', 'T1569.002']",This search looks for the first and last time a Windows service is seen running in your environment. This table is then cached.,['Anomaly'],"July 21, 2020","`wineventlog_system` EventCode=7036 
| rex field=Message ""The (?<service>[-\(\)\s\w]+) service entered the (?<state>\w+) state"" 
| where state=""running"" 
| lookup previously_seen_running_windows_services service as service OUTPUT firstTimeSeen 
| where isnull(firstTimeSeen) OR firstTimeSeen > relative_time(now(), `previously_seen_windows_services_window`) 
| table _time dest service 
| `first_time_seen_running_windows_service_filter`","['wineventlog_system', 'previously_seen_windows_services_window']","['_time', 'EventCode', 'Message', 'dest']",A previously unseen service is not necessarily malicious. Verify that the service is legitimate and that was installed by a legitimate process.,"['Windows Service Abuse', 'Orangeworm Attack Group', 'NOBELIUM Group']","['https://research.splunk.com/stories/windows_service_abuse', 'https://research.splunk.com/stories/orangeworm_attack_group', 'https://research.splunk.com/stories/nobelium_group']",N/A,"['Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/824dd598-71be-4203-bc3b-024f4cda340e/,Windows Modify Registry Regedit Silent Reg Import,['T1112'],The following analytic identifies modification of Windows registry using regedit.exe application with silent mode parameter. regedit.exe windows application is commonly used as GUI app to check or modify registry. This application is also has undocumented command-line parameter and one of those are silent mode parameter that performs action without stopping for confirmation with dialog box. Importing registry from .reg files need to monitor in a production environment since it can be used adversaries to import RMS registry in compromised host.,['Anomaly'],"June 24, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""regedit.exe"" OR Processes.original_file_name=""regedit.exe"") AND Processes.process=""* /s *"" AND Processes.process=""*.reg*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_regedit_silent_reg_import_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators may execute this command that may cause some false positive. Filter as needed.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://www.techtarget.com/searchwindowsserver/tip/Command-line-options-for-Regeditexe']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/827409a1-5393-4d8d-8da4-bbb297c262a7/,Windows MSIExec With Network Connections,['T1218.007'],"The following analytic identifies MSIExec with any network connection over port 443 or 80. Typically, MSIExec does not perform network communication to the internet.",['TTP'],"June 16, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_msiexec` by _time Processes.user Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port IN (""80"",""443"") by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port All_Traffic.dest_ip 
| `drop_dm_object_name(All_Traffic)` ] 
| table _time user dest parent_process_name process_name process_path process process_id dest_port dest_ip 
| `windows_msiexec_with_network_connections_filter`","['security_content_summariesonly', 'process_msiexec', 'security_content_ctime']","['_time', 'Processes.process_id', 'Processes.process_name', 'Processes.dest', 'Processes.process_path', 'Processes.process', 'Processes.parent_process_name', 'All_Traffic.process_id', 'All_Traffic.dest', 'All_Traffic.dest_port', 'All_Traffic.dest_ip']",False positives will be present and filtering is required.,['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Endpoint', 'Msiexec', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/827af04b-0d08-479b-9b84-b7d4644e4b80/,Windows Service Stop Via Net  and SC Application,['T1489'],This analytic identifies suspicious attempts to stop services on a system using either net.exe or sc.exe. This technique is used by adversaries to terminate security services or other related services to continue their objective and evade detections. This technique is also commonly used by ransomware threat actors to successfully encrypt databases or files being processed or used by Windows OS Services.,['Anomaly'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_net` OR  Processes.process_name = ""sc.exe"" OR Processes.original_file_name= ""sc.exe"" AND Processes.process=""*stop*"" by  Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_stop_via_net__and_sc_application_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Windows OS or software may stop and restart services due to some critical update.,"['Prestige Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']",['https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/'],"['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8281ce42-5c50-11ec-82d2-acde48001122/,Java Class File download by Java User Agent,['T1190'],The following analytic identifies a Java user agent performing a GET request for a .class file from the remote site. This is potentially indicative of exploitation of the Java application and may be related to current event CVE-2021-44228 (Log4Shell).,['TTP'],"December 13, 2021","| tstats count from datamodel=Web where Web.http_user_agent=""*Java*"" Web.http_method=""GET"" Web.url=""*.class*"" by Web.http_user_agent Web.http_method, Web.url,Web.url_length Web.src, Web.dest 
| `drop_dm_object_name(""Web"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `java_class_file_download_by_java_user_agent_filter`",['security_content_ctime'],"['_time', 'Web.http_method', 'Web.url', 'Web.url_length', 'Web.src', 'Web.dest', 'Web.http_user_agent']","Filtering may be required in some instances, filter as needed.",['Log4Shell CVE-2021-44228'],['https://research.splunk.com/stories/log4shell_cve-2021-44228'],['https://arstechnica.com/information-technology/2021/12/as-log4shell-wreaks-havoc-payroll-service-reports-ransomware-attack/'],"['Exploit Public-Facing Application', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web']",['Endpoint']
https://research.splunk.com/endpoint/8309c3a8-4d34-48ae-ad66-631658214653/,Windows Kerberos Local Successful Logon,['T1558'],"The following analytic identifies a local successful authentication event on a Windows endpoint using the Kerberos package. The target user security identified will be set to the built-in local Administrator account, along with the remote address as localhost - 127.0.0.1. This may be indicative of a kerberos relay attack. Upon triage, review for recently ran binaries on disk. In addition, look for new computer accounts added to Active Directory and other anomolous AD events.",['TTP'],"April 27, 2022","`wineventlog_security`  EventCode=4624 Logon_Type=3 Authentication_Package=Kerberos action=success src_ip=127.0.0.1 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, subject, action, Security_ID, user, Account_Name, src_ip 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_kerberos_local_successful_logon_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'subject', 'action', 'Security_ID', 'user', 'Account_Name', 'src_ip']","False positives are possible, filtering may be required to restrict to workstations vs domain controllers. Filter as needed.","['Active Directory Kerberos Attacks', 'Local Privilege Escalation With KrbRelayUp']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/local_privilege_escalation_with_krbrelayup']",['https://github.com/Dec0ne/KrbRelayUp'],"['Authentication', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/83317b08-155b-11ec-8e00-acde48001122/,Wmic Group Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of wmic.exe enumerating local groups on the endpoint. 
Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe (Processes.process=""*group get name*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `wmic_group_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/83458004-db60-4170-857d-8572f16f070b/,Windows Admon Default Group Policy Object Modified,"['T1484', 'T1484.001']","The following analytic leverages Splunks Admon to identify the modification of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects Default Domain Controllers Policy and Default Domain Policy. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the modification of the default GPOs.",['TTP'],"March 29, 2023","`admon` admonEventType=Update objectCategory=""CN=Group-Policy-Container,CN=Schema,CN=Configuration,DC=*"" (displayName=""Default Domain Policy"" OR displayName=""Default Domain Controllers Policy"") 
| stats min(_time) as firstTime max(_time) as lastTime values(gPCFileSysPath) by dcName, displayName 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_admon_default_group_policy_object_modified_filter`","['admon', 'security_content_ctime']","['_time', 'admonEventType', 'objectCategory', 'displayName', 'gPCFileSysPath', 'dcName']","The default Group Policy Objects within an AD network may be legitimately updated for administrative operations, filter as needed.","['Active Directory Privilege Escalation', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716', 'https://docs.splunk.com/Documentation/SplunkCloud/8.1.2101/Data/MonitorActiveDirectory']","['Defense Evasion', 'Defense Evasion', 'Domain Policy Modification', 'Group Policy Modification', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/834ba832-ad89-11eb-937d-acde48001122/,Hide User Account From Sign-In Screen,"['T1562.001', 'T1562']",This analytic identifies a suspicious registry modification to hide a user account on the Windows Login screen. This technique was seen in some tradecraft where the adversary will create a hidden user account with Admin privileges in login screen to avoid noticing by the user that they already compromise and to persist on that said machine.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\Userlist*"" AND Registry.registry_value_data = ""0x00000000"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `hide_user_account_from_sign_in_screen_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Unknown. Filter as needed.,"['XMRig', 'Windows Registry Abuse', 'Azorult', 'Warzone RAT']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/warzone_rat']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8351340b-ac0e-41ec-8b07-dd01bf32d6ea/,Windows Hijack Execution Flow Version Dll Side Load,"['T1574.001', 'T1574']",This analytic is to detect a process loading version.dll that is not in %windir%\system32 or %windir%\syswow64 dir path. This event is seen in ransomware and APT malware that executes malicious version.dll placed in the same folder of onedrive application that will execute that module. This technique is known to be DLL side loading. This technique was used to execute an agent of Brute Ratel C4 red teaming tools to serve as remote admin tool to collect and compromise target host.,['Anomaly'],"August 24, 2022","`sysmon` EventCode=7 ImageLoaded = ""*\\version.dll"" AND (Signed = ""false"" OR NOT(ImageLoaded IN(""*\\windows\\system32*"",  ""*\\windows\\syswow64\\*""))) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_hijack_execution_flow_version_dll_side_load_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",unknown,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],['https://www.mdsec.co.uk/2022/08/part-3-how-i-met-your-beacon-brute-ratel/'],"['Defense Evasion', 'Defense Evasion', 'DLL Search Order Hijacking', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/83776de4-921a-11eb-868a-acde48001122/,Disabling FolderOptions Windows Feature,"['T1562.001', 'T1562']","This search is to identify registry modification to disable folder options feature of windows to show hidden files, file extension and etc. This technique used by malware in combination if disabling show hidden files feature to hide their files and also to hide the file extension to lure the user base on file icons or fake file extensions.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoFolderOptions"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_folderoptions_windows_feature_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/839ab790-a60a-4f81-bfb3-02567063f615/,Linux Deletion of SSL Certificate,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a deletion of ssl certificate in a linux machine. attacker may delete or modify ssl certificate to impair some security features or act as defense evasion in compromised linux machine. This Anomaly can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path = ""/etc/ssl/certs/*"" Filesystem.file_path IN (""*.pem"", ""*.crt"") by _time span=1h Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_deletion_of_ssl_certificate_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,['Acidrain'],['https://research.splunk.com/stories/acidrain'],['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8467d8cd-b0f9-46fa-ac84-a30ad138983e/,Windows Impair Defense Disable Defender Firewall And Network,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable firewall and network protection section settings of windows security. The specific impact of this change depends on the context and the purpose behind modifying this registry value. In general, setting UILockdown to 1 might imply enforcing a restriction or lockdown in the user interface (UI) related to firewall and network protection settings within Windows Defender Security Center. This could potentially restrict users from modifying certain firewall or network protection settings through the UI.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender Security Center\\Firewall and network protection\\UILockdown"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_defender_firewall_and_network_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8470d755-0c13-45b3-bd63-387a373c10cf/,Reg exe Manipulating Windows Services Registry Keys,"['T1574.011', 'T1574']",The search looks for reg.exe modifying registry keys that define Windows services and their configurations.,['TTP'],"November 26, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name values(Processes.user) as user FROM datamodel=Endpoint.Processes where Processes.process_name=reg.exe Processes.process=*reg* Processes.process=*add* Processes.process=*Services* by Processes.process_id Processes.dest Processes.process 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `reg_exe_manipulating_windows_services_registry_keys_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.user', 'Processes.process', 'Processes.process_id', 'Processes.dest']","It is unusual for a service to be created or modified by directly manipulating the registry. However, there may be legitimate instances of this behavior. It is important to validate and investigate, as appropriate.","['Windows Service Abuse', 'Windows Persistence Techniques', 'Living Off The Land']","['https://research.splunk.com/stories/windows_service_abuse', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/living_off_the_land']",N/A,"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Services Registry Permissions Weakness', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8567da9e-47f0-11ec-99a9-acde48001122/,Windows DISM Remove Defender,"['T1562.001', 'T1562']","The following analytic identifies the use of the Windows Disk Image Utility, dism.exe, to remove Windows Defender. Adversaries may use dism.exe to disable Defender before completing their objective.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=dism.exe (Processes.process=""*/online*"" AND Processes.process=""*/disable-feature*"" AND Processes.process=""*Windows-Defender*"" AND Processes.process=""*/remove*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_dism_remove_defender_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Some legitimate administrative tools leverage dism.exe to manipulate packages and features of the operating system. Filter as needed.,"['Windows Defense Evasion Tactics', 'CISA AA23-347A']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/85bc3f30-ca28-11eb-bd21-acde48001122/,PowerShell Loading DotNET into Memory via Reflection,"['T1059', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. 
This analytic identifies the use of PowerShell loading .net assembly via reflection. This is commonly found in malicious PowerShell usage, including Empire and Cobalt Strike. In addition, the load( value may be modifed by removing ( and it will identify more events to review. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"April 5, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*[system.reflection.assembly]::load(*"",""*[reflection.assembly]*"", ""*reflection.assembly*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_loading_dotnet_into_memory_via_reflection_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives should be limited as day to day scripts do not use this method.,"['Winter Vivern', 'AgentTesla', 'AsyncRAT', 'Hermetic Wiper', 'Malicious PowerShell', 'Data Destruction']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction']","['https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly?view=net-5.0', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/85facebe-c382-11eb-9c3e-acde48001122/,Revil Common Exec Parameter,['T1204'],This analytic identifies suspicious commandline parameter that are commonly used by REVIL ransomware to encrypts the compromise machine.,['TTP'],"June 2, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""* -nolan *"" OR Processes.process = ""* -nolocal *"" OR Processes.process = ""* -fast *"" OR Processes.process = ""* -full *"" by Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `revil_common_exec_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process_guid']",third party tool may have same command line parameters as revil ransomware.,"['Ransomware', 'Revil Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware']","['https://krebsonsecurity.com/2021/05/a-closer-look-at-the-darkside-ransomware-gang/', 'https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-atr-analyzes-sodinokibi-aka-revil-ransomware-as-a-service-what-the-code-tells-us/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/85fae8fa-0427-11ec-8b78-acde48001122/,GetLocalUser with PowerShell,"['T1087', 'T1087.001']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for local users. The Get-LocalUser commandlet is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"August 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-LocalUser*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getlocaluser_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']",['_time'],Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/868ee0e4-52ab-484a-833a-6d85b7c028d0/,GetDomainController with PowerShell,['T1018'],"This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. Get-DomainController is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-DomainController*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getdomaincontroller_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainController/']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/869ba261-c272-47d7-affe-5c0aa85c93d6/,Headless Browser Usage,['T1564.003'],"The following hunting analytic is designed to detect the usage of headless browsers in an organization. Headless browsers are web browsers without a graphical user interface and are operated via a command line interface or network requests. They are often used for automating tasks but can also be utilized by adversaries for malicious activities such as web scraping, automated testing, and performing actions on web pages without detection. The detection is based on the presence of ""–headless"" and ""–disable-gpu"" command line arguments which are commonly used in headless browsing.",['Hunting'],"September 8, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*--headless*"" AND Processes.process=""*--disable-gpu*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `headless_browser_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'sourcetype']",This hunting analytic is meant to assist with baselining and understanding headless browsing in use. Filter as needed.,['Forest Blizzard'],['https://research.splunk.com/stories/forest_blizzard'],['https://cert.gov.ua/article/5702579'],"['Defense Evasion', 'Endpoint', 'Hidden Window', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/86dc8176-6e6c-42d6-9684-5444c6557ab3/,Windows PowerView Constrained Delegation Discovery,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify commandlets used by the PowerView hacking tool leveraged to discover Windows endpoints with Kerberos Constrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,['TTP'],"December 27, 2023","`powershell` EventCode=4104 (Message = ""*Get-DomainComputer*"" OR Message = ""*Get-NetComputer*"") AND (Message = ""*-TrustedToAuth*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powerview_constrained_delegation_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may leverage PowerView for system management or troubleshooting.,"['CISA AA23-347A', 'Rhysida Ransomware', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://attack.mitre.org/techniques/T1018/', 'https://adsecurity.org/?p=1667', 'https://docs.microsoft.com/en-us/defender-for-identity/cas-isp-unconstrained-kerberos', 'https://www.guidepointsecurity.com/blog/delegating-like-a-boss-abusing-kerberos-delegation-in-active-directory/', 'https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/constrained-delegation', 'https://www.cyberark.com/resources/threat-research-blog/weakness-within-kerberos-delegation']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/872e3063-0fc4-4e68-b2f3-f2b99184a708/,GetAdGroup with PowerShell,"['T1069', 'T1069.002']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for domain groups. The Get-AdGroup commandlnet is used to return a list of all groups available in a Windows Domain. Red Teams and adversaries alike may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-AdGroup*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadgroup_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8776d79c-d26e-11eb-9a56-acde48001122/,Delete A Net User,['T1531'],"This analytic will detect a suspicious net.exe/net1.exe command-line to delete a user on a system. This technique may be use by an administrator for legitimate purposes, however this behavior has been used in the wild to impair some user or deleting adversaries tracks created during its lateral movement additional systems. During triage, review parallel processes for additional behavior. Identify any other user accounts created before or after.",['Anomaly'],"March 17, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%user%"" AND process_cmd_line LIKE ""%/delete%"" AND (process_file_name IN (""net.exe"", ""net1.exe"")) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators or scripts may delete user accounts via this technique. Filter as needed.,"['XMRig', 'Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Account Access Removal', 'Impact', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/879c4330-b3e0-11eb-b1b1-acde48001122/,SLUI Spawning a Process,"['T1548.002', 'T1548']","The following analytic identifies the Microsoft Software Licensing User Interface Tool, slui.exe, spawning a child process. This behavior is associated with publicly known UAC bypass. slui.exe is commonly associated with software updates and is most often spawned by svchost.exe. The slui.exe process should not have child processes, and any processes spawning from it will be running with elevated privileges. During triage, review the child process and additional parallel processes. Identify any file modifications that may have lead to the bypass.",['TTP'],"May 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=slui.exe by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `slui_spawning_a_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Certain applications may spawn from slui.exe that are legitimate. Filtering will be needed to ensure proper monitoring.,"['DarkSide Ransomware', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']","['https://www.exploit-db.com/exploits/46998', 'https://www.rapid7.com/db/modules/exploit/windows/local/bypassuac_sluihijack/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/87ac670e-bbfd-44ca-b566-44e9f835518d/,Steal or Forge Authentication Certificates Behavior Identified,['T1649'],"This correlation rule focuses on detecting potential threats associated with MITRE ATT&CK T1649 (Steal or Forge Authentication Certificates). The rule is designed to identify instances where 5 or more analytics related to Windows Certificate Services analytic story that are triggered within a specified time frame, which may indicate a potential attack in progress. By aggregating these analytics, security teams can swiftly respond to and investigate any suspicious activities, enhancing their ability to protect critical assets and prevent unauthorized access to sensitive information.",['Correlation'],"May 1, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories=""Windows Certificate Services"" All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 5 
| `steal_or_forge_authentication_certificates_behavior_identified_filter`","['security_content_summariesonly', 'security_content_ctime']","['All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']",False positives may be present based on automated tooling or system administrators. Filter as needed.,"['Windows Certificate Services', 'https://research.splunk.com/stories/windows_certificate_services/']","['https://research.splunk.com/stories/windows_certificate_services', 'https://research.splunk.com/stories/windows_certificate_services/']","['https://research.splunk.com/stories/windows_certificate_services/', 'https://attack.mitre.org/techniques/T1649/']","['Credential Access', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/89275e7e-0548-11ec-bf75-acde48001122/,Get-DomainTrust with PowerShell Script Block,['T1482'],"The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies Get-DomainTrust from PowerView in order to gather domain trust information. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"May 2, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*get-domaintrust*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domaintrust_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",It is possible certain system management frameworks utilize this command to gather trust information.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://blog.harmj0y.net/redteaming/a-guide-to-attacking-domain-trusts/', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Discovery', 'Domain Trust Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8943b567-f14d-4ee8-a0bb-2121d4ce3184/,Dump LSASS via comsvcs DLL,"['T1003.001', 'T1003']","The following analytic detects the behavior of dumping credentials from memory, a tactic commonly used by adversaries to exploit the Local Security Authority Subsystem Service (LSASS) in Windows, which manages system-level authentication. The detection is made by monitoring logs with process information from endpoints and identifying instances where the rundll32 process is used in conjunction with the comsvcs.dll and MiniDump. This indicates potential LSASS dumping attempts used by threat actors to obtain valuable credentials. The detection is important because credential theft can lead to broader system compromise, persistence, lateral movement, and escalated privileges. No legitimate use of this technique has been identified yet. This behavior is often part of more extensive attack campaigns and is associated with numerous threat groups that use the stolen credentials to access sensitive information or systems, leading to data theft, ransomware attacks, or other damaging outcomes. False positives can occur since legitimate uses of the LSASS process can cause benign activities to be flagged. Next steps include reviewing the processes involved in the LSASS dumping attempt after triage and inspecting any relevant on-disk artifacts and concurrent processes to identify the attack source.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*comsvcs.dll* Processes.process=*MiniDump* by Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `dump_lsass_via_comsvcs_dll_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",None identified.,"['Industroyer2', 'HAFNIUM Group', 'CISA AA22-264A', 'Prestige Ransomware', 'Credential Dumping', 'CISA AA22-257A', 'Living Off The Land', 'Suspicious Rundll32 Activity', 'Data Destruction', 'Volt Typhoon', 'Flax Typhoon']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/flax_typhoon']","['https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/', 'https://twitter.com/SBousseaden/status/1167417096374050817', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Credential Access', 'Credential Access', 'Endpoint', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/894f48ea-8d85-4dcd-9132-c66cdb407c9b/,Windows Apache Benchmark Binary,['T1059'],"The following analytic identifies a default behavior of a MetaSploit payload. MetaSploit uses Apache Benchmark to generate payloads. The payloads contain standard artifacts including ""Apache Benchmark"" and the original file name is always ab.exe. During triage, review the process and it's path. It is possible network connections spawned from it. Review parallel processes for further behaviors.",['Anomaly'],"November 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.original_file_name=ab.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_apache_benchmark_binary_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited as there is a small subset of binaries that contain the original file name of ab.exe. Filter as needed.,['MetaSploit'],['https://research.splunk.com/stories/metasploit'],['https://seclists.org/metasploit/2013/q3/13'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/894fc43e-6f50-47d5-a68b-ee9ee23e18f4/,System User Discovery With Whoami,['T1033'],This analytic looks for the execution of whoami.exe without any arguments. This windows native binary prints out the current logged user. Red Teams and adversaries alike may leverage whoami.exe to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""whoami.exe"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_user_discovery_with_whoami_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery', 'Rhysida Ransomware', 'Qakbot', 'CISA AA23-347A']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/898debf4-3021-11ec-ba7c-acde48001122/,Disable Defender Spynet Reporting,"['T1562.001', 'T1562']","This analytic is intended to detect a suspicious modification of registry to disable Windows Defender feature. This technique is intended to bypass or evade detection from Windows Defender AV product, specifically the spynet reporting for Defender telemetry.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Microsoft\\Windows Defender\\SpyNet*"" Registry.registry_value_name = SpynetReporting Registry.registry_value_data = 0x00000000) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.user Registry.dest  
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_spynet_reporting_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['Azorult', 'Windows Registry Abuse', 'Qakbot', 'IcedID', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/89dad3ee-57ec-43dc-9044-131c4edd663f/,Windows Service Create SliverC2,"['T1569', 'T1569.002']","When an adversary utilizes SliverC2 to laterally move with the Psexec module, it will create a service with the name and description of ""Sliver"" and ""Sliver Implant"". Note that these may be easily changed and are specific to only SliverC2. We have also created the same regex as Microsoft has outlined to attempt to capture the suspicious service path (regex101 reference).",['TTP'],"March 3, 2023","`wineventlog_system` EventCode=7045 ServiceName=""sliver"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ImagePath ServiceName ServiceType 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_create_sliverc2_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'Computer', 'ServiceName', 'ImagePath', 'ServiceType']","False positives should be limited, but if another service out there is named Sliver, filtering may be needed.",['BishopFox Sliver Adversary Emulation Framework'],['https://research.splunk.com/stories/bishopfox_sliver_adversary_emulation_framework'],"['https://github.com/BishopFox/sliver/blob/71f94928bf36c1557ea5fbeffa161b71116f56b2/client/command/exec/psexec.go#LL61C5-L61C16', 'https://www.microsoft.com/en-us/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/', 'https://regex101.com/r/DWkkXm/1']","['Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/8a1259cb-0ea7-409c-8bfe-74bad89259f9/,Windows AD ServicePrincipalName Added To Domain Account,['T1098'],"The following analytic identifies the addition of a Service Principal Name to a domain account. While this event may be part of a legitimate action part of certain administrative operations, it may also be evidence of a persistence attack. Domain accounts with Servce Principal Names are vulnerable to a technique called Kerberoasting that enables attackers to potentially obtain the cleartext password of the account by performing offline cracking. An adversary who has obtained privileged access to a domain environment may add an SPN to a privileged account to then leverage the Kerberoasting technique and attempt to obtain its clertext password.",['TTP'],"November 7, 2023","`wineventlog_security` EventCode=5136 AttributeLDAPDisplayName=servicePrincipalName OperationType=""%%14674"" 
| stats values(ObjectDN) as ObjectDN by _time, Computer, SubjectUserName, AttributeValue 
| rename Computer as dest SubjectUserName as user 
| `windows_ad_serviceprincipalname_added_to_domain_account_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ObjectDN', 'signature', 'SubjectUserName', 'Computer']","A Service Principal Name should only be added to an account when an application requires it. While infrequent, this detection may trigger on legitimate actions. Filter as needed.",['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://adsecurity.org/?p=3466', 'https://www.thehacker.recipes/ad/movement/dacl/targeted-kerberoasting', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5136', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting']","['Account Manipulation', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8a618ade-ca8f-4d04-b972-2d526ba59924/,Windows Process Injection Remote Thread,"['T1055', 'T1055.002']","The following analytic identifies a suspicious remote thread execution in some process being abused by threat actor and malware like qakbot. Qakbot is one of the malware using this technique to load its malicious dll module or malicious code in the targeted host. This TTP can be a good pivot to verify what is the behavior of the targeted Image process after this detection trigger. look for network connection, child process execution, file access and many more that helps to verify the indication of malware infection.",['TTP'],"June 15, 2023","`sysmon` EventCode=8 TargetImage IN (""*\\Taskmgr.exe"", ""*\\calc.exe"", ""*\\notepad.exe"", ""*\\rdpclip.exe"", ""*\\explorer.exe"", ""*\\wermgr.exe"", ""*\\ping.exe"", ""*\\OneDriveSetup.exe"", ""*\\dxdiag.exe"", ""*\\mobsync.exe"", ""*\\msra.exe"", ""*\\xwizard.exe"",""*\\cmd.exe"", ""*\\powershell.exe"") 
| stats count min(_time) as firstTime max(_time) as lastTime by  TargetImage TargetProcessId SourceProcessId  EventCode StartAddress SourceImage dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_remote_thread_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest', 'signature', 'TargetProcessGuid', 'SourceProcessGuid', 'StartAddress']",unknown,"['Qakbot', 'Graceful Wipe Out Attack', 'Warzone RAT']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/warzone_rat']","['https://twitter.com/pr0xylife/status/1585612370441031680?s=46&t=Dc3CJi4AnM-8rNoacLbScg', 'https://thedfirreport.com/2023/06/12/a-truly-graceful-wipe-out/']","['Defense Evasion', 'Defense Evasion', 'Portable Executable Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8aac5e1e-0fab-4437-af0b-c6e60af23eed/,Windows Protocol Tunneling with Plink,"['T1572', 'T1021.004']","The following analytic identifies the use of Plink being utilized to proxy egress or laterally in an organization. The analytic is limited to specific Plink options on the command-line, including -R -L and -D which will have the remote and local IP address or port and -l for a username. Modify the options as seen fit for your organization.",['TTP'],"September 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=plink.exe OR Processes.original_file_name=Plink Processes.process IN (""*-R *"", ""*-L *"", ""*-D *"", ""*-l *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_protocol_tunneling_with_plink_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present if the organization allows for SSH tunneling outbound or internally. Filter as needed.,['CISA AA22-257A'],['https://research.splunk.com/stories/cisa_aa22-257a'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html', 'https://attack.mitre.org/techniques/T1572/', 'https://documentation.help/PuTTY/using-cmdline-portfwd.html#S3.8.3.5']","['Command And Control', 'Endpoint', 'Lateral Movement', 'Protocol Tunneling', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'SSH']",['Endpoint']
https://research.splunk.com/endpoint/8acbc04c-c882-11eb-b060-acde48001122/,Powershell Fileless Script Contains Base64 Encoded Content,"['T1059', 'T1027', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies FromBase64String within the script block. A typical malicious instance will include additional code. 
Command example - [Byte[]]$var_code = [System.Convert]::FromBase64String(38uqIyMjQ6rG.... 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"April 5, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*frombase64string*"" OR ScriptBlockText = ""*gnirtS46esaBmorF*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_fileless_script_contains_base64_encoded_content_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives should be limited. Filter as needed.,"['Hermetic Wiper', 'Malicious PowerShell', 'Winter Vivern', 'AsyncRAT', 'Data Destruction', 'IcedID', 'NjRAT']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/njrat']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Command and Scripting Interpreter', 'Defense Evasion', 'Execution', 'Execution', 'Obfuscated Files or Information', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8b1297bc-6204-11ec-b7c4-acde48001122/,Suspicious Kerberos Service Ticket Request,"['T1078', 'T1078.002']","As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries will request and obtain a Kerberos Service Ticket (TGS) with a domain controller computer account as the Service Name. This Service Ticket can be then used to take control of the domain controller on the final part of the attack. This analytic leverages Event Id 4769, A Kerberos service ticket was requested, to identify an unusual TGS request where the Account_Name requesting the ticket matches the Service_Name field. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",['TTP'],"December 20, 2021","`wineventlog_security` EventCode=4769 
| eval isSuspicious = if(lower(Service_Name) = lower(mvindex(split(Account_Name,""@""),0)+""$""),1,0) 
| where isSuspicious = 1 
| rename ComputerName as dest
| rename Account_Name as user  
| table _time, dest, Client_Address, Account_Name, Service_Name, Failure_Code, isSuspicious 
| `suspicious_kerberos_service_ticket_request_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Service_Name', 'Account_Name', 'Client_Address', 'Failure_Code']","We have tested this detection logic with ~2 million 4769 events and did not identify false positives. However, they may be possible in certain environments. Filter as needed.","['sAMAccountName Spoofing and Domain Controller Impersonation', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/samaccountname_spoofing_and_domain_controller_impersonation', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42278', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42287', 'https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-sfu/02636893-7a1f-4357-af9a-b672e3e3de13']","['Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/8b5901bc-da63-11eb-be43-acde48001122/,WSReset UAC Bypass,"['T1548.002', 'T1548']","This search is to detect a suspicious modification of registry related to UAC bypass. This technique is to modify the registry in this detection, create a registry value with the path of the payload and run WSreset.exe to bypass User account Control.",['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE Registry.registry_path= ""*\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command*"" AND (Registry.registry_value_name = ""(Default)"" OR Registry.registry_value_name = ""DelegateExecute"") by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wsreset_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Windows Defense Evasion Tactics', 'Living Off The Land', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://github.com/hfiref0x/UACME', 'https://blog.morphisec.com/trickbot-uses-a-new-windows-10-uac-bypass']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8b5ef342-065a-11ec-b0fc-acde48001122/,Get ADUserResultantPasswordPolicy with Powershell,['T1201'],This analytic looks for the execution of powershell.exe executing the Get ADUserResultantPasswordPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-ADUserResultantPasswordPolicy*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_aduserresultantpasswordpolicy_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://attack.mitre.org/techniques/T1201/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-aduserresultantpasswordpolicy?view=windowsserver2019-ps']","['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8b6c15c7-5556-463d-83c7-986326c21f12/,Windows Impair Defense Disable Win Defender Network Protection,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender exploit guard network protection. The EnableNetworkProtection registry entry controls the activation or deactivation of Network Protection within Windows Defender Exploit Guard. When set to 1, it typically signifies that Network Protection is enabled, offering additional security measures against network-based threats by analyzing and blocking potentially malicious network activity. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Windows Defender Exploit Guard\\Network Protection\\EnableNetworkProtection"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_network_protection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8b700d7e-54ad-4d7d-81cc-1456c4703306/,Windows Impair Defense Disable Win Defender App Guard,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender audit application guard. Microsoft Defender Application Guard provides enhanced security by isolating potentially malicious documents and websites in a containerized environment, protecting the system against various threats. Auditing and logging are essential components of security measures, providing visibility into activities within the isolated environment. Disabling auditing events within Application Guard might not be a standard or recommended practice since auditing is crucial for security monitoring and threat detection within the isolated container. However, there might be settings or configurations related to audit policies in the broader Windows Defender or operating system settings. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Policies\\Microsoft\\AppHVSI\\AuditApplicationGuard"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_app_guard_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8ba484e8-4b97-11ec-b19a-acde48001122/,Possible Browser Pass View Parameter,"['T1555.003', 'T1555']","This analytic will detect if a suspicious process contains a commandline parameter related to a web browser credential dumper. This technique is used by Remcos RAT malware which uses the Nirsoft webbrowserpassview.exe application to dump web browser credentials. Remcos uses the ""/stext"" command line to dump the credentials in text format. This Hunting query is a good indicator of hosts suffering from possible Remcos RAT infection. Since the hunting query is based on the parameter command and the possible path where it will save the text credential information, it may catch normal tools that are using the same command and behavior.",['Hunting'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process  IN (""*/stext *"", ""*/shtml *"", ""*/LoadPasswordsIE*"", ""*/LoadPasswordsFirefox*"", ""*/LoadPasswordsChrome*"", ""*/LoadPasswordsOpera*"", ""*/LoadPasswordsSafari*"" , ""*/UseOperaPasswordFile*"", ""*/OperaPasswordFile*"",""*/stab*"", ""*/scomma*"", ""*/stabular*"", ""*/shtml*"", ""*/sverhtml*"", ""*/sxml*"", ""*/skeepass*"" ) AND Processes.process IN (""*\\temp\\*"", ""*\\users\\public\\*"", ""*\\programdata\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `possible_browser_pass_view_parameter_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positive is quite limited. Filter is needed,['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://www.nirsoft.net/utils/web_browser_password.html', 'https://app.any.run/tasks/df0baf9f-8baf-4c32-a452-16562ecb19be/']","['Credential Access', 'Credential Access', 'Credentials from Password Stores', 'Credentials from Web Browsers', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8bb3f280-dd9b-11eb-84d5-acde48001122/,Msmpeng Application DLL Side Loading,"['T1574.002', 'T1574']",This search is to detect a suspicious creation of msmpeng.exe or mpsvc.dll in non default windows defender folder. This technique was seen with revil ransomware in Kaseya Supply chain. The approach is to drop an old version of msmpeng.exe to load the actual payload name as mspvc.dll which will load the revil ransomware to the compromise machine,['TTP'],"March 15, 2023","|tstats `security_content_summariesonly` values(Filesystem.file_path) as file_path count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name = ""msmpeng.exe"" OR Filesystem.file_name = ""mpsvc.dll"")  AND NOT (Filesystem.file_path IN (""*\\Program Files\\windows defender\\*"",""*\\WinSxS\\*defender-service*"",""*\\WinSxS\\Temp\\*defender-service*"")) by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.user Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `msmpeng_application_dll_side_loading_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.file_path']",quite minimal false positive expected.,"['Ransomware', 'Revil Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware']",['https://community.sophos.com/b/security-blog/posts/active-ransomware-attack-on-kaseya-customers'],"['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8bbb7d58-b360-11eb-ba21-acde48001122/,Extraction of Registry Hives,"['T1003.002', 'T1003']","The following analytic identifies the use of reg.exe exporting Windows Registry hives containing credentials. Adversaries may use this technique to export registry hives for offline credential access attacks. Typically found executed from a untrusted process or script. Upon execution, a file will be written to disk.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_reg` (Processes.process=*save* OR Processes.process=*export*) AND (Processes.process=""*\sam *"" OR Processes.process=""*\system *"" OR Processes.process=""*\security *"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.parent_process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `extraction_of_registry_hives_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",It is possible some agent based products will generate false positives. Filter as needed.,"['Volt Typhoon', 'Credential Dumping', 'CISA AA23-347A', 'DarkSide Ransomware', 'CISA AA22-257A']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.002/T1003.002.md', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8bd22c9f-05a2-4db1-b131-29271f28cb0a/,Windows Remote Access Software Hunt,['T1219'],"The following hunting analytic is meant to help organizations understand what remote access software is being used in the environment. When reviewing this hunt, confirm the software identified is authorized to be utilized. Based on fidelity, create a new analytic for specific utilities banned within the organization. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",['Hunting'],"August 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.user!=unknown by Processes.dest Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup remote_access_software remote_utility AS process_name OUTPUT isutility 
| search isutility = True 
| `windows_remote_access_software_hunt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be found. Filter as needed and create higher fidelity analytics based off banned remote access software.,"['Insider Threat', 'Command And Control', 'Ransomware']","['https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/command_and_control', 'https://research.splunk.com/stories/ransomware']","['https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1219/T1219.md', 'https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/']","['Command And Control', 'Endpoint', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8c00a385-9b86-4ac0-8932-c9ec3713b159/,Suspicious Rundll32 dllregisterserver,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe using dllregisterserver on the command line to load a DLL. When a DLL is registered, the DllRegisterServer method entry point in the DLL is invoked. This is typically seen when a DLL is being registered on the system. Not every instance is considered malicious, but it will capture malicious use of it. During investigation, review the parent process and parrellel processes executing. Capture the DLL being loaded and inspect further. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"February 9, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*dllregisterserver* by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_rundll32_dllregisterserver_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This is likely to produce false positives and will require some filtering. Tune the query by adding command line paths to known good DLLs, or filtering based on parent process names.","['Suspicious Rundll32 Activity', 'Living Off The Land', 'IcedID']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/icedid']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/seedworm-apt-iran-middle-east', 'https://github.com/pan-unit42/tweets/blob/master/2020-12-10-IOCs-from-Ursnif-infection-with-Delf-variant.txt', 'https://www.crowdstrike.com/blog/duck-hunting-with-falcon-complete-qakbot-zip-based-campaign/', 'https://docs.microsoft.com/en-us/windows/win32/api/olectl/nf-olectl-dllregisterserver?redirectedfrom=MSDN']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/8c14eeee-2af1-4a4b-bda8-228da0f4862a/,Detect Exchange Web Shell,"['T1505', 'T1505.003', 'T1190', 'T1133']","The following query identifies suspicious .aspx created in 3 paths identified by Microsoft as known drop locations for Exchange exploitation related to HAFNIUM group and recently disclosed vulnerablity named ProxyShell and ProxyNotShell. Paths include: \HttpProxy\owa\auth\, \inetpub\wwwroot\aspnet_client\, and \HttpProxy\OAB\. Upon triage, the suspicious .aspx file will likely look obvious on the surface. inspect the contents for script code inside. Identify additional log sources, IIS included, to review source and other potential exploitation. It is often the case that a particular threat is only applicable to a specific subset of systems in your environment. Typically analytics to detect those threats are written without the benefit of being able to only target those systems as well. Writing analytics against all systems when those behaviors are limited to identifiable subsets of those systems is suboptimal. Consider the case ProxyShell vulnerability on Microsoft Exchange Servers. With asset information, a hunter can limit their analytics to systems that have been identified as Exchange servers. A hunter may start with the theory that the exchange server is communicating with new systems that it has not previously. If this theory is run against all publicly facing systems, the amount of noise it will generate will likely render this theory untenable. However, using the asset information to limit this analytic to just the Exchange servers will reduce the noise allowing the hunter to focus only on the systems where this behavioral change is relevant.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=System  by _time span=1h Processes.process_id Processes.process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\HttpProxy\\owa\\auth\\*"", ""*\\inetpub\\wwwroot\\aspnet_client\\*"", ""*\\HttpProxy\\OAB\\*"") Filesystem.file_name IN( ""*.aspx"", ""*.ashx"") by _time span=1h Filesystem.user Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| fields _time dest user file_create_time file_name file_path process_name process_path process] 
| dedup file_create_time 
| table dest user file_create_time, file_name, file_path, process_name 
| `detect_exchange_web_shell_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.file_path', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_hash', 'Filesystem.user']","The query is structured in a way that action (read, create) is not defined. Review the results of this query, filter, and tune as necessary. It may be necessary to generate this query specific to your endpoint product.","['ProxyNotShell', 'ProxyShell', 'CISA AA22-257A', 'HAFNIUM Group', 'BlackByte Ransomware']","['https://research.splunk.com/stories/proxynotshell', 'https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/MSTICIoCs-ExchangeServerVulnerabilitiesDisclosedMarch2021.csv', 'https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell', 'https://www.youtube.com/watch?v=FC6iHw258RI', 'https://www.huntress.com/blog/rapid-response-microsoft-exchange-servers-still-vulnerable-to-proxyshell-exploit#what-should-you-do']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Shell']",['Endpoint']
https://research.splunk.com/endpoint/8c1de57d-abc1-4b41-a727-a7a8fc5e0857/,Linux Ingress Tool Transfer with Curl,['T1105'],The SPL above uses the following Macros:,['Anomaly'],"July 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=curl by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process, ""(?i)(-O
|-sO
|-ksO
|--output)"") 
| `linux_ingress_tool_transfer_with_curl_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present. Tune and then change type to TTP.,"['Linux Living Off The Land', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/ingress_tool_transfer']","['https://gtfobins.github.io/gtfobins/curl/', 'https://curl.se/docs/manpage.html#-I', 'https://gtfobins.github.io/gtfobins/curl/', 'https://github.com/rapid7/metasploit-framework/search?q=curl']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8c372853-f459-4995-afdc-280c114d33ab/,Windows AD Domain Replication ACL Addition,['T1484'],"The following analytic detects the addition of the permissions necessary to perform a DCSync attack. In order to replicate AD objects, the initiating user or computer must have the following permissions on the domain. - DS-Replication-Get-Changes - DS-Replication-Get-Changes-All Certain Sync operations may require the additional permission of DS-Replication-Get-Changes-In-Filtered-Set. By default, adding DCSync permissions via the Powerview Add-ObjectACL operation adds all 3. This alert identifies where this trifecta has been met, and also where just the base level requirements have been met.",['TTP'],"November 18, 2022","`wineventlog_security`  
| rex field=AttributeValue max_match=10000 \""OA;;CR;89e95b76-444d-4c62-991a-0facbeda640c;;(?P<DSRGetChangesFiltered_user_sid>S-1-[0-59]-\d{2}-\d{8,10}-\d{8,10}-\d{8,10}-[1-9]\d{3})\)\""
| table _time dest src_user DSRGetChanges_user_sid DSRGetChangesAll_user_sid DSRGetChangesFiltered_user_sid
| mvexpand DSRGetChanges_user_sid
| eval minDCSyncPermissions=if(DSRGetChanges_user_sid=DSRGetChangesAll_user_sid,\""true\"",\""false\""), fullSet=if(DSRGetChanges_user_sid=DSRGetChangesAll_user_sid AND DSRGetChanges_user_sid=DSRGetChangesFiltered_user_sid,\""true\"",\""false\"")
| where minDCSyncPermissions=\""true\"" 
| lookup identity_lookup_expanded  objectSid as DSRGetChanges_user_sid OUTPUT sAMAccountName as user 
| rename DSRGetChanges_user_sid as userSid 
| stats min(_time) as _time values(user) as user by dest src_user userSid minDCSyncPermissions fullSet
| `windows_ad_domain_replication_acl_addition_filter`",['wineventlog_security'],"['_time', 'dest', 'src_user', 'AttributeLDAPDisplayName', 'AttributeValue', 'ObjectClass']","When there is a change to nTSecurityDescriptor, Windows logs the entire ACL with the newly added components. If existing accounts are present with this permission, they will raise an alert each time the nTSecurityDescriptor is updated unless whitelisted.",['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/1522b774-6464-41a3-87a5-1e5633c3fbbb', 'https://github.com/SigmaHQ/sigma/blob/29a5c62784faf986dc03952ae3e90e3df3294284/rules/windows/builtin/security/win_security_account_backdoor_dcsync_rights.yml']","['Change', 'Defense Evasion', 'Domain Policy Modification', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8c5835b9-39d9-438b-817c-95f14c69a31e/,Detect HTML Help URL in Command Line,"['T1218', 'T1218.001']","The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file from a remote url. This particular technique will load Windows script code from a compiled help file. CHM files may  contain nearly any file type embedded, but only execute html/htm. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. Review reputation of remote IP and domain. Some instances, it is worth decompiling the .chm file to review its original contents. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_hh` Processes.process=*http* by Processes.dest Processes.user  Processes.parent_process_name Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_html_help_url_in_command_line_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_hh']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may retrieve a CHM remotely, filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/', 'https://blog.sevagas.com/?Hacking-around-HTA-files', 'https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7', 'https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/8c9a06bc-9939-4425-9bb9-be2371f7fb7e/,Windows System User Privilege Discovery,['T1033'],This analytic looks for the execution of whoami.exe with /priv parameter. This whoami command is used to display or shows the privileges assigned to the current user account. This hunting query can be a good pivot start to look for suspicious usage of whoami application that might related to a malware or adversaries.,['Hunting'],"December 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""whoami.exe"" Processes.process= ""*/priv*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_user_privilege_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting. Filter as needed.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],"['https://attack.mitre.org/techniques/T1033/', 'https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/8ca13343-7405-4916-a2d1-ae34ce0c28ae/,Windows Mark Of The Web Bypass,['T1553.005'],"The following analytic identifies a suspicious process that delete mark-of-the-web data stream. This technique has been observed in various instances of malware and adversarial activities aimed at circumventing security restrictions within the Windows Operating System, particularly pertaining to files downloaded from the internet. An example of this scenario is demonstrated by Ave Maria RAT, which attempts to delete this data stream as a means to evade such restrictions.",['TTP'],"August 14, 2023","`sysmon` EventCode=23 TargetFilename = ""*:Zone.Identifier"" 
| stats  min(_time) as firstTime max(_time) as lastTime count by user EventCode Image TargetFilename ProcessID dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_mark_of_the_web_bypass_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'TargetFilename', 'dest', 'user', 'Image', 'ProcessID', '_time']",unknown,['Warzone RAT'],['https://research.splunk.com/stories/warzone_rat'],"['https://attack.mitre.org/techniques/T1553/005/', 'https://github.com/nmantani/PS-MOTW#remove-motwps1']","['Defense Evasion', 'Mark-of-the-Web Bypass', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8cb1ad38-8f6d-11ec-87a3-acde48001122/,Windows CertUtil URLCache Download,['T1105'],"Certutil.exe may download a file from a remote destination using -urlcache. This behavior does require a URL to be passed on the command-line. In addition, -f (force) and -split (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for certutil.exe to contact public IP space. However, it is uncommon for certutil.exe to write files to world writeable paths.\ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question.",['TTP'],"February 16, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name=""certutil.exe"" AND process_cmd_line LIKE ""%split%"" AND process_cmd_line LIKE ""%urlcache%"") OR process_cmd_line LIKE ""%urlcache%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Limited false positives in most environments, however tune as needed based on parent-child relationship or network connection.","['Ingress Tool Transfer', 'DarkSide Ransomware', 'Living Off The Land', 'Forest Blizzard']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/forest_blizzard']","['https://attack.mitre.org/techniques/T1105/', 'https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats', 'https://web.archive.org/web/20210921110637/https://www.fireeye.com/blog/threat-research/2019/10/certutil-qualms-they-came-to-drop-fombs.html']","['Command And Control', 'Ingress Tool Transfer', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/8ce07472-496f-11ec-ab3b-3e22fbd008af/,Impacket Lateral Movement Commandline Parameters,"['T1021', 'T1021.002', 'T1021.003', 'T1047', 'T1543.003']","This analytic looks for the presence of suspicious commandline parameters typically present when using Impacket tools. Impacket is a collection of python classes meant to be used with Microsoft network protocols. There are multiple scripts that leverage impacket libraries like wmiexec.py, smbexec.py, dcomexec.py and atexec.py used to execute commands on remote endpoints. By default, these scripts leverage administrative shares and hardcoded parameters that can be used as a signature to detect its use. Red Teams and adversaries alike may leverage Impackets tools for lateral movement and remote code execution.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe (Processes.process = ""*/Q /c * \\\\127.0.0.1\\*$*"" AND Processes.process IN (""*2>&1*"",""*2&gt;&amp;1*"")) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `impacket_lateral_movement_commandline_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although uncommon, Administrators may leverage Impackets tools to start a process on remote systems for system administration or automation use cases.","['Active Directory Lateral Movement', 'CISA AA22-277A', 'WhisperGate', 'Prestige Ransomware', 'Volt Typhoon', 'Graceful Wipe Out Attack', 'Industroyer2', 'Data Destruction']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/data_destruction']","['https://attack.mitre.org/techniques/T1021/002/', 'https://attack.mitre.org/techniques/T1021/003/', 'https://attack.mitre.org/techniques/T1047/', 'https://attack.mitre.org/techniques/T1053/', 'https://attack.mitre.org/techniques/T1053/005/', 'https://github.com/SecureAuthCorp/impacket', 'https://vk9-sec.com/impacket-remote-code-execution-rce-on-windows-from-linux/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Distributed Component Object Model', 'Endpoint', 'Execution', 'Lateral Movement', 'Lateral Movement', 'Lateral Movement', 'Persistence', 'Privilege Escalation', 'Remote Services', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/8d124810-b3e4-11eb-96c7-acde48001122/,SLUI RunAs Elevated,"['T1548.002', 'T1548']","The following analytic identifies the Microsoft Software Licensing User Interface Tool, slui.exe, elevating access using the -verb runas function. This particular bypass utilizes a registry key/value. Identified by two sources, the registry keys are HKCU\Software\Classes\exefile\shell and HKCU\Software\Classes\launcher.Systemsettings\Shell\open\command. To simulate this behavior, multiple POC are available. The analytic identifies the use of runas by slui.exe.",['TTP'],"May 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=slui.exe (Processes.process=*-verb* Processes.process=*runas*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `slui_runas_elevated_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Limited false positives should be present as this is not commonly used by legitimate applications.,"['DarkSide Ransomware', 'Windows Defense Evasion Tactics']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/windows_defense_evasion_tactics']","['https://www.exploit-db.com/exploits/46998', 'https://mattharr0ey.medium.com/privilege-escalation-uac-bypass-in-changepk-c40b92818d1b', 'https://gist.github.com/r00t-3xp10it/0c92cd554d3156fd74f6c25660ccc466', 'https://www.rapid7.com/db/modules/exploit/windows/local/bypassuac_sluihijack/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8d1d5570-722c-49a3-996c-2e2cceef5163/,Windows System Binary Proxy Execution MSIExec DLLRegisterServer,['T1218.007'],"The following analytic identifies the usage of msiexec.exe using the /y switch parameter, which grants the ability for msiexec to load DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",['TTP'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%-y %"" OR process_cmd_line LIKE ""%/y %"") AND process_file_name=""msiexec.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",This analytic will need to be tuned for your environment based on legitimate usage of msiexec.exe. Filter as needed.,['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Msiexec', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/8dd73f89-682d-444c-8b41-8e679966ad3c/,Windows System Script Proxy Execution Syncappvpublishingserver,"['T1216', 'T1218']","The following analytic identifies the abuse of Syncappvpublishingserver.vbs, which is a native script on Windows that may be utilized to download remote files or perform privilege escalation.",['TTP'],"September 26, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""wscript.exe"",""cscript.exe"") Processes.process=""*syncappvpublishingserver.vbs*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_script_proxy_execution_syncappvpublishingserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present if the vbscript syncappvpublishingserver is used for legitimate purposes. Filter as needed. Adding a n; to the command-line arguments may help reduce any noise.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://lolbas-project.github.io/lolbas/Scripts/Syncappvpublishingserver/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1216/T1216.md#atomic-test-1---syncappvpublishingserver-signed-script-powershell-command-execution']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution', 'System Script Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/8e204dfd-cae0-4ea8-a61d-e972a1ff2ff8/,Malicious Powershell Executed As A Service,"['T1569', 'T1569.002']",This detection is to identify the abuse the Windows SC.exe to execute malicious commands or payloads via PowerShell.,['TTP'],"April 7, 2021","`wineventlog_system` EventCode=7045 
| eval l_Service_File_Name=lower(Service_File_Name) 
| regex l_Service_File_Name=""powershell[.\s]
|powershell_ise[.\s]
|pwsh[.\s]
|psexec[.\s]"" 
| regex l_Service_File_Name=""-nop[rofile\s]+
|-w[indowstyle]*\s+hid[den]*
|-noe[xit\s]+
|-enc[odedcommand\s]+"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Service_File_Name Service_Name Service_Start_Type Service_Type Service_Account user dest
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `malicious_powershell_executed_as_a_service_filter`","['wineventlog_system', 'security_content_ctime']","['EventCode', 'Service_File_Name', 'Service_Type', '_time', 'Service_Name', 'Service_Start_Type', 'Service_Account', 'user']",Creating a hidden powershell service is rare and could key off of those instances.,"['Malicious Powershell', 'Rhysida Ransomware']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://www.fireeye.com/content/dam/fireeye-www/blog/pdfs/dosfuscation-report.pdf', 'http://az4n6.blogspot.com/2017/', 'https://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier']","['Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/8e207707-ad40-4eb3-b865-3a52aec91f26/,Windows Modify Registry Disable WinDefender Notifications,['T1112'],"The following analytic identifies a suspicious registry modification to disable Windows Defender notification. This technique was being abused by several adversaries, malware authors and also red-teamers to evade detection on the targeted machine. RedLine Stealer is one of the malware we've seen that uses this technique to bypass Windows defender detection.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows Defender Security Center\\Notifications\\DisableNotifications"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_disable_windefender_notifications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,"['CISA AA23-347A', 'RedLine Stealer']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/redline_stealer']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.redline_stealer'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8e53f839-e127-4d6d-a54d-a2f67044a57f/,Windows SOAPHound Binary Execution,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","The following analytic identifies the common command-line argument used by SOAPHound soaphound.exe. Being the script is publicly available, function names may be modified, but these changes are dependent upon the operator. In most instances the defaults are used. It does not cover the entirety of every argument in order to avoid false positives.",['TTP'],"February 12, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""soaphound.exe"" OR Processes.original_file_name=""soaphound.exe"" AND Processes.process IN (""*--buildcache *"", ""*--bhdump *"", ""*--certdump *"", ""*--dnsdump *"", ""*-c *"", ""*--cachefilename *"", ""*-o *"", ""*--outputdirectory *"") by Processes.process Processes.dest Processes.process_current_directory Processes.process_name Processes.process_path Processes.process_integrity_level Processes.parent_process Processes.parent_process_path Processes.parent_process_guid Processes.parent_process_id Processes.process_guid Processes.process_id Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_soaphound_binary_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.process', 'Processes.dest', 'Processes.process_current_directory', 'Processes.process_path', 'Processes.process_integrity_level', 'Processes.parent_process', 'Processes.parent_process_path', 'Processes.parent_process_guid', 'Processes.parent_process_id', 'Processes.process_guid', 'Processes.process_id', 'Processes.user', 'Processes.original_file_nam']",False positives should be limited as the command-line arguments are specific to SOAPHound. Filter as needed.,['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],['https://github.com/FalconForceTeam/SOAPHound'],"['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8e99f89e-ae58-4ebc-bf52-ae0b1a277e72/,System Information Discovery Detection,['T1082'],Detect system information discovery techniques used by attackers to understand configurations of the system to further exploit it.,['TTP'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*wmic* qfe*"" OR Processes.process=*systeminfo* OR Processes.process=*hostname*) by Processes.user Processes.process_name Processes.process Processes.dest Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| eventstats dc(process) as dc_processes_by_dest by dest 
| where dc_processes_by_dest > 2 
| stats values(process) as process min(firstTime) as firstTime max(lastTime) as lastTime by user, dest parent_process_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_information_discovery_detection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.user', 'Processes.process_name', 'Processes.dest']",Administrators debugging servers,['Discovery Techniques'],['https://research.splunk.com/stories/discovery_techniques'],['https://web.archive.org/web/20210119205146/https://oscp.infosecsanyam.in/priv-escalation/windows-priv-escalation'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Information Discovery']",['Endpoint']
https://research.splunk.com/endpoint/8ed523ac-276b-11ec-ac39-acde48001122/,ETW Registry Disabled,"['T1562.006', 'T1127', 'T1562']",This analytic is to detect a registry modification to disable ETW feature of windows. This technique is to evade EDR appliance to evade detections and hide its execution from audit logs.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\SOFTWARE\\Microsoft\\.NETFramework*"" Registry.registry_value_name = ETWEnabled Registry.registry_value_data=0x00000000) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `etw_registry_disabled_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Hermetic Wiper', 'Windows Persistence Techniques', 'Windows Privilege Escalation', 'Windows Registry Abuse', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']",['https://gist.github.com/Cyb3rWard0g/a4a115fd3ab518a0e593525a379adee3'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Impair Defenses', 'Indicator Blocking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/8f45fcf0-5b68-11eb-ae93-0242ac130002/,Detect mshta renamed,"['T1218', 'T1218.005']",The following analytic identifies renamed instances of mshta.exe executing. Mshta.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. This analytic utilizes the internal name of the PE to identify if is the legitimate mshta binary. Further analysis should be performed to review the executed content and validation it is the real mshta.,['Hunting'],"April 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=mshta.exe AND Processes.original_file_name=MSHTA.EXE by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_mshta_renamed_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of mshta.exe, but never renamed, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/8f907d90-6173-11ec-9c23-acde48001122/,Clear Unallocated Sector Using Cipher App,"['T1070.004', 'T1070']",this search is to detect execution of cipher.exe to clear the unallocated sectors of a specific disk. This technique was seen in some ransomware to make it impossible to forensically recover deleted files.,['TTP'],"December 20, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""cipher.exe"" AND process_cmd_line LIKE ""%/w:%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",administrator may execute this app to manage disk,"['Ransomware', 'Information Sabotage']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/information_sabotage']","['https://unit42.paloaltonetworks.com/vatet-pyxie-defray777/3/', 'https://www.sophos.com/en-us/medialibrary/PDFs/technical-papers/sophoslabs-ransomware-behavior-report.pdf']","['Defense Evasion', 'Defense Evasion', 'File Deletion', 'Indicator Removal', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/8fa2a0f0-acd9-11eb-8994-acde48001122/,Excessive Attempt To Disable Services,['T1489'],This analytic will identify suspicious series of command-line to disable several services. This technique is seen where the adversary attempts to disable security app services or other malware services to complete the objective on the compromised system.,['Anomaly'],"May 4, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where   Processes.process_name = ""sc.exe"" AND Processes.process=""*config*"" OR Processes.process=""*Disabled*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user _time span=1m 
| where count >=4 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_attempt_to_disable_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_id', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",unknown,"['XMRig', 'Azorult']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/azorult']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/8fbd2e88-4ea5-40b9-9217-fd0855e08cc0/,Windows Remote Services Rdp Enable,"['T1021.001', 'T1021']","The following analytic is to identify a modification in the Windows registry to enable remote desktop protocol on a targeted machine. This technique was seen in several adversaries, malware or red teamer to remotely access the compromised or targeted host by enabling this protocol in registry. Even this protocol might be allowed in some production environment, This TTP behavior is a good pivot to check who and why the user want to enable this feature through registry which is un-common.",['TTP'],"June 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Control\\Terminal Server\\fDenyTSConnections*"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_services_rdp_enable_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://www.hybrid-analysis.com/sample/9d6611c2779316f1ef4b4a6edcfdfb5e770fe32b31ec2200df268c3bd236ed75?environmentId=100'],"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/90080fa6-a8df-11eb-91e4-acde48001122/,XMRIG Driver Loaded,"['T1543.003', 'T1543']",This analytic identifies XMRIG coinminer driver installation on the system. The XMRIG driver name by default is WinRing0x64.sys. This cpu miner is an open source project that is commonly abused by adversaries to infect and mine bitcoin.,['TTP'],"April 29, 2021","`sysmon` EventCode=6 Signature=""Noriyuki MIYAZAKI"" OR ImageLoaded= ""*\\WinRing0x64.sys"" 
|  stats  min(_time) as firstTime max(_time) as lastTime count by  dest ImageLoaded Hashes IMPHASH Signature Signed 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `xmrig_driver_loaded_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'ImageLoaded', 'Hashes', 'IMPHASH', 'Signature', 'Signed']",False positives should be limited.,"['XMRig', 'CISA AA22-320A']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/cisa_aa22-320a']",['https://www.trendmicro.com/vinfo/hk/threat-encyclopedia/malware/trojan.ps1.powtran.a/'],"['Create or Modify System Process', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/900bc324-59f3-11ec-9fb4-acde48001122/,Curl Download and Bash Execution,['T1105'],"The following analytic identifies the use of curl on Linux or MacOS attempting to download a file from a remote source and pipe it to bash. This is typically found with coinminers and most recently with CVE-2021-44228, a vulnerability in Log4j.",['TTP'],"December 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=curl (Processes.process=""*-s *"") OR (Processes.process=""*
|*"" AND Processes.process=""*bash*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `curl_download_and_bash_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, however filtering may be required.","['Ingress Tool Transfer', 'Log4Shell CVE-2021-44228', 'Linux Living Off The Land']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://www.huntress.com/blog/rapid-response-critical-rce-vulnerability-is-affecting-java', 'https://www.lunasec.io/docs/blog/log4j-zero-day/', 'https://gist.github.com/nathanqthai/01808c569903f41a52e7e7b575caa890']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9015385a-9c84-11eb-bef2-acde48001122/,Windows Multiple Users Failed To Authenticate From Process,"['T1110.003', 'T1110']","The following analytic identifies a source process name failing to authenticate with 30 uniquer users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4625 generates on domain controllers, member servers, and workstations when an account fails to logon. Logon Type 2 describes an iteractive logon attempt.
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed. This could be a domain controller as well as a member server or workstation.
The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",['TTP'],"April 13, 2021","`wineventlog_security` EventCode=4625 Logon_Type=2 ProcessName!=""-"" 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, ProcessName, SubjectUserName, Computer 
| rename Computer as dest 
| where unique_accounts > 30 
| `windows_multiple_users_failed_to_authenticate_from_process_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'ProcessName', 'SubjectUserName', 'TargetUserName', 'Computer']",A process failing to authenticate with multiple users is not a common behavior for legitimate user sessions. Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems.,"['Active Directory Password Spraying', 'Insider Threat', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4625', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/905d5692-6d7c-432f-bc7e-a6b4f464d40e/,Windows Steal Authentication Certificates CryptoAPI,['T1649'],"The following analytic utilizes a Windows Event Log - CAPI2 - or CryptoAPI 2, to identify suspicious certificate extraction. Typically, this event log is meant for diagnosing PKI issues, however is a great source to identify certificate exports. Note that this event log is noisy as it captures common PKI requests from many different processes. EventID 70 is generated anytime a certificate is exported. The description for EventID 70 is ""Acquire Certificate Private Key"". STRT tested this analytic using Mimikatz binary and the implementation of Mimikatz in Cobalt Strike.",['Anomaly'],"February 8, 2023","`capi2_operational` EventCode=70 
| xmlkv UserData_Xml 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer, UserData_Xml 
| rename Computer as dest 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_cryptoapi_filter`","['security_content_ctime', 'capi2_operational']","['_time', 'Computer', 'UserData_Xml']",False positives may be present in some instances of legitimate applications requiring to export certificates. Filter as needed.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc749296(v=ws.10)'],"['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/907ac95c-4dd9-11ec-ba2c-acde48001122/,Powershell Windows Defender Exclusion Commands,"['T1562.001', 'T1562']","This analytic will detect a suspicious process commandline related to windows defender exclusion feature. This command is abused by adversaries, malware author and red teams to bypassed Windows Defender Anti-Virus product by excluding  folder path, file path, process, extensions and etc. from its real time or schedule scan to execute their malicious code. This is a good indicator for defense evasion and to look further for events after this behavior.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 (Message = ""*Add-MpPreference *"" OR Message = ""*Set-MpPreference *"") AND Message = ""*-exclusion*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_windows_defender_exclusion_commands_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",admin or user may choose to use this windows features.,"['CISA AA22-320A', 'AgentTesla', 'Remcos', 'Windows Defense Evasion Tactics', 'Data Destruction', 'WhisperGate', 'Warzone RAT']","['https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/warzone_rat']","['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html', 'https://app.any.run/tasks/cf1245de-06a7-4366-8209-8e3006f2bfe5/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/909f8fd8-7ac8-11eb-a1f3-acde48001122/,FodHelper UAC Bypass,"['T1112', 'T1548.002', 'T1548']","Fodhelper.exe has a known UAC bypass as it attempts to look for specific registry keys upon execution, that do not exist. Therefore, an attacker can write its malicious commands in these registry keys to be executed by fodhelper.exe with the highest privilege. \",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=fodhelper.exe by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `fodhelper_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Limited to no false positives are expected.,"['Windows Defense Evasion Tactics', 'IcedID']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/icedid']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1548.002/T1548.002.md', 'https://github.com/gushmazuko/WinBypass/blob/master/FodhelperBypass.ps1', 'https://attack.mitre.org/techniques/T1548/002/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Modify Registry', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/911eacdc-317f-11ec-ad30-acde48001122/,Disabling Defender Services,"['T1562.001', 'T1562']","This particular behavior is typically executed when an adversaries or malware gains access to an endpoint and beings to perform execution and to evade detections. Usually, a batch (.bat) will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\System\\CurrentControlSet\\Services\\*"" AND (Registry.registry_path IN(""*WdBoot*"", ""*WdFilter*"", ""*WdNisDrv*"", ""*WdNisSvc*"",""*WinDefend*"", ""*SecurityHealthService*"")) AND Registry.registry_value_name = Start Registry.registry_value_data = 0x00000004) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_defender_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['IcedID', 'Windows Registry Abuse', 'RedLine Stealer']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/redline_stealer']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9170cb54-ea15-41e1-9dfc-9f3363ce9b02/,Windows Remote Services Allow Rdp In Firewall,"['T1021.001', 'T1021']","The following analytic is to identify a modification in the Windows firewall to enable remote desktop protocol on a targeted machine. This technique was seen in several adversaries, malware or red teamer to remotely access the compromised or targeted host by allowing this protocol in firewall. Even this protocol might be allowed in some production environment, This TTP behavior is a good pivot to check who and why the user want to enable this feature through firewall which is also common traits of attack to start lateral movement.",['Anomaly'],"June 21, 2022","| tstats `security_content_summariesonly` values(Processes.process) as cmdline values(Processes.parent_process_name) as parent_process values(Processes.process_name) count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = ""netsh.exe"" OR Processes.original_file_name= ""netsh.exe"") AND Processes.process = ""*firewall*"" AND Processes.process = ""*add*"" AND Processes.process = ""*protocol=TCP*"" AND Processes.process = ""*localport=3389*"" AND Processes.process = ""*action=allow*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_services_allow_rdp_in_firewall_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.dest', 'Processes.user']",administrators may enable or disable this feature that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/91c79f14-5b41-11eb-ae93-0242ac130002/,Detect Rundll32 Inline HTA Execution,"['T1218', 'T1218.005']","The following analytic identifies ""rundll32.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. This type of behavior is commonly observed with fileless malware or application whitelisting bypass techniques. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",['TTP'],"January 20, 2021","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` (Processes.process=*vbscript* OR Processes.process=*javascript* OR Processes.process=*about*) by Processes.user Processes.process_name Processes.parent_process_name Processes.original_file_name Processes.dest  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_rundll32_inline_hta_execution_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'NOBELIUM Group', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/92033cab-1871-483d-a03b-a7ce98665cfc/,Linux Emacs Privilege Escalation,"['T1548.003', 'T1548']","EMACS is a family of text editors that are characterized by their extensibility. The manual for the most widely used variant, GNU Emacs, describes it as ""the extensible, customizable, self-documenting, real-time display editor"". If sudo right is given to EMACS tool for the user, then the user can run special commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*emacs*"" AND Processes.process=""*--eval*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_emacs_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/emacs/', 'https://en.wikipedia.org/wiki/Emacs']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/9216ef3d-066a-4958-8f27-c84589465e62/,Windows Driver Load Non-Standard Path,"['T1014', 'T1068']","The following analytic uses Windows EventCode 7045 to identify new Kernel Mode Drivers being loaded in Windows from a non-standard path. Note that, adversaries may move malicious or vulnerable drivers into these paths and load up. The idea is that this analytic provides visibility into drivers loading in non-standard file paths.",['TTP'],"February 24, 2023","`wineventlog_system` EventCode=7045 ServiceType=""kernel mode driver"" NOT (ImagePath IN (""*\\Windows\\*"", ""*\\Program File*"", ""*\\systemroot\\*"",""%SystemRoot%*"", ""system32\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ImagePath ServiceName ServiceType 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_driver_load_non_standard_path_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'Computer', 'EventCode', 'ImagePath', 'ServiceName', 'ServiceType']","False positives may be present based on legitimate third party applications needing to install drivers. Filter, or allow list known good drivers consistently being installed in these paths.","['Windows Drivers', 'CISA AA22-320A', 'AgentTesla', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/', 'https://attack.mitre.org/techniques/T1014/', 'https://www.fuzzysecurity.com/tutorials/28.html']","['Defense Evasion', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Rootkit', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9251299c-ea5b-11eb-a8de-acde48001122/,Detect Copy of ShadowCopy with Script Block Logging,"['T1003.002', 'T1003']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies copy or [System.IO.File]::Copy being used to capture the SAM, SYSTEM or SECURITY hives identified in script block. This will catch the most basic use cases for credentials being taken for offline cracking. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"July 21, 2021","`powershell` EventCode=4104 Message IN (""*copy*"",""*[System.IO.File]::Copy*"") AND Message IN (""*System32\\config\\SAM*"", ""*System32\\config\\SYSTEM*"",""*System32\\config\\SECURITY*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by OpCode ComputerName User EventCode Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_copy_of_shadowcopy_with_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'Message', 'OpCode', 'ComputerName', 'User', 'EventCode']","Limited false positives as the scope is limited to SAM, SYSTEM and SECURITY hives.",['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],"['https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36934', 'https://github.com/GossiTheDog/HiveNightmare', 'https://github.com/JumpsecLabs/Guidance-Advice/tree/main/SAM_Permissions']","['Credential Access', 'Credential Access', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/92886f1c-9b11-11ec-848a-acde48001122/,Windows Script Host Spawn MSBuild,"['T1127.001', 'T1127']","This analytic is to detect a suspicious child process of MSBuild spawned by Windows Script Host - cscript or wscript. This behavior or event are commonly seen and used by malware or adversaries to execute malicious msbuild process using malicious script in the compromised host. During triage, review parallel processes and identify any file modifications. MSBuild may load a script from the same path without having command-line arguments.",['TTP'],"March 3, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""msbuild.exe"" AND (match(actor_process_file_name, /(?i)cscript.exe/)=true OR match(actor_process_file_name, /(?i)wscript.exe/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives should be limited as developers do not spawn MSBuild via a WSH.,"['Trusted Developer Utilities Proxy Execution MSBuild', 'Living Off The Land']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/living_off_the_land']","['https://app.any.run/tasks/dc93ee63-050c-4ff8-b07e-8277af9ab939/#', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1127.001_MSBuild/InvokeMSBuild.ps1']","['Defense Evasion', 'Defense Evasion', 'MSBuild', 'Splunk Behavioral Analytics', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/92cbbf0f-9a6b-4e9d-8c35-cc9244a4e3d5/,Windows System Binary Proxy Execution MSIExec Remote Download,['T1218.007'],"The following analytic identifies msiexec.exe with http in the command-line. This procedure will utilize msiexec.exe to download a remote file and load it. During triage, review parallel processes and capture any artifacts on disk for review.",['TTP'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%https://%"" OR process_cmd_line LIKE ""%http://%"") AND process_file_name=""msiexec.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives may be present, filter by destination or parent process as needed.",['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Msiexec', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/92d51712-ee29-11eb-b1ae-acde48001122/,Suspicious Rundll32 PluginInit,"['T1218', 'T1218.011']",This search is to detect a suspicious rundll32.exe process with plugininit parameter. This technique is commonly seen in IcedID malware to execute its initial dll stager to download another payload to the compromised machine.,['TTP'],"July 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*PluginInit* by  Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.parent_process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_rundll32_plugininit_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",third party application may used this dll export name to execute function.,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://threatpost.com/icedid-banking-trojan-surges-emotet/165314/'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/93048164-3358-4af0-8680-aa5f38440516/,Windows Modify Registry EnableLinkedConnections,['T1112'],"The following analytic identifies a suspicious registry modification of Windows linked connection configuration. This technique was being abused by several adversaries, malware like BlackByte ransomware to enable the linked connections feature, that allows network shares to be accessed using both standard and administrator-level privileges simultaneously. By default, Windows does not enable this feature to enhance security.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLinkedConnections"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_enablelinkedconnections_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['BlackByte Ransomware'],['https://research.splunk.com/stories/blackbyte_ransomware'],['https://www.microsoft.com/en-us/security/blog/2023/07/06/the-five-day-job-a-blackbyte-ransomware-intrusion-case-study/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9319dda5-73f2-4d43-a85a-67ce961bddb7/,Suspicious Rundll32 StartW,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe executing a DLL function name, Start and StartW, on the command line that is commonly observed with Cobalt Strike x86 and x64 DLL payloads. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. Typically, the DLL will be written and loaded from a world writeable path or user location. In most instances it will not have a valid certificate (Unsigned). During investigation, review the parent process and other parallel application execution. Capture and triage the DLL in question. In the instance of Cobalt Strike, rundll32.exe is the default process it opens and injects shellcode into. This default process can be changed, but typically is not.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*start* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_rundll32_startw_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use Start as a function and call it via the command line. Filter as needed.","['Trickbot', 'Suspicious Rundll32 Activity', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/index.htm#cshid=1036', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/9364ee8e-a39a-11eb-8f1d-acde48001122/,Anomalous usage of 7zip,"['T1560.001', 'T1560']","The following detection identifies a 7z.exe spawned from Rundll32.exe or Dllhost.exe. It is assumed that the adversary has brought in 7z.exe and 7z.dll. It has been observed where an adversary will rename 7z.exe. Additional coverage may be required to identify the behavior of renamed instances of 7z.exe. During triage, identify the source of injection into Rundll32.exe or Dllhost.exe. Capture any files written to disk and analyze as needed. Review parallel processes for additional behaviors. Typically, archiving files will result in exfiltration.",['Anomaly'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""rundll32.exe"", ""dllhost.exe"") Processes.process_name=*7z* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `anomalous_usage_of_7zip_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']",False positives should be limited as this behavior is not normal for rundll32.exe or dllhost.exe to spawn and run 7zip.,"['NOBELIUM Group', 'BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://attack.mitre.org/techniques/T1560/001/', 'https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/', 'https://thedfirreport.com/2021/01/31/bazar-no-ryuk/']","['Archive Collected Data', 'Archive via Utility', 'Collection', 'Collection', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/93862a89-abe0-4094-909a-08ec390aa5e3/,Windows Rename System Utilities Appvlp exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies Appvlp.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""appvlp.exe"" AND (NOT match(process_file_path, /(?i)\\program files (x86)\\microsoft office\\root\\client/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/93c94be3-bead-4a60-860f-77ca3fe59903/,GetDomainGroup with PowerShell,"['T1069', 'T1069.002']","This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for domain groups. Get-DomainGroup is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",['TTP'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-DomainGroup*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getdomaingroup_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainGroup/']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/93f114f6-cb1e-419b-ac3f-9e11a3045e70/,Windows Impair Defense Disable Win Defender Gen reports,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender generic ports. This registry can disable the sending of Watson events in Windows Defender. This is by preventing the transmission of generic or non-specific error reports to Microsoft's Windows Error Reporting service, commonly known as Watson. This kind of setting could potentially be employed to limit or control the data sent to Microsoft for error analysis, often in scenarios where privacy or specific reporting requirements are in place. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Reporting\\DisableGenericRePorts"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_gen_reports_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/93fbec4e-0375-440c-8db3-4508eca470c4/,Detect Baron Samedit CVE-2021-3156,['T1068'],"The following analytic detects a specific type of vulnerability known as a heap-based buffer overflow in the sudoedit command, commonly referred to as Baron Samedit CVE-2021-3156. The detection is made by a Splunk query that searches for instances of the sudoedit command with the ""-s"" flag followed by a double quote. This combination of parameters is indicative of the vulnerability being exploited. The detection is important because it suggests that an attacker is attempting to exploit the Baron Samedit vulnerability. The Baron Samedit vulnerability allows an attacker to gain elevated privileges on a Linux system and run arbitrary code with root privileges, potentially leading to complete control over the affected system. The impact of a successful attack can be severe since it allows the attacker to bypass security measures and gain unauthorized access to sensitive data or systems. This can result in data breaches, unauthorized modifications, or even complete system compromise. Next steps include being aware of this vulnerability and actively monitoring any attempts to exploit it. By detecting and responding to such attacks in a timely manner, you can prevent or minimize the potential damage caused by the heap-based buffer overflow of sudoedit.",['TTP'],"January 27, 2021","`linux_hosts` ""sudoedit -s \\"" 
| `detect_baron_samedit_cve_2021_3156_filter`",['linux_hosts'],['_time'],unknown,['Baron Samedit CVE-2021-3156'],['https://research.splunk.com/stories/baron_samedit_cve-2021-3156'],N/A,"['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/94fc85a1-e55b-4265-95e1-4b66730e05c0/,Headless Browser Mockbin or Mocky Request,['T1564.003'],"The following analytic identifies headless browser activity accessing mockbin.org or mocky.io. Mockbin.org and mocky.io are web services that allow users to mock HTTP requests and responses. The detection is based on the presence of ""–headless"" and ""–disable-gpu"" command line arguments which are commonly used in headless browsing and the presence of mockbin.org or mocky.io in the process.",['TTP'],"September 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""*--headless*"" AND Processes.process=""*--disable-gpu*"" AND (Processes.process=""*mockbin.org/*"" OR Processes.process=""*mocky.io/*"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `headless_browser_mockbin_or_mocky_request_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives are not expected with this detection, unless within the organization there is a legitimate need for headless browsing accessing mockbin.org or mocky.io.",['Forest Blizzard'],['https://research.splunk.com/stories/forest_blizzard'],"['https://mockbin.org/', 'https://www.mocky.io/']","['Defense Evasion', 'Endpoint', 'Hidden Window', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/953322db-128a-4ce9-8e89-56e039e33d98/,Windows Suspect Process With Authentication Traffic,"['T1087', 'T1087.002', 'T1204', 'T1204.002']","This analytic identifies executables running from public or temporary locations that are communicating over windows domain authentication ports/protocol. The ports/protocols include LDAP(389), LDAPS(636), and Kerberos(88). Authentications from applications  running from user controlled locations may not be malicious, however actors often attempt to access domain resources after initial  compromise from executables in these locations.",['Anomaly'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_Traffic.process_id) as process_id  from datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port IN (""88"",""389"",""636"")  AND All_Traffic.app IN (""*\\users\\*"", ""*\\programdata\\*"", ""*\\temp\\*"", ""*\\Windows\\Tasks\\*"", ""*\\appdata\\*"", ""*\\perflogs\\*"")  by All_Traffic.app,All_Traffic.src,All_Traffic.src_ip,All_Traffic.user,All_Traffic.dest,All_Traffic.dest_ip,All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)`  
| rex field=app "".*\\\(?<process_name>.*)$"" 
| rename app as process 
| `security_content_ctime(firstTime)`  
| `security_content_ctime(lastTime)` 
| `windows_suspect_process_with_authentication_traffic_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Traffic.app', 'All_Traffic.src', 'All_Traffic.src_ip', 'All_Traffic.user', 'All_Traffic.dest', 'All_Traffic.dest_ip', 'All_Traffic.dest_port']",Known applications running from these locations for legitimate purposes. Targeting only kerberos (port 88) may significantly reduce noise.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['Most%20attacker%20toolkits%20offer%20some%20degree%20of%20interaction%20with%20AD/LDAP.', 'https://attack.mitre.org/techniques/T1069/002/', 'https://book.hacktricks.xyz/network-services-pentesting/pentesting-kerberos-88']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Execution', 'Execution', 'Malicious File', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/958751e4-9c5f-11eb-b103-acde48001122/,Office Application Spawn rundll32 process,"['T1566', 'T1566.001']",This detection was designed to identify suspicious spawned processes of known MS office applications due to macro or malicious code. this technique can be seen in so many malware like trickbot that used MS office as its weapon or attack vector to initially infect the machines.,['TTP'],"February 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""winword.exe"" OR Processes.parent_process_name = ""excel.exe"" OR Processes.parent_process_name = ""powerpnt.exe"" OR Processes.parent_process_name= ""onenote.exe"" OR Processes.parent_process_name = ""onenotem.exe"" OR Processes.parent_process_name = ""onenoteviewer.exe"" OR Processes.parent_process_name = ""onenoteim.exe"" OR Processes.parent_process_name = ""msaccess.exe"") AND `process_rundll32` by Processes.parent_process Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `office_application_spawn_rundll32_process_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['Spearphishing Attachments', 'Trickbot', 'IcedID', 'AgentTesla', 'NjRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/njrat']","['https://any.run/malware-trends/trickbot', 'https://any.run/report/47561b4e949041eff0a0f4693c59c81726591779fe21183ae9185b5eb6a69847/aba3722a-b373-4dae-8273-8730fb40cdbe', 'https://www.joesandbox.com/analysis/702680/0/html', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/95a455f0-4c04-11ec-b8ac-3e22fbd008af/,Wmiprsve LOLBAS Execution Process Spawn,['T1047'],"The following analytic identifies wmiprsve.exe spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing Windows Management Instrumentation (WMI), the executed command is spawned as a child process of wmiprvse.exe. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of wmiprvse.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",['TTP'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=wmiprvse.exe) (Processes.process_name IN (""Regsvcs.exe"", ""Ftp.exe"", ""OfflineScannerShell.exe"", ""Rasautou.exe"", ""Schtasks.exe"", ""Xwizard.exe"", ""Dllhost.exe"", ""Pnputil.exe"", ""Atbroker.exe"", ""Pcwrun.exe"", ""Ttdinject.exe"",""Mshta.exe"", ""Bitsadmin.exe"", ""Certoc.exe"", ""Ieexec.exe"", ""Microsoft.Workflow.Compiler.exe"", ""Runscripthelper.exe"", ""Forfiles.exe"", ""Msbuild.exe"", ""Register-cimprovider.exe"", ""Tttracer.exe"", ""Ie4uinit.exe"", ""Bash.exe"", ""Hh.exe"", ""SettingSyncHost.exe"", ""Cmstp.exe"", ""Mmc.exe"", ""Stordiag.exe"", ""Scriptrunner.exe"", ""Odbcconf.exe"", ""Extexport.exe"", ""Msdt.exe"", ""WorkFolders.exe"", ""Diskshadow.exe"", ""Mavinject.exe"", ""Regasm.exe"", ""Gpscript.exe"", ""Rundll32.exe"", ""Regsvr32.exe"", ""Msiexec.exe"", ""Wuauclt.exe"", ""Presentationhost.exe"", ""Wmic.exe"", ""Runonce.exe"", ""Syncappvpublishingserver.exe"", ""Verclsid.exe"", ""Infdefaultinstall.exe"", ""Explorer.exe"", ""Installutil.exe"", ""Netsh.exe"", ""Wab.exe"", ""Dnscmd.exe"", ""At.exe"", ""Pcalua.exe"", ""Msconfig.exe"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wmiprsve_lolbas_execution_process_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Legitimate applications may trigger this behavior, filter as needed.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1047/', 'https://www.ired.team/offensive-security/lateral-movement/t1047-wmi-for-lateral-movement', 'https://lolbas-project.github.io/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/95a7f9a5-6096-437e-a19e-86f42ac609bd/,Detect Excessive User Account Lockouts,"['T1078', 'T1078.003']",This search detects user accounts that have been locked out a relatively high number of times in a short period.,['Anomaly'],"August 25, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Change.All_Changes where  All_Changes.result=""*locked out*"" by All_Changes.user All_Changes.result 
|`drop_dm_object_name(""All_Changes"")` 
|`drop_dm_object_name(""Account_Management"")`
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| search count > 5 
| `detect_excessive_user_account_lockouts_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Changes.result', 'nodename', 'All_Changes.user']",It is possible that a legitimate user is experiencing an issue causing multiple account login failures leading to lockouts.,['Account Monitoring and Controls'],['https://research.splunk.com/stories/account_monitoring_and_controls'],N/A,"['Change', 'Defense Evasion', 'Defense Evasion', 'Initial Access', 'Initial Access', 'Local Accounts', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/95b8061a-0a67-11ec-85ec-acde48001122/,PetitPotam Network Share Access Request,['T1187'],"The following analytic utilizes Windows Event Code 5145, ""A network share object was checked to see whether client can be granted desired access"". During our research into PetitPotam, CVE-2021-36942, we identified the ocurrence of this event on the target host with specific values. 
To enable 5145 events via Group Policy - Computer Configuration->Polices->Windows Settings->Security Settings->Advanced Audit Policy Configuration. Expand this node, go to Object Access (Audit Polices->Object Access), then select the Setting Audit Detailed File Share Audit 
It is possible this is not enabled by default and may need to be reviewed and enabled. 
During triage, review parallel security events to identify further suspicious activity.",['TTP'],"August 31, 2021","`wineventlog_security` Account_Name=""ANONYMOUS LOGON"" EventCode=5145 Relative_Target_Name=lsarpc 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, Security_ID, Share_Name, Source_Address, Accesses, Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `petitpotam_network_share_access_request_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Security_ID', 'Share_Name', 'Source_Address', 'Accesses', 'Message']",False positives have been limited when the Anonymous Logon is used for Account Name.,['PetitPotam NTLM Relay on Active Directory Certificate Services'],['https://research.splunk.com/stories/petitpotam_ntlm_relay_on_active_directory_certificate_services'],"['https://attack.mitre.org/techniques/T1187/', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=5145', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5145']","['Credential Access', 'Forced Authentication', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/95cf4608-4302-11ec-8194-3e22fbd008af/,Scheduled Task Initiation on Remote Endpoint,"['T1053', 'T1053.005']","The following analytic detects instances of 'schtasks.exe' being used to start a Scheduled Task on a remote endpoint. Adversaries often abuse the Task Scheduler for lateral movement and remote code execution. The search parameters include process details such as the process  name, parent process, and command-line executions. Although legitimate administrators may start scheduled tasks on remote systems, this activity is usually limited to a small set of hosts or users. The findings from this analytic provide valuable insight into potentially malicious activities on an endpoint.",['TTP'],"November 11, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=schtasks.exe OR Processes.original_file_name=schtasks.exe) (Processes.process=*/s* AND Processes.process=*/run*) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `scheduled_task_initiation_on_remote_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may start scheduled tasks on remote systems, but this activity is usually limited to a small set of hosts or users.","['Active Directory Lateral Movement', 'Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/schtasks', 'https://attack.mitre.org/techniques/T1053/005/']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9683271d-92e4-43b5-a907-1983bfb9f7fd/,Windows MsiExec HideWindow Rundll32 Execution,"['T1218.007', 'T1218']","The following analytic identifies a msiexec.exe process with hidewindow rundll32 process commandline. One such tactic involves utilizing system processes like ""msiexec,"" ""hidewindow,"" and ""rundll32"" through command-line execution. By leveraging these legitimate processes, QakBot masks its malicious operations, hiding behind seemingly normal system activities. This clandestine approach allows the trojan to carry out unauthorized tasks discreetly, such as downloading additional payloads, executing malicious code, or establishing communication with remote servers. This obfuscation through trusted system processes enables QakBot to operate stealthily, evading detection by security mechanisms and perpetuating its harmful actions without raising suspicion.",['TTP'],"January 3, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = msiexec.exe  Processes.process = ""* /HideWindow *"" Processes.process = ""* rundll32*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_msiexec_hidewindow_rundll32_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",Other possible 3rd party msi software installers use this technique as part of its installation process.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://twitter.com/Max_Mal_/status/1736392741758611607', 'https://twitter.com/1ZRR4H/status/1735944522075386332']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/970455a1-4ac2-47e1-a9a5-9e75443ddcb9/,Windows PowerView Kerberos Service Ticket Request,"['T1558', 'T1558.003']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainSPNTicket commandlets with specific parameters. This commandlet is a part of PowerView, a PowerShell tool used to perform enumeration and discovery on Windows Active Directory networks. As the name suggests, this commandlet is used to request the kerberos ticket for a specified service principal name (SPN). Once the ticket is received, it may be cracked using password cracking tools like hashcat to extract the password of the SPN account. Red Teams and adversaries alike may leverage PowerView and these commandlets to identify accounts that can be attacked with the Kerberoasting technique.",['TTP'],"June 22, 2022","`powershell` EventCode=4104 ScriptBlockText=*Get-DomainSPNTicket* 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powerview_kerberos_service_ticket_request_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Computer', 'ScriptBlockText']",False positive may include Administrators using PowerView for troubleshooting and management.,"['Active Directory Kerberos Attacks', 'Rhysida Ransomware']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainSPNTicket/', 'https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast', 'https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting', 'https://attack.mitre.org/techniques/T1558/003']","['Credential Access', 'Credential Access', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/977b3082-5f3d-11ec-b954-acde48001122/,Linux At Allow Config File Creation,"['T1053.003', 'T1053']","The following analytic detects the creation of suspicious configuration files, /etc/at.allow or /etc/at.deny, in Linux. These files are commonly abused by malware, adversaries, or red teamers to establish persistence on compromised hosts. The configuration files determine which users are allowed to execute the ""at"" application, which is used for scheduling tasks in Linux. Attackers can add their user or a compromised username to these files to execute malicious code using ""at."" It's important to consider potential false positives as administrators or network operators may create these files for legitimate automation purposes. Adjust the filter macros to minimize false positives.
Identifying the creation of these configuration files is valuable for a SOC as it indicates potential unauthorized activities or an attacker attempting to establish persistence. If a true positive is found, further investigation is necessary to examine the contents of the created configuration file and determine the source of creation. The impact of a true positive can vary but could result in unauthorized execution of malicious code, data theft, or other detrimental consequences. Analysts should review the file path, creation time, and associated processes to assess the extent of the attack and initiate appropriate response actions.",['Anomaly'],"December 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/etc/at.allow"", ""*/etc/at.deny"") by Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_at_allow_config_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create this file for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']",['https://linuxize.com/post/at-command-in-linux/'],"['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/97a8dc5f-8a7c-4fed-9e3e-ec407fd0268a/,Windows Computer Account Created by Computer Account,['T1558'],"The following analytic identifes a Computer Account creating a new Computer Account with specific a Service Principle Name - ""RestrictedKrbHost"". The RestrictedKrbHost service class allows client applications to use Kerberos authentication when they do not have the identity of the service but have the server name.",['TTP'],"April 27, 2022","`wineventlog_security` EventCode=4741 user_type=computer Subject_Account_Domain!=""NT AUTHORITY""  Message=*RestrictedKrbHost* 
| stats  count min(_time) as firstTime max(_time) as lastTime by dest, subject, action ,src_user, user, Account_Name, Subject_Account_Name,Subject_Account_Domain 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_computer_account_created_by_computer_account_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'subject', 'action', 'src_user', 'user', 'Account_Name', 'Subject_Account_Name', 'Subject_Account_Domain']","It is possible third party applications may have a computer account that adds computer accounts, filtering may be required.","['Active Directory Kerberos Attacks', 'Local Privilege Escalation With KrbRelayUp']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/local_privilege_escalation_with_krbrelayup']","['https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-kile/445e4499-7e49-4f2a-8d82-aaf2d1ee3c47', 'https://github.com/Dec0ne/KrbRelayUp']","['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/97d9cfb2-61ad-11ec-bb2d-acde48001122/,Linux File Creation In Init Boot Directory,"['T1037.004', 'T1037']","This analytic looks for suspicious file creation on init system directories for automatic execution of script or file upon boot up. This technique is commonly abuse by adversaries, malware author and red teamer to persist on the targeted or compromised host. This behavior can be executed or use by an administrator or network operator to add script files or binary files as part of a task or automation. filter is needed.",['Anomaly'],"December 20, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/etc/init.d/*"", ""*/etc/rc.d/*"", ""*/sbin/init.d/*"", ""*/etc/rc.local*"") by Filesystem.dest Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_file_creation_in_init_boot_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create file in this folders for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/'],"['Boot or Logon Initialization Scripts', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'RC Scripts', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/97fc2b60-c8eb-4711-93f7-d26fade3686f/,Windows System Reboot CommandLine,['T1529'],"The following analytic identifies Windows commandline to reboot a windows host machine. This technique was seen in several APT, RAT like dcrat and other commodity malware to shutdown the machine to add more impact, interrupt access, aid destruction of the system like wiping disk or inhibit system recovery. This TTP is a good pivot to check why application trigger this commandline which is not so common way to reboot a machine. Compare to shutdown and logoff shutdown.exe feature, reboot seen in some automation script like ansible to reboot the machine.",['Anomaly'],"July 27, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = shutdown.exe OR Processes.original_file_name = shutdown.exe) Processes.process=""*shutdown*"" Processes.process IN (""* /r*"", ""* -r*"") Processes.process IN (""* /t*"",""* -t*"",""* /f*"",""* -f*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_reboot_commandline_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrator may execute this commandline to trigger shutdown or restart the host machine.,"['DarkCrystal RAT', 'NjRAT', 'DarkGate Malware']","['https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/darkgate_malware']","['https://attack.mitre.org/techniques/T1529/', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Shutdown/Reboot']",['Endpoint']
https://research.splunk.com/endpoint/985f322c-57a5-11ec-b9ac-acde48001122/,MS Exchange Mailbox Replication service writing Active Server Pages,"['T1505', 'T1505.003', 'T1190', 'T1133']","The following query identifies suspicious .aspx created in 3 paths identified by Microsoft as known drop locations for Exchange exploitation related to HAFNIUM group and recently disclosed vulnerablity named ProxyShell. Paths include: \HttpProxy\owa\auth\, \inetpub\wwwroot\aspnet_client\, and \HttpProxy\OAB\. The analytic is limited to process name MSExchangeMailboxReplication.exe, which typically does not write .aspx files to disk. Upon triage, the suspicious .aspx file will likely look obvious on the surface. inspect the contents for script code inside. Identify additional log sources, IIS included, to review source and other potential exploitation. It is often the case that a particular threat is only applicable to a specific subset of systems in your environment. Typically analytics to detect those threats are written without the benefit of being able to only target those systems as well. Writing analytics against all systems when those behaviors are limited to identifiable subsets of those systems is suboptimal. Consider the case ProxyShell vulnerability on Microsoft Exchange Servers. With asset information, a hunter can limit their analytics to systems that have been identified as Exchange servers. A hunter may start with the theory that the exchange server is communicating with new systems that it has not previously. If this theory is run against all publicly facing systems, the amount of noise it will generate will likely render this theory untenable. However, using the asset information to limit this analytic to just the Exchange servers will reduce the noise allowing the hunter to focus only on the systems where this behavioral change is relevant.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=MSExchangeMailboxReplication.exe  by _time span=1h Processes.process_id Processes.process_name Processes.process_guid Processes.dest 
| `drop_dm_object_name(Processes)` 
| join process_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\HttpProxy\\owa\\auth\\*"", ""*\\inetpub\\wwwroot\\aspnet_client\\*"", ""*\\HttpProxy\\OAB\\*"") Filesystem.file_name=""*.aspx"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| fields _time dest file_create_time file_name file_path process_name process_path process process_guid] 
| dedup file_create_time 
| table dest file_create_time, file_name, file_path, process_name 
| `ms_exchange_mailbox_replication_service_writing_active_server_pages_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.file_path', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_hash', 'Filesystem.user', 'Filesystem.process_guid', 'Processes.process_name', 'Processes.process_id', 'Processes.process_name', 'Processes.process_guid']","The query is structured in a way that action (read, create) is not defined. Review the results of this query, filter, and tune as necessary. It may be necessary to generate this query specific to your endpoint product.","['ProxyShell', 'Ransomware', 'BlackByte Ransomware']","['https://research.splunk.com/stories/proxyshell', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware']",['https://redcanary.com/blog/blackbyte-ransomware/'],"['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Persistence', 'Server Software Component', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Shell']",['Endpoint']
https://research.splunk.com/endpoint/989019b4-b7aa-418a-9a17-2293e91288b6/,Windows Modify Registry DisableSecuritySettings,['T1112'],"The following analytic identifies a modification in the Windows registry to disable security settings of Terminal Services. altering or disabling security settings within Terminal Services. Terminal Services, now known as Remote Desktop Services (RDS) in more recent Windows versions, allows users to access applications, data, and even an entire desktop remotely. DarkGate malware modify this registry as part of its malicious installation in a targeted host for its remote desktop capabilities.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Terminal Services\\DisableSecuritySettings""  Registry.registry_value_data = 0x00000001 by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disablesecuritysettings_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.","['DarkGate Malware', 'CISA AA23-347A']","['https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/98f22d82-9d62-11eb-9fcf-acde48001122/,Windows Multiple Disabled Users Failed To Authenticate Wth Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with 30 unique disabled domain users using the Kerberos protocol within 5 minutes. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack against disabled users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x12 stands for clients credentials have been revoked (account disabled, expired or locked out).
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['TTP'],"April 14, 2021","`wineventlog_security` EventCode=4768 TargetUserName!=*$ Status=0x12 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| where unique_accounts > 30 
| `windows_multiple_disabled_users_failed_to_authenticate_wth_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple disabled domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, multi-user systems missconfigured systems.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/volt_typhoon']",['https://attack.mitre.org/techniques/T1110/003/'],"['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/98f6a534-04c2-11ec-96b2-acde48001122/,Domain Account Discovery With Net App,"['T1087.002', 'T1087']",This analytic looks for the execution of net.exe or net1.exe with command-line arguments utilized to query for domain users. Red Teams and adversaries alike may use net.exe to enumerate domain users for situational awareness and Active Directory Discovery.,['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` AND Processes.process = ""* user*"" AND Processes.process = ""*/do*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_account_discovery_with_net_app_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://docs.microsoft.com/en-us/defender-for-identity/playbook-domain-dominance', 'https://attack.mitre.org/techniques/T1087/002/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/991eb510-0fc6-11ec-82d3-acde48001122/,SchCache Change By App Connect And Create ADSI Object,"['T1087.002', 'T1087']","This analytic is to detect an application try to connect and create ADSI Object to do LDAP query. Every time an application connects to the directory and attempts to create an ADSI object, the Active Directory Schema is checked for changes. If it has changed since the last connection, the schema is downloaded and stored in a cache on the local computer either in %LOCALAPPDATA%\Microsoft\Windows\SchCache or %systemroot%\SchCache. We found this a good anomaly use case to detect suspicious application like blackmatter ransomware that use ADS object api to execute ldap query. having a good list of ldap or normal AD query tool used within the network is a good start to reduce the noise.",['Anomaly'],"September 7, 2021","`sysmon` EventCode=11  TargetFilename = ""*\\Windows\\SchCache\\*"" TargetFilename = ""*.sch*"" NOT (Image IN (""*\\Windows\\system32\\mmc.exe"")) 
|stats count min(_time) as firstTime max(_time) as lastTime by Image TargetFilename EventCode process_id  process_name dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schcache_change_by_app_connect_and_create_adsi_object_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'TargetFilename', 'EventCode', 'process_id', 'process_name', 'dest']",normal application like mmc.exe and other ldap query tool may trigger this detections.,['blackMatter ransomware'],['https://research.splunk.com/stories/blackmatter_ransomware'],"['https://docs.microsoft.com/en-us/windows/win32/adsi/adsi-and-uac', 'https://news.sophos.com/en-us/2021/08/09/blackmatter-ransomware-emerges-from-the-shadow-of-darkside/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9928b732-210e-11ec-b65e-acde48001122/,Disable UAC Remote Restriction,"['T1548.002', 'T1548']",This analytic is to detect a suspicious modification of registry to disable UAC remote restriction. This technique was well documented in Microsoft page where attacker may modify this registry value to bypassed UAC feature of windows host. This is a good indicator that some tries to bypassed UAC to suspicious process or gain privilege escalation.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\CurrentVersion\\Policies\\System*"" Registry.registry_value_name=""LocalAccountTokenFilterPolicy"" Registry.registry_value_data=""0x00000001""  ) BY _time span=1h Registry.user Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_uac_remote_restriction_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may set this policy for non-critical machine.,"['Suspicious Windows Registry Activities', 'Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://docs.microsoft.com/en-us/troubleshoot/windows-server/windows-security/user-account-control-and-remote-restriction'],"['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/993ce99d-9cdd-42c7-a2cf-733d5954e5a6/,Windows System File on Disk,['T1068'],"The following hunting analytic will assist with identifying new .sys files introduced in the environment. This query is meant to identify sys file creates on disk. There will be noise, but reducing common process names or applications should help to limit any volume. The idea is to identify new sys files written to disk and identify them before they're added as a new kernel mode driver.",['Hunting'],"May 16, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.sys*"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.file_hash 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_system_file_on_disk_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present. Filter as needed.,"['Windows Drivers', 'CISA AA22-264A']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-264a']",['https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/'],"['Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/99495452-b899-11eb-96dc-acde48001122/,Enable RDP In Other Port Number,['T1021'],This search is to detect a modification to registry to enable rdp to a machine with different port number. This technique was seen in some atttacker tries to do lateral movement and remote access to a compromised machine to gain control of it.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp*"" Registry.registry_value_name = ""PortNumber"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `enable_rdp_in_other_port_number_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Prohibited Traffic Allowed or Protocol Mismatch', 'Windows Registry Abuse']","['https://research.splunk.com/stories/prohibited_traffic_allowed_or_protocol_mismatch', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://www.mvps.net/docs/how-to-secure-remote-desktop-rdp/'],"['Endpoint', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/99d157cb-923f-4a00-aee9-1f385412146f/,Windows Boot or Logon Autostart Execution In Startup Folder,"['T1547.001', 'T1547']","This analytic will identify suspicious files dropped or created in the Windows %startup% folder. This technique is a common way to gain persistence on a targeted host. Threat actor, adversaries and red teamer abuse this folder path to automatically execute their malicious sample upon boot or restart of the infected host. This TTP detection is a good indicator that a suspicious process wants to gain persistence on the targeted host. We suggest to verify the process name by using the process guid field, the file created and also the user and the computer name for further investigation.",['Anomaly'],"January 12, 2023","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\*"" by Filesystem.file_create_time Filesystem.process_id Filesystem.file_name Filesystem.user Filesystem.file_path Filesystem.process_guid Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_boot_or_logon_autostart_execution_in_startup_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.file_path', 'Filesystem.process_guid', 'Filesystem.dest']",Administrators may allow creation of script or exe in this path.,"['Chaos Ransomware', 'NjRAT', 'RedLine Stealer']","['https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer']","['https://attack.mitre.org/techniques/T1204/002/', 'https://www.fortinet.com/blog/threat-research/chaos-ransomware-variant-sides-with-russia']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Registry Run Keys / Startup Folder', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9a18f7c2-1fe3-47b8-9467-8b3976770a30/,Windows MSIExec Spawn WinDBG,['T1218.007'],"This analytic identifies the unusual behavior of MSIExec spawning WinDBG. It is designed to detect potential malicious activities. The search specifically looks for instances where the parent process name is 'msiexec.exe' and the process name is 'windbg.exe'. During the triage process, it is recommended to review the file path for additional artifacts that may provide further insights into the event.",['TTP'],"October 31, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=msiexec.exe Processes.process_name=windbg.exe by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process_path Processes.parent_process Processes.process_name Processes.process_path Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_msiexec_spawn_windbg_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process_path', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_path', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives will only be present if the MSIExec process legitimately spawns WinDBG. Filter as needed.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://github.com/PaloAltoNetworks/Unit42-timely-threat-intel/blob/main/2023-10-25-IOCs-from-DarkGate-activity.txt'],"['Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9a3e57e7-33f4-470e-b25d-165baa6e8357/,Windows Computer Account With SPN,['T1558'],"The following analytic identifies two SPNs, HOST and RestrictedKrbHost, added using the KrbRelayUp behavior. This particular behavior has been found in other Kerberos based attacks.",['TTP'],"April 28, 2022","`wineventlog_security` EventCode=4741 MSADChangedAttributes IN (""*HOST/*"",""*RestrictedKrbHost/*"") AND New_UAC_Value=0x80 
| eval Effecting_Account=mvindex(Security_ID,1) 
| eval New_Computer_Account_Name=mvindex(Security_ID,0) 
| stats count min(_time) as firstTime max(_time) as lastTime values(EventCode),values(Account_Domain),values(Security_ID), values(Effecting_Account), values(New_Computer_Account_Name),values(SAM_Account_Name),values(DNS_Host_Name),values(MSADChangedAttributes) by dest Logon_ID subject 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_computer_account_with_spn_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'MSADChangedAttributes', 'New_UAC_Value', 'Security_ID', 'Account_Domain', 'SAM_Account_Name', 'DNS_Host_Name', 'Logon_Id']","It is possible third party applications may add these SPNs to Computer Accounts, filtering may be needed.","['Active Directory Kerberos Attacks', 'Local Privilege Escalation With KrbRelayUp']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/local_privilege_escalation_with_krbrelayup']","['https://www.trustedsec.com/blog/an-attack-path-mapping-approach-to-cves-2021-42287-and-2021-42278', 'https://github.com/Dec0ne/KrbRelayUp']","['Change', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/9a5a41d6-04e7-11ec-923c-acde48001122/,Get DomainUser with PowerShell,"['T1087.002', 'T1087']","This analytic looks for the execution of powershell.exe with command-line arguments utilized to enumerate domain users. Get-DomainUser is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain users for situational awareness and Active Directory Discovery.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-DomainUser*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domainuser_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainUser/'],"['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9a8f63a8-43ac-11ec-904c-acde48001122/,Firewall Allowed Program Enable,"['T1562.004', 'T1562']",The following analytic detects a potential suspicious modification of firewall rule allowing to execute specific application. This technique was identified when an adversary and red teams to bypassed firewall file execution restriction in a targetted host. Take note that this event or command can run by administrator during testing or allowing legitimate tool or application.,['Anomaly'],"November 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*firewall*"" Processes.process = ""*allow*"" Processes.process = ""*add*"" Processes.process = ""*ENABLE*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `firewall_allowed_program_enable_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated or manual execution of this firewall rule that may generate false positives. Filter as needed.,"['Windows Defense Evasion Tactics', 'Azorult', 'BlackByte Ransomware', 'NjRAT', 'PlugX']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/plugx']",['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9ac29c40-8f6b-11ec-b19a-acde48001122/,Windows CertUtil VerifyCtl Download,['T1105'],"Certutil.exe may download a file from a remote destination using -VerifyCtl. This behavior does require a URL to be passed on the command-line. In addition, -f (force) and -split (Split embedded ASN.1 elements, and save to files) will be used. It is not entirely common for certutil.exe to contact public IP space. \ During triage, capture any files on disk and review. Review the reputation of the remote IP or domain in question. Using -VerifyCtl, the file will either be written to the current working directory or %APPDATA%\..\LocalLow\Microsoft\CryptnetUrlCache\Content\&lt;hash&gt;.",['TTP'],"February 16, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name=""certutil.exe"" AND process_cmd_line LIKE ""%split%"" AND process_cmd_line LIKE ""%verifyctl%"") OR process_cmd_line LIKE ""%verifyctl%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Limited false positives in most environments, however tune as needed based on parent-child relationship or network connection.","['Ingress Tool Transfer', 'DarkSide Ransomware', 'Living Off The Land']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1105/', 'https://www.hexacorn.com/blog/2020/08/23/certutil-one-more-gui-lolbin/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732443(v=ws.11)#-verifyctl', 'https://www.avira.com/en/blog/certutil-abused-by-attackers-to-spread-threats']","['Command And Control', 'Ingress Tool Transfer', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/9ae9a48a-cdbe-11eb-875a-acde48001122/,Modify ACLs Permission Of Files Or Folders,['T1222'],This analytic identifies suspicious modification of ACL permission to a files or folder to make it available to everyone or to a specific user. This technique may be used by the adversary to evade ACLs or protected files access. This changes is commonly configured by the file or directory owner with appropriate permission. This behavior raises suspicion if this command is seen on an endpoint utilized by an account with no permission to do so.,['Anomaly'],"March 17, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (match(process_cmd_line, /(?i)S-1-1-0:/)=true OR match(process_cmd_line, /(?i)SYSTEM:/)=true OR match(process_cmd_line, /(?i)everyone:/)=true) AND (process_file_name IN (""icacls.exe"", ""xcacls.exe"", ""cacls.exe"")) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators may use this windows utility. filter is needed.,['XMRig'],['https://research.splunk.com/stories/xmrig'],['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'File and Directory Permissions Modification', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/9b1a5385-0c31-4c39-9753-dc26b8ce64c2/,Windows Steal Authentication Certificates Certificate Issued,['T1649'],"The following analytic identifies when a new certificate is issued against the Certificate Services - AD CS. By its very nature this is not malicious, but should be tracked and correlated with other events related to certificates being issued. When the CA issues the certificate, it creates EID 4887 'Certificate Services approved a certificate request and issued a certificate"". The event supplies the requester user context, the DNS hostname of the machine they requested the certificate from, and the time they requested the certificate. The attributes fields in these event commonly has values for CDC, RMD, and CCM which correspond to Client DC, Request Machine DNS name, and Cert Client Machine, respectively.",['Anomaly'],"February 6, 2023","`wineventlog_security`  EventCode=4887 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, name, Requester, action, Attributes, Subject 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_steal_authentication_certificates_certificate_issued_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'name', 'Requester', 'action', 'Attributes']","False positives will be generated based on normal certificates issued. Leave enabled to generate Risk, as this is meant to be an anomaly analytic.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf'],"['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/9b35c538-94ef-11ec-9439-acde48001122/,Windows MSHTA Command-Line URL,"['T1218.005', 'T1218']","This analytic identifies when Microsoft HTML Application Host (mshta.exe) utility is used to make remote http connections. Adversaries may use mshta.exe to proxy the download and execution of remote .hta files. The analytic identifies command line arguments of http and https being used. This technique is commonly used by malicious software to bypass preventative controls. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",['TTP'],"February 23, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%https://%"" OR process_cmd_line LIKE ""%http://%"") AND process_file_name=""mshta.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",It is possible legitimate applications may perform this behavior and will need to be filtered.,"['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Mshta', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/9b3af1e6-5b68-11eb-ae93-0242ac130002/,Detect MSHTA Url in Command Line,"['T1218', 'T1218.005']","This analytic identifies when Microsoft HTML Application Host (mshta.exe) utility is used to make remote http connections. Adversaries may use mshta.exe to proxy the download and execution of remote .hta files. The analytic identifies command line arguments of http and https being used. This technique is commonly used by malicious software to bypass preventative controls. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""rundll32.exe"" and its parent process.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_mshta` (Processes.process=""*http://*"" OR Processes.process=""*https://*"") by Processes.user Processes.process_name Processes.parent_process_name Processes.original_file_name Processes.dest  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_mshta_url_in_command_line_filter`","['security_content_summariesonly', 'process_mshta', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",It is possible legitimate applications may perform this behavior and will need to be filtered.,"['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/9b6aae5e-8d85-11ec-b2ae-acde48001122/,Linux DD File Overwrite,['T1485'],"This analytic is to look for dd command to overwrite file. This technique was abused by adversaries or threat actor to destroy files or data on specific system or in a large number of host within network to interrupt host avilability, services and many more. This is also used to destroy data where it make the file irrecoverable by forensic techniques through overwriting files, data or local and remote drives.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""dd"" AND Processes.process = ""*of=*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_dd_file_overwrite_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://gtfobins.github.io/gtfobins/dd/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1485/T1485.md']","['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9bbc62e8-55d8-11eb-ae93-0242ac130002/,Suspicious microsoft workflow compiler usage,['T1127'],"The following analytic identifies microsoft.workflow.compiler.exe usage. microsoft.workflow.compiler.exe is natively found in C:\Windows\Microsoft.NET\Framework64\v4.0.30319 and is rarely utilized. When investigating, identify the executed code on disk and review. It is not a commonly used process by many applications.",['TTP'],"January 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_microsoftworkflowcompiler` by Processes.dest Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_microsoft_workflow_compiler_usage_filter`","['security_content_summariesonly', 'process_microsoftworkflowcompiler', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, limited instances have been identified coming from native Microsoft utilities similar to SCCM.","['Trusted Developer Utilities Proxy Execution', 'Living Off The Land']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution', 'https://research.splunk.com/stories/living_off_the_land']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-6---microsoftworkflowcompilerexe-payload-execution']","['Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/9bce3a97-bc97-4e89-a1aa-ead151c82fbb/,Windows Remote Services Allow Remote Assistance,"['T1021.001', 'T1021']","The following analytic is to identify a modification in the Windows registry to enable remote desktop assistance on a targeted machine. This technique was seen in several adversaries, malware or red teamer like azorult to remotely access the compromised or targeted host by enabling this protocol in registry. Even this protocol might be allowed in some production environment, This Anomaly behavior is a good pivot to check who and why the user want to enable this feature through registry which is un-common. And as per stated in microsoft documentation the default value of this registry is false that makes this a good indicator of suspicious behavior.",['Anomaly'],"June 21, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Control\\Terminal Server\\fAllowToGetHelp*"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_services_allow_remote_assistance_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-remoteassistance-exe-fallowtogethelp', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9be25988-ad82-11eb-a14f-acde48001122/,Suspicious Process File Path,['T1543'],"This analytic identifies a suspicious processes running in file paths that are not typically associated with legitimate software. Adversaries often employ this technique to drop and execute malicious executables in accessible locations that do not require administrative privileges. By monitoring for processes running in such unconventional file paths, we can identify potential indicators of compromise and proactively respond to malicious activity. This analytic plays a crucial role in enhancing system security by pinpointing suspicious behaviors commonly associated with malware and unauthorized software execution.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_path = ""*\\windows\\fonts\\*"" OR Processes.process_path = ""*\\windows\\temp\\*"" OR Processes.process_path = ""*\\users\\public\\*"" OR Processes.process_path = ""*\\windows\\debug\\*"" OR Processes.process_path = ""*\\Users\\Administrator\\Music\\*"" OR Processes.process_path = ""*\\Windows\\servicing\\*"" OR Processes.process_path = ""*\\Users\\Default\\*"" OR Processes.process_path = ""*Recycle.bin*"" OR Processes.process_path = ""*\\Windows\\Media\\*"" OR Processes.process_path = ""\\Windows\\repair\\*"" OR Processes.process_path = ""*\\temp\\*"" OR Processes.process_path = ""*\\PerfLogs\\*"" by Processes.parent_process_name Processes.parent_process Processes.process_path Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_process_file_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_path', 'Processes.dest', 'Processes.user']",Administrators may allow execution of specific binaries in non-standard paths. Filter as needed.,"['Double Zero Destructor', 'Graceful Wipe Out Attack', 'AsyncRAT', 'WhisperGate', 'Prestige Ransomware', 'DarkGate Malware', 'AgentTesla', 'Brute Ratel C4', 'RedLine Stealer', 'Rhysida Ransomware', 'Swift Slicer', 'IcedID', 'DarkCrystal RAT', 'Chaos Ransomware', 'PlugX', 'Industroyer2', 'Azorult', 'Remcos', 'XMRig', 'Qakbot', 'Volt Typhoon', 'Hermetic Wiper', 'Warzone RAT', 'Trickbot', 'Amadey', 'BlackByte Ransomware', 'LockBit Ransomware', 'CISA AA23-347A', 'Data Destruction', 'Phemedrone Stealer']","['https://research.splunk.com/stories/double_zero_destructor', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/swift_slicer', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/phemedrone_stealer']","['https://www.trendmicro.com/vinfo/hk/threat-encyclopedia/malware/trojan.ps1.powtran.a/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://twitter.com/pr0xylife/status/1590394227758104576', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Create or Modify System Process', 'Endpoint', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9be30d80-3a39-4df9-9102-64a467b24eac/,Log4Shell CVE-2021-44228 Exploitation,"['T1105', 'T1190', 'T1059', 'T1133']","This correlation find exploitation of Log4Shell CVE-2021-44228 against systems using detections from Splunk Security Content Analytic Story. It does this by calculating the distinct count of MITRE ATT&CK tactics from Log4Shell detections fired. If the count is larger than 2 or more distinct MITRE ATT&CK tactics we assume high problability of exploitation. The Analytic story breaks down into 3 major phases of a Log4Shell exploitation, specifically> Initial Payload delivery eg. ${jndi:ldap://PAYLOAD_INJECTED} Call back to malicious LDAP server eg. Exploit.class Post Exploitation Activity/Lateral Movement using Powershell or similar T1562.001 Each of these phases fall into different MITRE ATT&CK Tactics (Initial Access, Execution, Command And Control), by looking into 2 or more phases showing up in detections triggerd is how this correlation search finds exploitation. If we get a notable from this correlation search the best way to triage it is by investigating the affected systems against Log4Shell exploitation using Splunk SOAR playbooks.",['Correlation'],"September 9, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories=""Log4Shell CVE-2021-44228"" All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 2 
| `log4shell_cve_2021_44228_exploitation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']","There are no known false positive for this search, but it could contain false positives as multiple detections can trigger and not have successful exploitation.","['Log4Shell CVE-2021-44228', 'CISA AA22-320A', 'https://research.splunk.com/stories/log4shell_cve-2021-44228/']","['https://research.splunk.com/stories/log4shell_cve-2021-44228', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/log4shell_cve-2021-44228/']","['https://research.splunk.com/stories/log4shell_cve-2021-44228/', 'https://www.splunk.com/en_us/blog/security/simulating-detecting-and-responding-to-log4shell-with-splunk.html']","['Command And Control', 'Command and Scripting Interpreter', 'Execution', 'Exploit Public-Facing Application', 'External Remote Services', 'Ingress Tool Transfer', 'Initial Access', 'Initial Access', 'Persistence', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9be56c82-b1cc-4318-87eb-d138afaaca39/,Malicious PowerShell Process - Execution Policy Bypass,"['T1059', 'T1059.001']",This search looks for PowerShell processes started with parameters used to bypass the local execution policy for scripts. These parameters are often observed in attacks leveraging PowerShell scripts as they override the default PowerShell execution policy.,['TTP'],"July 21, 2020","| tstats `security_content_summariesonly` values(Processes.process_id) as process_id, values(Processes.parent_process_id) as parent_process_id values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` (Processes.process=""* -ex*"" OR Processes.process=""* bypass *"") by Processes.process_id, Processes.user, Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `malicious_powershell_process___execution_policy_bypass_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",There may be legitimate reasons to bypass the PowerShell execution policy. The PowerShell script being run with this parameter should be validated to ensure that it is legitimate.,"['DHS Report TA18-074A', 'HAFNIUM Group', 'DarkCrystal RAT', 'AsyncRAT', 'Volt Typhoon']","['https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/volt_typhoon']",['https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9c2620a8-94a1-11ec-b40c-acde48001122/,Windows Event For Service Disabled,"['T1562.001', 'T1562']","This analytic will identify suspicious system event of services that was modified from start to disabled. This technique is seen where the adversary attempts to disable security app services, other malware services to evade the defense systems on the compromised host",['Hunting'],"April 25, 2023","`wineventlog_system` EventCode=7040  Message = ""*service was changed from demand start to disabled."" 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName EventCode Message User Sid service service_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_event_for_service_disabled_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'ComputerName', 'EventCode', 'Message', 'User', 'Sid']","Windows service update may cause this event. In that scenario, filtering is needed.","['Windows Defense Evasion Tactics', 'RedLine Stealer']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/redline_stealer']",['https://blog.talosintelligence.com/2018/02/olympic-destroyer.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9c27ec42-d338-11eb-9044-acde48001122/,Disable AMSI Through Registry,"['T1562.001', 'T1562']","this search is to identify modification in registry to disable AMSI windows feature to evade detections. This technique was seen in several ransomware, RAT and even APT to impaire defenses of the compromise machine and to be able to execute payload with minimal alert as much as possible.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows Script\\Settings\\AmsiEnable"" Registry.registry_value_data = ""0x00000000"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_amsi_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",network operator may disable this feature of windows but not so common.,"['Ransomware', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.f-secure.com/hunting-for-amsi-bypasses/', 'https://gist.github.com/rxwx/8955e5abf18dc258fd6b43a3a7f4dbf9']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9c53c446-757e-11ec-871d-acde48001122/,Potentially malicious code on commandline,['T1059.003'],"The following analytic uses a pretrained machine learning text classifier to detect potentially malicious commandlines.  The model identifies unusual combinations of keywords found in samples of commandlines where adversaries executed powershell code, primarily for C2 communication.  For example, adversaries will leverage IO capabilities such as ""streamreader"" and ""webclient"", threading capabilties such as ""mutex"" locks, programmatic constructs like ""function"" and ""catch"", and cryptographic operations like ""computehash"".  Although observing one of these keywords in a commandline script is possible, combinations of keywords observed in attack data are not typically found in normal usage of the commandline.  The model will output a score where all values above zero are suspicious, anything greater than one particularly so.",['Anomaly'],"January 14, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=""Endpoint.Processes"" by Processes.parent_process_name Processes.process_name Processes.process Processes.user Processes.dest  
| `drop_dm_object_name(Processes)`  
| where len(process) > 200 
| `potentially_malicious_code_on_cmdline_tokenize_score` 
| apply unusual_commandline_detection 
| eval score='predicted(unusual_cmdline_logits)', process=orig_process 
| fields - unusual_cmdline* predicted(unusual_cmdline_logits) orig_process 
| where score > 0.5 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `potentially_malicious_code_on_commandline_filter`","['security_content_summariesonly', 'potentially_malicious_code_on_cmdline_tokenize_score', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.parent_process', 'Processes.user', 'Processes.dest']",This model is an anomaly detector that identifies usage of APIs and scripting constructs that are correllated with malicious activity.  These APIs and scripting constructs are part of the programming langauge and advanced scripts may generate false positives.,['Suspicious Command-Line Executions'],['https://research.splunk.com/stories/suspicious_command-line_executions'],"['https://attack.mitre.org/techniques/T1059/003/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/9c94732a-61af-11ec-91e3-acde48001122/,Linux Possible Append Command To Profile Config File,"['T1546.004', 'T1546']","This analytic looks for suspicious command-lines that can be possibly used to modify user profile files to automatically execute scripts/executables by shell upon reboot of the machine. This technique is commonly abused by adversaries, malware and red teamers as persistence mechanism to the targeted or compromised host. This Anomaly detection is a good indicator that someone wants to run code after reboot which can be done also by the administrator or network operator for automation purposes.",['Anomaly'],"December 20, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*echo*"" AND Processes.process IN(""*~/.bashrc"", ""*~/.bash_profile"", ""*/etc/profile"", ""~/.bash_login"", ""*~/.profile"", ""~/.bash_logout"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_append_command_to_profile_config_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://unix.stackexchange.com/questions/129143/what-is-the-purpose-of-bashrc-and-how-does-it-work', 'https://attack.mitre.org/techniques/T1546/004/']","['Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell Configuration Modification']",['Endpoint']
https://research.splunk.com/endpoint/9cf8fe08-7ad8-11eb-9819-acde48001122/,Eventvwr UAC Bypass,"['T1548.002', 'T1548']","The following search identifies Eventvwr bypass by identifying the registry modification into a specific path that eventvwr.msc looks to (but is not valid) upon execution. A successful attack will include a suspicious command to be executed upon eventvwr.msc loading. Upon triage, review the parallel processes that have executed. Identify any additional registry modifications on the endpoint that may look suspicious. Remediate as necessary.",['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*mscfile\\shell\\open\\command\\*"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `eventvwr_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Some false positives may be present and will need to be filtered.,"['Windows Defense Evasion Tactics', 'IcedID', 'Living Off The Land', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1548.002/T1548.002.md', 'https://attack.mitre.org/techniques/T1548/002/', 'https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9d22a780-5165-11ec-ad4f-3e22fbd008af/,Randomly Generated Scheduled Task Name,"['T1053', 'T1053.005']","The following hunting analytic leverages Event ID 4698, A scheduled task was created, to identify the creation of a Scheduled Task with a suspicious, high entropy, Task Name. To achieve this, this analytic also leverages the ut_shannon function from the URL ToolBox Splunk application. Red teams and adversaries alike may abuse the Task Scheduler to create and start a remote Scheduled Task and obtain remote code execution. To achieve this goal, tools like Impacket or Crapmapexec, typically create a Scheduled Task with a random task name on the victim host. This hunting analytic may help defenders identify Scheduled Tasks created as part of a lateral movement attack. The entropy threshold ut_shannon &gt; 3 should be customized by users. The Command field can be used to determine if the task has malicious intent or not.",['Hunting'],"November 29, 2021","`wineventlog_security` EventCode=4698 
| xmlkv Message 
| lookup ut_shannon_lookup word as Task_Name 
| where ut_shannon > 3 
| table  _time, dest, Task_Name, ut_shannon, Command, Author, Enabled, Hidden 
| `randomly_generated_scheduled_task_name_filter`",['wineventlog_security'],"['_time', 'dest', 'Task_Name', 'Description', 'Command']",Legitimate applications may use random Scheduled Task names.,"['Active Directory Lateral Movement', 'CISA AA22-257A', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1053/005/', 'https://splunkbase.splunk.com/app/2734/', 'https://en.wikipedia.org/wiki/Entropy_(information_theory)']","['Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9d867448-2aff-4d07-876c-89409a752ff8/,Linux High Frequency Of File Deletion In Etc Folder,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a high frequency of file deletion relative to process name and process id /etc/ folder. These events was seen in acidrain wiper malware where it tries to delete all files in a non-standard directory in linux directory. This detection already contains some filter that might cause false positive during our testing. But we recommend to add more filter if needed.,['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` values(Filesystem.file_name) as deletedFileNames values(Filesystem.file_path) as deletedFilePath dc(Filesystem.file_path) as numOfDelFilePath count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path = ""/etc/*"" by _time span=1h  Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)`  
| where  numOfDelFilePath >= 200 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_high_frequency_of_file_deletion_in_etc_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",linux package installer/uninstaller may cause this event. Please update you filter macro to remove false positives.,"['AcidRain', 'Data Destruction']","['https://research.splunk.com/stories/acidrain', 'https://research.splunk.com/stories/data_destruction']",['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/'],"['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9d911ce0-c3be-11eb-b177-acde48001122/,Wbemprox COM Object Execution,"['T1218', 'T1218.003']","The following analytic identifies a potential suspicious process loading a COM object from wbemprox.dll or faskprox.dll. The Microsoft Component Object Model (COM) is a platform-independent, distributed, object-oriented system for creating binary software components that can interact. This feature is being abused by several threat actors, adversaries or even red teamers to gain privilege escalation or even to evade detections. This TTP is a good indicator that a process is loading possible known .dll modules that were known for its COM object.",['TTP'],"June 2, 2021","`sysmon` EventCode=7  ImageLoaded IN (""*\\fastprox.dll"", ""*\\wbemprox.dll"", ""*\\wbemcomn.dll"") NOT (process_name IN (""wmiprvse.exe"", ""WmiApSrv.exe"", ""unsecapp.exe"")) NOT(Image IN(""*\\windows\\*"",""*\\program files*"", ""*\\wbem\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode Signed ProcessId Hashes IMPHASH 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wbemprox_com_object_execution_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId', 'Hashes', 'IMPHASH']",legitimate process that are not in the exception list may trigger this event.,"['Ransomware', 'Revil Ransomware', 'LockBit Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware']","['https://krebsonsecurity.com/2021/05/a-closer-look-at-the-darkside-ransomware-gang/', 'https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-atr-analyzes-sodinokibi-aka-revil-ransomware-as-a-service-what-the-code-tells-us/']","['CMSTP', 'Defense Evasion', 'Defense Evasion', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/9d96022e-6250-11ec-9a19-acde48001122/,Linux Setuid Using Setcap Utility,"['T1548.001', 'T1548']","This analytic looks for suspicious setcap utility execution to enable SUID bit. This allows a user to temporarily gain root access, usually in order to run a program. For example, only the root account is allowed to change the password information contained in the password database; If the SUID bit appears as an s, the file's owner also has execute permission to the file; if it appears as an S, the file's owner does not have execute permission. The second specialty permission is the SGID, or set group id bit. It is similar to the SUID bit, except it can temporarily change group membership, usually to execute a program. The SGID bit is set if an s or an S appears in the group section of permissions.",['Anomaly'],"December 21, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = setcap OR Processes.process = ""*setcap *"") AND Processes.process IN (""* cap_setuid=ep *"", ""* cap_setuid+ep *"", ""* cap_net_bind_service+p *"", ""* cap_net_raw+ep *"", ""* cap_dac_read_search+ep *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_setuid_using_setcap_utility_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Setuid and Setgid', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9df16706-04a2-41e2-bbfe-9b38b34409d3/,Remote System Discovery with Net,['T1018'],This analytic looks for the execution of net.exe or net1.exe with command-line arguments utilized to discover remote systems. The argument domain computers /domain returns a list of all domain computers. Red Teams and adversaries alike use net.exe to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"August 30, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=""*domain computers*"" AND Processes.process=*/do*) OR (Processes.process=""*view*"" AND Processes.process=*/do*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_system_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'IcedID']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/icedid']","['https://attack.mitre.org/techniques/T1018/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/9fb562f4-42f8-4139-8e11-a82edf7ed718/,Remote System Discovery with Dsquery,['T1018'],This analytic looks for the execution of dsquery.exe with command-line arguments utilized to discover remote systems. The computer argument returns a list of all computers registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,['Hunting'],"August 31, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dsquery.exe"") (Processes.process=""*computer*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_system_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc732952(v=ws.11)']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a02ad386-e26d-44ce-aa97-6a46cee31439/,Windows Modify Registry WuServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification related to the WSUS server used by Automatic Updates and (by default) API callers. This policy is paired with WUStatusServer; both must be set to the same value in order for them to be valid.",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\WUServer"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_wuserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a081836a-ba4d-11eb-8593-acde48001122/,WinRM Spawning a Process,['T1190'],"The following analytic identifies suspicious processes spawning from WinRM (wsmprovhost.exe). This analytic is related to potential exploitation of CVE-2021-31166. which is a kernel-mode device driver http.sys vulnerability. Current proof of concept code will blue-screen the operating system. However, http.sys used by many different Windows processes, including WinRM. In this case, identifying suspicious process create (child processes) from wsmprovhost.exe is what this analytic is identifying.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=wsmprovhost.exe Processes.process_name IN (""cmd.exe"",""sh.exe"",""bash.exe"",""powershell.exe"",""pwsh.exe"",""schtasks.exe"",""certutil.exe"",""whoami.exe"",""bitsadmin.exe"",""scp.exe"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winrm_spawning_a_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Unknown. Add new processes or filter as needed. It is possible system management software may spawn processes from wsmprovhost.exe.,"['CISA AA23-347A', 'Rhysida Ransomware', 'Unusual Processes']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/unusual_processes']","['https://github.com/SigmaHQ/sigma/blob/9b7fb0c0f3af2e53ed483e29e0d0f88ccf1c08ca/rules/windows/process_access/win_susp_shell_spawn_from_winrm.yml', 'https://www.zerodayinitiative.com/blog/2021/5/17/cve-2021-31166-a-wormable-code-execution-bug-in-httpsys', 'https://github.com/0vercl0k/CVE-2021-31166/blob/main/cve-2021-31166.py']","['Endpoint', 'Exploit Public-Facing Application', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a0873b32-5b68-11eb-ae93-0242ac130002/,Detect mshta inline hta execution,"['T1218', 'T1218.005']","The following analytic identifies ""mshta.exe"" execution with inline protocol handlers. ""JavaScript"", ""VBScript"", and ""About"" are the only supported options when invoking HTA content directly on the command-line. The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""mshta.exe"" and its parent process.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_mshta` (Processes.process=*vbscript* OR Processes.process=*javascript* OR Processes.process=*about*) by Processes.user Processes.process_name Processes.original_file_name Processes.parent_process_name Processes.dest  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `detect_mshta_inline_hta_execution_filter`","['security_content_summariesonly', 'process_mshta', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/', 'https://docs.microsoft.com/en-us/windows/win32/search/-search-3x-wds-extidx-prot-implementing']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/a0bdd2f6-c2ff-11eb-b918-acde48001122/,Detect SharpHound Command-Line Arguments,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","The following analytic identifies common command-line arguments used by SharpHound -collectionMethod and invoke-bloodhound. Being the script is FOSS, function names may be modified, but these changes are dependent upon the operator. In most instances the defaults are used. This analytic works to identify the common command-line attributes used. It does not cover the entirety of every argument in order to avoid false positives.",['TTP'],"June 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*-collectionMethod*"",""*invoke-bloodhound*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_sharphound_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives should be limited as the arguments used are specific to SharpHound. Filter as needed or add more command-line arguments as needed.,"['Discovery Techniques', 'Ransomware']","['https://research.splunk.com/stories/discovery_techniques', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/software/S0521/', 'https://thedfirreport.com/?s=bloodhound', 'https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors', 'https://github.com/BloodHoundAD/SharpHound3', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md#atomic-test-2---run-bloodhound-from-local-disk']","['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a0c8c292-d01a-11eb-aa18-acde48001122/,Attempt To Delete Services,"['T1489', 'T1543', 'T1543.003']","The following analytic identifies Windows Service Control, sc.exe, attempting to delete a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique to terminate security services or other related services to continue there objective and evade detections.",['TTP'],"November 24, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""sc.exe"" AND process_cmd_line LIKE ""%delete%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",It is possible administrative scripts may start/stop/delete services. Filter as needed.,"['XMRig', 'Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware']","['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1543.003/T1543.003.md']","['Create or Modify System Process', 'Impact', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Service Stop', 'Splunk Behavioral Analytics', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/a115fba6-5514-11eb-ae93-0242ac130002/,Suspicious MSBuild Spawn,"['T1127', 'T1127.001']","The following analytic identifies wmiprvse.exe spawning msbuild.exe. This behavior is indicative of a COM object being utilized to spawn msbuild from wmiprvse.exe. It is common for MSBuild.exe to be spawned from devenv.exe while using Visual Studio. In this instance, there will be command line arguments and file paths. In a malicious instance, MSBuild.exe will spawn from non-standard processes and have no command line arguments. For example, MSBuild.exe spawning from explorer.exe, powershell.exe is far less common and should be investigated.",['TTP'],"January 12, 2021","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=wmiprvse.exe AND `process_msbuild` by Processes.dest Processes.parent_process Processes.original_file_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_msbuild_spawn_filter`","['security_content_summariesonly', 'process_msbuild', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Trusted Developer Utilities Proxy Execution MSBuild', 'Living Off The Land']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/living_off_the_land']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1127.001/T1127.001.md']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'MSBuild', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/a14803b2-4bd9-4c08-8b57-c37980edebe8/,Windows Forest Discovery with GetForestDomain,"['T1087', 'T1087.002']","This analytic utilizes PowerShell Script Block Logging (EventCode=4104) to detect the execution of the Get-ForestDomain commandlet. Get-ForestDomain is a component of PowerView, a PowerShell toolkit designed for Windows domain enumeration. Detecting the use of Get-ForestDomain is essential as adversaries and Red Teams might employ it to gain insights into the forest and domain configurations of an Active Directory environment.  Such information can provide attackers with a broader understanding of the domain structure and potential avenues for lateral movement or privilege escalation.",['TTP'],"August 31, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Get-ForestDomain*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_forest_discovery_with_getforestdomain_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']","Administrators may leverage PowerSploit tools for legitimate reasons, filter as needed.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://powersploit.readthedocs.io/en/latest/Recon/Get-ForestDomain/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a15f8977-ad7d-4669-92ef-b59b97219bf5/,Detect suspicious processnames using pretrained model in DSDL,['T1059'],"The following analytic uses a pre-trained Deep Learning model to predict whether a processname is suspicious or not. Malwares and malicious programs such as ransomware often use tactics, techniques, and procedures (TTPs) such as copying malicious files to the local machine to propagate themselves across the network. A key indicator of compromise is that after a successful execution of the malware, it copies itself as an executable file with a randomly generated filename and places this file in one of the directories. Such techniques are seen in several malwares such as TrickBot. We develop machine learning model that uses a Recurrent Neural Network (RNN) to distinguish between malicious and benign processnames. The model is trained independently and is then made available for download. We use a character level RNN to classify malicious vs. benign processnames. The higher is_malicious_prob, the more likely is the processname to be suspicious (between [0,1]). The threshold for flagging a processname as suspicious is set as 0.5.",['Anomaly'],"January 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.process_name Processes.parent_process_name Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(Processes)` 
| rename process_name as text 
| fields text, parent_process_name, process, user, dest 
| apply detect_suspicious_processnames_using_pretrained_model_in_dsdl 
| rename predicted_label as is_suspicious_score 
| rename text as process_name 
| where is_suspicious_score > 0.5 
| `detect_suspicious_processnames_using_pretrained_model_in_dsdl_filter`",['security_content_summariesonly'],"['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.parent_process', 'Processes.user', 'Processes.dest']",False positives may be present if a suspicious processname is similar to a benign processname.,['Suspicious Command-Line Executions'],['https://research.splunk.com/stories/suspicious_command-line_executions'],"['https://www.cisa.gov/uscert/ncas/alerts/aa20-302a', 'https://www.splunk.com/en_us/blog/security/random-words-on-entropy-and-dns.html']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a18e85d7-8b98-4399-820c-d46a1ca3516f/,Windows Gather Victim Identity SAM Info,"['T1589.001', 'T1589']","The following analytic identifies a process that loads the samlib.dll module. This module is being abused by adversaries, threat actors and red teamers to access information of SAM objects or access credentials information in DC. This hunting query can be a good indicator that a process is capable of accessing the SAM object.",['Hunting'],"August 24, 2022","`sysmon` EventCode=7  (ImageLoaded = ""*\\samlib.dll"" AND OriginalFileName = ""samlib.dll"") OR (ImageLoaded = ""*\\samcli.dll"" AND OriginalFileName = ""SAMCLI.DLL"") AND NOT (Image IN(""C:\\Windows\\*"", ""C:\\Program File*"", ""%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_gather_victim_identity_sam_info_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'dest', 'EventCode', 'Signed', 'ProcessId']",this module can be loaded by a third party application. Filter is needed.,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://redcanary.com/blog/active-breach-evading-defenses/', 'https://strontic.github.io/xcyclopedia/library/samlib.dll-0BDF6351009F6EBA5BA7E886F23263B1.html']","['Credentials', 'Gather Victim Identity Information', 'Reconnaissance', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a21e3484-c94d-11eb-b55b-acde48001122/,Unloading AMSI via Reflection,"['T1562', 'T1059.001', 'T1059']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies the behavior of AMSI being tampered with. Implemented natively in many frameworks, the command will look similar to SEtValuE($Null,(New-OBJEct COLlECtionS.GenerIC.HAshSEt{[StrINg]))}$ReF=[ReF].AsSeMbLY.GeTTyPe(&#34;System.Management.Automation.Amsi&#34;+&#34;Utils&#34;) taken from Powershell-Empire. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = *system.management.automation.amsi* 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `unloading_amsi_via_reflection_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Potential for some third party applications to disable AMSI upon invocation. Filter as needed.,"['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Command and Scripting Interpreter', 'Defense Evasion', 'Execution', 'Execution', 'Impair Defenses', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a2276412-e254-4e9a-9082-4d92edb6a3e0/,Windows Modify Registry NoChangingWallPaper,['T1112'],"The following analytic identifies alterations in the Windows registry aimed at restricting wallpaper modifications. This tactic has been exploited by the Rhysida ransomware as a part of its destructive payload within compromised systems. By making this registry modification, the ransomware seeks to impede users from changing the wallpaper forcibly set by the malware, restricting the user's control over their system's visual settings.",['TTP'],"December 12, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\Windows\\CurrentVersion\\Policies\\ActiveDesktop\\NoChangingWallPaper"" Registry.registry_value_data = 1) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_nochangingwallpaper_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['Rhysida Ransomware'],['https://research.splunk.com/stories/rhysida_ransomware'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-319a'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a23a0e20-0b1b-4a07-82e5-ec5f70811e7a/,Elevated Group Discovery With Net,"['T1069', 'T1069.002']",This analytic looks for the execution of net.exe or net1.exe  with command-line arguments utilized to query for specific elevated domain groups. Red Teams and adversaries alike use net.exe to enumerate elevated domain groups for situational awareness and Active Directory Discovery to identify high privileged users.,['TTP'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=""*group*"" AND Processes.process=""*/do*"") (Processes.process=""*Domain Admins*"" OR Processes.process=""*Enterprise Admins*"" OR Processes.process=""*Schema Admins*"" OR Processes.process=""*Account Operators*"" OR Processes.process=""*Server Operators*"" OR Processes.process=""*Protected Users*"" OR Processes.process=""*Dns Admins*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `elevated_group_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Volt Typhoon', 'Rhysida Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/plan/security-best-practices/appendix-b--privileged-accounts-and-groups-in-active-directory', 'https://adsecurity.org/?p=3658', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a258bf2a-34fd-4986-8086-78f506e00206/,Windows Alternate DataStream - Executable Content,"['T1564', 'T1564.004']","This analytic is designed to detect when data, possessing an IMPHASH value, is written to an Alternate Data Stream (ADS) in the NTFS file system. The presence of an IMPHASH value suggests that the written data has a Portable Executable (PE) structure, indicating its potential to be executed. Such behavior could be a sign of a threat actor staging malicious code within hard-to-detect areas of the file system for future use or persistence. It's important to note that for this analytic to function correctly, import hashing/imphash must be enabled within Sysmon. This allows the capture of the IMPHASH value, a unique identifier for the imported functions of a PE, providing a robust mechanism for detecting hidden malicious activity leveraging ADS.",['TTP'],"February 15, 2024","`sysmon` EventCode=15 IMPHASH!=00000000000000000000000000000000 
| regex TargetFilename=""(?<!\/)\b\w+(\.\w+)?:\w+(\.\w+)?$"" 
| eval file_name = replace(TargetFilename,""(.*\\\)"",""""), process = Image , file_path = TargetFilename, file_hash = coalesce(SHA256,SHA1,MD5,Hash) 
| stats count min(_time) as firstTime max(_time) as lastTime values(user) as user by dest, process, process_guid, file_name, file_path, file_hash, IMPHASH 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_alternate_datastream___executable_content_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'TargetFilename', 'Image', 'Contents', 'file_hash', 'process_guid', 'IMPHASH']",Unknown,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://car.mitre.org/analytics/CAR-2020-08-001/', 'https://blogs.juniper.net/en-us/threat-research/bitpaymer-ransomware-hides-behind-windows-alternate-data-streams', 'https://twitter.com/0xrawsec/status/1002478725605273600?s=21']","['Defense Evasion', 'Defense Evasion', 'Hide Artifacts', 'NTFS File Attributes', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a26d9db4-c883-11eb-9d75-acde48001122/,Powershell Fileless Process Injection via GetProcAddress,"['T1059', 'T1055', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable no critical endpoints or all. 
This analytic identifies GetProcAddress in the script block. This is not normal to be used by most PowerShell scripts and is typically unsafe/malicious. Many attack toolkits use GetProcAddress to obtain code execution. 
In use, $var_gpa = $var_unsafe_native_methods.GetMethod(GetProcAddress and later referenced/executed elsewhere. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText=*getprocaddress* 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_fileless_process_injection_via_getprocaddress_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Limited false positives. Filter as needed.,"['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Command and Scripting Interpreter', 'Defense Evasion', 'Execution', 'Execution', 'PowerShell', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a27db3c5-1a9a-46df-a577-765d3f1a3c24/,Windows MSIExec Unregister DLLRegisterServer,['T1218.007'],"The following analytic identifies the usage of msiexec.exe using the /z switch parameter, which grants the ability for msiexec to unload DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",['TTP'],"June 14, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_msiexec` Processes.process IN (""*/z*"", ""*-z*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_msiexec_unregister_dllregisterserver_filter`","['security_content_summariesonly', 'process_msiexec', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",This analytic will need to be tuned for your environment based on legitimate usage of msiexec.exe. Filter as needed.,['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a2b1f1ef-221f-4187-b2a4-d4b08ec745f4/,Windows Vulnerable Driver Loaded,['T1543.003'],"The following analytic utilizes a known list of vulnerable Windows drivers to help defenders find potential persistence or privelege escalation via a vulnerable driver. This analytic uses Sysmon EventCode 6, driver loading. A known gap with this lookup is that it does not use the hash or known signer of the vulnerable driver therefore it is up to the defender to identify version and signing info and confirm it is a vulnerable driver.",['Hunting'],"December 12, 2022","`sysmon` EventCode=6 
| lookup loldrivers driver_name AS ImageLoaded OUTPUT is_driver driver_description 
| search is_driver = TRUE 
| stats  min(_time) as firstTime max(_time) as lastTime count by dest ImageLoaded driver_description 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_vulnerable_driver_loaded_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'ImageLoaded']","False positives will be present. Drill down into the driver further by version number and cross reference by signer. Review the reference material in the lookup. In addition, modify the query to look within specific paths, which will remove a lot of ""normal"" drivers.","['Windows Drivers', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://github.com/SigmaHQ/sigma/blob/master/rules/windows/driver_load/driver_load_vuln_drivers_names.yml', 'https://github.com/eclypsium/Screwed-Drivers/blob/master/DRIVERS.md', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules', 'https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/', 'https://github.com/jbaines-r7/dellicious', 'https://github.com/MicrosoftDocs/windows-itpro-docs/blob/public/windows/security/threat-protection/windows-defender-application-control/microsoft-recommended-driver-block-rules.md', 'https://github.com/namazso/physmem_drivers', 'https://github.com/stong/CVE-2020-15368', 'https://github.com/CaledoniaProject/drivers-binaries', 'https://github.com/Chigusa0w0/AsusDriversPrivEscala', 'https://www.welivesecurity.com/2022/01/11/signed-kernel-drivers-unguarded-gateway-windows-core/', 'https://eclypsium.com/2019/11/12/mother-of-all-drivers/', 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-37969']","['Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/a2f4cc7f-6503-4078-b206-f83a29f408a7/,Windows Steal Authentication Certificates CS Backup,['T1649'],The following analytic identifies when the Active Directory Certificate Services store is backed up utilizing Event ID 4876. This event triggers whenever the backup occurs in the UI of CertSrv.msc or via CertUtil.exe -BackupDB occurs.,['Anomaly'],"February 6, 2023","`wineventlog_security` EventCode=4876
| stats count min(_time) as firstTime max(_time) as lastTime by dest, name, action, Caller_Domain ,Caller_User_Name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_cs_backup_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'name', 'action', 'Caller_Domain', 'Caller_User_Name']","False positives will be generated based on normal certificate store backups. Leave enabled to generate Risk, as this is meant to be an anomaly analytic. If CS backups are not normal, enable as TTP.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf'],"['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/a34aae96-ccf8-4aef-952c-3ea21444444d/,System Processes Run From Unexpected Locations,"['T1036', 'T1036.003']","This search looks for system processes that typically execute from C:\Windows\System32\ or C:\Windows\SysWOW64.  This may indicate a malicious process that is trying to hide as a legitimate process.
This detection utilizes a lookup that is deduped system32 and syswow64 directories from Server 2016 and Windows 10.
During triage, review the parallel processes - what process moved the native Windows binary? identify any artifacts on disk and review. If a remote destination is contacted, what is the reputation?",['Anomaly'],"December 8, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !=""C:\\Windows\\System32*"" Processes.process_path !=""C:\\Windows\\SysWOW64*"" by Processes.dest Processes.user Processes.parent_process Processes.process_path Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_hash 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| `is_windows_system_file` 
| `system_processes_run_from_unexpected_locations_filter`","['security_content_summariesonly', 'security_content_ctime', 'is_windows_system_file']","['_time', 'Processes.process_path', 'Processes.user', 'Processes.dest', 'Processes.process_name', 'Processes.process_id', 'Processes.parent_process_name', 'Processes.process_hash']",This detection may require tuning based on third party applications utilizing native Windows binaries in non-standard paths.,"['Suspicious Command-Line Executions', 'Unusual Processes', 'Ransomware', 'Masquerading - Rename System Utilities', 'Qakbot', 'Windows Error Reporting Service Elevation of Privilege Vulnerability', 'DarkGate Malware']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_error_reporting_service_elevation_of_privilege_vulnerability', 'https://research.splunk.com/stories/darkgate_malware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a360d2b2-065a-11ec-b0bf-acde48001122/,Get DomainPolicy with Powershell Script Block,['T1201'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get DomainPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['TTP'],"May 2, 2022","`powershell` EventCode=4104 ScriptBlockText =""*Get-DomainPolicy*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domainpolicy_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainPolicy/', 'https://attack.mitre.org/techniques/T1201/']","['Discovery', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a36972c8-b894-11eb-9f78-acde48001122/,Mailsniper Invoke functions,"['T1114', 'T1114.001']",This search is to detect known mailsniper.ps1 functions executed in a machine. This technique was seen in some attacker to harvest some sensitive e-mail in a compromised exchange server.,['TTP'],"May 2, 2022","`powershell` EventCode=4104 ScriptBlockText IN (""*Invoke-GlobalO365MailSearch*"", ""*Invoke-GlobalMailSearch*"", ""*Invoke-SelfSearch*"", ""*Invoke-PasswordSprayOWA*"", ""*Invoke-PasswordSprayEWS*"",""*Invoke-DomainHarvestOWA*"", ""*Invoke-UsernameHarvestOWA*"",""*Invoke-OpenInboxFinder*"",""*Invoke-InjectGEventAPI*"",""*Invoke-InjectGEvent*"",""*Invoke-SearchGmail*"", ""*Invoke-MonitorCredSniper*"", ""*Invoke-AddGmailRule*"",""*Invoke-PasswordSprayEAS*"",""*Invoke-UsernameHarvestEAS*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `mailsniper_invoke_functions_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",unknown,['Data Exfiltration'],['https://research.splunk.com/stories/data_exfiltration'],['https://www.blackhillsinfosec.com/introducing-mailsniper-a-tool-for-searching-every-users-email-for-sensitive-data/'],"['Collection', 'Collection', 'Email Collection', 'Local Email Collection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a3b3bc96-1c4f-4eba-8218-027cac739a48/,Windows Password Managers Discovery,['T1555.005'],"The following analytic identifies a process command line that retrieves information related to password manager software. This technique was seen in several post exploitation tools like winpeas that are being used by Ransomware Prestige to gather this type of information. Password Managers applications are designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk. Due to this password manager software designed adversaries may find or look for keywords related to the Password Manager databases that can be stolen or extracted for further attacks.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*dir *"" OR  Processes.process = ""*findstr*"" AND Processes.process IN ( ""*.kdbx*"", ""*credential*"", ""*key3.db*"",""*pass*"", ""*cred*"", ""*key4.db*"", ""*accessTokens*"", ""*access_tokens*"", ""*.htpasswd*"", ""*Ntds.dit*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_password_managers_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://attack.mitre.org/techniques/T1555/005/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Endpoint', 'Password Managers', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a3bddf71-6ba3-42ab-a6b2-396929b16d92/,Linux Composer Privilege Escalation,"['T1548.003', 'T1548']","Composer is a tool for dependency management in PHP. It allows you to declare the libraries your project depends on and it will manage (install/update) them for you. If sudo right is given to tool for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*composer*"" AND Processes.process=""*run-script*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_composer_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/composer/', 'https://getcomposer.org/doc/00-intro.md']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/a4214f0b-e01c-41bc-8cc4-d2b71e3056b4/,Single Letter Process On Endpoint,"['T1204', 'T1204.002']",The following analytic detects a behavior where a process name consists only of a single letter that helps to detect potential threats earlier and mitigate the risks. This detection is important because it indicates the presence of malware or an attacker attempting to evade detection by using a process name that is difficult to identify or track so that he can carry out malicious activities such as data theft or ransomware attacks. False positives might occur since there might be legitimate uses of single-letter process names in your environment. Next steps include reviewing the process details and investigating any suspicious activity upon triage.,['TTP'],"December 8, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes by Processes.dest, Processes.user, Processes.process, Processes.process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| eval process_name_length = len(process_name), endExe = if(substr(process_name, -4) == "".exe"", 1, 0) 
| search process_name_length=5 AND endExe=1 
| table count, firstTime, lastTime, dest, user, process, process_name 
| `single_letter_process_on_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.process', 'Processes.process_name']",Single-letter executables are not always malicious. Investigate this activity with your normal incident-response process.,['DHS Report TA18-074A'],['https://research.splunk.com/stories/dhs_report_ta18-074a'],N/A,"['Endpoint', 'Execution', 'Execution', 'Malicious File', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/a43ae66f-c410-4b3d-8741-9ce1ad17ddb0/,Windows Disable or Modify Tools Via Taskkill,"['T1562', 'T1562.001']","This analytic is designed to identify potentially malicious processes that terminate other processes using taskkill.exe. This technique has been observed in various malware instances, employed by adversaries and red teamers alike, to forcibly terminate other processes whether they be security products or other legitimate applications as part of their malicious activities. Detecting this anomaly serves as a valuable alert mechanism to identify suspicious processes or malware attempting to evade detection and disrupt system stability.",['Anomaly'],"September 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""taskkill.exe"" Processes.process IN (""* /f*"", ""* /t*"") Processes.process IN (""* /im*"", ""* /pid*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.process_guid  Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_or_modify_tools_via_taskkill_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Network administrator can use this application to kill process during audit or investigation.,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a44c0be1-d7ab-41e4-92fd-aa9af4fe232c/,Windows File Share Discovery With Powerview,['T1135'],"The following analytic identifies the use of the Invoke-ShareFinder PowerShell commandlet part of PowerView. This module obtains the list of all active domain computers and lists the active shares on each computer. Network file shares in Active Directory environments may contain sensitive information like backups, scripts, credentials, etc. Adversaries who have obtained a foothold in an AD network may leverage PowerView to identify secrets and leverage them for Privilege Escalation or Lateral Movement.",['TTP'],"March 20, 2023","`powershell` EventCode=4104  (ScriptBlockText=Invoke-ShareFinder*) 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_file_share_discovery_with_powerview_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID']",Security teams may leverage PowerView proactively to identify and remediate sensitive file shares. Filter as needed.,"['Active Directory Privilege Escalation', 'Active Directory Discovery']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_discovery']","['https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1', 'https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://attack.mitre.org/techniques/T1135/']","['Discovery', 'Network Share Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a4bdc944-cdd9-11eb-ac97-acde48001122/,Wevtutil Usage To Disable Logs,"['T1070', 'T1070.001']",This search is to detect execution of wevtutil.exe to disable logs. This technique was seen in several ransomware to disable the event logs to evade alerts and detections in compromised host.,['TTP'],"June 15, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%/e:false%"" AND process_cmd_line LIKE ""% sl %"" AND process_file_name=""wevtutil.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",network operator may disable audit event logs for debugging purposes.,"['Windows Log Manipulation', 'Ransomware', 'Insider Threat', 'Information Sabotage']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/information_sabotage']",['https://www.bleepingcomputer.com/news/security/new-ransom-x-ransomware-used-in-texas-txdot-cyberattack/'],"['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Indicator Removal', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/a4e8f3a4-48b2-11ec-bcfc-3e22fbd008af/,Interactive Session on Remote Endpoint with PowerShell,"['T1021', 'T1021.006']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the usage of the Enter-PSSession. This commandlet can be used to open an interactive session on a remote endpoint leveraging the WinRM protocol. Red Teams and adversaries alike may abuse WinRM and Enter-PSSession for lateral movement and remote code execution.,['TTP'],"November 7, 2023","`powershell` EventCode=4104 (ScriptBlockText=""*Enter-PSSession*"" AND ScriptBlockText=""*-ComputerName*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `interactive_session_on_remote_endpoint_with_powershell_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']","Administrators may leverage WinRM and Enter-PSSession for administrative and troubleshooting tasks. This activity is usually limited to a small set of hosts or users. In certain environments, tuning may not be possible.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/006/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/enter-pssession?view=powershell-7.2']","['Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/a51bfe1a-94f0-4822-b1e4-16ae10145893/,Detect Outlook exe writing a zip file,"['T1566', 'T1566.001']",This search looks for execution of process outlook.exe where the process is writing a .zip file to the disk.,['TTP'],"February 7, 2023","| tstats `security_content_summariesonly`  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=outlook.exe by _time span=5m Processes.parent_process_id Processes.process_id Processes.dest Processes.process_name Processes.parent_process_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename process_id as malicious_id
| rename parent_process_id as outlook_id
| join malicious_id type=inner[
| tstats `security_content_summariesonly` count values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name  FROM datamodel=Endpoint.Filesystem where (Filesystem.file_path=*.zip*   OR Filesystem.file_name=*.lnk ) AND (Filesystem.file_path=C:\\Users* OR Filesystem.file_path=*Local\\Temp*) by  _time span=5m Filesystem.process_id Filesystem.file_hash Filesystem.dest  
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename process_id as malicious_id
| fields malicious_id outlook_id dest file_path file_name file_hash count file_id] 
| table firstTime lastTime user malicious_id outlook_id process_name parent_process_name file_name  file_path 
| where file_name != """" 
| `detect_outlook_exe_writing_a_zip_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.parent_process_id', 'Processes.process_id', 'Processes.dest', 'Processes.parent_process_name', 'Processes.user']",It is not uncommon for outlook to write legitimate zip files to the disk.,"['Spearphishing Attachments', 'Amadey', 'Remcos']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/remcos']",N/A,"['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a51bfe1a-94f0-48cc-b1e4-16ae10145893/,Detect processes used for System Network Configuration Discovery,['T1016'],This search looks for fast execution of processes used for system network configuration discovery on the endpoint.,['TTP'],"November 10, 2020","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where NOT Processes.user IN ("""",""unknown"") by Processes.dest Processes.process_name Processes.parent_process_name Processes.user _time 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| search `system_network_configuration_discovery_tools` 
| transaction dest connected=false maxpause=5m 
|where eventcount>=5 
| table firstTime lastTime dest user process_name process parent_process parent_process_name eventcount 
| `detect_processes_used_for_system_network_configuration_discovery_filter`","['security_content_summariesonly', 'system_network_configuration_discovery_tools', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",It is uncommon for normal users to execute a series of commands used for network discovery. System administrators often use scripts to execute these commands. These can generate false positives.,['Unusual Processes'],['https://research.splunk.com/stories/unusual_processes'],N/A,"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery']",['Endpoint']
https://research.splunk.com/endpoint/a51bfe1a-94f0-48cc-b4e4-16a110145893/,Attacker Tools On Endpoint,"['T1036.005', 'T1036', 'T1003', 'T1595']","The following analytic detects the use of tools that are commonly exploited by cybercriminals since these tools are usually associated with malicious activities such as unauthorized access, network scanning, or data exfiltration and pose a significant threat to an organization's security infrastructure. It also provides enhanced visibility into potential security threats and helps to proactively detect and respond to mitigate the risks associated with cybercriminal activities. This detection is made by examining the process activity on the host, specifically focusing on processes that are known to be associated with attacker tool names. This detection is important because it acts as an early warning system for potential security incidents that allows you to respond to security incidents promptly. False positives might occur due to legitimate administrative activities that can resemble malicious actions. You must develop a comprehensive understanding of typical endpoint activities and behaviors within the organization to accurately interpret and respond to the alerts generated by this analytic. This ensures a proper balance between precision and minimizing false positives.",['TTP'],"January 1, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.user!=unknown by Processes.dest Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup attacker_tools attacker_tool_names AS process_name OUTPUT description 
| search description !=false
| `attacker_tools_on_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.process_name', 'Processes.parent_process']","Some administrator activity can be potentially triggered, please add those users to the filter macro.","['Monitor for Unauthorized Software', 'XMRig', 'SamSam Ransomware', 'Unusual Processes', 'CISA AA22-264A']","['https://research.splunk.com/stories/monitor_for_unauthorized_software', 'https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/cisa_aa22-264a']",N/A,"['Active Scanning', 'Credential Access', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Match Legitimate Name or Location', 'OS Credential Dumping', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a5d85486-b89c-11eb-8267-acde48001122/,Allow Inbound Traffic In Firewall Rule,"['T1021.001', 'T1021']",The following analytic identifies suspicious PowerShell command to allow inbound traffic inbound to a specific local port within the public profile. This technique was seen in some attacker want to have a remote access to a machine by allowing the traffic in firewall rule.,['TTP'],"May 19, 2021","`powershell` EventCode=4104 Message = ""*firewall*"" Message = ""*Inbound*"" Message = ""*Allow*""  Message = ""*-LocalPort*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `allow_inbound_traffic_in_firewall_rule_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",administrator may allow inbound traffic in certain network or machine.,['Prohibited Traffic Allowed or Protocol Mismatch'],['https://research.splunk.com/stories/prohibited_traffic_allowed_or_protocol_mismatch'],['https://docs.microsoft.com/en-us/powershell/module/netsecurity/new-netfirewallrule?view=windowsserver2019-ps'],"['Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a5e451f8-da81-11eb-b245-acde48001122/,Spoolsv Suspicious Loaded Modules,"['T1547.012', 'T1547']",This search is to detect suspicious loading of dll in specific path relative to printnightmare exploitation. In this search we try to detect the loaded modules made by spoolsv.exe after the exploitation.,['TTP'],"July 1, 2021","`sysmon` EventCode=7 Image =""*\\spoolsv.exe"" ImageLoaded=""*\\Windows\\System32\\spool\\drivers\\x64\\*"" ImageLoaded = ""*.dll"" 
| stats dc(ImageLoaded) as countImgloaded values(ImageLoaded) as ImgLoaded count min(_time) as firstTime max(_time) as lastTime by Image Computer ProcessId EventCode 
| rename Computer as dest 
| where countImgloaded >= 3 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `spoolsv_suspicious_loaded_modules_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'dest', 'EventCode', 'ImageLoaded']",unknown,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],['https://raw.githubusercontent.com/hieuttmmo/sigma/dceb13fe3f1821b119ae495b41e24438bd97e3d0/rules/windows/image_load/sysmon_cve_2021_1675_print_nightmare.yml'],"['Boot or Logon Autostart Execution', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a5fffbbd-271f-4980-94ed-4fbf17f0af1c/,Windows Njrat Fileless Storage via Registry,"['T1027.011', 'T1027']","The following analytic identifies a suspicious registry modification associated with NjRat, a telltale sign of its fileless technique. NjRat employs this method to manage its keylogs and execute downloaded DLL module plugins discreetly on the compromised host. This approach is particularly effective at evading conventional file-based detection systems, as it stores indicators of compromise (IOCs) in the registry. Leveraging this TTP (Tactics, Techniques, and Procedures) detection can significantly enhance the identification of NjRAT infections.",['TTP'],"September 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\[kl]"" OR  Registry.registry_value_data IN (""*[ENTER]*"", ""*[TAP]*"", ""*[Back]*"") by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name Registry.registry_value_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_njrat_fileless_storage_via_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",unknown,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Fileless Storage', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a602d9a2-aaea-45f8-bf0f-d851168d61ca/,Windows PaperCut NG Spawn Shell,"['T1059', 'T1190', 'T1133']","The following analytic is designed to detect instances where the PaperCut NG application (pc-app.exe) spawns a Windows shell, specifically cmd.exe or PowerShell. This behavior may indicate potential malicious activity, such as an attacker attempting to gain unauthorized access or execute harmful commands on the affected system.",['TTP'],"May 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=pc-app.exe `process_cmd` OR `process_powershell` OR Processes.process_name=java.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_papercut_ng_spawn_shell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_cmd', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, but most likely not. Filter as needed.",['PaperCut MF NG Vulnerability'],['https://research.splunk.com/stories/papercut_mf_ng_vulnerability'],"['https://www.cisa.gov/news-events/alerts/2023/05/11/cisa-and-fbi-release-joint-advisory-response-active-exploitation-papercut-vulnerability', 'https://www.papercut.com/kb/Main/PO-1216-and-PO-1219']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a6b3ab4e-dd77-4213-95fa-fc94701995e0/,Suspicious Reg exe Process,['T1112'],"This search looks for reg.exe being launched from a command prompt not started by the user. When a user launches cmd.exe, the parent process is usually explorer.exe. This search filters out those instances.",['Anomaly'],"July 22, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name != explorer.exe Processes.process_name =cmd.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| search [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.parent_process_name=cmd.exe Processes.process_name= reg.exe by Processes.parent_process_id Processes.dest Processes.process_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename parent_process_id as process_id 
|dedup process_id
| table process_id dest] 
| `suspicious_reg_exe_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest', 'Processes.process_id', 'Processes.parent_process_id']","It's possible for system administrators to write scripts that exhibit this behavior. If this is the case, the search will need to be modified to filter them out.","['Windows Defense Evasion Tactics', 'Disabling Security Tools', 'DHS Report TA18-074A']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/disabling_security_tools', 'https://research.splunk.com/stories/dhs_report_ta18-074a']",['https://car.mitre.org/wiki/CAR-2013-03-001/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a7093c28-796c-4ebb-9997-e2c18b870837/,Windows PowerView SPN Discovery,"['T1558', 'T1558.003']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainUser or Get-NetUSer commandlets with specific parameters. These commandlets are part of PowerView, a PowerShell tool used to perform enumeration and discovery on Windows Active Directory networks. As the names suggest, these commandlets are used to identify domain users in a network and combining them with the -SPN parameter allows adversaries to discover domain accounts associated with a Service Principal Name (SPN). Red Teams and adversaries alike may leverage PowerView and these commandlets to identify accounts that can be attacked with the Kerberoasting technique.",['TTP'],"December 27, 2023","`powershell` EventCode=4104 (ScriptBlockText =*Get-NetUser* OR ScriptBlockText=*Get-DomainUser*) ScriptBlockText= *-SPN* 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_powerview_spn_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Computer', 'ScriptBlockText']",False positive may include Administrators using PowerView for troubleshooting and management.,"['CISA AA23-347A', 'Rhysida Ransomware', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberoast', 'https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting', 'https://attack.mitre.org/techniques/T1558/003']","['Credential Access', 'Credential Access', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/a7a7afdb-3c58-45b6-9bff-63e5acfd9d40/,Windows Modify Registry Default Icon Setting,['T1112'],This analytic is developed to detect suspicious registry modification to change the default icon association of windows to ransomware . This technique was seen in Lockbit ransomware where it modified the default icon association of the compromised Windows OS  host with its dropped ransomware icon file as part of its  defacement payload. This registry is not commonly modified by a normal user so having this anomaly detection may help to catch possible lockbit ransomware infection or other malware.,['Anomaly'],"January 16, 2023","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path =""*\\defaultIcon\\(Default)*"" Registry.registry_path = ""*HKCR\\*"" by Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.action Registry.dest  Registry.user 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(Registry)` 
| `windows_modify_registry_default_icon_setting_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.action']",unknown,['LockBit Ransomware'],['https://research.splunk.com/stories/lockbit_ransomware'],"['https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html', 'https://news.sophos.com/en-us/2020/04/24/lockbit-ransomware-borrows-tricks-to-keep-up-with-revil-and-maze/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a7e3f0f0-ae42-11eb-b245-acde48001122/,Executables Or Script Creation In Suspicious Path,['T1036'],"This analytic identifies potentially malicious executables or scripts by examining a list of suspicious file paths on Windows Operating System. The purpose of this technique is to uncover files with known file extensions that could be used by adversaries to evade detection and persistence. The suspicious file paths selected for investigation are typically uncommon and uncommonly associated with executable or script files. By scrutinizing these paths, we can proactively identify potential security threats and enhance overall system security.",['Anomaly'],"December 27, 2023","|tstats `security_content_summariesonly` values(Filesystem.file_path) as file_path count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where (Filesystem.file_name = *.exe OR Filesystem.file_name = *.dll OR Filesystem.file_name = *.sys OR Filesystem.file_name = *.com OR Filesystem.file_name = *.vbs OR Filesystem.file_name = *.vbe OR Filesystem.file_name = *.js OR Filesystem.file_name = *.ps1 OR Filesystem.file_name = *.bat OR Filesystem.file_name = *.cmd OR Filesystem.file_name = *.pif) AND ( Filesystem.file_path = *\\windows\\fonts\\* OR Filesystem.file_path = *\\windows\\temp\\* OR Filesystem.file_path = *\\users\\public\\* OR Filesystem.file_path = *\\windows\\debug\\* OR Filesystem.file_path = *\\Users\\Administrator\\Music\\* OR Filesystem.file_path = *\\Windows\\servicing\\* OR Filesystem.file_path = *\\Users\\Default\\* OR Filesystem.file_path = *Recycle.bin* OR Filesystem.file_path = *\\Windows\\Media\\* OR Filesystem.file_path = *\\Windows\\repair\\* OR Filesystem.file_path = *\\AppData\\Local\\Temp* OR Filesystem.file_path = *\\PerfLogs\\*) by Filesystem.file_create_time Filesystem.process_id  Filesystem.file_name Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `executables_or_script_creation_in_suspicious_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_path', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user']",Administrators may allow creation of script or exe in the paths specified. Filter as needed.,"['Double Zero Destructor', 'Graceful Wipe Out Attack', 'AsyncRAT', 'WhisperGate', 'DarkGate Malware', 'AgentTesla', 'Brute Ratel C4', 'NjRAT', 'RedLine Stealer', 'Rhysida Ransomware', 'Swift Slicer', 'IcedID', 'DarkCrystal RAT', 'Chaos Ransomware', 'PlugX', 'Industroyer2', 'Azorult', 'Remcos', 'XMRig', 'Qakbot', 'Volt Typhoon', 'Hermetic Wiper', 'Warzone RAT', 'Trickbot', 'Amadey', 'BlackByte Ransomware', 'LockBit Ransomware', 'CISA AA23-347A', 'Data Destruction', 'Snake Keylogger']","['https://research.splunk.com/stories/double_zero_destructor', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/swift_slicer', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/snake_keylogger']","['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://twitter.com/pr0xylife/status/1590394227758104576', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Defense Evasion', 'Endpoint', 'Masquerading', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a7fbbc4e-4571-424a-b627-6968e1c939e4/,Windows Domain Account Discovery Via Get-NetComputer,"['T1087', 'T1087.002']","The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets Get-NetComputer. This technique was seen used in the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user account's ""samccountname"", ""accountexpires"", ""lastlogon"" and so on. This hunting query is a good pivot to look for suspicious process or malware that gather user account information in a host or within network system.",['Anomaly'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetComputer*"" ScriptBlockText IN (""*samaccountname*"", ""*accountexpires*"", ""*lastlogon*"", ""*lastlogoff*"", ""*pwdlastset*"", ""*logoncount*"") 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_domain_account_discovery_via_get_netcomputer_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a85aa37e-9647-11ec-90c5-acde48001122/,Windows Raw Access To Disk Volume Partition,"['T1561.002', 'T1561']","This analytic is to look for suspicious raw access read to device disk partition of the host machine. This technique was seen in several attacks by adversaries or threat actor to wipe, encrypt or overwrite the boot sector of each partition as part of their impact payload for example the ""hermeticwiper"" malware. This detection is a good indicator that there is a process try to read or write on boot sector.",['Anomaly'],"June 13, 2023","`sysmon` EventCode=9 Device = \\Device\\HarddiskVolume* NOT (Image IN(""*\\Windows\\System32\\*"", ""*\\Windows\\SysWOW64\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest signature signature_id process_guid process_name process_path Device 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_raw_access_to_disk_volume_partition_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'signature', 'signature_id', 'process_guid', 'process_name', 'process_path', 'Device', 'EventCode', 'Image']",This event is really notable but we found minimal number of normal application from system32 folder like svchost.exe accessing it too. In this case we used 'system32' and 'syswow64' path as a filter for this detection.,"['CISA AA22-264A', 'Graceful Wipe Out Attack', 'Data Destruction', 'Hermetic Wiper', 'Caddy Wiper', 'BlackByte Ransomware', 'NjRAT']","['https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/caddy_wiper', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/njrat']",['https://blog.talosintelligence.com/2022/02/threat-advisory-hermeticwiper.html'],"['Disk Structure Wipe', 'Disk Wipe', 'Impact', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a87736a6-95cd-4728-8689-3c64d5026b3e/,Domain Group Discovery With Wmic,"['T1069', 'T1069.002']",This analytic looks for the execution of wmic.exe with command-line arguments utilized to query for domain groups. The arguments utilized in this command return a list of all domain groups. Red Teams and adversaries alike use wmic.exe to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process=*/NAMESPACE:\\\\root\\directory\\ldap* AND Processes.process=*ds_group* AND Processes.process=""*GET ds_samaccountname*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a8b3124e-2278-4b73-ae9c-585117079fb2/,Windows Credentials in Registry Reg Query,"['T1552.002', 'T1552']","The following analytic identifies a process command line related to the discovery of possible password or credentials in the registry. This technique is being abused by adversaries or post exploitation tools like winpeas to steal credentials in the registry in the targeted host. Registry can contain several sensitive information like username and credentials that can be used for privilege escalation, persistence or even in lateral movement. This Anomaly detection can be a good pivot to detect a suspicious process querying a registry related to password or private keys.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_reg` AND Processes.process = ""* query *"" AND Processes.process IN (""*\\Software\\ORL\\WinVNC3\\Password*"", ""*\\SOFTWARE\\RealVNC\\WinVNC4 /v password*"", ""*\\CurrentControlSet\\Services\\SNMP*"", ""*\\Software\\TightVNC\\Server*"", ""*\\Software\\SimonTatham\\PuTTY\\Sessions*"", ""*\\Software\\OpenSSH\\Agent\\Keys*"", ""*password*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_in_registry_reg_query_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://attack.mitre.org/techniques/T1552/002/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Credential Access', 'Credentials in Registry', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/a9079b18-1633-11ec-859c-acde48001122/,Check Elevated CMD using whoami,['T1033'],This search is to detect a suspicious whoami execution to check if the cmd or shell instance process is with elevated privileges. This technique was seen in FIN7 js implant where it execute this as part of its data collection to the infected machine to check if the running shell cmd process is elevated or not. This TTP is really a good alert for known attacker that recon on the targetted host. This command is not so commonly executed by a normal user or even an admin to check if a process is elevated.,['TTP'],"September 15, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process = ""*whoami*"" Processes.process = ""*/group*"" Processes.process = ""* find *"" Processes.process = ""*12288*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `check_elevated_cmd_using_whoami_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_id', 'Processes.process', 'Processes.dest', 'Processes.user']",unknown,['FIN7'],['https://research.splunk.com/stories/fin7'],N/A,"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/a913718a-25b6-11ec-96d3-acde48001122/,Rundll32 Shimcache Flush,['T1112'],This analytic is to detect a suspicious rundll32 commandline to clear shim cache. This technique is a anti-forensic technique to clear the cache taht are one important artifacts in terms of digital forensic during attacks or incident. This TTP is a good indicator that someone tries to evade some tools and clear foothold on the machine.,['TTP'],"October 5, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_rundll32` AND Processes.process = ""*apphelp.dll,ShimFlushCache*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_shimcache_flush_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']",['https://blueteamops.medium.com/shimcache-flush-89daff28d15e'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a9a1da02-8e27-4bf7-a348-f4389c9da487/,GetAdComputer with PowerShell Script Block,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGroup commandlet. The Get-AdGroup commandlet is used to return a list of all domain computers. Red Teams and adversaries may leverage this commandlet to enumerate domain computers for situational awareness and Active Directory Discovery.,['Hunting'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-AdComputer*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getadcomputer_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Active Directory Discovery', 'CISA AA22-320A']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa22-320a']","['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a9e0d6d3-9676-4e26-994d-4e0406bb4467/,Windows Mimikatz Binary Execution,['T1003'],"As simple as it sounds, this analytic identifies when the native mimikatz.exe binary executes on Windows. It does look for the original file name as well, just in case the binary is renamed. Adversaries sometimes bring in the default binary and run it directly. Benjamin Delpy originally created Mimikatz as a proof of concept to show Microsoft that its authentication protocols were vulnerable to an attack. Instead, he inadvertently created one of the most widely used and downloaded threat actor tools of the past 20 years. Mimikatz is an open-source application that allows users to view and save authentication credentials such as Kerberos tickets.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=mimikatz.exe OR Processes.original_file_name=mimikatz.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_mimikatz_binary_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited as this is directly looking for Mimikatz, the credential dumping utility.","['Volt Typhoon', 'Sandworm Tools', 'Credential Dumping', 'Flax Typhoon', 'CISA AA22-320A', 'CISA AA23-347A']","['https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf', 'https://www.varonis.com/blog/what-is-mimikatz', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['Credential Access', 'Endpoint', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/a9e5c5db-db11-43ca-86a8-c852d1b2c0ec/,Common Ransomware Extensions,['T1485'],"The following analytic detects Searches for file modifications that commonly occur with Ransomware to detect modifications to files with extensions that are commonly used by Ransomware. The detection is made by searches for changes in the datamodel=Endpoint.Filesystem, specifically modifications to file extensions that match those commonly used by Ransomware. The detection is important because it suggests that an attacker is attempting to encrypt or otherwise modify files in the environment using malware, potentially leading to data loss that can cause significant damage to an organization's data and systems. False positives might occur so the SOC must investigate the affected system to determine the source of the modification and take appropriate action to contain and remediate the attack.",['Hunting'],"November 10, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime count latest(Filesystem.user) as user values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name Filesystem.dest _time span=1h 
| `drop_dm_object_name(Filesystem)` 
| rex field=file_name ""(?<file_extension>\.[^\.]+)$"" 
| rex field=file_path ""(?<true_file_path>([^\\\]*\\\)*).*"" 
| stats min(firstTime) as firstTime max(lastTime) as lastTime latest(user) as user dc(true_file_path) as path_count dc(file_name) as file_count latest(file_name) as file_name latest(true_file_path) as file_path by dest file_extension 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `ransomware_extensions` 
| where path_count > 1 OR file_count > 20 
| `common_ransomware_extensions_filter`","['security_content_summariesonly', 'ransomware_extensions', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name']","It is possible for a legitimate file with these extensions to be created. If this is a true ransomware attack, there will be a large number of files created with these extensions.","['SamSam Ransomware', 'Ryuk Ransomware', 'Ransomware', 'Clop Ransomware', 'Prestige Ransomware', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://github.com/splunk/security_content/issues/2448'],"['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/aa0c4aeb-5b18-41c4-8c07-f1442d7599df/,Child Processes of Spoolsv exe,['T1068'],This search looks for child processes of spoolsv.exe. This activity is associated with a POC privilege-escalation exploit associated with CVE-2018-8440. Spoolsv.exe is the process associated with the Print Spooler service in Windows and typically runs as SYSTEM.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=spoolsv.exe AND Processes.process_name!=regsvr32.exe by Processes.dest Processes.parent_process Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `child_processes_of_spoolsv_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.dest', 'Processes.parent_process', 'Processes.user']",Some legitimate printer-related processes may show up as children of spoolsv.exe. You should confirm that any activity as legitimate and may be added as exclusions in the search.,"['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation']",N/A,"['Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/aa1748dd-4a5c-457a-9cf6-ca7b4eb711b3/,Linux SSH Remote Services Script Execute,['T1021.004'],The following analytic identifies SSH being utilized to move laterally and execute a script or file on the remote host.,['TTP'],"March 3, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process_name=ssh Processes.process IN (""*oStrictHostKeyChecking*"", ""*oConnectTimeout*"", ""*oBatchMode*"") AND Processes.process IN (""*http:*"",""*https:*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_ssh_remote_services_script_execute_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",This is not a common command to be executed. Filter as needed.,['Linux Living Off The Land'],['https://research.splunk.com/stories/linux_living_off_the_land'],['https://redcanary.com/blog/lateral-movement-with-secure-shell/'],"['Endpoint', 'Lateral Movement', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'SSH']",['Endpoint']
https://research.splunk.com/endpoint/aa4f695a-3024-11ec-9987-acde48001122/,Disable Defender AntiVirus Registry,"['T1562.001', 'T1562']","This particular behavior is typically executed when an adversary or malware gains access to an endpoint and begins to perform execution and to evade detections. Usually, a batch (.bat) file will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",['TTP'],"April 11, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Policies\\Microsoft\\Windows Defender*"" Registry.registry_value_name IN (""DisableAntiSpyware"",""DisableAntiVirus"") Registry.registry_value_data = 0x00000001) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_antivirus_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['IcedID', 'Windows Registry Abuse']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/aa502688-9037-11ec-842d-acde48001122/,Windows Diskshadow Proxy Execution,['T1218'],"DiskShadow.exe is a Microsoft Signed binary present on Windows Server. It has a scripting mode intended for complex scripted backup operations. This feature also allows for execution of arbitrary unsigned code. This analytic looks for the usage of the scripting mode flags in executions of DiskShadow. During triage, compare to known backup behavior in your environment and then review the scripts called by diskshadow.",['Anomaly'],"February 17, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%/s%"" OR process_cmd_line LIKE ""%-s%"") AND process_file_name=""diskshadow.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",Administrators using the DiskShadow tool in their infrastructure as a main backup tool with scripts will cause false positives,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],['https://bohops.com/2018/03/26/diskshadow-the-return-of-vss-evasion-persistence-and-active-directory-database-extraction/'],"['Defense Evasion', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/aa73f80d-d728-4077-b226-81ea0c8be589/,Script Execution via WMI,['T1047'],"The following analytic detects any potential misuse of Windows Management Instrumentation (WMI) for malicious purposes since adversaries often use WMI to run scripts which allows them to carry out malicious activities without raising suspicion. The detection is made by monitoring the process 'scrcons.exe', which is essential to run WMI scripts. The detection is important because it proactively identifies and responds to potential threats that leverage WMI for malicious purposes that can lead to system compromise, data exfiltration, or the establishment of persistence within the environment. False positives might occur since administrators might occasionally use WMI to launch scripts for legitimate purposes. Therefore, you must distinguish between malicious and benign activities.",['TTP'],"March 16, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=scrcons.exe by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `script_execution_via_wmi_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.user', 'Processes.dest']","Although unlikely, administrators may use wmi to launch scripts for legitimate purposes. Filter as needed.",['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],['https://redcanary.com/blog/child-processes/'],"['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/ab1e0d52-624a-11ec-8e0b-acde48001122/,Linux NOPASSWD Entry In Sudoers File,"['T1548.003', 'T1548']","This analytic is to look for suspicious command lines that may add entry to /etc/sudoers with NOPASSWD attribute in linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to gain elevated privilege to the targeted or compromised host. /etc/sudoers file controls who can run what commands users can execute on the machines and can also control whether user need a password to execute particular commands. This file is composed of aliases (basically variables) and user specifications.",['Anomaly'],"December 21, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*NOPASSWD:*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_nopasswd_entry_in_sudoers_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://askubuntu.com/questions/334318/sudoers-file-enable-nopasswd-for-user-all-commands', 'https://help.ubuntu.com/community/Sudoers']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/ab3bcce0-a105-11eb-973c-acde48001122/,Wermgr Process Create Executable File,['T1027'],"this search is designed to detect potential malicious wermgr.exe process that drops or create executable file. Since wermgr.exe is an application trigger when error encountered in a process, it is really un ussual to this process to drop executable file. This technique is commonly seen in trickbot malware where it injects it code to this process to execute it malicious behavior like downloading other payload",['TTP'],"April 19, 2021","`sysmon` EventCode=11 process_name = ""wermgr.exe"" TargetFilename = ""*.exe"" 
| stats  min(_time) as firstTime max(_time) as lastTime count by  Image TargetFilename process_name dest EventCode ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wermgr_process_create_executable_file_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'TargetFilename', 'process_name', 'dest', 'EventCode', 'ProcessId']",unknown,['Trickbot'],['https://research.splunk.com/stories/trickbot'],"['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/']","['Defense Evasion', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ab73289e-2246-4de0-a14b-67006c72a893/,Windows ClipBoard Data via Get-ClipBoard,['T1115'],"The following analytic identifies a powershell script command to retrieve clipboard data. This technique was seen in several post exploitation tools like WINPEAS to steal sensitive information that was saved in clipboard. Using the Get-Clipboard powershell commandlet, adversaries can be able collect data stored in clipboard that might be a copied user name, password or other sensitive information.",['Anomaly'],"November 30, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Get-Clipboard*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_clipboard_data_via_get_clipboard_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']","It is possible there will be false positives, filter as needed.","['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://attack.mitre.org/techniques/T1115/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Clipboard Data', 'Collection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ab75dbb7-c3ba-4689-9c1b-8d2717bdcba1/,Linux Sqlite3 Privilege Escalation,"['T1548.003', 'T1548']","sqlite3 is a terminal-based front-end to the SQLite library that can evaluate queries interactively and display the results in multiple formats. sqlite3 can also be used within shell scripts and other applications to provide batch processing features. If sudo right is given to this application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*sqlite3*"" AND Processes.process=""*.shell*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_sqlite3_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/sqlite3/', 'https://manpages.ubuntu.com/manpages/trusty/en/man1/sqlite3.1.html']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/abfb7cc5-c275-4a97-9029-62cd8d4ffeca/,Windows System Network Connections Discovery Netsh,['T1049'],"The following analytic identifies a process execution of Windows OS built-in tool netsh.exe to show state, configuration and profile of host firewall. This tool is being used or abused by several adversaries or even post exploitation tool to bypass firewall rules or to discover firewall settings. This hunting detection can help to detect a possible suspicious usage of netsh.exe to retrieve firewall settings or even firewall wlan profile. We recommend checking which parent process and process name execute this command. Also check the process file path for verification that may lead to further TTP's threat behavior.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh`AND Processes.process = ""* show *"" Processes.process IN (""*state*"", ""*config*"", ""*wlan*"", ""*profile*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_network_connections_discovery_netsh_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this tool for auditing process.,"['Windows Post-Exploitation', 'Prestige Ransomware', 'Snake Keylogger']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/snake_keylogger']","['https://attack.mitre.org/techniques/T1049/', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/ac3311f5-661d-4e99-bd1f-3ec665b05441/,Windows Mail Protocol In Non-Common Process Path,"['T1071.003', 'T1071']","The following analytic identifies a possible windows application having a SMTP connection in a non common installation path in windows operating system.This network protocol is being used by adversaries, threat actors and malware like AgentTesla as a Command And Control communication to transfer its collected stolen information like the desktop screenshots, browser information and system information of a targeted or compromised host.",['Anomaly'],"September 16, 2022","`sysmon` EventCode=3 NOT(Image IN(""*\\program files*"", ""*\\thunderbird.exe"",""*\\outlook.exe"")) (DestinationPortName=""smtp"" OR DestinationPort=25 OR DestinationPort=587) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image DestinationPort DestinationPortName DestinationHostname SourceHostname SourcePort SourcePortName Protocol DestinationIp dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_mail_protocol_in_non_common_process_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'DestinationPort', 'DestinationPortName', 'DestinationHostname', 'SourceHostname', 'SourcePort', 'SourcePortName', 'Protocol', 'DestinationIp', 'dest', 'user']",third party application may use this network protocol as part of its feature. Filter is needed.,['AgentTesla'],['https://research.splunk.com/stories/agenttesla'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.agent_tesla'],"['Application Layer Protocol', 'Command And Control', 'Command And Control', 'Mail Protocols', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ac3b81c0-52f4-11ec-ac44-acde48001122/,Unusual Number of Computer Service Tickets Requested,['T1078'],"The following hunting analytic leverages Event ID 4769, A Kerberos service ticket was requested, to identify an unusual number of computer service ticket requests from one source. When a domain joined endpoint connects to a remote endpoint, it first will request a Kerberos Ticket with the computer name as the Service Name. An endpoint requesting a large number of computer service tickets for different endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc. The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of service requests. To customize this analytic, users can try different combinations of the bucket span time,  the calculation of the upperBound field as well as the Outlier calculation. This logic can be used for real time security monitoring as well as threat hunting exercises.",['Hunting'],"December 1, 2021","`wineventlog_security` EventCode=4769 Service_Name=""*$"" Account_Name!=""*$*"" 
| bucket span=2m _time 
| stats dc(Service_Name) AS unique_targets values(Service_Name) as host_targets by _time, Client_Address, Account_Name 
| eventstats avg(unique_targets) as comp_avg , stdev(unique_targets) as comp_std by Client_Address, Account_Name 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_targets >10 and unique_targets >= upperBound, 1, 0) 
| `unusual_number_of_computer_service_tickets_requested_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Ticket_Options', 'Ticket_Encryption_Type', 'dest', 'service', 'service_id']","An single endpoint requesting a large number of computer service tickets is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, administration systeams and missconfigured systems.","['Active Directory Lateral Movement', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']",['https://attack.mitre.org/techniques/T1078/'],"['Defense Evasion', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/acb5dc74-5324-11ec-a36d-acde48001122/,Unusual Number of Remote Endpoint Authentication Events,['T1078'],"The following hunting analytic leverages Event ID 4624, An account was successfully logged on, to identify an unusual number of remote authentication attempts coming from one source. An endpoint authenticating to a large number of remote endpoints could represent malicious behavior like lateral movement, malware staging, reconnaissance, etc. The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual high number of authentication events.To customize this analytic, users can try different combinations of the bucket span time,  the calculation of the upperBound field as well as the Outlier calculation.This logic can be used for real time security monitoring as well as threat hunting exercises.",['Hunting'],"December 1, 2021","`wineventlog_security` EventCode=4624 Logon_Type=3 Account_Name!=""*$"" 
| eval Source_Account = mvindex(Account_Name, 1) 
| bucket span=2m _time 
| stats dc(ComputerName) AS unique_targets values(ComputerName) as target_hosts by _time, Source_Network_Address, Source_Account 
| eventstats avg(unique_targets) as comp_avg , stdev(unique_targets) as comp_std by Source_Network_Address, Source_Account 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_targets >10 and unique_targets >= upperBound, 1, 0) 
| `unusual_number_of_remote_endpoint_authentication_events_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'Caller_Process_Name', 'Security_ID', 'Account_Name', 'ComputerName']","An single endpoint authenticating to a large number of hosts is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, jump servers and missconfigured systems.","['Active Directory Lateral Movement', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/active_directory_privilege_escalation']",['https://attack.mitre.org/techniques/T1078/'],"['Defense Evasion', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/accb0712-c381-11eb-8e5b-acde48001122/,Modification Of Wallpaper,['T1491'],This analytic identifies suspicious modification of registry to deface or change the wallpaper of a compromised machines as part of its payload. This technique was commonly seen in ransomware like REVIL where it create a bitmap file contain a note that the machine was compromised and make it as a wallpaper.,['TTP'],"June 2, 2021","`sysmon` EventCode =13  (TargetObject IN (""*\\Control Panel\\Desktop\\Wallpaper"",""*\\Control Panel\\Desktop\\WallpaperStyle"") AND Image != ""*\\explorer.exe"") OR (TargetObject IN (""*\\Control Panel\\Desktop\\Wallpaper"",""*\\Control Panel\\Desktop\\WallpaperStyle"") AND Details IN (""*\\temp\\*"", ""*\\users\\public\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Image TargetObject Details Computer process_guid process_id user_id 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `modification_of_wallpaper_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'Image', 'TargetObject', 'Details', 'dest', 'process_guid', 'process_id', 'user_id']",3rd party tool may used to changed the wallpaper of the machine,"['Ransomware', 'Revil Ransomware', 'BlackMatter Ransomware', 'Windows Registry Abuse', 'Brute Ratel C4', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware', 'https://research.splunk.com/stories/blackmatter_ransomware', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://krebsonsecurity.com/2021/05/a-closer-look-at-the-darkside-ransomware-gang/', 'https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-atr-analyzes-sodinokibi-aka-revil-ransomware-as-a-service-what-the-code-tells-us/', 'https://news.sophos.com/en-us/2020/04/24/lockbit-ransomware-borrows-tricks-to-keep-up-with-revil-and-maze/']","['Defacement', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ad03bfcf-8a91-4bc2-a500-112993deba87/,System User Discovery With Query,['T1033'],This analytic looks for the execution of query.exe with command-line arguments utilized to discover the logged user. Red Teams and adversaries alike may leverage query.exe to identify system users on a compromised endpoint for situational awareness and Active Directory Discovery.,['Hunting'],"September 13, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""query.exe"") (Processes.process=*user*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_user_discovery_with_query_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1033/'],"['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Owner/User Discovery']",['Endpoint']
https://research.splunk.com/endpoint/ad05aae6-3b2a-4f73-af97-57bd26cee3b9/,WMI Permanent Event Subscription - Sysmon,"['T1546.003', 'T1546']","This analytic looks for the creation of WMI permanent event subscriptions. The following analytic identifies the use of WMI Event Subscription to establish persistence or perform privilege escalation.  WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges. This analytic is restricted by commonly added process execution and a path. If the volume is low enough, remove the values and flag on any new subscriptions.
All event subscriptions have three components \",['TTP'],"November 7, 2023","`sysmon` EventCode=21 
| rename host as dest 
| table _time, dest, user, Operation, EventType, Query, Consumer, Filter 
| `wmi_permanent_event_subscription___sysmon_filter`",['sysmon'],"['_time', 'EventCode', 'host', 'user', 'Operation', 'EventType', 'Query', 'Consumer', 'Filter']","Although unlikely, administrators may use event subscriptions for legitimate purposes.",['Suspicious WMI Use'],['https://research.splunk.com/stories/suspicious_wmi_use'],"['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.003/T1546.003.md', 'https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/', 'https://github.com/trustedsec/SysmonCommunityGuide/blob/master/chapters/WMI-events.md', 'https://in.security/2019/04/03/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/']","['Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation Event Subscription']",['Endpoint']
https://research.splunk.com/endpoint/ad517544-aff9-4c96-bd99-d6eb43bfbb6a/,Windows Event Log Cleared,"['T1070', 'T1070.001']","The following analytic utilizes Windows Security Event ID 1102 or System log event 104 to identify when a Windows event log is cleared. Note that this analytic will require tuning or restricted to specific endpoints based on criticality. During triage, based on time of day and user, determine if this was planned. If not planned, follow through with reviewing parallel alerts and other data sources to determine what else may have occurred.",['TTP'],"July 6, 2020","(`wineventlog_security` EventCode=1102) OR (`wineventlog_system` EventCode=104) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest Message EventCode 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_event_log_cleared_filter`","['wineventlog_system', 'wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'dest']",It is possible that these logs may be legitimately cleared by Administrators. Filter as needed.,"['Windows Log Manipulation', 'Ransomware', 'Clop Ransomware', 'CISA AA22-264A']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/cisa_aa22-264a']","['https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-1102', 'https://www.ired.team/offensive-security/defense-evasion/disabling-windows-event-logs-by-suspending-eventlog-service-threads', 'https://attack.mitre.org/techniques/T1070/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070.001/T1070.001.md']","['Clear Windows Event Logs', 'Defense Evasion', 'Defense Evasion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ad5ac21b-3b1e-492c-8e19-ea5d5e8e5cf1/,Linux Persistence and Privilege Escalation Risk Behavior,['T1548'],"The following correlation is specific to Linux persistence and privilege escalation tactics and is tied to two analytic stories and any Linux analytic tied to persistence and privilege escalation. These techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.",['Correlation'],"August 30, 2022","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where (All_Risk.analyticstories IN (""Linux Privilege Escalation"", ""Linux Persistence Techniques"") OR source = ""*Linux*"") All_Risk.annotations.mitre_attack.mitre_tactic IN (""persistence"", ""privilege-escalation"") All_Risk.risk_object_type=""system"" by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 4 
| `linux_persistence_and_privilege_escalation_risk_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']",False positives will be present based on many factors. Tune the correlation as needed to reduce too many triggers.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://attack.mitre.org/tactics/TA0004/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Privilege Escalation', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ada0f478-84a8-4641-a3f1-d82362d6bd71/,Common Ransomware Notes,['T1485'],The search looks for files created with names matching those typically used in ransomware notes that tell the victim how to get their data back.,['Hunting'],"November 9, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path from datamodel=Endpoint.Filesystem by Filesystem.file_name 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `ransomware_notes` 
| `common_ransomware_notes_filter`","['security_content_summariesonly', 'ransomware_notes', 'security_content_ctime']","['_time', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.file_path', 'Filesystem.file_name']",It's possible that a legitimate file could be created with the same name used by ransomware note files.,"['SamSam Ransomware', 'Ransomware', 'Ryuk Ransomware', 'Clop Ransomware', 'Chaos Ransomware', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",N/A,"['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/adf47620-79fa-11ec-b248-acde48001122/,Powershell Remove Windows Defender Directory,"['T1562.001', 'T1562']",This analytic will identify a suspicious PowerShell command used to delete the Windows Defender folder. This technique was seen used by the WhisperGate malware campaign where it used Nirsofts advancedrun.exe to gain administrative privileges to then execute a PowerShell command to delete the Windows Defender folder. This is a good indicator the offending process is trying corrupt a Windows Defender installation.,['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*rmdir *"" AND ScriptBlockText = ""*\\Microsoft\\Windows Defender*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_remove_windows_defender_directory_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",unknown,"['Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']",['https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ae008c0f-83bd-4ed4-9350-98d4328e15d2/,Network Connection Discovery With Arp,['T1049'],This analytic looks for the execution of arp.exe utilized to get a listing of network connections on a compromised system. Red Teams and adversaries alike may use arp.exe for situational awareness and Active Directory Discovery.,['Hunting'],"September 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""arp.exe"") (Processes.process=*-a*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_connection_discovery_with_arp_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Active Directory Discovery', 'Qakbot', 'Windows Post-Exploitation', 'Prestige Ransomware', 'Volt Typhoon', 'IcedID']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/icedid']","['https://attack.mitre.org/techniques/T1049/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/ae8b3efc-2d2e-11ec-8b57-acde48001122/,ServicePrincipalNames Discovery with SetSPN,['T1558.003'],"The following analytic identifies setspn.exe usage related to querying the domain for Service Principle Names. typically, this is a precursor activity related to kerberoasting or the silver ticket attack. 
What is a ServicePrincipleName? 
A service principal name (SPN) is a unique identifier of a service instance. SPNs are used by Kerberos authentication to associate a service instance with a service logon account. This allows a client application to request that the service authenticate an account even if the client does not have the account name.
Example usage includes the following \",['TTP'],"October 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_setspn` (Processes.process=""*-t*"" AND Processes.process=""*-f*"") OR (Processes.process=""*-q*"" AND Processes.process=""**/**"") OR (Processes.process=""*-q*"") OR (Processes.process=""*-s*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `serviceprincipalnames_discovery_with_setspn_filter`","['security_content_summariesonly', 'process_setspn', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be caused by Administrators resetting SPNs or querying for SPNs. Filter as needed.,"['Active Directory Discovery', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://docs.microsoft.com/en-us/windows/win32/ad/service-principal-names', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting', 'https://strontic.github.io/xcyclopedia/library/setspn.exe-5C184D581524245DAD7A0A02B51FD2C2.html', 'https://attack.mitre.org/techniques/T1558/003/', 'https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx', 'https://web.archive.org/web/20220212163642/https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/', 'https://blog.zsec.uk/paving-2-da-wholeset/', 'https://msitpros.com/?p=3113', 'https://adsecurity.org/?p=3466']","['Credential Access', 'Endpoint', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ae8d3f4a-acd7-11eb-8846-acde48001122/,Excessive Service Stop Attempt,['T1489'],This analytic identifies suspicious series of attempt to kill multiple services on a system using either net.exe or sc.exe. This technique is use by adversaries to terminate security services or other related services to continue there objective and evade detections.,['Anomaly'],"May 4, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_net` OR  Processes.process_name = ""sc.exe"" OR  Processes.process_name = ""net1.exe"" AND Processes.process=""*stop*"" OR Processes.process=""*delete*"" by Processes.process_name Processes.original_file_name Processes.parent_process_name Processes.dest Processes.user _time span=1m 
| where count >=5 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_service_stop_attempt_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['XMRig', 'Ransomware', 'BlackByte Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/aec755a5-3a2c-4be0-ab34-6540e68644e9/,Windows Process Injection Of Wermgr to Known Browser,"['T1055.001', 'T1055']","This analytic identifies the suspicious Remote Thread execution of wermgr.exe process to ""firefox.exe"", ""chrome.exe"" and other known browsers. This technique was seen in Qakbot malware that executes its malicious code by injecting its code in legitimate Windows Operating System processes such as wermgr.exe to steal information in the compromised host. This TTP detection can be a good pivot to detect wermgr.exe process injected with qakbot code that tries to remote thread code execution in known browsers like firefox and edge which is not a common behavior of this wermgr.exe application.",['TTP'],"October 28, 2022","`sysmon` EventCode=8 SourceImage = ""*\\wermgr.exe"" TargetImage IN (""*\\firefox.exe"", ""*\\chrome.exe"", ""*\\iexplore.exe"",""*\\microsoftedgecp.exe"") 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage SourceProcessGuid SourceProcessId StartAddress StartFunction TargetProcessGuid TargetProcessId  EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_of_wermgr_to_known_browser_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'SourceProcessGuid', 'SourceProcessId', 'StartAddress', 'StartFunction', 'TargetProcessGuid', 'TargetProcessId', 'EventCode', 'dest']",unknown,"['Qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://research.splunk.com/stories/qakbot', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['https://news.sophos.com/en-us/2022/03/10/qakbot-decoded/', 'https://www.trellix.com/en-us/about/newsroom/stories/research/demystifying-qbot-malware.html']","['Defense Evasion', 'Defense Evasion', 'Dynamic-link Library Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/af01f6db-26ac-440e-8d89-2793e303f137/,Windows DLL Side-Loading In Calc,"['T1574.002', 'T1574']",The following analytic identifies suspicious DLL modules loaded by calc.exe that are not in windows %systemroot%\system32 or %systemroot%\sysWoW64 folder. This technique is well used by Qakbot malware to execute its malicious DLL file via dll side loading technique in calc process execution. This TTP detection is a good indicator that a suspicious dll was loaded in a public or non-common installation folder of Windows Operating System that needs further investigation.,['TTP'],"October 24, 2022","`sysmon` EventCode=7 Image = ""*\calc.exe"" AND NOT (Image IN (""*:\\windows\\system32\\*"", ""*:\\windows\\sysWow64\\*"")) AND NOT(ImageLoaded IN(""*:\\windows\\system32\\*"", ""*:\\windows\\sysWow64\\*"", ""*:\\windows\\WinSXS\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded OriginalFileName Product process_name dest EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_dll_side_loading_in_calc_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'OriginalFileName', 'Product', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],['https://www.bitdefender.com/blog/hotforsecurity/new-qakbot-malware-strain-replaces-windows-calculator-dll-to-infected-pcs/'],"['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/afb31de4-d023-11eb-98d5-acde48001122/,Attempt To Disable Services,['T1489'],"The following analytic identifies Windows Service Control, sc.exe, attempting to disable a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then disable it. Adversaries utilize this technique to terminate security services or other related services to continue there objective and evade detections.",['TTP'],"November 24, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%config%"" AND process_cmd_line LIKE ""%disabled%"" AND process_file_name=""sc.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",It is possible administrative scripts may start/stop/delete services. Filter as needed.,"['XMRig', 'Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware']","['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.001/T1562.001.md#atomic-test-14---disable-arbitrary-security-windows-service']","['Impact', 'Service Stop', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/afed80b2-d34b-11eb-a952-acde48001122/,Powershell Enable SMB1Protocol Feature,"['T1027', 'T1027.005']",This search is to detect a suspicious enabling of smb1protocol through powershell.exe. This technique was seen in some ransomware (like reddot) where it enable smb share to do the lateral movement and encrypt other files within the compromise network system.,['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Enable-WindowsOptionalFeature*"" ScriptBlockText = ""*SMB1Protocol*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_enable_smb1protocol_feature_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",network operator may enable or disable this windows feature.,"['Ransomware', 'Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Defense Evasion', 'Defense Evasion', 'Indicator Removal from Tools', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b061dfcc-f0aa-42cc-a6d4-a87f172acb79/,Windows Impair Defenses Disable HVCI,"['T1562.001', 'T1562']","The following analytic refers to a detection mechanism designed to identify when the Hypervisor-protected Code Integrity (HVCI) feature is disabled within the Windows registry. HVCI is a security feature in Windows 10 and Windows Server 2016 that helps protect the kernel and system processes from being tampered with by malicious code. HVCI relies on hardware-assisted virtualization and Microsoft's Hyper-V hypervisor to ensure that only kernel-mode code that has been signed by Microsoft or the system's hardware manufacturer can be executed. This prevents attackers from exploiting vulnerabilities to run unsigned code, like kernel-mode rootkits or other malicious software, at the kernel level. Disabling HVCI may expose the system to security risks and could be an indicator of a potential compromise or unauthorized activity. The analytic aims to detect and report events or configurations that lead to the disabling of HVCI.",['TTP'],"April 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\CurrentControlSet\\Control\\DeviceGuard\\Scenarios\\HypervisorEnforcedCodeIntegrity\\Enabled"" Registry.registry_value_data=""0x00000000""  by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action  Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defenses_disable_hvci_filter`","['security_content_summariesonly', 'security_content_ctime']","['Registry.registry_path', 'Registry.registry_value_data', 'Registry.registry_value_name', 'Registry.process_guid', 'Registry.action', 'Registry.user', 'Registry.dest']",False positives will be limited to administrative scripts disabling HVCI. Filter as needed.,"['BlackLotus Campaign', 'Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/blacklotus_campaign', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b06983f4-8f72-11ec-ab50-acde48001122/,Windows CertUtil Decode File,['T1140'],"CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.",['TTP'],"February 16, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%decode%"" AND process_file_name=""certutil.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Typically seen used to encode files, but it is possible to see legitimate use of decode. Filter based on parent-child relationship, file paths, endpoint or user.","['Deobfuscate-Decode Files or Information', 'Living Off The Land', 'Forest Blizzard']","['https://research.splunk.com/stories/deobfuscate-decode_files_or_information', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/forest_blizzard']","['https://attack.mitre.org/techniques/T1140/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1140/T1140.md', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil', 'https://www.bleepingcomputer.com/news/security/certutilexe-could-allow-attackers-to-download-malware-while-bypassing-av/']","['Defense Evasion', 'Deobfuscate/Decode Files or Information', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/b06a555e-dce0-417d-a2eb-28a5d8d66ef7/,Execution of File with Multiple Extensions,"['T1036', 'T1036.003']","This search looks for processes launched from files that have double extensions in the file name. This is typically done to obscure the ""real"" file extension and make it appear as though the file being accessed is a data file, as opposed to executable content.",['TTP'],"November 18, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*.doc.exe"", ""*.xls.exe"",""*.ppt.exe"", ""*.htm.exe"", ""*.html.exe"", ""*.txt.exe"", ""*.pdf.exe"", ""*.docx.exe"", ""*.xlsx.exe"", ""*.pptx.exe"",""*.one.exe"", ""*.bat.exe"", ""*rtf.exe"") by Processes.dest Processes.user Processes.process Processes.process_name Processes.parent_process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| `execution_of_file_with_multiple_extensions_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process']",None identified.,"['Windows File Extension and Association Abuse', 'Masquerading - Rename System Utilities', 'AsyncRAT', 'DarkGate Malware']","['https://research.splunk.com/stories/windows_file_extension_and_association_abuse', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/darkgate_malware']",['https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b0a078e4-2601-11ec-9aec-acde48001122/,Process Writing DynamicWrapperX,"['T1059', 'T1559.001']","DynamicWrapperX is an ActiveX component that can be used in a script to call Windows API functions, but it requires the dynwrapx.dll to be installed and registered. With that, a binary writing dynwrapx.dll to disk and registering it into the registry is highly suspect. Why is it needed? In most malicious instances, it will be written to disk at a non-standard location. During triage, review parallel processes and pivot on the process_guid. Review the registry for any suspicious modifications meant to load dynwrapx.dll. Identify any suspicious module loads of dynwrapx.dll. This will identify the process that will invoke vbs/wscript/cscript.",['Hunting'],"October 5, 2021","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time Processes.process_id Processes.process_name Processes.dest Processes.process_guid Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""dynwrapx.dll"" by _time Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| fields _time process_guid file_path file_name file_create_time user dest process_name] 
| stats count min(_time) as firstTime max(_time) as lastTime by dest process_name process_guid file_name file_path file_create_time user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `process_writing_dynamicwrapperx_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'process_name', 'process_guid', 'file_name', 'file_path', 'file_create_time user']","False positives should be limited, however it is possible to filter by Processes.process_name and specific processes (ex. wscript.exe). Filter as needed. This may need modification based on EDR telemetry and how it brings in registry data. For example, removal of (Default).",['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/', 'https://www.script-coding.com/dynwrapx_eng.html', 'https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/', 'https://tria.ge/210929-ap75vsddan', 'https://www.virustotal.com/gui/file/cb77b93150cb0f7fe65ce8a7e2a5781e727419451355a7736db84109fa215a89']","['Command and Scripting Interpreter', 'Component Object Model', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b0b34e2c-90de-11ec-baeb-acde48001122/,Disabled Kerberos Pre-Authentication Discovery With PowerView,"['T1558', 'T1558.004']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainUser commandlet with specific parameters. Get-DomainUser is part of PowerView, a PowerShell tool used to perform enumeration on Windows Active Directory networks. As the name suggests, Get-DomainUser is used to identify domain users and combining it with -PreauthNotRequired allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may leverage PowerView to enumerate these accounts and attempt to crack their passwords offline.",['TTP'],"May 3, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-DomainUser*"" AND ScriptBlockText=""*PreauthNotRequired*"") 
| stats count min(_time)  as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `disabled_kerberos_pre_authentication_discovery_with_powerview_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use PowerView for troubleshooting,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://attack.mitre.org/techniques/T1558/004/', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/b11d3979-b2f7-411b-bb1a-bd00e642173b/,Linux Data Destruction Command,['T1485'],The following analytic identifies a unix shell command that can wipe root folders of a linux host. This commandline is being abused by Awfulshred malware that wipes or corrupts files in a targeted Linux host. The shell command uses the rm command with force recursive deletion even in the root folder. This TTP can be a good indicator that a user or a process wants to wipe roots directory files in Linux host.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""rm""  AND Processes.process IN (""* -rf*"", ""* -fr*"") AND Processes.process = ""* --no-preserve-root"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_data_destruction_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://cert.gov.ua/article/3718487', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/']","['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b12c89bc-9d06-11eb-a592-acde48001122/,Office Document Executing Macro Code,"['T1566', 'T1566.001']","this detection was designed to identifies suspicious office documents that using macro code. Macro code is known to be one of the prevalent weaponization or attack vector of threat actor. This malicious macro code is embed to a office document as an attachment that may execute malicious payload, download malware payload or other malware component. It is really good practice to disable macro by default to avoid automatically execute macro code while opening or closing a office document files.",['TTP'],"January 24, 2023","`sysmon` EventCode=7 parent_process_name IN (""WINWORD.EXE"", ""EXCEL.EXE"", ""POWERPNT.EXE"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"") ImageLoaded IN (""*\\VBE7INTL.DLL"",""*\\VBE7.DLL"", ""*\\VBEUI.DLL"") 
| stats min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) as AllImageLoaded count by Computer EventCode Image process_name ProcessId ProcessGuid 
| rename Computer as dest
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `office_document_executing_macro_code_filter`","['security_content_ctime', 'sysmon']","['ImageLoaded', 'AllImageLoaded', 'dest', 'EventCode', 'Image', 'process_name', 'ProcessId', 'ProcessGuid', '_time']",Normal Office Document macro use for automation,"['Spearphishing Attachments', 'Trickbot', 'IcedID', 'DarkCrystal RAT', 'AgentTesla', 'Qakbot', 'Azorult', 'Remcos', 'PlugX', 'NjRAT']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/njrat']","['https://www.joesandbox.com/analysis/386500/0/html', 'https://www.joesandbox.com/analysis/702680/0/html', 'https://bazaar.abuse.ch/sample/02cbc1ab80695fc12ff8822b926957c3a600247b9ca412a137f69cb5716c8781/', 'https://www.fortinet.com/blog/threat-research/latest-remcos-rat-phishing', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/', 'https://www.fortinet.com/blog/threat-research/leveraging-microsoft-office-documents-to-deliver-agent-tesla-and-njrat']","['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b188d11a-eba7-419d-b8b6-cc265b4f2c4f/,Windows Delete or Modify System Firewall,"['T1562', 'T1562.004']","This analytic identifies potentially malicious 'netsh' processes that manipulate firewall configurations. This behavior has been observed in the NJRAT malware, which deletes its added firewall rules as part of its cleanup process. Leveraging this anomaly detection can be a valuable approach for detecting malware, such as NJRAT, that makes alterations to firewall configurations as a component of its malicious activities.",['Anomaly'],"September 8, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process = ""* firewall *"" Processes.process = ""* delete *"" by Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process_id Processes.process_guid Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_delete_or_modify_system_firewall_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator may modify or delete firewall configuration.,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b1a8ce04-04c2-11ec-bea7-acde48001122/,Domain Account Discovery with Dsquery,"['T1087.002', 'T1087']",This analytic looks for the execution of dsquery.exe with command-line arguments utilized to discover  domain users. The user argument returns a list of all users registered in the domain. Red Teams and adversaries alike engage in remote system discovery for situational awareness and Active Directory Discovery.,['Hunting'],"August 24, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""dsquery.exe"" AND Processes.process = ""*user*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_account_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://jpcertcc.github.io/ToolAnalysisResultSheet/details/dsquery.htm', 'https://attack.mitre.org/techniques/T1087/002/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b1b1e316-accc-11eb-a9b4-acde48001122/,ICACLS Grant Command,['T1222'],"This analytic identifies adversaries who manipulate the security permissions of specific files or directories by granting additional access. This technique is frequently observed in the tradecraft of Advanced Persistent Threats (APTs) and coinminer scripts. The objective behind this behavior is to actively evade detection mechanisms and tightly control access to their associated files. By identifying these security permission modifications, we can improve our ability to identify and respond to potential threats, thereby minimizing the impact of malicious activities on the system.",['TTP'],"June 6, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN( ""icacls.exe"", ""cacls.exe"", ""xcacls.exe"") AND Processes.process IN (""*/grant*"", ""*/G*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `icacls_grant_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process']",Unknown. Filter as needed.,"['XMRig', 'Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b1ce9a72-73cf-11ec-981b-acde48001122/,Windows Non-System Account Targeting Lsass,"['T1003.001', 'T1003']","The following analytic identifies non SYSTEM accounts requesting access to lsass.exe. This behavior may be related to credential dumping or applications requiring access to credentials. Triaging this event will require understanding the GrantedAccess from the SourceImage. In addition, whether the account is privileged or not. Review the process requesting permissions and review parallel processes.",['TTP'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe NOT (SourceUser=""NT AUTHORITY\\*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, parent_process_name, parent_process_path ,parent_process_id, TargetImage, GrantedAccess, SourceUser, TargetUser 
| rename TargetUser as user 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_non_system_account_targeting_lsass_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'TargetImage', 'GrantedAccess', 'SourceImage', 'SourceProcessId', 'SourceUser', 'TargetUser']","False positives will occur based on legitimate application requests, filter based on source image as needed.","['CISA AA23-347A', 'Credential Dumping']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/credential_dumping']","['https://en.wikipedia.org/wiki/Local_Security_Authority_Subsystem_Service', 'https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump', 'https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html', 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1', 'https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights?redirectedfrom=MSDN']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b2215bfb-6171-4137-af17-1a02fdd8d043/,Windows Impair Defense Disable Defender Protocol Recognition,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender protocol recognition feature. The DisableProtocolRecognition setting in Windows Defender is not a commonly known or documented registry setting. It's possible that this specific setting might not exist within the standard Windows Defender configurations or that it might be specific to certain environments, versions, or configurations. It might potentially control or influence the antivirus software's ability to recognize and handle specific protocols or communication methods used by malware or suspicious software.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\NIS\\DisableProtocolRecognition"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_defender_protocol_recognition_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b25f6f62-0712-43c1-b203-083231ffd97d/,Detect New Local Admin account,"['T1136.001', 'T1136']","The following analytic detects the creation of new accounts that have been elevated to local administrators so that you can take immediate action to mitigate the risks and prevent further unauthorized access or malicious activities. This detection is made by using the Splunk query wineventlog_security EventCode=4720 OR (EventCode=4732 Group_Name=Administrators) to search for relevant security events in the Windows event log. When a new account is created or an existing account is added to the Administrators group, this analytic identifies this behavior by looking for EventCode 4720 (A user account was created) or EventCode 4732 (A member was added to a security-enabled global group). This analytic specifically focuses on events where the Group_Name is set to Administrators. This detection is important because it suggests that an attacker has gained elevated privileges and can perform malicious actions with administrative access. This can lead to significant impact, such as unauthorized access to sensitive data, unauthorized modifications to systems or configurations, and potential disruption of critical services. identifying this behavior is crucial for a Security Operations Center (SOC). Next steps include reviewing the details of the security event, including the user account that was created or added to the Administrators group. Also, examine the time span between the first and last occurrence of the event to determine if the behavior is ongoing. Additionally, consider any contextual information, such as the destination where the account was created or added to understand the scope and potential impact of the attack.",['TTP'],"February 14, 2024","`wineventlog_security` EventCode=4720 OR (EventCode=4732 Group_Name=Administrators) 
| transaction src_user connected=false maxspan=180m 
| rename src_user as user 
| stats count min(_time) as firstTime max(_time) as lastTime by user dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_new_local_admin_account_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'Group_Name', 'member_id', 'dest', 'user']","The activity may be legitimate. For this reason, it's best to verify the account with an administrator and ask whether there was a valid service request for the account creation. If your local administrator group name is not ""Administrators"", this search may generate an excessive number of false positives","['DHS Report TA18-074A', 'HAFNIUM Group', 'CISA AA22-257A']","['https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/cisa_aa22-257a']",N/A,"['Create Account', 'Local Account', 'Persistence', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b25f6f62-0782-43c1-b403-083231ffd97d/,Short Lived Windows Accounts,"['T1136.001', 'T1136']","The following analytic detects the creation and deletion of accounts in a short time period to identify potential threats earlier and take appropriate actions to mitigate the risks. Helps prevent or minimize the potential damage caused by unauthorized access or malicious activities within the environment. This detection is made by a Splunk query that searches for events with the result IDs 4720 and 4726 in the ""Change"" data model. The query then groups the results by time, user, and destination. The result is filtered to only include events with the specified result IDs. The ""transaction"" command is used to group events that occur within a specified time span and have the same user but are not connected. Finally, the relevant information such as the first and last time of the event, the count, user, destination, and result ID are displayed in a table. This detection is important because it suggests that an attacker is attempting to create and delete accounts rapidly, potentially to cover their tracks or gain unauthorized access. The impact of such an attack can include unauthorized access to sensitive data, privilege escalation, or the ability to carry out further malicious activities within the environment. Next steps include investigating the events flagged by the analytic, review the account creation and deletion activities, and analyze any associated logs or artifacts to determine the intent and impact of the attack.",['TTP'],"July 6, 2020","| tstats `security_content_summariesonly` values(All_Changes.result_id) as result_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Change where All_Changes.result_id=4720 OR All_Changes.result_id=4726 by _time span=4h All_Changes.user All_Changes.dest 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `drop_dm_object_name(""All_Changes"")` 
| search result_id = 4720 result_id=4726 
| transaction user connected=false maxspan=240m 
| table firstTime lastTime count user dest result_id 
| `short_lived_windows_accounts_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Changes.result_id', 'All_Changes.user', 'All_Changes.dest']",It is possible that an administrator created and deleted an account in a short time period.  Verifying activity with an administrator is advised.,['Account Monitoring and Controls'],['https://research.splunk.com/stories/account_monitoring_and_controls'],N/A,"['Change', 'Create Account', 'Local Account', 'Persistence', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b27f20bd-ef20-41d1-a1e9-25dedd5bf2f5/,Windows Modify Registry ProxyEnable,['T1112'],"The following analytic identifies a modification in the Windows registry to enable proxy. This method has been exploited by various malware and adversaries to establish proxy communication on compromised hosts, facilitating connections to malicious Command and Control (C2) servers. Identifying this anomaly serves as a crucial indicator to unveil suspicious processes attempting to activate the proxy feature within the Windows operating system. Detecting such attempts becomes pivotal in flagging potential threats, especially those aiming to leverage proxy configurations for unauthorized communication with malicious entities.",['Anomaly'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path = ""*\\Internet Settings\\ProxyEnable""  Registry.registry_value_data = 0x00000001 by  Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.action Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_proxyenable_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']","Administrators may enable or disable this feature that may cause some false positive, however is not common. Filter as needed.",['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b2c950b8-9be2-11eb-8658-acde48001122/,Winword Spawning PowerShell,"['T1566', 'T1566.001']","The following detection identifies Microsoft Word spawning PowerShell. Typically, this is not common behavior and not default with winword.exe. Winword.exe will generally be found in the following path C:\Program Files\Microsoft Office\root\Office16 (version will vary). PowerShell spawning from winword.exe is common for a spearphishing attachment and is actively used. Albeit, the command executed will most likely be encoded and captured via another detection. During triage, review parallel processes and identify any files that may have been written.",['TTP'],"April 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""winword.exe"" `process_powershell` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `winword_spawning_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, but if any are present, filter as needed.","['Spearphishing Attachments', 'DarkCrystal RAT', 'CVE-2023-21716 Word RTF Heap Corruption']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cve-2023-21716_word_rtf_heap_corruption']","['https://redcanary.com/threat-detection-report/techniques/powershell/', 'https://attack.mitre.org/techniques/T1566/001/', 'https://app.any.run/tasks/b79fa381-f35c-4b3e-8d02-507e7ee7342f/', 'https://app.any.run/tasks/181ac90b-0898-4631-8701-b778a30610ad/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b2cc69e7-11ba-42dc-a269-59c069a48870/,Windows System Time Discovery W32tm Delay,['T1124'],"The following analytic identifies DCRat delay time tactics using w32tm. This technique was seen in DCRAT malware where it uses stripchart function of w32tm.exe application to delay the execution of its payload like c2 communication , beaconing and execution. This anomaly detection may help the analyst to check other possible event like the process who execute this command that may lead to DCRat attack.",['Anomaly'],"July 28, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = w32tm.exe Processes.process= ""* /stripchart *"" Processes.process= ""* /computer:localhost *"" Processes.process= ""* /period:*"" Processes.process= ""* /dataonly *"" Processes.process= ""* /samples:*"" by  Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_time_discovery_w32tm_delay_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['DarkCrystal RAT'],['https://research.splunk.com/stories/darkcrystal_rat'],"['https://cert.gov.ua/article/405538', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.dcrat', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Time Discovery']",['Endpoint']
https://research.splunk.com/endpoint/b2fb6830-9ed1-11ec-9fcb-acde48001122/,Windows Disable LogOff Button Through Registry,['T1112'],"This analytic is to detect a suspicious registry modification to disable logoff feature in windows host. This registry when enable will prevent users to log off of the system by using any method, including programs run from the command line, such as scripts. It also disables or removes all menu items and buttons that log the user off of the system. This technique was seen abused by ransomware malware to make the compromised host un-useful and hard to remove other registry modification made on the machine that needs restart to take effect. This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.",['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\*"" Registry.registry_value_name IN (""NoLogOff"", ""StartMenuLogOff"") Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_logoff_button_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",This windows feature may implement by administrator in some server where shutdown is critical. In that scenario filter of machine and users that can modify this registry is needed.,"['Ransomware', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://www.hybrid-analysis.com/sample/e2d4018fd3bd541c153af98ef7c25b2bf4a66bc3bfb89e437cde89fd08a9dd7b/5b1f4d947ca3e10f22714774', 'https://malwiki.org/index.php?title=DigiPop.xp', 'https://www.trendmicro.com/vinfo/be/threat-encyclopedia/search/js_noclose.e/2']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b2fbe95a-9c62-4c12-8a29-24b97e84c0cd/,Creation of lsass Dump with Taskmgr,"['T1003.001', 'T1003']","Detect the hands on keyboard behavior of Windows Task Manager creating a process dump of lsass.exe. Upon this behavior occurring, a file write/modification will occur in the users profile under \AppData\Local\Temp. The dump file, lsass.dmp, cannot be renamed, however if the dump occurs more than once, it will be named lsass (2).dmp.",['TTP'],"February 3, 2020","`sysmon` EventID=11 process_name=taskmgr.exe TargetFilename=*lsass*.dmp 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, object_category, process_name, TargetFilename  
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `creation_of_lsass_dump_with_taskmgr_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventID', 'process_name', 'TargetFilename', 'dest', 'object_category']","Administrators can create memory dumps for debugging purposes, but memory dumps of the LSASS process would be unusual.","['Credential Dumping', 'CISA AA22-257A']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-5---dump-lsassexe-memory-using-windows-task-manager', 'https://attack.mitre.org/techniques/T1003/001/', 'https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b3628a5b-8d02-42fa-a891-eebf2351cbe1/,Office Product Spawning Windows Script Host,"['T1566', 'T1566.001']",The following analytic will identify a Windows Office Product spawning WScript.exe or CScript.exe. Tuning may be required based on legitimate application usage that may spawn scripts from an Office product.,['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"", ""msaccess.exe"",""Graph.exe"",""winproj.exe"") Processes.process_name IN (""wscript.exe"", ""cscript.exe"") by  Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_windows_script_host_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on macro based approved documents in the organization. Filtering may be needed.,"['Spearphishing Attachments', 'Remcos', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/', 'https://www.fortinet.com/blog/threat-research/latest-remcos-rat-phishing', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b3632472-310b-11ec-9aab-acde48001122/,WinEvent Windows Task Scheduler Event Action Started,['T1053.005'],"The following hunting analytic aims to identify suspicious tasks that have been registered and executed in Windows using EventID 200 (action run) and 201 (action completed) from the Windows Task Scheduler logs. This analytic helps detect evasive techniques used to register tasks on Windows systems. It is recommended to filter the results based on the ActionName field by specifying specific paths that are not commonly used in your environment.
After implementing this analytic, it is important to review parallel events related to the scheduled tasks. EventID 106 will be generated when a new task is created, but it does not necessarily mean that the task has been executed. Analysts should capture any files on disk associated with the task and perform further analysis.
To implement this analytic, Task Scheduler logs must be collected. This can be done by adding a stanza for [WinEventLog://Microsoft-Windows-TaskScheduler/Operational] in the inputs.conf file and setting renderXml=false. It is worth noting that not translating the logs into XML may require specific extraction of items from the Message field.
False positives are expected with this analytic, so it is important to filter the results based on the paths or specific keywords of interest in the ActionName field to reduce noise.
Identifying and analyzing scheduled tasks that have been executed is crucial for a Security Operations Center (SOC) as it helps detect potentially malicious or unauthorized activities on Windows systems. By capturing and investigating the associated events, analysts can uncover signs of persistence mechanisms, unauthorized code execution, or suspicious behaviors. The impact of a true positive could range from unauthorized access to data exfiltration or the execution of malicious payloads.",['Hunting'],"April 5, 2023","`wineventlog_task_scheduler` EventCode IN (""200"",""201"") 
| rename ComputerName as dest 
| stats count min(_time) as firstTime max(_time) as lastTime by Message dest EventCode category 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winevent_windows_task_scheduler_event_action_started_filter`","['wineventlog_task_scheduler', 'security_content_ctime']","['_time', 'TaskName', 'ActionName', 'EventID', 'dest', 'ProcessID']",False positives will be present. Filter based on ActionName paths or specify keywords of interest.,"['Qakbot', 'Windows Persistence Techniques', 'Winter Vivern', 'Prestige Ransomware', 'DarkCrystal RAT', 'AsyncRAT', 'Winter Vivern', 'IcedID', 'CISA AA22-257A', 'Industroyer2', 'Sandworm Tools', 'Data Destruction', 'Amadey', 'Scheduled Tasks']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/scheduled_tasks']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053.005/T1053.005.md', 'https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/']","['Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b3b7ce35-fce5-4c73-85f4-700aeada81a9/,Windows Credential Dumping LSASS Memory Createdump,['T1003.001'],"The following analytic identifies the use of CreateDump.exe being used to perform a process dump. This particular binary is not native to Windows, but is found to be brought in my many different third party applications including PowerShell 7.",['TTP'],"January 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=createdump.exe OR Processes.original_file_name=""FX_VER_INTERNALNAME_STR"" Processes.process=""*-u *"" AND Processes.process=""*-f *"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credential_dumping_lsass_memory_createdump_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present if an application is dumping processes, filter as needed. Recommend reviewing createdump.exe usage across the fleet to better understand all usage and by what.",['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-11---dump-lsass-with-createdumpexe-from-net-v5'],"['Credential Access', 'Endpoint', 'LSASS Memory', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b44f6ac6-0429-11ec-87e9-acde48001122/,GetWmiObject User Account with PowerShell,"['T1087', 'T1087.001']",This analytic looks for the execution of powershell.exe with command-line arguments utilized to query local users. The Get-WmiObject commandlet combined with the Win32_UserAccount parameter is used to return a list of all local users. Red Teams and adversaries may leverage this commandlet to enumerate users for situational awareness and Active Directory Discovery.,['Hunting'],"April 5, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-WmiObject* AND Processes.process=*Win32_UserAccount*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_user_account_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']",['_time'],Administrators or power users may use this PowerShell commandlet for troubleshooting.,"['Winter Vivern', 'Active Directory Discovery']","['https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/active_directory_discovery']",['https://attack.mitre.org/techniques/T1087/001/'],"['Account Discovery', 'Discovery', 'Discovery', 'Endpoint', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b509bbd3-0331-4aaa-8e4a-d2affe100af6/,Linux Deletion Of Services,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a deletion of services in a linux machine. attacker may delete or modify services to impair some security features or act as defense evasion in a compromised linux machine. This TTP can be also a good indicator of a malware trying to wipe or delete several files in a compromised host as part of its destructive payload like what acidrain malware does in linux or router machines. This detection can be a good pivot to check what process and user tries to delete this type of files which is not so common and need further investigation.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path IN ( ""/etc/systemd/*"", ""*/lib/systemd/*"", ""*/run/systemd/*"") Filesystem.file_path = ""*.service"" by _time span=1h Filesystem.file_name Filesystem.file_path Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `linux_deletion_of_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['AwfulShred', 'AcidRain', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/acidrain', 'https://research.splunk.com/stories/data_destruction']","['https://www.sentinelone.com/labs/acidrain-a-modem-wiper-rains-down-on-europe/', 'https://unix.stackexchange.com/questions/224992/where-do-i-put-my-systemd-unit-file', 'https://cert.gov.ua/article/3718487']","['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b5541828-8ffd-4070-9d95-b3da4de924cb/,Suspicious writes to windows Recycle Bin,['T1036'],"The following analytic detects when a process other than explorer.exe writes to the Windows Recycle Bin to detect potential threats earlier and mitigate the risks. This detection is made by a Splunk query that utilizes the Endpoint.Filesystem data model and the Endpoint.Processes data model. The query looks for any process writing to the ""$Recycle.Bin"" file path, excluding explorer.exe. This detection is important because it suggests that an attacker is attempting to hide their activities by using the Recycle Bin, which can lead to data theft, ransomware, or other damaging outcomes. Detecting writes to the Recycle Bin by a process other than explorer.exe can help to investigate and determine if the activity is malicious or benign. False positives might occur since there might be legitimate uses of the Recycle Bin by processes other than explorer.exe. Next steps include reviewing the process writing to the Recycle Bin and any relevant on-disk artifacts upon triage.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.file_path) as file_path values(Filesystem.file_name) as file_name FROM datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*$Recycle.Bin*"" by Filesystem.process_name Filesystem.process_id Filesystem.dest 
| `drop_dm_object_name(""Filesystem"")` 
| join  process_id [
| tstats `security_content_summariesonly` values(Processes.user) as user values(Processes.process_name) as process_name values(Processes.parent_process_name) as parent_process_name FROM datamodel=Endpoint.Processes where Processes.process_name != ""explorer.exe"" by Processes.process_id Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| table user process_name process_id dest] 
| `suspicious_writes_to_windows_recycle_bin_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.file_path', 'Filesystem.file_name', 'Filesystem.process_id', 'Filesystem.dest', 'Processes.user', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.process_id', 'Processes.dest']","Because the Recycle Bin is a hidden folder in modern versions of Windows, it would be unusual for a process other than explorer.exe to write to it. Incidents should be investigated as appropriate.","['Collection and Staging', 'PlugX']","['https://research.splunk.com/stories/collection_and_staging', 'https://research.splunk.com/stories/plugx']",N/A,"['Defense Evasion', 'Endpoint', 'Masquerading', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b5b91200-5f27-11ec-bb4e-acde48001122/,Linux Possible Append Cronjob Entry on Existing Cronjob File,"['T1053.003', 'T1053']","The following analytic is designed to detect potential tampering with cronjob files on a Linux system. It specifically searches for command lines that may be used to append code to existing cronjob files, a technique often employed by adversaries, malware, and red teamers for persistence or privilege escalation. Altering existing or sometimes normal cronjob script files allows malicious code to be executed automatically.
The analytic operates by monitoring logs for specific process names, parent processes, and command-line executions from your endpoints. It specifically checks for any 'echo' command which modifies files in directories commonly associated with cron jobs such as '/etc/cron*', '/var/spool/cron/', and '/etc/anacrontab'. If such activity is detected, an alert is triggered.
This behavior is worth identifying for a SOC because malicious cron jobs can lead to system compromises and unauthorized data access, impacting business operations and data integrity.",['Hunting'],"December 17, 2021","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where Processes.process = ""*echo*"" AND Processes.process IN(""*/etc/cron*"", ""*/var/spool/cron/*"", ""*/etc/anacrontab*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_append_cronjob_entry_on_existing_cronjob_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may arise from legitimate actions by administrators or network operators who may use these commands for automation purposes. Therefore, it's recommended to adjust filter macros to eliminate such false positives.","['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1053/003/', 'https://blog.aquasec.com/threat-alert-kinsing-malware-container-vulnerability', 'https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/']","['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b5baa09a-7a05-11ec-8da4-acde48001122/,Excessive File Deletion In WinDefender Folder,['T1485'],This analytic will identify excessive file deletion events in the Windows Defender folder. This technique was seen in the WhisperGate malware campaign in which adversaries abused Nirsofts advancedrun.exe to gain administrative privilege to then execute PowerShell commands to delete files within the Windows Defender application folder. This behavior is a good indicator the offending process is trying to corrupt a Windows Defender installation.,['TTP'],"April 14, 2023","`sysmon` EventCode=23 TargetFilename = ""*\\ProgramData\\Microsoft\\Windows Defender*"" 
| stats values(TargetFilename) as deleted_files min(_time) as firstTime max(_time) as lastTime count by user EventCode Image ProcessID dest 
|where count >=50 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_file_deletion_in_windefender_folder_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'TargetFilename', 'dest', 'user', 'Image', 'ProcessID']",Windows Defender AV updates may cause this alert. Please update the filter macros to remove false positives.,"['Data Destruction', 'WhisperGate', 'BlackByte Ransomware']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/blackbyte_ransomware']",['https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/'],"['Data Destruction', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b5cd5526-cce7-11eb-b3bd-acde48001122/,WMI Recon Running Process Or Services,['T1592'],"The following analytic identifies suspicious PowerShell script execution via EventCode 4104, where WMI is performing an event query looking for running processes or running services. This technique is commonly found in malware and APT events where the adversary will map all running security applications or services on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['Anomaly'],"November 7, 2023","`powershell` EventCode=4104 ScriptBlockText= ""*SELECT*"" AND (ScriptBlockText=""*Win32_Process*"" OR ScriptBlockText=""*Win32_Service*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wmi_recon_running_process_or_services_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Network administrator may used this command for checking purposes,"['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://news.sophos.com/en-us/2020/05/12/maze-ransomware-1-year-counting/', 'https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/', 'https://github.com/trustedsec/SysmonCommunityGuide/blob/master/chapters/WMI-events.md', 'https://in.security/2019/04/03/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/']","['Gather Victim Host Information', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b62a6040-49f4-47c8-b3f6-fc1adb952a33/,Windows Application Layer Protocol RMS Radmin Tool Namedpipe,['T1071'],"The following analytic identifies the use of default or publicly known named pipes used by RMX remote admin tool. A named pipe is a named, one-way or duplex pipe for communication between the pipe server and one or more pipe clients. RMX Tool uses named pipes in many way as part of its communication for its server and client component. This tool was abuse by several adversaries and malware like Azorult to collect data to the targeted host. This TTP is a good indicator that this tool was install in production premise and need to check if the user has a valid reason why it need to install this legitimate application.",['TTP'],"June 24, 2022","`sysmon` EventCode IN (17, 18) EventType IN ( ""CreatePipe"", ""ConnectPipe"") PipeName IN (""\\RManFUSServerNotify32"", ""\\RManFUSCallbackNotify32"", ""\\RMSPrint*"") 
| stats  min(_time) as firstTime max(_time) as lastTime count by Image EventType ProcessId PipeName dest UserID 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_application_layer_protocol_rms_radmin_tool_namedpipe_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'EventType', 'ProcessId', 'PipeName', 'dest', 'UserID']",False positives may be present. Filter based on pipe name or process.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://attack.mitre.org/techniques/T1071/']","['Application Layer Protocol', 'Command And Control', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b681977c-d90c-4efc-81a5-c58f945fb541/,Windows AD Short Lived Domain Account ServicePrincipalName,['T1098'],"The following analytic identifies the addition of a Service Principal Name to a domain account that is quickly deleted within 5 minutes or less. While this event may be part of a legitimate action part of certain administrative operations, it may also be evidence of a persistence attack. Domain accounts with Service Principal Names are vulnerable to a technique called Kerberoasting that enables attackers to potentially obtain the cleartext password of the account by performing offline cracking. An adversary who has obtained privileged access to a domain environment may add an SPN to a privileged account to then leverage the Kerberoasting technique and attempt to obtain its clertext password. To clean things up, the adversary may delete the SPN which will trigger this detection.",['TTP'],"November 18, 2022","`wineventlog_security` EventCode=5136 AttributeLDAPDisplayName=servicePrincipalName 
| transaction ObjectDN AttributeValue startswith=(EventCode=5136 OperationType=""%%14674"") endswith=(EventCode=5136 OperationType=""%%14675"") 
| eval short_lived=case((duration<300),""TRUE"") 
| search short_lived = TRUE 
| rename ObjectDN as user 
| `windows_ad_short_lived_domain_account_serviceprincipalname_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ObjectDN', 'signature', 'SubjectUserName', 'Computer']",A Service Principal Name should only be added to an account when an application requires it. Adding an SPN and quickly deleting it is less common but may be part of legitimate action. Filter as needed.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],"['https://adsecurity.org/?p=3466', 'https://www.thehacker.recipes/ad/movement/dacl/targeted-kerberoasting', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5136', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting']","['Account Manipulation', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b690df8c-a145-11eb-a38b-acde48001122/,SearchProtocolHost with no Command Line with Network,['T1055'],"The following analytic identifies searchprotocolhost.exe with no command line arguments and with a network connection. It is unusual for searchprotocolhost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. searchprotocolhost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=searchprotocolhost.exe by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(searchprotocolhost\.exe.{0,4}$)"" 
| join  process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as C2 ] 
| table _time dest parent_process_name process_name process_path process process_id dest_port C2 
| `searchprotocolhost_with_no_command_line_with_network_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'process_name', 'process_id', 'parent_process_name', 'dest_port', 'process_path']",Limited false positives may be present in small environments. Tuning may be required based on parent process.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']",['https://github.com/mandiant/red_team_tool_countermeasures/blob/master/rules/PGF/supplemental/hxioc/SUSPICIOUS%20EXECUTION%20OF%20SEARCHPROTOCOLHOST%20(METHODOLOGY).ioc'],"['Defense Evasion', 'Endpoint', 'Network_Traffic', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b6e0ff70-b122-4227-9368-4cf322ab43c3/,USN Journal Deletion,['T1070'],The fsutil.exe application is a legitimate Windows utility used to perform tasks related to the file allocation table (FAT) and NTFS file systems. The update sequence number (USN) change journal provides a log of all changes made to the files on the disk. This search looks for fsutil.exe deleting the USN journal.,['TTP'],"December 3, 2018","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| search process=""*deletejournal*"" AND process=""*usn*"" 
| `usn_journal_deletion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process', 'Processes.process_name', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest']",None identified,"['Windows Log Manipulation', 'Ransomware']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/ransomware']",N/A,"['Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b71adfcc-155b-11ec-9413-acde48001122/,PowerShell Get LocalGroup Discovery,"['T1069', 'T1069.001']","The following hunting analytic identifies the use of get-localgroup being used with PowerShell to identify local groups on the endpoint. During triage, review parallel processes and identify any further suspicious behavior.",['Hunting'],"September 14, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=powershell.exe OR Processes.process_name=cmd.exe) (Processes.process=""*get-localgroup*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `powershell_get_localgroup_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/001/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md']","['Discovery', 'Discovery', 'Endpoint', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b7548c2e-9a10-11ec-99e3-acde48001122/,Windows Modify Show Compress Color And Info Tip Registry,['T1112'],This analytic is to look for suspicious registry modification related to file compression color and information tips. This IOC was seen in hermetic wiper where it has a thread that will create this registry entry to change the color of compressed or encrypted files in NTFS file system as well as the pop up information tips. This is a good indicator that a process tries to modified one of the registry GlobalFolderOptions related to file compression attribution in terms of color in NTFS file system.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced*"" AND Registry.registry_value_name  IN(""ShowCompColor"", ""ShowInfoTip"")) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_show_compress_color_and_info_tip_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Data Destruction', 'Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'Hermetic Wiper']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/hermetic_wiper']",['https://blog.talosintelligence.com/2022/02/threat-advisory-hermeticwiper.html'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b76eae28-cd25-11eb-9c92-acde48001122/,Deny Permission using Cacls Utility,['T1222'],"The following analytic identifies the use of cacls.exe, icacls.exe or xcacls.exe placing the deny permission on a file or directory. Adversaries perform this behavior to prevent responders from reviewing or gaining access to adversary files on disk.",['TTP'],"November 29, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""icacls.exe"", ""xcacls.exe"", ""cacls.exe"")) AND match(process_cmd_line, /(?i)deny/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators may use cacls utilities but this is not a common practice. Filter as needed.,"['XMRig', 'Information Sabotage']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/information_sabotage']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'File and Directory Permissions Modification', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/b7a045fc-f14a-11eb-8e79-acde48001122/,Drop IcedID License dat,"['T1204', 'T1204.002']","This search is to detect dropping a suspicious file named as ""license.dat"" in %appdata%. This behavior seen in latest IcedID malware that contain the actual core bot that will be injected in other process to do banking stealing.",['Hunting'],"July 30, 2021","`sysmon` EventCode= 11  TargetFilename = ""*\\license.dat"" AND (TargetFilename=""*\\appdata\\*"" OR TargetFilename=""*\\programdata\\*"") 
|stats count min(_time) as firstTime max(_time) as lastTime by TargetFilename EventCode process_id  process_name dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_icedid_license_dat_filter`","['security_content_ctime', 'sysmon']",['_time'],unknown,['IcedID'],['https://research.splunk.com/stories/icedid'],['https://www.cisecurity.org/insights/white-papers/security-primer-icedid'],"['Execution', 'Execution', 'Malicious File', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/b7bd83c0-92b5-4fc7-b286-23eccfa2c561/,Windows COM Hijacking InprocServer32 Modification,"['T1546.015', 'T1546']","The following analytic identifies the use of reg.exe performing an add to the InProcServer32, which may be related to COM hijacking. Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.",['TTP'],"September 26, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_reg` Processes.process=*inprocserver32* by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_com_hijacking_inprocserver32_modification_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']",['UPDATE'],False positives may be present and some filtering may be required.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://attack.mitre.org/techniques/T1546/015/', 'https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.015/T1546.015.md']","['Component Object Model Hijacking', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b8340d0f-ba48-4391-bea7-9e793c5aae36/,Windows Process Injection into Notepad,"['T1055', 'T1055.002']","The following analytic utilizes Sysmon to identify process injection into Notepad.exe, based on GrantedAccess requests - 0x40 and 0x1fffff. This particular behavior is attributed to the defaults of the SliverC2 framework by BishopFox. By default, the analytic filters out any SourceImage paths of System32, Syswow64 and program files. Add more as needed, or remove and monitor what is consistently injecting into notepad.exe. This particular behavior will occur from a source image that is the initial payload dropped.",['Anomaly'],"February 22, 2023","`sysmon` EventCode=10 TargetImage IN (*\\notepad.exe) NOT (SourceImage IN (""*\\system32\\*"",""*\\syswow64\\*"",""*\\Program Files\\*"")) GrantedAccess IN (""0x40"",""0x1fffff"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest SourceImage TargetImage GrantedAccess CallTrace 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_into_notepad_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'SourceImage', 'TargetImage', 'GrantedAccess', 'CallTrace']","False positives may be present based on SourceImage paths. If removing the paths is important, realize svchost and many native binaries inject into notepad consistently. Restrict or tune as needed.",['BishopFox Sliver Adversary Emulation Framework'],['https://research.splunk.com/stories/bishopfox_sliver_adversary_emulation_framework'],"['https://dominicbreuker.com/post/learning_sliver_c2_08_implant_basics/', 'https://www.cybereason.com/blog/sliver-c2-leveraged-by-many-threat-actors']","['Defense Evasion', 'Defense Evasion', 'Portable Executable Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b85bbeec-6326-11ec-9311-acde48001122/,Linux File Created In Kernel Driver Directory,"['T1547.006', 'T1547']","This analytic looks for suspicious file creation in kernel/driver directory in linux platform. This directory is known folder for all linux kernel module available within the system. so creation of file in this directory is a good indicator that there is a possible rootkit installation in the host machine. This technique was abuse by adversaries, malware author and red teamers to gain high privileges to their malicious code such us in kernel level. Even this event is not so common administrator or legitimate 3rd party tool may install driver or linux kernel module as part of its installation.",['Anomaly'],"December 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/kernel/drivers/*"") by Filesystem.dest Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_file_created_in_kernel_driver_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create file in this folders for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Rootkit']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_rootkit']","['https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Working_with_Kernel_Modules/', 'https://security.stackexchange.com/questions/175953/how-to-load-a-malicious-lkm-at-startup', 'https://0x00sec.org/t/kernel-rootkits-getting-your-hands-dirty/1485']","['Boot or Logon Autostart Execution', 'Endpoint', 'Kernel Modules and Extensions', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b89919ed-ee5f-492c-b139-95dbb162039e/,Deleting Shadow Copies,['T1490'],The vssadmin.exe utility is used to interact with the Volume Shadow Copy Service.  Wmic is an interface to the Windows Management Instrumentation.  This search looks for either of these tools being used to delete shadow copies.,['TTP'],"November 9, 2020","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe OR Processes.process_name=wmic.exe) Processes.process=*delete* Processes.process=*shadow* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `deleting_shadow_copies_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","vssadmin.exe and wmic.exe are standard applications shipped with modern versions of windows. They may be used by administrators to legitimately delete old backup copies, although this is typically rare.","['Windows Log Manipulation', 'SamSam Ransomware', 'Ransomware', 'Clop Ransomware', 'CISA AA22-264A', 'Prestige Ransomware', 'Chaos Ransomware', 'LockBit Ransomware', 'DarkGate Malware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/windows_log_manipulation', 'https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://blogs.vmware.com/security/2022/10/lockbit-3-0-also-known-as-lockbit-black.html'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b89919ed-fe5f-492c-b139-151bb162040e/,Create local admin accounts using net exe,"['T1136.001', 'T1136']","The following analytic detects the creation of local administrator accounts using the net.exe command to mitigate the risks associated with unauthorized access and prevent further damage to the environment by responding to potential threats earlier and taking appropriate actions to protect the organization's systems and data. This detection is made by a Splunk query to search for processes with the name net.exe or net1.exe that include the ""/add"" parameter and have specific keywords related to administrator accounts in their process name. This detection is important because the creation of unauthorized local administrator accounts might indicate that an attacker has successfully created a new administrator account and is trying to gain persistent access to a system or escalate their privileges for data theft, or other malicious activities. False positives might occur since there might be legitimate uses of the net.exe command and the creation of administrator accounts in certain circumstances. You must consider the context of the activity and other indicators of compromise before taking any action. For next steps, review the details of the identified process, including the user, parent process, and parent process name. Examine any relevant on-disk artifacts and look for concurrent processes to determine the source of the attack.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count values(Processes.user) as user values(Processes.parent_process) as parent_process values(parent_process_name) as parent_process_name min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=net.exe OR Processes.process_name=net1.exe) AND Processes.process=*/add* AND (Processes.process=*administrators* OR Processes.process=*administratoren* OR Processes.process=*administrateurs* OR Processes.process=*administrador* OR Processes.process=*amministratori* OR Processes.process=*administratorer*) by Processes.process Processes.process_name Processes.parent_process_name Processes.dest Processes.user
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `create_local_admin_accounts_using_net_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators often leverage net.exe to create admin accounts.,"['DHS Report TA18-074A', 'Azorult', 'CISA AA22-257A', 'DarkGate Malware']","['https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/darkgate_malware']",N/A,"['Create Account', 'Endpoint', 'Local Account', 'Persistence', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b89919ed-fe5f-492c-b139-95dbb162039e/,Detect Use of cmd exe to Launch Script Interpreters,"['T1059', 'T1059.003']","This search looks for the execution of the cscript.exe or wscript.exe processes, with a parent of cmd.exe. The search will return the count, the first and last time this execution was seen on a machine, the user, and the destination of the machine",['TTP'],"December 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=""cmd.exe"" (Processes.process_name=cscript.exe OR Processes.process_name =wscript.exe) by Processes.parent_process Processes.process_name Processes.process Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
|`security_content_ctime(lastTime)` 
| `detect_use_of_cmd_exe_to_launch_script_interpreters_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.parent_process', 'Processes.user', 'Processes.dest']","This detection may also be triggered by legitimate applications and numerous service accounts, which often end with a $ sign. To manage this, it's advised to check the service account's activities and, if they are valid, modify the filter macro to exclude them.","['Emotet Malware  DHS Report TA18-201A', 'Suspicious Command-Line Executions', 'Azorult']","['https://research.splunk.com/stories/emotet_malware__dhs_report_ta18-201a_', 'https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/azorult']","['https://attack.mitre.org/techniques/T1059/', 'https://redcanary.com/threat-detection-report/techniques/windows-command-shell/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/b89919ed-fe5f-492c-b139-95dbb162040e/,Processes launching netsh,"['T1562.004', 'T1562']","This search looks for processes launching netsh.exe. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",['Anomaly'],"September 16, 2021","| tstats `security_content_summariesonly` count values(Processes.process) AS Processes.process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` by Processes.parent_process_name Processes.parent_process Processes.original_file_name Processes.process_name Processes.user Processes.dest 
|`drop_dm_object_name(""Processes"")` 
|`security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
|`processes_launching_netsh_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.user', 'Processes.dest']","Some VPN applications are known to launch netsh.exe. Outside of these instances, it is unusual for an executable to launch netsh.exe and run commands.","['Netsh Abuse', 'Disabling Security Tools', 'DHS Report TA18-074A', 'Azorult', 'Volt Typhoon', 'Snake Keylogger']","['https://research.splunk.com/stories/netsh_abuse', 'https://research.splunk.com/stories/disabling_security_tools', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/snake_keylogger']",['https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b8b19420-e892-11eb-9244-acde48001122/,Office Product Spawn CMD Process,"['T1566', 'T1566.001']",this search is to detect a suspicious office product process that spawn cmd child process. This is commonly seen in a ms office product having macro to execute shell command to download or execute malicious lolbin relative to its malicious code. This is seen in trickbot spear phishing doc where it execute shell cmd to run mshta payload.,['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = ""winword.exe"" OR Processes.parent_process_name= ""excel.exe"" OR Processes.parent_process_name = ""powerpnt.exe"" OR Processes.parent_process_name= ""onenote.exe"" OR Processes.parent_process_name = ""onenotem.exe"" OR Processes.parent_process_name = ""onenoteviewer.exe"" OR Processes.parent_process_name = ""onenoteim.exe"" OR Processes.parent_process_name = ""msaccess.exe"" OR  Processes.parent_process_name=""Graph.exe"" OR Processes.parent_process_name=""winproj.exe"") `process_cmd` by Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.process_guid Processes.user Processes.dest Processes.original_file_name 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `office_product_spawn_cmd_process_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",IT or network admin may create an document automation that will run shell script.,"['Trickbot', 'DarkCrystal RAT', 'Azorult', 'Remcos', 'Qakbot', 'AgentTesla', 'CVE-2023-21716 Word RTF Heap Corruption', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability', 'Warzone RAT', 'PlugX', 'NjRAT']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/cve-2023-21716_word_rtf_heap_corruption', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/plugx', 'https://research.splunk.com/stories/njrat']","['https://twitter.com/cyb3rops/status/1416050325870587910?s=21', 'https://bazaar.abuse.ch/sample/02cbc1ab80695fc12ff8822b926957c3a600247b9ca412a137f69cb5716c8781/', 'https://www.fortinet.com/blog/threat-research/latest-remcos-rat-phishing', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b8da7ea5-8c16-4eff-9787-54ec271159e0/,Windows Rename System Utilities Atbroker exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies Atbroker.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""atbroker.exe"" AND (NOT match(process_file_path, /(?i)\\windows\\syswow64/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/b8f7ed6b-0556-4c84-bffd-839c262b0278/,Windows Access Token Winlogon Duplicate Handle In Uncommon Path,"['T1134.001', 'T1134']","The following analytic identifies a process requesting access in winlogon.exe to duplicate its handle with a non-common or public process source path. This technique was seen where adversaries attempt to gain privileges to their process. This duplicate handle access technique, may refer to a malicious process duplicating the process token of winlogon.exe and using it to a new process instance. Winlogon.exe is the common targeted process of this technique because it contains high privileges and security tokens.",['Anomaly'],"August 24, 2022","`sysmon` EventCode=10  TargetImage IN(""*\\system32\\winlogon.exe*"", ""*\\SysWOW64\\winlogon.exe*"") AND GrantedAccess = 0x1040 AND NOT (SourceImage IN(""C:\\Windows\\*"", ""C:\\Program File*"", ""%systemroot%\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer SourceImage TargetImage SourceProcessGUID TargetProcessGUID SourceProcessId TargetProcessId GrantedAccess CallTrace 
| rename Computer as dest
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_access_token_winlogon_duplicate_handle_in_uncommon_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'SourceProcessGUID', 'TargetProcessGUID', 'SourceProcessId', 'TargetProcessId', 'GrantedAccess', 'CallTrace', 'dest', 'user_id']","It is possible legitimate applications will request access to winlogon, filter as needed.",['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-duplicatehandle', 'https://attack.mitre.org/techniques/T1134/001/']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Token Impersonation/Theft']",['Endpoint']
https://research.splunk.com/endpoint/b8f9947e-065a-11ec-aafb-acde48001122/,Get DomainPolicy with Powershell,['T1201'],This analytic looks for the execution of powershell.exe executing the Get-DomainPolicy commandlet used to obtain the password policy in a Windows domain. Red Teams and adversaries alike may use PowerShell to enumerate domain policies for situational awareness and Active Directory Discovery.,['TTP'],"August 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""cmd.exe"" OR Processes.process_name=""powershell*"") AND Processes.process = ""*Get-DomainPolicy*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `get_domainpolicy_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainPolicy/', 'https://attack.mitre.org/techniques/T1201/']","['Discovery', 'Endpoint', 'Password Policy Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/b9fb8d97-dbc9-4a09-804c-ff0e3862bb2d/,Windows Rundll32 Apply User Settings Changes,"['T1218', 'T1218.011']","This search is to detect a suspicious rundll32 commandline to update a user's system parameters related to desktop backgrounds, display settings, and visual themes. Specifically, it triggers the system to refresh and apply changes to the user-specific settings, such as wallpaper modifications or visual theme updates, ensuring that the changes take effect without the need to restart the system or log out and log back in. This technique was seen in Rhysida Ransomware and script as part of its defense evasion. This technique is not a common practice to lock a screen and maybe a good indicator of compromise. This command could also potentially be exploited by malware to disguise its activities or make unauthorized changes to a user's system settings without their knowledge or consent.",['TTP'],"December 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process= ""*user32.dll,UpdatePerUserSystemParameters*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_rundll32_apply_user_settings_changes_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,['Rhysida Ransomware'],['https://research.splunk.com/stories/rhysida_ransomware'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-319a'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/ba0c2450-caea-4086-ac3a-a71e2659754b/,Windows System Binary Proxy Execution Compiled HTML File Using InfoTech Storage Handlers,"['T1218.001', 'T1218']","The following analytic identifies hh.exe (HTML Help) execution of a Compiled HTML Help (CHM) file using InfoTech Storage Handlers. This particular technique will load Windows script code from a compiled help file, using InfoTech Storage Handlers. itss.dll will load upon execution. Three InfoTech Storage handlers are supported - ms-its, its, mk:@MSITStore. ITSS may be used to launch a specific html/htm file from within a CHM file. CHM files may contain nearly any file type embedded. Upon a successful execution, the following script engines may be used for execution - JScript, VBScript, VBScript.Encode, JScript.Encode, JScript.Compact. Analyst may identify vbscript.dll or jscript.dll loading into hh.exe upon execution. The ""htm"" and ""html"" file extensions were the only extensions observed to be supported for the execution of Shortcut commands or WSH script code. During investigation, identify script content origination. hh.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"September 2, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%mk:@msitstore:%"" OR process_cmd_line LIKE ""%its:%"") AND process_file_name=""hh.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","It is rare to see instances of InfoTech Storage Handlers being used, but it does happen in some legitimate instances. Filter as needed.","['Suspicious Compiled HTML Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_compiled_html_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/001/', 'https://www.kb.cert.org/vuls/id/851869', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.001/T1218.001.md', 'https://lolbas-project.github.io/lolbas/Binaries/Hh/', 'https://gist.github.com/mgeeky/cce31c8602a144d8f2172a73d510e0e7', 'https://web.archive.org/web/20220119133748/https://cyberforensicator.com/2019/01/20/silence-dissecting-malicious-chm-files-and-performing-forensic-analysis/']","['Compiled HTML File', 'Defense Evasion', 'Defense Evasion', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/ba24cda8-4716-11ec-8009-3e22fbd008af/,Remote Process Instantiation via WinRM and PowerShell,"['T1021', 'T1021.006']","This analytic looks for the execution of powershell.exe with arguments utilized to start a process on a remote endpoint by abusing the WinRM protocol. Specifically, this search looks for the abuse of the Invoke-Command commandlet. Red Teams and adversaries alike may abuse WinRM and powershell.exe for lateral movement and remote code execution.",['TTP'],"November 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` (Processes.process=""*Invoke-Command*"" AND Processes.process=""*-ComputerName*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_winrm_and_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may leverage WinRM and Invoke-Command to start a process on remote systems for system administration or automation use cases. However, this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/006/', 'https://pentestlab.blog/2018/05/15/lateral-movement-winrm/']","['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/ba570b3a-d356-11eb-8358-acde48001122/,Recursive Delete of Directory In Batch CMD,"['T1070.004', 'T1070']",This search is to detect a suspicious commandline designed to delete files or directory recursive using batch command. This technique was seen in ransomware (reddot) where it it tries to delete the files in recycle bin to impaire user from recovering deleted files.,['TTP'],"November 12, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` Processes.process=*/c*  Processes.process=""* rd *""  Processes.process=""*/s*"" Processes.process=""*/q*"" by Processes.user Processes.process_name Processes.parent_process_name Processes.parent_process Processes.process Processes.process_id Processes.dest 
|`drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `recursive_delete_of_directory_in_batch_cmd_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",network operator may use this batch command to delete recursively a directory or files within directory,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ba858b08-d26c-11eb-af9b-acde48001122/,Disable Net User Account,"['T1489', 'T1078']",This analytic will identify a suspicious command-line that disables a user account using the native net.exe or net1.exe utility to Windows. This technique may used by the adversaries to interrupt availability of accounts and continue the impact against the organization.,['TTP'],"November 30, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%user%"" AND process_cmd_line LIKE ""%/active:no%"" AND (process_file_name IN (""net.exe"", ""net1.exe"")) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators or automated scripts may disable an account but not a common practice. Filter as needed.,"['XMRig', 'Ransomware']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/ransomware']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Impact', 'Initial Access', 'Persistence', 'Privilege Escalation', 'Service Stop', 'Splunk Behavioral Analytics', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/ba9e1954-4c04-11ec-8b74-3e22fbd008af/,Services LOLBAS Execution Process Spawn,"['T1543', 'T1543.003']","The following analytic identifies services.exe spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the Service Control Manager and creating a remote malicious service, the executed command is spawned as a child process of services.exe. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of services.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",['TTP'],"November 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=services.exe) (Processes.process_name IN (""Regsvcs.exe"", ""Ftp.exe"", ""OfflineScannerShell.exe"", ""Rasautou.exe"", ""Schtasks.exe"", ""Xwizard.exe"", ""Dllhost.exe"", ""Pnputil.exe"", ""Atbroker.exe"", ""Pcwrun.exe"", ""Ttdinject.exe"",""Mshta.exe"", ""Bitsadmin.exe"", ""Certoc.exe"", ""Ieexec.exe"", ""Microsoft.Workflow.Compiler.exe"", ""Runscripthelper.exe"", ""Forfiles.exe"", ""Msbuild.exe"", ""Register-cimprovider.exe"", ""Tttracer.exe"", ""Ie4uinit.exe"", ""Bash.exe"", ""Hh.exe"", ""SettingSyncHost.exe"", ""Cmstp.exe"", ""Mmc.exe"", ""Stordiag.exe"", ""Scriptrunner.exe"", ""Odbcconf.exe"", ""Extexport.exe"", ""Msdt.exe"", ""WorkFolders.exe"", ""Diskshadow.exe"", ""Mavinject.exe"", ""Regasm.exe"", ""Gpscript.exe"", ""Rundll32.exe"", ""Regsvr32.exe"", ""Msiexec.exe"", ""Wuauclt.exe"", ""Presentationhost.exe"", ""Wmic.exe"", ""Runonce.exe"", ""Syncappvpublishingserver.exe"", ""Verclsid.exe"", ""Infdefaultinstall.exe"", ""Explorer.exe"", ""Installutil.exe"", ""Netsh.exe"", ""Wab.exe"", ""Dnscmd.exe"", ""At.exe"", ""Pcalua.exe"", ""Msconfig.exe"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `services_lolbas_execution_process_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Legitimate applications may trigger this behavior, filter as needed.","['Active Directory Lateral Movement', 'Living Off The Land', 'Qakbot', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://attack.mitre.org/techniques/T1543/003/', 'https://pentestlab.blog/2020/07/21/lateral-movement-services/', 'https://lolbas-project.github.io/']","['Create or Modify System Process', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/bac85b56-0b65-4ce5-aad5-d94880df0967/,Windows Steal Authentication Certificates CertUtil Backup,['T1649'],"The following analytic is focused on CertUtil.exe performing a backup of the Certificate Store. Typically, administrators may perform this task to migrate or perform backups of the store, however it may be found uncommon in most organizations.",['Anomaly'],"February 6, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` Processes.process IN (""*-backupdb *"", ""*-backup *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_certutil_backup_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives will be generated based on normal certificate store backups. Leave enabled to generate Risk, as this is meant to be an anomaly analytic. If CS backups are not normal, enable as TTP.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf'],"['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/bb37061e-af1f-11eb-a159-acde48001122/,Schtasks Run Task On Demand,['T1053'],"The following analytic is designed to detect when a Windows Scheduled Task is executed on demand via shell or command line. Adversaries often force the execution of their created Scheduled Tasks for persistent access or lateral movement within a compromised machine. This analytic is driven by process-related data, specifically process name, parent process, and command-line executions, sourced from endpoint logs. The search criteria focus on 'schtasks.exe' with an associated 'run' command.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where Processes.process_name = ""schtasks.exe"" Processes.process = ""*/run*"" by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `schtasks_run_task_on_demand_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.process_id', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']","Bear in mind, administrators debugging Scheduled Task entries may trigger this analytic, necessitating fine-tuning and filtering to distinguish between legitimate and potentially malicious use of 'schtasks.exe'.","['Qakbot', 'Industroyer2', 'XMRig', 'CISA AA22-257A', 'Data Destruction', 'Scheduled Tasks']","['https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/scheduled_tasks']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Endpoint', 'Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bb3c1bac-6bdf-4aa0-8dc9-068b8b712a76/,Impacket Lateral Movement smbexec CommandLine Parameters,"['T1021', 'T1021.002', 'T1021.003', 'T1047', 'T1543.003']","This analytic focuses on identifying suspicious command-line parameters commonly associated with the use of Impacket wmiexec.py. Impacket is a set of Python classes designed for working with Microsoft network protocols, and it includes several scripts like wmiexec.py, smbexec.py, dcomexec.py, and atexec.py that enable command execution on remote endpoints. These scripts typically utilize administrative shares and hardcoded parameters, which can serve as signatures to detect their usage. Both Red Teams and adversaries may employ Impacket tools for lateral movement and remote code execution purposes. By monitoring for these specific command-line indicators, the analytic aims to detect potentially malicious activities related to Impacket tool usage.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=cmd.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| where match(process, ""(?i)cmd\.exe\s+\/Q\s+\/c"") AND match(process,""(?i)echo\s+cd"") AND match(process, ""(?i)\\__output"") AND  match(process, ""(?i)C:\\\\Windows\\\\[a-zA-Z]{1,8}\\.bat"")  AND match(process, ""\\\\127\.0\.0\.1\\.*"") 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `impacket_lateral_movement_smbexec_commandline_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Although uncommon, Administrators may leverage Impackets tools to start a process on remote systems for system administration or automation use cases.","['Active Directory Lateral Movement', 'CISA AA22-277A', 'WhisperGate', 'Prestige Ransomware', 'Volt Typhoon', 'Graceful Wipe Out Attack', 'Industroyer2', 'Data Destruction']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/data_destruction']","['https://attack.mitre.org/techniques/T1021/002/', 'https://attack.mitre.org/techniques/T1021/003/', 'https://attack.mitre.org/techniques/T1047/', 'https://attack.mitre.org/techniques/T1053/', 'https://attack.mitre.org/techniques/T1053/005/', 'https://github.com/SecureAuthCorp/impacket', 'https://vk9-sec.com/impacket-remote-code-execution-rce-on-windows-from-linux/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Distributed Component Object Model', 'Endpoint', 'Execution', 'Lateral Movement', 'Lateral Movement', 'Lateral Movement', 'Persistence', 'Privilege Escalation', 'Remote Services', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/bb4f3090-7ae4-11ec-897f-acde48001122/,Windows NirSoft AdvancedRun,['T1588.002'],The following analytic identifies the use of AdvancedRun.exe. AdvancedRun.exe has similar capabilities as other remote programs like psexec. AdvancedRun may also ingest a configuration file with all settings defined and perform its activity. The analytic is written in a way to identify a renamed binary and also the common command-line arguments.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=advancedrun.exe OR Processes.original_file_name=advancedrun.exe) Processes.process IN (""*EXEFilename*"",""*/cfg*"",""*RunAs*"", ""*WindowState*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_nirsoft_advancedrun_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited as it is specific to AdvancedRun. Filter as needed based on legitimate usage.,"['Ransomware', 'Unusual Processes', 'Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['http://www.nirsoft.net/utils/advanced_run.html', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Endpoint', 'Resource Development', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Tool']",['Endpoint']
https://research.splunk.com/endpoint/bbc644bc-37df-4e1a-9c88-ec9a53e2038c/,Disabling Remote User Account Control,"['T1548.002', 'T1548']",The search looks for modifications to registry keys that control the enforcement of Windows User Account Control (UAC).,['TTP'],"November 18, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path=*HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\EnableLUA* Registry.registry_value_data=""0x00000000"" by Registry.dest, Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action 
| `drop_dm_object_name(Registry)` 
| `disabling_remote_user_account_control_filter`",['security_content_summariesonly'],"['_time', 'Registry.registry_path', 'Registry.registry_value_name', 'Registry.dest', 'Registry.registry_key_name', 'Registry.user', 'Registry.action']",This registry key may be modified via administrators to implement a change in system policy. This type of change should be a very rare occurrence.,"['Windows Defense Evasion Tactics', 'Suspicious Windows Registry Activities', 'Remcos', 'Windows Registry Abuse', 'Azorult', 'AgentTesla']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/agenttesla']",N/A,"['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bc1dc6b8-c954-11eb-bade-acde48001122/,Detect Empire with PowerShell Script Block Logging,"['T1059', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies the common PowerShell stager used by PowerShell-Empire. Each stager that may use PowerShell all uses the same pattern. The initial HTTP will be base64 encoded and use system.net.webclient. Note that some obfuscation may evade the analytic. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"April 14, 2023","`powershell` EventCode=4104  (ScriptBlockText=*system.net.webclient* AND ScriptBlockText=*frombase64string*) 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_empire_with_powershell_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']","False positives may only pertain to it not being related to Empire, but another framework. Filter as needed if any applications use the same pattern.","['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://github.com/BC-SECURITY/Empire', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bc477b57-5c21-4ab6-9c33-668772e7f114/,Detect Regsvcs Spawning a Process,"['T1218', 'T1218.009']",The SPL above uses the following Macros:,['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=regsvcs.exe by Processes.parent_process_name Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_regsvcs_spawning_a_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Although unlikely, limited instances of regasm.exe or regsvcs.exe may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/bc760ca6-8336-11eb-bcbb-acde48001122/,Resize ShadowStorage volume,['T1490'],The following analytics identifies the resizing of shadowstorage by ransomware malware to avoid the shadow volumes being made again. this technique is an alternative by ransomware attacker than deleting the shadowstorage which is known alert in defensive team. one example of ransomware that use this technique is CLOP ransomware where it drops a .bat file that will resize the shadowstorage to minimum size as much as possible,['TTP'],"March 12, 2021","| tstats `security_content_summariesonly` values(Processes.process) as cmdline values(Processes.parent_process_name) as parent_process values(Processes.process_name) as process_name min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = ""cmd.exe"" OR Processes.parent_process_name = ""powershell.exe"" OR Processes.parent_process_name = ""powershell_ise.exe"" OR Processes.parent_process_name =  ""wmic.exe"" Processes.process_name = ""vssadmin.exe"" Processes.process=""*resize*"" Processes.process=""*shadowstorage*"" Processes.process=""*/maxsize*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `resize_shadowstorage_volume_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.process', 'Processes.parent_process_name', '_time', 'Processes.process_name', 'Processes.parent_process', 'Processes.dest', 'Processes.user']",network admin can resize the shadowstorage for valid purposes.,"['Clop Ransomware', 'BlackByte Ransomware']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.md', 'https://redcanary.com/blog/blackbyte-ransomware/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/vssadmin-resize-shadowstorage']","['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bc84d574-708c-467d-b78a-4c1e20171f97/,Linux Ngrok Reverse Proxy Usage,"['T1572', 'T1090', 'T1102']","The following analytic identifies the use of Ngrok being utilized on the Linux operating system. Unfortunately, there is no original file name for Ngrok, so it may be worth an additional hunt to identify any command-line arguments. The sign of someone using Ngrok is not malicious, however, more recently it has become an adversary tool.",['Anomaly'],"January 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=ngrok Processes.process IN (""*start*"", ""*--config*"",""*http*"",""*authtoken*"", ""*http*"", ""*tcp*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_ngrok_reverse_proxy_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present if Ngrok is an authorized utility. Filter as needed.,['Reverse Network Proxy'],['https://research.splunk.com/stories/reverse_network_proxy'],"['https://ngrok.com', 'https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf']","['Command And Control', 'Command And Control', 'Command And Control', 'Endpoint', 'Protocol Tunneling', 'Proxy', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Service']",['Endpoint']
https://research.splunk.com/endpoint/bc9cb715-08ba-40c3-9758-6e2b26e455cb/,Windows Unusual Count Of Users Failed To Auth Using Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with multiple valid users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. Event 4771 is generated when the Key Distribution Center fails to issue a Kerberos Ticket Granting Ticket (TGT). Failure code 0x18 stands for wrong password provided (the attempted user is a legitimate domain user).
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security` EventCode=4771 TargetUserName!=""*$"" Status=0x18 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by IpAddress 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_users_failed_to_auth_using_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple valid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, missconfigured systems and multi-user systems like Citrix farms.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn319109(v=ws.11)', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4771']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bcb55c13-067b-4648-98f3-627010f72520/,Windows Default Group Policy Object Modified with GPME,"['T1484', 'T1484.001']","The following analytic identifies the potential edition of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects Default Domain Controllers Policy and Default Domain Policy. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the edition of the default GPOs.",['TTP'],"May 2, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name=""mmc.exe"" AND process_cmd_line LIKE ""%gpme.msc%"") OR process_cmd_line LIKE ""%31b2f340-016d-11d2-945f-00c04fb984f9%"" OR process_cmd_line LIKE ""%6ac1786c-016f-11d2-945f-00c04fb984f9%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","The default Group Policy Objects within an AD network may be legitimately updated for administrative operations, filter as needed.",['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716', 'https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn265969(v=ws.11)']","['Defense Evasion', 'Defense Evasion', 'Domain Policy Modification', 'Group Policy Modification', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/bd3b0187-189b-46c0-be45-f52da2bae67f/,Windows AdFind Exe,['T1018'],"This search looks for the execution of adfind.exe with command-line arguments that it uses by default specifically the filter or search functions. It also considers the arguments necessary like objectcategory, see readme for more details: https://www.joeware.net/freetools/tools/adfind/usage.htm. AdFind.exe is a powerful tool that is commonly used for querying and retrieving information from Active Directory (AD). While it is primarily designed for AD administration and management, it has been seen used before by Wizard Spider, FIN6 and actors whom also launched SUNBURST.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=""* -f *"" OR Processes.process=""* -b *"") AND (Processes.process=*objectcategory* OR Processes.process=""* -gcb *"" OR Processes.process=""* -sc *"") by Processes.dest Processes.user Processes.process_name Processes.process Processes.parent_process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_adfind_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_name', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']",ADfind is a command-line tool for AD administration and management that is seen to be leveraged by various adversaries. Filter out legitimate administrator usage using the filter macro.,"['Domain Trust Discovery', 'IcedID', 'NOBELIUM Group', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/domain_trust_discovery', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://www.volexity.com/blog/2020/12/14/dark-halo-leverages-solarwinds-compromise-to-breach-organizations/', 'https://www.mandiant.com/resources/a-nasty-trick-from-credential-theft-malware-to-business-disruption', 'https://www.joeware.net/freetools/tools/adfind/index.htm', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bd596c22-ad1e-44fc-b242-817253ce8b08/,Linux Proxy Socks Curl,"['T1090', 'T1095']","The following analytic identifies curl being utilized with a proxy based on command-line arguments - -x, socks, –preproxy and –proxy. This behavior is built into the MetaSploit Framework as a auxiliary module. What does socks buy an adversary? SOCKS4a extends the SOCKS4 protocol to allow a client to specify a destination domain name rather than an IP address. The SOCKS5 protocol is defined in RFC 1928. It is an incompatible extension of the SOCKS4 protocol; it offers more choices for authentication and adds support for IPv6 and UDP, the latter of which can be used for DNS lookups. The protocols, and a proxy itself, allow an adversary to evade controls in place monitoring traffic, making it harder for the defender to identify and track activity.",['TTP'],"July 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=curl Processes.process IN (""*-x *"", ""*socks4a://*"", ""*socks5h://*"", ""*socks4://*"",""*socks5://*"", ""*--preproxy *"", ""--proxy*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_proxy_socks_curl_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on proxy usage internally. Filter as needed.,"['Linux Living Off The Land', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/ingress_tool_transfer']","['https://www.offensive-security.com/metasploit-unleashed/proxytunnels/', 'https://curl.se/docs/manpage.html', 'https://en.wikipedia.org/wiki/SOCKS', 'https://oxylabs.io/blog/curl-with-proxy', 'https://reqbin.com/req/c-ddxflki5/curl-proxy-server#:~:text=To%20use%20a%20proxy%20with,be%20URL%20decoded%20by%20Curl.', 'https://gtfobins.github.io/gtfobins/curl/']","['Command And Control', 'Command And Control', 'Endpoint', 'Non-Application Layer Protocol', 'Proxy', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bd5c311e-a6ea-48ae-a289-19a3398e3648/,Windows Identify Protocol Handlers,['T1059'],"The following hunting analytic will identify any protocol handlers utilized on the command-line. A protocol handler is an application that knows how to handle particular types of links: for example, a mail client is a protocol handler for ""mailto:"" links. When the user clicks a ""mailto:"" link, the browser opens the application selected as the handler for the ""mailto:"" protocol (or offers them a choice of handlers, depending on their settings). To identify protocol handlers we can use NirSoft https://www.nirsoft.net/utils/url_protocol_view.html URLProtocolView or query the registry using PowerShell.",['Hunting'],"September 13, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.process) as process values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes  by Processes.dest Processes.parent_process_name Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup windows_protocol_handlers handler AS process OUTPUT handler ishandler 
| where ishandler=""TRUE"" 
| `windows_identify_protocol_handlers_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be found. https and http is a URL Protocol handler that will trigger this analytic. Tune based on process or command-line.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://gist.github.com/MHaggis/a0d3edb57d36e0916c94c0a464b2722e', 'https://www.oreilly.com/library/view/learning-java/1565927184/apas02.html', 'https://blogs.windows.com/msedgedev/2022/01/20/getting-started-url-protocol-handlers-microsoft-edge/', 'https://github.com/Mr-Un1k0d3r/PoisonHandler', 'https://www.mdsec.co.uk/2021/03/phishing-users-to-take-a-test/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-5---protocolhandlerexe-downloaded-a-suspicious-file', 'https://techcommunity.microsoft.com/t5/windows-it-pro-blog/disabling-the-msix-ms-appinstaller-protocol-handler/ba-p/3119479', 'https://www.huntress.com/blog/microsoft-office-remote-code-execution-follina-msdt-bug', 'https://parsiya.net/blog/2021-03-17-attack-surface-analysis-part-2-custom-protocol-handlers/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/be254a5c-63e7-11ec-89da-acde48001122/,Linux Sudoers Tmp File Creation,"['T1548.003', 'T1548']","This analytic is to looks for file creation of sudoers.tmp file cause by editing /etc/sudoers using visudo or editor in linux platform. This technique may abuse by adversaries, malware author and red teamers to gain elevated privilege to targeted or compromised host. /etc/sudoers file controls who can run what commands as what users on what machines and can also control special things such as whether you need a password for particular commands. The file is composed of aliases (basically variables) and user specifications (which control who can run what).",['Anomaly'],"December 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*sudoers.tmp*"") by Filesystem.dest Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_sudoers_tmp_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://forum.ubuntuusers.de/topic/sudo-visudo-gibt-etc-sudoers-tmp/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/be498b9f-d804-4bbf-9fc0-d5448466b313/,Windows Modify Registry Auto Minor Updates,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will ""Treat minor updates like other updates"".",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\AutoInstallMinorUpdates"" AND Registry.registry_value_data=""0x00000000"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_auto_minor_updates_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Updates']",['Endpoint']
https://research.splunk.com/endpoint/bed761f8-ee29-11eb-8bf3-acde48001122/,Suspicious IcedID Rundll32 Cmdline,"['T1218', 'T1218.011']",This search is to detect a suspicious rundll32.exe commandline to execute dll file. This technique was seen in IcedID malware to load its payload dll with the following parameter to load encrypted dll payload which is the license.dat.,['TTP'],"July 26, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*/i:* by  Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.process_id Processes.parent_process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_icedid_rundll32_cmdline_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",limitted. this parameter is not commonly used by windows application but can be used by the network operator.,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://threatpost.com/icedid-banking-trojan-surges-emotet/165314/'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/bef21d24-297e-45e3-9b9a-c6ac45450474/,Powershell Remote Services Add TrustedHost,"['T1021.006', 'T1021']","The following analytic identifies a suspicious PowerShell script execution via EventCode 4104 that contains command to add or modify the trustedhost configuration in Windows OS. This behavior raises concerns due to the nature of modifications made to the 'TrustedHost' configuration, which typically involves adjusting settings crucial for remote connections and security protocols. Alterations in this area could potentially indicate attempts to manipulate trusted hosts or systems for unauthorized remote access, a tactic commonly observed in various unauthorized access or compromise attempts.",['TTP'],"November 23, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*WSMan:\\localhost\\Client\\TrustedHosts*"" ScriptBlockText IN (""* -Value *"", ""* -Concatenate *"") 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_remote_services_add_trustedhost_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID', 'Score']",user and network administrator may used this function to add trusted host.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Remote Management']",['Endpoint']
https://research.splunk.com/endpoint/bf0304b6-6250-11ec-9d7c-acde48001122/,Linux Setuid Using Chmod Utility,"['T1548.001', 'T1548']","This analytic looks for suspicious chmod utility execution to enable SUID bit. This allows a user to temporarily gain root access, usually in order to run a program. For example, only the root account is allowed to change the password information contained in the password database; If the SUID bit appears as an s, the file's owner also has execute permission to the file; if it appears as an S, the file's owner does not have execute permission. The second specialty permission is the SGID, or set group id bit. It is similar to the SUID bit, except it can temporarily change group membership, usually to execute a program. The SGID bit is set if an s or an S appears in the group section of permissions.",['Anomaly'],"December 21, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes WHERE (Processes.process_name = chmod OR Processes.process = ""*chmod *"") AND Processes.process IN(""* g+s *"", ""* u+s *"", ""* 4777 *"", ""* 4577 *"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_setuid_using_chmod_utility_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://www.hackingarticles.in/linux-privilege-escalation-using-capabilities/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Setuid and Setgid', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bf0a378e-5f3c-11ec-a6de-acde48001122/,Linux At Application Execution,"['T1053.002', 'T1053']","The following analytic detects the execution of the ""At"" application in Linux, which can be used by attackers to create persistence entries on a compromised host. The ""At"" application can be used for automation purposes by administrators or network operators, so the filter macros should be updated to remove false positives. If a true positive is found, it suggests an attacker is trying to maintain access to the environment or potentially deliver additional malicious payloads, leading to data theft, ransomware, or other damaging outcomes. To implement this analytic, ensure you are ingesting logs with the required fields from your endpoints into the Endpoint datamodel. When a true positive is detected, it suggests that an attacker is attempting to establish persistence or deliver additional malicious payloads by leveraging the ""At"" application. This behavior can lead to data theft, ransomware attacks, or other damaging outcomes.
During triage, the SOC analyst should review the context surrounding the execution of the ""At"" application. This includes identifying the user, the parent process responsible for invoking the application, and the specific command-line arguments used. It is important to consider whether the execution is expected behavior by an administrator or network operator for legitimate automation purposes.
The presence of ""At"" application execution may indicate an attacker's attempt to maintain unauthorized access to the environment. Immediate investigation and response are necessary to mitigate further risks, identify the attacker's intentions, and prevent potential harm to the organization.",['Anomaly'],"May 26, 2022","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Processes where  Processes.process_name IN (""at"", ""atd"") OR Processes.parent_process_name IN (""at"", ""atd"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_at_application_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1053/001/', 'https://www.linkedin.com/pulse/getting-attacker-ip-address-from-malicious-linux-job-craig-rowland/']","['At', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bf471c94-0324-4b19-a113-d02749b969bc/,Windows Known GraphicalProton Loaded Modules,"['T1574.002', 'T1574']","The following analytic identifies a potential suspicious process loading dll modules related to Graphicalproton backdoor implant of SVR. These DLL modules have been observed in SVR attacks, commonly used to install backdoors on targeted hosts. This anomaly detection highlights the need for thorough investigation and immediate mitigation measures to safeguard the network against potential breaches.",['Anomaly'],"December 18, 2023","`sysmon` EventCode=7 ImageLoaded IN (""*\\AclNumsInvertHost.dll"", ""*\\ModeBitmapNumericAnimate.dll"", ""*\\UnregisterAncestorAppendAuto.dll"", ""*\\DeregisterSeekUsers.dll"", ""*\\ScrollbarHandleGet.dll"", ""*\\PerformanceCaptionApi.dll"", ""*\\WowIcmpRemoveReg.dll"", ""*\\BlendMonitorStringBuild.dll"", ""*\\HandleFrequencyAll.dll"", ""*\\HardSwapColor.dll"", ""*\\LengthInMemoryActivate.dll"", ""*\\ParametersNamesPopup.dll"", ""*\\ModeFolderSignMove.dll"", ""*\\ChildPaletteConnected.dll"", ""*\\AddressResourcesSpec.dll"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode Signed ProcessId Hashes IMPHASH 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_known_graphicalproton_loaded_modules_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId', 'Hashes', 'IMPHASH']",unknown,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bfdaabe7-3db8-48c5-80c1-220f9b8f22be/,Windows Indirect Command Execution Via Series Of Forfiles,['T1202'],This analytic is developed to detect suspicious excessive usage of forfiles.exe process. This event was seen in post exploitation tool WINPEAS that was used by Ransomware Prestige. Forfiles command lets you run a command on or pass arguments to multiple files. This Windows OS built-in tool being abused to list all files in specific directory or drive.,['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_guid) as process_guid  values(Processes.process_name) as process_name count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where Processes.process_name = ""forfiles.exe"" OR Processes.original_file_name = ""forfiles.exe"" by Processes.parent_process_name Processes.parent_process Processes.dest Processes.user _time span=1m 
| where count >=20 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_indirect_command_execution_via_series_of_forfiles_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/forfiles', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Defense Evasion', 'Endpoint', 'Indirect Command Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bfe94226-8c10-11eb-a4b3-acde48001122/,CertUtil With Decode Argument,['T1140'],"CertUtil.exe may be used to encode and decode a file, including PE and script code. Encoding will convert a file to base64 with -----BEGIN CERTIFICATE----- and -----END CERTIFICATE----- tags. Malicious usage will include decoding a encoded file that was downloaded. Once decoded, it will be loaded by a parallel process. Note that there are two additional command switches that may be used - encodehex and decodehex. Similarly, the file will be encoded in HEX and later decoded for further execution. During triage, identify the source of the file being decoded. Review its contents or execution behavior for further analysis.",['TTP'],"March 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_certutil` Processes.process=*decode* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `certutil_with_decode_argument_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Typically seen used to encode files, but it is possible to see legitimate use of decode. Filter based on parent-child relationship, file paths, endpoint or user.","['Deobfuscate-Decode Files or Information', 'Living Off The Land', 'Forest Blizzard']","['https://research.splunk.com/stories/deobfuscate-decode_files_or_information', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/forest_blizzard']","['https://attack.mitre.org/techniques/T1140/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1140/T1140.md', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil', 'https://www.bleepingcomputer.com/news/security/certutilexe-could-allow-attackers-to-download-malware-while-bypassing-av/']","['Defense Evasion', 'Deobfuscate/Decode Files or Information', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/bff0e7a0-317f-11ec-ab4e-acde48001122/,Wmic NonInteractive App Uninstallation,"['T1562.001', 'T1562']",This analytic indentifies WMIC command-line attempting to uninstall application non-interactively. This technique was seen in IcedID to uninstall AV products on the compromised host to evade detection. This Hunting query maybe a good indicator that some process tries to uninstall application using wmic which is not a common behavior. This approach may seen in some script or third part appication to uninstall their application but it is a good thing to check what it uninstall and why.,['Hunting'],"July 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wmic.exe Processes.process=""* product *"" Processes.process=""*where name*"" Processes.process=""*call uninstall*"" Processes.process=""*/nointeractive*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wmic_noninteractive_app_uninstallation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Third party application may use this approach to uninstall applications.,"['IcedID', 'Azorult']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c026e3dd-7e18-4abb-8f41-929e836efe74/,Detect Excessive Account Lockouts From Endpoint,"['T1078', 'T1078.002']",This search identifies endpoints that have caused a relatively high number of account lockouts in a short period.,['Anomaly'],"February 14, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(All_Changes.user) as user from datamodel=Change.All_Changes where All_Changes.result=""*lock*"" by All_Changes.dest All_Changes.result 
|`drop_dm_object_name(""All_Changes"")` 
|`drop_dm_object_name(""Account_Management"")`
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| search count > 5 
| `detect_excessive_account_lockouts_from_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Changes.user', 'nodename', 'All_Changes.result', 'All_Changes.dest']","It's possible that a widely used system, such as a kiosk, could cause a large number of account lockouts.",['Account Monitoring and Controls'],['https://research.splunk.com/stories/account_monitoring_and_controls'],N/A,"['Change', 'Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/c0325326-acd6-11eb-98c2-acde48001122/,Disabling Net User Account,['T1531'],This analytic will identify a suspicious command-line that disables a user account using the net.exe utility native to Windows. This technique may used by the adversaries to interrupt availability of such users to do their malicious act.,['TTP'],"May 4, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.parent_process) as parent_process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` AND Processes.process=""*user*"" AND Processes.process=""*/active:no*"" by  Processes.process_name Processes.original_file_name Processes.dest Processes.user Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_net_user_account_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['XMRig'],['https://research.splunk.com/stories/xmrig'],['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Account Access Removal', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c04ef40c-72da-11ec-8eac-acde48001122/,Linux Possible Ssh Key File Creation,"['T1098.004', 'T1098']",This analytic is to look for possible ssh key file creation on ~/.ssh/ folder. This technique is commonly abused by threat actors and adversaries to gain persistence and privilege escalation to the targeted host. by creating ssh private and public key and passing the public key to the attacker server. threat actor can access remotely the machine using openssh daemon service.,['Anomaly'],"January 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/.ssh*"") by Filesystem.dest Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_possible_ssh_key_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can create file in ~/.ssh folders for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://www.hackingarticles.in/ssh-penetration-testing-port-22/', 'https://attack.mitre.org/techniques/T1098/004/']","['Account Manipulation', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'SSH Authorized Keys']",['Endpoint']
https://research.splunk.com/endpoint/c0c5a479-bf57-4ca0-af3a-4c7081e5ba05/,Windows Credentials from Password Stores Creation,['T1555'],"The following analytic identifies a process execution of Windows OS cmdkey.exe tool. This tool is being abused or used by several post exploitation tool and malware such as Darkgate malware to create stored user names, passwords or credentials in the targeted Windows OS host. This information can be used by the attacker to gain privilege escalation and persistence in the targeted hosts for further attacks.",['TTP'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""cmdkey.exe"" OR Processes.original_file_name = ""cmdkey.exe"" AND Processes.process = ""*/generic*"" Processes.process IN (""*/user*"", ""*/password*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this tool for auditing process.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Credential Access', 'Credentials from Password Stores', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c0d810f4-230c-44ea-b703-989da02ff145/,Linux MySQL Privilege Escalation,"['T1548.003', 'T1548']","MySQL is an open-source relational database management system. Its name is a combination of ""My"", the name of co-founder Michael Widenius's daughter My, and ""SQL"", the abbreviation for Structured Query Language. If sudo right is given to mysql utility for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*mysql*-e*"" AND Processes.process=""*\!**"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_mysql_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://gtfobins.github.io/gtfobins/mysql/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/c0ed2aca-5666-45b3-813f-ddfac3f3eda0/,Windows MOVEit Transfer Writing ASPX,"['T1190', 'T1133']","The following analytic detects the creation of new ASPX files in the MOVEit Transfer application's ""wwwroot"" directory. This activity is indicative of the recent critical vulnerability found in MOVEit Transfer, where threat actors have been observed exploiting a zero-day vulnerability to install a malicious ASPX file (e.g., ""human2.aspx"") in the wwwroot directory. The injected file could then be used to exfiltrate sensitive data, including user credentials and file metadata. The vulnerability affects the MOVEit Transfer managed file transfer software developed by Progress, a subsidiary of US-based Progress Software Corporation. This analytic requires endpoint data reflecting process and filesystem activity. The identified process must be responsible for the creation of new ASPX or ASHX files in the specified directory.",['TTP'],"June 1, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=System  by _time span=1h Processes.process_id Processes.process_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| join process_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\MOVEitTransfer\\wwwroot\\*"") Filesystem.file_name IN(""*.aspx"", ""*.ashx"", ""*.asp*"") OR Filesystem.file_name IN (""human2.aspx"",""_human2.aspx"") by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| fields _time dest file_create_time file_name file_path process_name process_path process] 
| dedup file_create_time 
| table dest file_create_time, file_name, file_path, process_name 
| `windows_moveit_transfer_writing_aspx_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.file_path', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_hash', 'Filesystem.user', 'Filesystem.file_create_time', 'Processes.process_id', 'Processes.process_name', 'Processes.dest']","The query is structured in a way that action (read, create) is not defined. Review the results of this query, filter, and tune as necessary. It may be necessary to generate this query specific to your endpoint product.",['MOVEit Transfer Critical Vulnerability'],['https://research.splunk.com/stories/moveit_transfer_critical_vulnerability'],"['https://community.progress.com/s/article/MOVEit-Transfer-Critical-Vulnerability-31May2023', 'https://www.reddit.com/r/sysadmin/comments/13wxuej/critical_vulnerability_moveit_file_transfer/', 'https://www.bleepingcomputer.com/news/security/new-moveit-transfer-zero-day-mass-exploited-in-data-theft-attacks/', 'https://www.reddit.com/r/sysadmin/comments/13wxuej/critical_vulnerability_moveit_file_transfer/', 'https://www.mandiant.com/resources/blog/zero-day-moveit-data-theft']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c10a18cb-fa70-4dfa-a944-25026e1b0c94/,Detect Prohibited Browsers Spawning cmd exe,['T1059'],"The following analytic identifies parent processes that are browsers, spawning cmd.exe. By its very nature, many applications spawn cmd.exe natively or built into macros. Much of this will need to be tuned to further enhance the risk.",['Anomaly'],"December 11, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = lower(process.cmd_line) 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = lower(actor_process_file.name) 
| eval device_hostname = device.hostname 
| where ((actor_process_file_name IN (""iexplore.exe"", ""opera.exe"", ""firefox.exe"")) OR (actor_process_file_name=""chrome.exe"" AND (NOT process_cmd_line=""chrome-extension""))) AND process_file_name=""cmd.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",There are circumstances where an application may legitimately execute and interact with the Windows command-line interface.,"['Suspicious Command-Line Executions', 'Insider Threat']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/insider_threat']",['https://attack.mitre.org/techniques/T1059/'],"['Command and Scripting Interpreter', 'Execution', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/c10a18cb-fd70-44fb-a8f4-25026a0b0c94/,Detect Prohibited Office Applications Spawning cmd exe,['T1059'],"The following analytic identifies parent processes that are office/productivity applications, spawning cmd.exe. By its very nature, many applications spawn cmd.exe natively or built into macros. Much of this will need to be tuned to further enhance the risk.",['Anomaly'],"December 11, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = lower(actor_process_file.name) 
| eval device_hostname = device.hostname 
| where (actor_process_file_name IN (""winword.exe"", ""excel.exe"", ""outlook.exe"", ""powerpnt.exe"", ""acrobat.exe"", ""acrord32.exe"")) AND process_file_name=""cmd.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",There are circumstances where an application may legitimately execute and interact with the Windows command-line interface.,"['Suspicious Command-Line Executions', 'Insider Threat']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/insider_threat']",['https://attack.mitre.org/techniques/T1059/'],"['Command and Scripting Interpreter', 'Execution', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/c11f2b57-92c1-4cd2-b46c-064eafb833ac/,MacOS plutil,['T1647'],Detect usage of plutil to modify plist files. Adversaries can modiy plist files to executed binaries or add command line arguments. Plist files in auto-run locations are executed upon user logon or system startup.,['TTP'],"November 7, 2023","`osquery` name=es_process_events columns.path=/usr/bin/plutil 
| rename columns.* as * 
| stats count  min(_time) as firstTime max(_time) as lastTime by username host cmdline pid path parent signing_id 
| rename username as user, cmdline as process, path as process_path, host as dest 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `macos_plutil_filter`","['osquery', 'security_content_ctime']","['_time', 'columns.cmdline', 'columns.pid', 'columns.parent', 'columns.path', 'columns.signing_id', 'columns.username', 'host']",Administrators using plutil to change plist files.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],['https://osquery.readthedocs.io/en/stable/deployment/process-auditing/'],"['Defense Evasion', 'Plist File Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c137bfe8-6036-4cff-b77b-4e327dd0a1cf/,Windows Proxy Via Netsh,"['T1090.001', 'T1090']","This search looks for processes launching netsh.exe for connection proxy. Netsh is a command-line scripting utility that allows you to, either locally or remotely, display or modify the network configuration of a computer that is currently running. Netsh can be used as a persistence proxy technique to execute a helper DLL when netsh.exe is executed. In this search, we are looking for processes spawned by netsh.exe and executing commands via the command line.",['Anomaly'],"May 25, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process = ""* portproxy *"" Processes.process = ""* v4tov4 *"" by Processes.parent_process_name Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.user Processes.dest 
|`drop_dm_object_name(""Processes"")` 
|`security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `windows_proxy_via_netsh_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.user', 'Processes.dest']","Some VPN applications are known to launch netsh.exe. Outside of these instances, it is unusual for an executable to launch netsh.exe and run commands.",['Volt Typhoon'],['https://research.splunk.com/stories/volt_typhoon'],['https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/'],"['Command And Control', 'Command And Control', 'Endpoint', 'Internal Proxy', 'Proxy', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c13b3d74-6b63-4db5-a841-4206f0370077/,Windows Service Create with Tscon,"['T1563.002', 'T1563', 'T1543.003']","The following analytic detects potential RDP Hijacking attempts by monitoring a series of actions taken by an attacker to gain unauthorized access to a remote system. The attacker first runs the quser command to query the remote host for disconnected user sessions. Upon identifying a disconnected session, they use the sc.exe command to create a new Windows service with a binary path that launches tscon.exe. By specifying the disconnected session ID and a destination ID, the attacker can transfer the disconnected session to a new RDP session, effectively hijacking the user's session. This analytic allows security teams to detect and respond to RDP Hijacking attempts, mitigating potential risks and impacts on targeted systems.",['TTP'],"March 29, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=sc.exe Processes.process=""*/dest:rdp-tcp*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_create_with_tscon_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may arise in the RDP Hijacking analytic when legitimate administrators access remote sessions for maintenance or troubleshooting purposes. These activities might resemble an attacker''s attempt to hijack a disconnected session, leading to false alarms. To mitigate the risk of false positives and improve the overall security posture, organizations can implement Group Policy to automatically disconnect RDP sessions when they are complete. By enforcing this policy, administrators ensure that disconnected sessions are promptly terminated, reducing the window of opportunity for an attacker to hijack a session. Additionally, organizations can also implement access control mechanisms and monitor the behavior of privileged accounts to further enhance security and reduce the chances of false positives in RDP Hijacking detection.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1563.002/T1563.002.md']","['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Persistence', 'Privilege Escalation', 'RDP Hijacking', 'Remote Service Session Hijacking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/c1400ea2-6257-11ec-ad49-acde48001122/,Linux Change File Owner To Root,"['T1222.002', 'T1222']","This analytic looks for a commandline that change the file owner to root using chown utility tool. This technique is commonly abuse by adversaries, malware author and red teamers to escalate privilege to the targeted or compromised host by changing the owner of their malicious file to root. This event is not so common in corporate network except from the administrator doing normal task that needs high privilege.",['Anomaly'],"December 21, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name = chown OR Processes.process = ""*chown *"") AND Processes.process = ""* root *"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_change_file_owner_to_root_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://unix.stackexchange.com/questions/101073/how-to-change-permissions-from-root-user-to-all-users', 'https://askubuntu.com/questions/617850/changing-from-user-to-superuser']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Linux and Mac File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c148a894-dd93-11eb-bf2a-acde48001122/,Powershell Disable Security Monitoring,"['T1562.001', 'T1562']","This search identifies a modification in registry to disable the windows defender real time behavior monitoring. This event or technique is commonly seen in RATs, bots, or Trojans to disable AV to evade detections.",['TTP'],"July 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=""*set-mppreference*"" AND Processes.process IN (""*disablerealtimemonitoring*"",""*disableioavprotection*"",""*disableintrusionpreventionsystem*"",""*disablescriptscanning*"",""*disableblockatfirstseen*"",""*DisableBehaviorMonitoring*"",""*drtm *"",""*dioavp *"",""*dscrptsc *"",""*dbaf *"",""*dbm *"") by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_disable_security_monitoring_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives. However, tune based on scripts that may perform this action.","['Ransomware', 'Revil Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.001/T1562.001.md#atomic-test-15---tamper-with-windows-defender-atp-powershell', 'https://docs.microsoft.com/en-us/powershell/module/defender/set-mppreference?view=windowsserver2022-ps']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c1952cf1-643c-4965-82de-11c067cbae76/,Linux Shred Overwrite Command,['T1485'],"This analytic is to detect a shred process to overwrite a files in a linux machine. Shred Linux application is designed to overwrite file to hide its contents or make the deleted file un-recoverable. Weve seen this technique in industroyer2 malware that tries to wipe energy facilities of targeted sector as part of its destructive attack. It might be some normal user may use this command for valid purposes but it is recommended to check what files, disk or folder it tries to shred that might be good pivot for incident response in this type of destructive malware.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name =shred AND Processes.process IN (""*-n*"", ""*-u*"", ""*-z*"", ""*-s*"") by Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_shred_overwrite_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['Industroyer2', 'AwfulShred', 'Linux Privilege Escalation', 'Data Destruction', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Data Destruction', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c1de2d9a-0c02-4bb4-a49a-510c6e9cf2bf/,Linux Curl Upload File,['T1105'],"The following analytic identifies curl being utilized with the -F or –form, –upload-file, -T, -d, –data, –data-raw, -I and –head switches to upload AWS credentials or config to a remote destination. This enables uploading of binary files and so forth. To force the 'content' part to be a file, prefix the file name with an @ sign. To just get the content part from a file, prefix the file name with the symbol <. The difference between @ and < is then that @ makes a file get attached in the post as a file upload, while the < makes a text field and just get the contents for that text field from a file. This technique was utlized by the TeamTNT group to exfiltrate AWS credentials.",['TTP'],"July 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=curl Processes.process IN (""*-F *"", ""*--form *"",""*--upload-file *"",""*-T *"",""*-d *"",""*--data *"",""*--data-raw *"", ""*-I *"", ""*--head *"") AND Processes.process IN (""*.aws/credentials*"". ""*.aws/config*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_curl_upload_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Filtering may be required. In addition to AWS credentials, add other important files and monitor. The inverse would be to look for all -F behavior and tune from there.","['Linux Living Off The Land', 'Data Exfiltration', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/data_exfiltration', 'https://research.splunk.com/stories/ingress_tool_transfer']","['https://curl.se/docs/manpage.html', 'https://www.cadosecurity.com/team-tnt-the-first-crypto-mining-worm-to-steal-aws-credentials/', 'https://gtfobins.github.io/gtfobins/curl/']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c1eea697-99ed-44c2-9b70-d8935464c499/,Linux Hardware Addition SwapOff,['T1200'],This analytic looks for process execution to disable the swapping of paging devices. This technique was seen in Awfulshred malware that disables the swapping of the specified devices and files. This anomaly detection can be a good indicator that a process or a user tries to disable this Linux feature in a targeted host.,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""swapoff"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_hardware_addition_swapoff_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",administrator may disable swapping of devices in a linux host. Filter is needed.,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']",['https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/'],"['Endpoint', 'Hardware Additions', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c205bd2e-cd5b-4224-8510-578a2a1f83d7/,Windows Defender Tools in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies usage of the MPCmdRun utility that can be abused by adversaries by moving it to a new directory.,['Anomaly'],"July 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = process_file.name 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where match(process_file_name, /(?i)mpcmdrun.exe/)=true AND (NOT match(process_file_path, /(?i)\\windows defender/)=true) AND (NOT match(process_file_path, /(?i)\\microsoft\\windows defender\\platform/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required.,['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/c2590137-0b08-4985-9ec5-6ae23d92f63d/,Set Default PowerShell Execution Policy To Unrestricted or Bypass,"['T1059', 'T1059.001']","Monitor for changes of the ExecutionPolicy in the registry to the values ""unrestricted"" or ""bypass,"" which allows the execution of malicious scripts.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=*Software\\Microsoft\\Powershell\\1\\ShellIds\\Microsoft.PowerShell* Registry.registry_value_name=ExecutionPolicy (Registry.registry_value_data=Unrestricted OR Registry.registry_value_data=Bypass)) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `set_default_powershell_execution_policy_to_unrestricted_or_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']","Administrators may attempt to change the default execution policy on a system for a variety of reasons. However, setting the policy to ""unrestricted"" or ""bypass"" as this search is designed to identify, would be unusual. Hits should be reviewed and investigated as appropriate.","['HAFNIUM Group', 'Hermetic Wiper', 'Credential Dumping', 'Malicious PowerShell', 'Data Destruction', 'DarkGate Malware']","['https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/darkgate_malware']",N/A,"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c3194009-e0eb-4f84-87a9-4070f8688f00/,Suspicious PlistBuddy Usage,"['T1543.001', 'T1543']","The following analytic identifies the use of a native MacOS utility, PlistBuddy, creating or modifying a properly list (.plist) file. In the instance of Silver Sparrow, the following commands were executed:\",['TTP'],"February 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=PlistBuddy (Processes.process=*LaunchAgents* OR Processes.process=*RunAtLoad* OR Processes.process=*true*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
|  `suspicious_plistbuddy_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']",Some legitimate applications may use PlistBuddy to create or modify property lists and possibly generate false positives. Review the property list being modified or created to confirm.,['Silver Sparrow'],['https://research.splunk.com/stories/silver_sparrow'],['https://www.marcosantadev.com/manage-plist-files-plistbuddy/'],"['Create or Modify System Process', 'Endpoint', 'Launch Agent', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c32f091e-30db-11ec-8738-acde48001122/,Windows Curl Download to Suspicious Path,['T1105'],"The following analytic identifies the use of Windows Curl.exe downloading a file to a suspicious location. 
-O or –output is used when a file is to be downloaded and placed in a specified location. 
During triage, review parallel processes for further behavior. In addition, identify if the download was successful. If a file was downloaded, capture and analyze.",['TTP'],"October 19, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_curl` Processes.process IN (""*-O *"",""*--output*"") Processes.process IN (""*\\appdata\\*"",""*\\programdata\\*"",""*\\public\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_curl_download_to_suspicious_path_filter`","['security_content_summariesonly', 'process_curl', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",It is possible Administrators or super users will use Curl for legitimate purposes. Filter as needed.,"['IcedID', 'Ingress Tool Transfer', 'Forest Blizzard']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/forest_blizzard']","['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/', 'https://attack.mitre.org/techniques/T1105/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1105/T1105.md']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c396a0c4-c9f2-11eb-b4f5-acde48001122/,Powershell Using memory As Backing Store,"['T1059.001', 'T1059']","The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is using memory stream as new object backstore. The malicious PowerShell script will contain stream flate data and will be decompressed in memory to run or drop the actual payload. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['TTP'],"April 14, 2023","`powershell` EventCode=4104 ScriptBlockText = *New-Object* ScriptBlockText = *IO.MemoryStream* 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_using_memory_as_backing_store_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'UserID']",powershell may used this function to store out object into memory.,"['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction', 'IcedID']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/icedid']","['https://web.archive.org/web/20201112031711/https://www.carbonblack.com/blog/decoding-malicious-powershell-streams/', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c3bc1430-04e7-4178-835f-047d8e6e97df/,Detect Regasm with no Command Line Arguments,"['T1218', 'T1218.009']","The following analytic identifies regasm.exe with no command line arguments. This particular behavior occurs when another process injects into regasm.exe, no command line arguments will be present. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Regasm.exe are natively found in C:\Windows\Microsoft.NET\Framework\v*\regasm|regsvcs.exe and C:\Windows\Microsoft.NET\Framework64\v*\regasm|regsvcs.exe.",['TTP'],"March 15, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_regasm` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process  Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(regasm\.exe.{0,4}$)"" 
| `detect_regasm_with_no_command_line_arguments_filter`","['security_content_summariesonly', 'process_regasm', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, limited instances of regasm.exe or may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regasm/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/c3e05466-5f22-11eb-ae93-0242ac130002/,NLTest Domain Trust Discovery,['T1482'],"This search looks for the execution of nltest.exe with command-line arguments utilized to query for Domain Trust information. Two arguments /domain trusts, returns a list of trusted domains, and /all_trusts, returns all trusted domains. Red Teams and adversaries alike use NLTest.exe to enumerate the current domain to assist with further understanding where to pivot next.",['TTP'],"April 18, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_nltest` (Processes.process=*/domain_trusts* OR Processes.process=*/all_trusts*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `nltest_domain_trust_discovery_filter`","['security_content_summariesonly', 'process_nltest', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']","Administrators may use nltest for troubleshooting purposes, otherwise, rarely used.","['Ryuk Ransomware', 'Domain Trust Discovery', 'IcedID', 'Active Directory Discovery', 'Qakbot', 'Rhysida Ransomware']","['https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/domain_trust_discovery', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md', 'https://malware.news/t/lets-learn-trickbot-implements-network-collector-module-leveraging-cmd-wmi-ldap/19104', 'https://attack.mitre.org/techniques/T1482/', 'https://owasp.org/www-pdf-archive/Red_Team_Operating_in_a_Modern_Environment.pdf', 'https://ss64.com/nt/nltest.html', 'https://redcanary.com/threat-detection-report/techniques/domain-trust-discovery/', 'https://thedfirreport.com/2020/10/08/ryuks-return/']","['Discovery', 'Domain Trust Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c3f85976-94a5-11ec-9a58-acde48001122/,Windows Excessive Disabled Services Event,"['T1562.001', 'T1562']","This analytic will identify suspicious excessive number of system events of services that was modified from start to disabled. This technique is seen where the adversary attempts to disable security app services, other malware services oer serve as an destructive impact to complete the objective on the compromised system. One good example for this scenario is Olympic destroyer where it disable all active services in the compromised host as part of its destructive impact and defense evasion.",['TTP'],"January 24, 2024","`wineventlog_system` EventCode=7040 Message = ""*service was changed from demand start to disabled."" 
| rename ComputerName as src 
| stats count values(Message) as MessageList dc(Message) as MessageCount min(_time) as firstTime max(_time) as lastTime by src EventCode  User Sid 
| where MessageCount >=10 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_excessive_disabled_services_event_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'src', 'ComputerName', 'EventCode', 'Message', 'User', 'Sid']",Unknown,"['Windows Defense Evasion Tactics', 'CISA AA23-347A']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a']",['https://blog.talosintelligence.com/2018/02/olympic-destroyer.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c427bafb-0b2c-4b18-ad85-c03c6fed9e75/,Windows Modify Registry USeWuServer,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will use ""The WUServer value unless this key is set"".",['Hunting'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\UseWUServer"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_usewuserver_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c448488c-b7ec-11eb-8253-acde48001122/,Services Escalate Exe,['T1548'],"The following analytic identifies the use of svc-exe with Cobalt Strike. The behavior typically follows after an adversary has already gained initial access and is escalating privileges. Using svc-exe, a randomly named binary will be downloaded from the remote Teamserver and placed on disk within C:\Windows\400619a.exe. Following, the binary will be added to the registry under key HKLM\System\CurrentControlSet\Services\400619a\ with multiple keys and values added to look like a legitimate service. Upon loading, services.exe will spawn the randomly named binary from \\127.0.0.1\ADMIN$\400619a.exe. The process lineage is completed with 400619a.exe spawning rundll32.exe, which is the default spawnto_ value for Cobalt Strike. The spawnto_ value is arbitrary and may be any process on disk (typically system32/syswow64 binary). The spawnto_ process will also contain a network connection. During triage, review parallel procesess and identify any additional file modifications.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=services.exe Processes.process_path=*admin$* by Processes.process_path Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `services_escalate_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives should be limited as services.exe should never spawn a process from ADMIN$. Filter as needed.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack', 'CISA AA23-347A']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/', 'https://attack.mitre.org/techniques/T1548/', 'https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/index.htm#cshid=1085']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c4566d2c-b094-48a1-9c59-d66e22065560/,Windows Indicator Removal Via Rmdir,['T1070'],"The following analytic identifies a process execute rmdir commandline to delete files and directory tree. This technique has been observed in the actions of various malware strains, such as DarkGate, as they attempt to eliminate specific files or components during their cleanup operations within compromised hosts. Notably, this deletion method doesn't exclusively require elevated privileges and can be executed by regular users or network administrators, although it's not the typical approach used for file deletion.",['Anomaly'],"November 23, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*rmdir*"" Processes.process = ""* /s *"" Processes.process = ""* /q *"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_indicator_removal_via_rmdir_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",user and network administrator can execute this command.,['DarkGate Malware'],['https://research.splunk.com/stories/darkgate_malware'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.darkgate'],"['Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c4db14d9-7909-48b4-a054-aa14d89dbb19/,Malicious PowerShell Process - Encoded Command,['T1027'],"The following analytic identifies the use of the EncodedCommand PowerShell parameter. This is typically used by Administrators to run complex scripts, but commonly used by adversaries to hide their code. 
The analytic identifies all variations of EncodedCommand, as PowerShell allows the ability to shorten the parameter. For example enc, enco, encod and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash. 
During triage, review parallel events to determine legitimacy. Tune as needed based on admin scripts in use. 
Alternatively, may use regex per matching here https://regexr.com/662ov.",['Hunting'],"January 18, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.dest Processes.process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/
|–
|—
|―]e(nc*o*d*e*d*c*o*m*m*a*n*d*)*\s+[^-]"") 
| `malicious_powershell_process___encoded_command_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest', 'Processes.process_id']","System administrators may use this option, but it's not common.","['Hermetic Wiper', 'Malicious PowerShell', 'NOBELIUM Group', 'WhisperGate', 'DarkCrystal RAT', 'Qakbot', 'CISA AA22-320A', 'Sandworm Tools', 'Data Destruction', 'Volt Typhoon']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/volt_typhoon']","['https://regexr.com/662ov', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1059.001_PowerShell/OutPowerShellCommandLineParameter.ps1', 'https://ss64.com/ps/powershell.html', 'https://twitter.com/M_haggis/status/1440758396534214658?s=20', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c54b7439-cfb1-44c3-bb35-b0409553077c/,Windows Impair Defense Configure App Install Control,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to change or disable Windows Defender smartscreen app install control. Microsoft Edge's App Install Control feature helps manage the installation of web-based applications. When attackers modify ""ConfigureAppInstallControlEnabled"" to 0, they are likely attempting to disable the App Install Control feature in Microsoft Edge. This change might allow users to bypass restrictions imposed by the browser on the installation of web-based applications. Disabling this feature might increase the risk of users being able to install potentially malicious or untrusted web applications without restrictions or controls imposed by the browser. This action could potentially lead to security vulnerabilities or compromise if users inadvertently install harmful applications.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\Microsoft\\Windows Defender\\SmartScreen\\ConfigureAppInstallControl"" Registry.registry_value_data= ""Anywhere"") OR (Registry.registry_path= ""*\\Microsoft\\Windows Defender\\SmartScreen\\ConfigureAppInstallControlEnabled"" Registry.registry_value_data= ""0x00000000"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_configure_app_install_control_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c5a31f80-5888-4d81-9f78-1cc65026316e/,GetAdComputer with PowerShell,['T1018'],This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. The `Get-AdComputer' commandlet returns a list of all domain computers. Red Teams and adversaries alike may use this commandlet to identify remote systems for situational awareness and Active Directory Discovery.,['Hunting'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-AdComputer*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadcomputer_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c5eac648-fae0-4263-91a6-773df1f4c903/,Credential Dumping via Symlink to Shadow Copy,"['T1003.003', 'T1003']","The following analytic detects the creation of a symlink to a shadow copy to identify potential threats earlier and mitigate the risks associated with symlink creation to shadow copies.  The detection is made by using a Splunk query that searches for processes with commands containing ""mklink"" and ""HarddiskVolumeShadowCopy"". This analytic retrieves information such as the destination, user, process name, process ID, parent process, original file name, and parent process ID from the Endpoint.Processes data model.  The detection is important because it indicates potential malicious activity since attackers might use this technique to manipulate or delete shadow copies, which are used for system backup and recovery. This detection helps to determine if an attacker is attempting to cover their tracks or prevent data recovery in the event of an incident. The impact of such an attack can be significant since it can hinder incident response efforts, prevent data restoration, and potentially lead to data loss or compromise. Next steps include reviewing the details of the process, such as the destination and the user responsible for creating the symlink. Additionally, you must examine the parent process, any relevant on-disk artifacts, and concurrent processes to identify the source of the attack.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` Processes.process=*mklink* Processes.process=*HarddiskVolumeShadowCopy* by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.parent_process_name Processes.original_file_name Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `credential_dumping_via_symlink_to_shadow_copy_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf'],"['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c6149154-c9d8-11eb-9da7-acde48001122/,Windows Registry Modification for Safe Mode Persistence,"['T1547.001', 'T1547']","The following analytic identifies a modification or registry add to the safeboot registry as an autostart mechanism. This technique is utilized by adversaries to persist a driver or service into Safe Mode. Two keys are monitored in this analytic,  Minimal and Network. adding values to Minimal will load into Safe Mode and by adding into Network it will provide the service or drive the ability to perform network connections in Safe Mode.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path IN (""*SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\*"",""*SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Network\\*"") by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.process_guid Registry.registry_key_name Registry.registry_value_data 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_registry_modification_for_safe_mode_persistence_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest']",updated windows application needed in safe boot may used this registry,"['Ransomware', 'Windows Registry Abuse', 'Windows Drivers']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/windows_drivers']","['https://malware.news/t/threat-analysis-unit-tau-threat-intelligence-notification-snatch-ransomware/36365', 'https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1112/T1112.md', 'https://blog.didierstevens.com/2007/03/26/playing-with-safe-mode/']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Registry Run Keys / Startup Folder', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c661f6be-a38c-11eb-be57-acde48001122/,Office Product Spawning Rundll32 with no DLL,"['T1566', 'T1566.001']","The following detection identifies the latest behavior utilized by IcedID malware family. This detection identifies any Windows Office Product spawning rundll32.exe without a .dll file extension. In malicious instances, the command-line of rundll32.exe will look like rundll32 ..\oepddl.igk2,DllRegisterServer. In addition, Threat Research has released a detection identifying the use of DllRegisterServer on the command-line of rundll32.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze the DLL that was dropped to disk. The Office Product will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"", ""msaccess.exe"", ""Graph.exe"",""winproj.exe"") `process_rundll32` (Processes.process!=*.dll*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_rundll32_with_no_dll_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, but if any are present, filter as needed.","['Spearphishing Attachments', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://www.joesandbox.com/analysis/395471/0/html', 'https://app.any.run/tasks/cef4b8ba-023c-4b3b-b2ef-6486a44f6ed9/', 'https://any.run/malware-trends/icedid']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c6b2d80f-179a-41a1-b95e-ce5601d7427a/,Windows Registry Payload Injection,"['T1027', 'T1027.011']",The following analytic identifies when suspiciouly long data is written to the registry. This behavior is often associated with certain fileless malware threats or persistence techniques used by threat actors. Data stored in the registy is considered fileless since it does not get written to disk and is traditionally not well defended since normal users can modify thier own registry.,['TTP'],"June 15, 2023","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid
| `drop_dm_object_name(Processes)` 
| join max=0 dest process_guid [
| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_value_data=* by _time span=1h Registry.dest Registry.registry_path Registry.registry_value_name Registry.process_guid Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| eval reg_data_len = len(registry_value_data) 
| where reg_data_len > 512] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data)
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_registry_payload_injection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'user', 'dest', 'process_id', 'process_name', 'process', 'process_path', 'parent_process_name', 'parent_process', 'process_guid', 'registry_path', 'registry_value_name', 'registry_value_data', 'registry_key_name']","Unknown, possible custom scripting.",['Unusual Processes'],['https://research.splunk.com/stories/unusual_processes'],"['https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations', 'https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/kovter-an-evolving-malware-gone-fileless', 'https://attack.mitre.org/techniques/T1027/011/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Fileless Storage', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c6da561a-cd29-11eb-ae65-acde48001122/,Grant Permission Using Cacls Utility,['T1222'],"The following analytic identifies the use of cacls.exe, icacls.exe or xcacls.exe placing the grant permission on a file or directory. Adversaries perform this behavior to allow components of their files to run, however it allows responders to review or gaining access to adversary files on disk.",['TTP'],"November 30, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""icacls.exe"", ""xcacls.exe"", ""cacls.exe"")) AND match(process_cmd_line, /(?i)grant/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators may use cacls utilities but this is not a common practice. Filter as needed.,"['XMRig', 'Insider Threat']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/insider_threat']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'File and Directory Permissions Modification', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/c7495048-61b6-11ec-9a37-acde48001122/,Linux Service File Created In Systemd Directory,"['T1053.006', 'T1053']","The following analytic is designed to detect suspicious file creation within the systemd timer directory on Linux platforms. Systemd is a system and service manager for Linux, similar to the combination of wininit.exe and services.exe on Windows. This process initializes a Linux system and starts defined services in unit files. Malicious actors, such as adversaries, malware, or red teamers, can exploit this feature by embedding a systemd service file for persistence on the targeted or compromised host.
The analytic works by monitoring logs with file name, file path, and process GUID data from your endpoints. If a .service file is created in certain systemd directories, the analytic triggers an alert. This behavior is significant for a Security Operations Center (SOC) as it may indicate a persistent threat within the network, with a potential impact of system compromise or data exfiltration.",['Anomaly'],"December 20, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name = *.service Filesystem.file_path IN (""*/etc/systemd/system*"", ""*/lib/systemd/system*"", ""*/usr/lib/systemd/system*"", ""*/run/systemd/system*"", ""*~/.config/systemd/*"", ""*~/.local/share/systemd/*"",""*/etc/systemd/user*"", ""*/lib/systemd/user*"", ""*/usr/lib/systemd/user*"", ""*/run/systemd/user*"") by Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_service_file_created_in_systemd_directory_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']","False positives may arise when administrators or network operators create files in systemd directories for legitimate automation tasks. Therefore, it's important to adjust filter macros to account for valid activities. To implement this search successfully, it's crucial to ingest appropriate logs, preferably using the Linux Sysmon Add-on from Splunkbase for those using Sysmon.","['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1053/006/', 'https://www.intezer.com/blog/research/kaiji-new-chinese-linux-malware-turning-to-golang/', 'https://redcanary.com/blog/attck-t1501-understanding-systemd-service-persistence/', 'https://github.com/microsoft/MSTIC-Sysmon/blob/main/linux/configs/attack-based/persistence/T1053.003_Cron_Activity.xml']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Systemd Timers']",['Endpoint']
https://research.splunk.com/endpoint/c76b796c-27e1-4520-91c4-4a58695c749e/,Windows Files and Dirs Access Rights Modification Via Icacls,"['T1222.001', 'T1222']","This analytic aims to identify potential adversaries who manipulate the security permissions of specific files or directories. This technique is frequently observed in the tradecraft of Advanced Persistent Threats (APTs) and coinminer scripts. By modifying the security permissions, adversaries seek to evade detection and impede access to their component files. Such actions indicate a deliberate effort to maintain control over compromised systems and hinder investigation or remediation efforts. Detecting these security permission changes can serve as a valuable indicator of an ongoing attack and enable timely response to mitigate the impact of the adversary's activities.",['TTP'],"June 6, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN( ""icacls.exe"", ""cacls.exe"",""xcacls.exe"") AND Processes.process IN (""*:R*"", ""*:W*"", ""*:F*"", ""*:C*"",, ""*:N*"",""*/P*"", ""*/E*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_files_and_dirs_access_rights_modification_via_icacls_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_guid', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process']",Unknown. It is possible some administrative scripts use ICacls. Filter as needed.,['Amadey'],['https://research.splunk.com/stories/amadey'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.amadey'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows File and Directory Permissions Modification']",['Endpoint']
https://research.splunk.com/endpoint/c77162d3-f93c-45cc-80c8-22f6a4264e7f/,Unusually Long Command Line,[],"The following analytic detects command lines that are extremely long, which might be indicative of malicious activity on your hosts because attackers often use obfuscated or complex command lines to hide their actions and evade detection. This helps to mitigate the risks associated with long command lines to enhance your overall security posture and reduce the impact of attacks. This detection is important because it suggests that an attacker might be attempting to execute a malicious command or payload on the host, which can lead to various damaging outcomes such as data theft, ransomware, or further compromise of the system. False positives might occur since legitimate processes or commands can sometimes result in long command lines. Next steps include conducting extensive triage and investigation to differentiate between legitimate and malicious activities. Review the source of the command line and the command itself during the triage. Additionally, capture and inspect any relevant on-disk artifacts and review concurrent processes to identify the source of the attack.",['Anomaly'],"December 8, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes by Processes.user Processes.dest Processes.process_name Processes.process 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
|  eval processlen=len(process) 
| eventstats stdev(processlen) as stdev, avg(processlen) as avg by dest 
| stats max(processlen) as maxlen, values(stdev) as stdevperhost, values(avg) as avgperhost by dest, user, process_name, process 
| `unusually_long_command_line_filter` 
|eval threshold = 3 
| where maxlen > ((threshold*stdevperhost) + avgperhost)","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_name', 'Processes.process']",Some legitimate applications start with long command lines.,"['Suspicious Command-Line Executions', 'Unusual Processes', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'Ransomware']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/ransomware']",N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c8127f87-c7c9-4036-89ed-8fe4b30e678c/,Windows Remote Service Rdpwinst Tool Execution,"['T1021.001', 'T1021']","The following analytic identifies RDPWInst.exe tool, which is a RDP wrapper library tool designed to enable remote desktop host support and concurrent RDP session on reduced functionality system. Unfortunately, this open project was abused by adversaries to enable RDP connection to the targeted host for remote access and potentially be for lateral movement.",['TTP'],"June 24, 2022","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""RDPWInst.exe"" OR Processes.original_file_name=""RDPWInst.exe"") AND Processes.process IN (""* -i*"", ""* -s*"", ""* -o*"", ""* -w*"", ""* -r*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_service_rdpwinst_tool_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",This tool was designed for home usage and not commonly seen in production environment. Filter as needed.,['Azorult'],['https://research.splunk.com/stories/azorult'],['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/'],"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c82adbc6-9f00-11ec-a81f-acde48001122/,Windows Disable Lock Workstation Feature Through Registry,['T1112'],This analytic is to detect a suspicious registry modification to disable Lock Computer windows features. This registry modification prevent the user from locking its screen or computer that are being abused by several malware for example ransomware. This technique was used by threat actor to make its payload more impactful to the compromised host.,['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableLockWorkstation"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_disable_lock_workstation_feature_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Ransomware', 'Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://www.bleepingcomputer.com/news/security/in-dev-ransomware-forces-you-do-to-survey-before-unlocking-computer/', 'https://heimdalsecurity.com/blog/fatalrat-targets-telegram/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c842931e-661f-42bc-a4df-0460d93cfb69/,Windows Rename System Utilities Acccheckconsole exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies AccCheckConsole.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""acccheckconsole.exe"" AND (NOT match(process_file_path, /(?i)\\program files (x86)\\windows kits\\10\\bin\\10.0.22000.0\\arm64\\accchecker/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/c8640777-469f-4638-ab44-c34a3233ffac/,Windows Get-AdComputer Unconstrained Delegation Discovery,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the Get-ADComputer commandlet used with specific parameters to discover Windows endpoints with Kerberos Unconstrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,['TTP'],"March 28, 2022","`powershell` EventCode=4104 (Message = ""*Get-ADComputer*"" AND Message = ""*TrustedForDelegation*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_get_adcomputer_unconstrained_delegation_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may leverage PowerView for system management or troubleshooting.,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://attack.mitre.org/techniques/T1018/', 'https://adsecurity.org/?p=1667', 'https://docs.microsoft.com/en-us/defender-for-identity/cas-isp-unconstrained-kerberos', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/domain-compromise-via-unrestricted-kerberos-delegation', 'https://www.cyberark.com/resources/threat-research-blog/weakness-within-kerberos-delegation']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c8e349c6-b97c-486e-8949-bd7bcd1f3910/,Attempt To Stop Security Service,"['T1562.001', 'T1562']","The following analytic detects attempts to stop security-related services on the endpoint and helps to mitigate potential threats earlier, thereby minimizing the impact on the organization's security. The detection is made by using a Splunk query that searches for processes that involve the ""sc.exe"" command and include the phrase ""stop"" in their command. The query collects information such as the process name, process ID, parent process, user, destination, and timestamps. The detection is important because attempts to stop security-related services can indicate malicious activity or an attacker's attempt to disable security measures. This can impact the organization's security posture and can lead to the compromise of the endpoint and potentially the entire network. Disabling security services can allow attackers to gain unauthorized access, exfiltrate sensitive data, or launch further attacks, such as malware installation or privilege escalation. False positives might occur since there might be legitimate reasons for stopping these services in certain situations. Therefore, you must exercise caution and consider the context of the activity before taking any action. Next steps include reviewing the identified process and its associated details. You must also investigate any on-disk artifacts related to the process and review concurrent processes to determine the source of the attack.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_net` OR  Processes.process_name = sc.exe Processes.process=""* stop *"" by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
|lookup security_services_lookup service as process OUTPUTNEW category, description 
| search category=security 
| `attempt_to_stop_security_service_filter`","['security_content_summariesonly', 'process_net', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",None identified. Attempts to disable security-related services should be identified and understood.,"['WhisperGate', 'Graceful Wipe Out Attack', 'Disabling Security Tools', 'Data Destruction', 'Azorult', 'Trickbot']","['https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/disabling_security_tools', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/trickbot']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1562.001/T1562.001.md#atomic-test-14---disable-arbitrary-security-windows-service', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c8e7ced0-10c5-11ec-8b03-acde48001122/,Rundll32 Control RunDLL Hunt,"['T1218', 'T1218.011']","The following hunting detection identifies rundll32.exe with control_rundll within the command-line, loading a .cpl or another file type. Developed in relation to CVE-2021-40444. Rundll32.exe can also be used to execute Control Panel Item files (.cpl) through the undocumented shell32.dll functions Control_RunDLL and Control_RunDLLAsUser. Double-clicking a .cpl file also causes rundll32.exe to execute. \ This is written to be a bit more broad by not including .cpl. \ During triage, review parallel processes to identify any further suspicious behavior.",['Hunting'],"September 8, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rundll32` Processes.process=*Control_RunDLL*  by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_control_rundll_hunt_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This is a hunting detection, meant to provide a understanding of how voluminous control_rundll is within the environment.","['Suspicious Rundll32 Activity', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444', 'https://research.splunk.com/stories/living_off_the_land']","['https://strontic.github.io/xcyclopedia/library/rundll32.exe-111474C61232202B5B588D2B512CBB25.html', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://attack.mitre.org/techniques/T1218/011/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.002/T1218.002.yaml', 'https://redcanary.com/blog/intelligence-insights-december-2021/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/c91a0852-9fbb-11ec-af44-acde48001122/,Unknown Process Using The Kerberos Protocol,['T1550'],"The following analytic identifies a process performing an outbound connection on port 88 used by default by the network authentication protocol Kerberos. Typically, on a regular Windows endpoint, only the lsass.exe process is the one tasked with connecting to the Kerberos Distribution Center to obtain Kerberos tickets. Identifying an unknown process using this protocol may be evidence of an adversary abusing the Kerberos protocol.",['TTP'],"January 23, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name!=lsass.exe by _time Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join  process_id dest [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port = 88 by All_Traffic.src All_Traffic.process_id  All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename src as dest ] 
|  table _time dest parent_process_name process_name process_path process process_id dest_port 
| `unknown_process_using_the_kerberos_protocol_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Traffic.dest_ip', 'All_Traffic.dest_port', 'All_Traffic.src_ip', 'Processes.process_id', 'Processes.process_name', 'Processes.dest', 'Processes.process_path', 'Processes.process', 'Processes.parent_process_name']",Custom applications may leverage the Kerberos protocol. Filter as needed.,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://stealthbits.com/blog/how-to-detect-overpass-the-hash-attacks/', 'https://www.thehacker.recipes/ad/movement/kerberos/ptk']","['Defense Evasion', 'Endpoint', 'Lateral Movement', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/c9687a28-39ad-43c6-8bcf-eaf061ba0cbe/,Windows Privilege Escalation User Process Spawn System Process,"['T1068', 'T1548', 'T1134']",The following analytic detects when any process low->high integrity level process spawns a system integrity process from a user controlled location. This behavior is often seen when attackers successfully escalate privileges to SYSTEM from a user controlled process or service.,['TTP'],"November 30, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""low"",""medium"",""high"") NOT Processes.user IN (""*SYSTEM"",""*LOCAL SERVICE"",""*NETWORK SERVICE"",""DWM-*"",""*$"") AND Processes.process_path IN (""*\\\\*"",""*\\Users\\*"",""*\\Temp\\*"",""*\\ProgramData\\*"") by Processes.dest, Processes.user, Processes.parent_process_guid, Processes.parent_process, Processes.parent_process_name Processes.process_name Processes.process, Processes.process_path, Processes.process_guid, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| eval join_guid = process_guid 
| join max=0 dest join_guid  [
| tstats `security_content_summariesonly` count max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_integrity_level IN (""system"") AND Processes.parent_process_path IN (""*\\\\*"",""*\\Users\\*"",""*\\Temp\\*"",""*\\ProgramData\\*"") by Processes.dest, Processes.user, Processes.parent_process_guid, Processes.process_name, Processes.process, Processes.process_path, Processes.process_integrity_level, Processes.process_current_directory 
| `drop_dm_object_name(Processes)` 
| rename parent_process_guid as join_guid, process* as system_process*, user as system_user ] 
| fields dest, user, parent_process, parent_process_name, parent_process_guid, process, process_name, process_guid, process_integrity_level,process_path, process_current_directory, system_process_name, system_process, system_process_path, system_process_integrity_level, system_process_current_directory, system_user, firstTime, lastTime, count 
| `security_content_ctime(firstTime)`  
| `security_content_ctime(lastTime)` 
| `windows_privilege_escalation_user_process_spawn_system_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'dest', 'user', 'ParentUser', 'parent_process_name', 'parent_process_guid', 'IntegrityLevel']",Unknown,['Windows Privilege Escalation'],['https://research.splunk.com/stories/windows_privilege_escalation'],"['https://attack.mitre.org/techniques/T1068/', 'https://vuls.cert.org/confluence/display/Wiki/2021/06/21/Finding+Privilege+Escalation+Vulnerabilities+in+Windows+using+Process+Monitor', 'https://redcanary.com/blog/getsystem-offsec/', 'https://atomicredteam.io/privilege-escalation/T1134.001/']","['Abuse Elevation Control Mechanism', 'Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c9ef7dc4-eeaf-11eb-b2b6-acde48001122/,Regsvr32 with Known Silent Switch Cmdline,"['T1218', 'T1218.010']","The following analytic identifies Regsvr32.exe utilizing the silent switch to load DLLs. This technique has most recently been seen in IcedID campaigns to load its initial dll that will download the 2nd stage loader that will download and decrypt the config payload. The switch type may be either a hyphen - or forward slash /. This behavior is typically found with -s, and it is possible there are more switch types that may be used. \ During triage, review parallel processes and capture any artifacts that may have landed on disk. Isolate and contain the endpoint as necessary.",['Anomaly'],"July 27, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_regsvr32` by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.dest Processes.process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/][Ss]{1}"") 
| `regsvr32_with_known_silent_switch_cmdline_filter`","['security_content_summariesonly', 'process_regsvr32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",minimal. but network operator can use this application to load dll.,"['IcedID', 'Suspicious Regsvr32 Activity', 'Remcos', 'Living Off The Land', 'Qakbot', 'AsyncRAT']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/suspicious_regsvr32_activity', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/asyncrat']","['https://app.any.run/tasks/56680cba-2bbc-4b34-8633-5f7878ddf858/', 'https://regexr.com/699e2']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/c9f010da-57ab-11ec-82bd-acde48001122/,Windows Raccine Scheduled Task Deletion,['T1562.001'],"The following analytic identifies the Raccine Rules Updater scheduled task being deleted. Adversaries may attempt to remove this task in order to prevent the update of Raccine.  Raccine is a ""ransomware vaccine"" created by security researcher Florian Roth, designed to intercept and prevent precursors and active ransomware behavior.",['TTP'],"December 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe Processes.process=""*delete*"" AND Processes.process=""*Raccine*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_raccine_scheduled_task_deletion_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, however filter as needed.",['Ransomware'],['https://research.splunk.com/stories/ransomware'],"['https://redcanary.com/blog/blackbyte-ransomware/', 'https://github.com/Neo23x0/Raccine']","['Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/c9f4b923-f8af-4155-b697-1354f5bcbc5e/,Registry Keys Used For Privilege Escalation,"['T1546.012', 'T1546']","This search looks for modifications to registry keys that can be used to elevate privileges. The registry keys under ""Image File Execution Options"" are used to intercept calls to an executable and can be used to attach malicious binaries to benign system binaries.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE ((Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"") AND (Registry.registry_value_name=GlobalFlag OR Registry.registry_value_name=Debugger)) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `registry_keys_used_for_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",There are many legitimate applications that must execute upon system startup and will use these registry keys to accomplish that task.,"['Cloud Federated Credential Abuse', 'Hermetic Wiper', 'Windows Privilege Escalation', 'Windows Registry Abuse', 'Data Destruction', 'Suspicious Windows Registry Activities']","['https://research.splunk.com/stories/cloud_federated_credential_abuse', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/suspicious_windows_registry_activities']",['https://blog.malwarebytes.com/101/2015/12/an-introduction-to-image-file-execution-options/'],"['Endpoint', 'Event Triggered Execution', 'Image File Execution Options Injection', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ca4e94fb-7969-4d63-8630-3625809a1f70/,Windows Modify Registry UpdateServiceUrlAlternate,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that specifies an intranet server to host updates from Microsoft Update.",['Anomaly'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\UpdateServiceUrlAlternate"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_updateserviceurlalternate_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cafa4bce-9f06-11ec-a7b2-acde48001122/,Windows Hide Notification Features Through Registry,['T1112'],"This analytic is to detect a suspicious registry modification to hide common windows notification feature from compromised host. This technique was seen in some ransomware family to add more impact to its payload that are visually seen by user aside from the encrypted files and ransomware notes. Even this a good anomaly detection, administrator may implement this changes for auditing or security reason. In this scenario filter is needed.",['Anomaly'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\*"" Registry.registry_value_name IN (""HideClock"", ""HideSCAHealth"", ""HideSCANetwork"", ""HideSCAPower"", ""HideSCAVolume"") Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_hide_notification_features_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Ransomware', 'Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Ransom.Win32.ONALOCKER.A/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cb38ee66-8ae5-47de-bd66-231c7bbc0b2c/,Windows Phishing Recent ISO Exec Registry,"['T1566.001', 'T1566']","The following hunting analytic identifies registry artifacts when an ISO container is opened, clicked or mounted on the Windows operating system. As Microsoft makes changes to macro based document execution, adversaries have begun to utilize container based initial access based phishing campaigns to evade preventative controls. Once the ISO is clicked or mounted it will create a registry artifact related to this event as a recent application executed or opened.",['Hunting'],"September 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_key_name= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.iso"" OR Registry.registry_key_name= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs\\.img"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_phishing_recent_iso_exec_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.user', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.action', 'Registry.dest']","False positives may be high depending on the environment and consistent use of ISOs. Restrict to servers, or filter out based on commonly used ISO names. Filter as needed.","['Brute Ratel C4', 'AgentTesla', 'Qakbot', 'IcedID', 'Azorult', 'Remcos', 'Warzone RAT']","['https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/warzone_rat']","['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/', 'https://isc.sans.edu/diary/Recent+AZORult+activity/25120', 'https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cb6b339e-d4c6-11eb-a026-acde48001122/,Excessive Usage Of SC Service Utility,"['T1569', 'T1569.002']","This search is to detect a suspicious excessive usage of sc.exe in a host machine. This technique was seen in several ransomware , xmrig and other malware to create, modify, delete or disable a service may related to security application or to gain privilege escalation.",['Anomaly'],"June 24, 2021","`sysmon` EventCode = 1 process_name = ""sc.exe"" 
|  bucket _time span=15m 
| stats values(process) as process count as numScExe by dest, _time 
|  eventstats avg(numScExe) as avgScExe, stdev(numScExe) as stdScExe, count as numSlots by dest 
|  eval upperThreshold=(avgScExe + stdScExe *3) 
|  eval isOutlier=if(avgScExe > 5 and avgScExe >= upperThreshold, 1, 0) 
|  search isOutlier=1 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_usage_of_sc_service_utility_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'process_name', 'process']",excessive execution of sc.exe is quite suspicious since it can modify or execute app in high privilege permission.,"['Ransomware', 'Azorult']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/azorult']",['https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/'],"['Execution', 'Execution', 'Service Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Services']",['Endpoint']
https://research.splunk.com/endpoint/cb909b3e-512b-11ec-aa31-3e22fbd008af/,Possible Lateral Movement PowerShell Spawn,"['T1021', 'T1021.003', 'T1021.006', 'T1047', 'T1053.005', 'T1543.003', 'T1059.001', 'T1218.014']","The following analytic is designed to identify possible lateral movement attacks that involve the spawning of a PowerShell process as a child or grandchild process of commonly abused processes. These processes include services.exe, wmiprsve.exe, svchost.exe, wsmprovhost.exe, and mmc.exe.
Such behavior is indicative of legitimate Windows features such as the Service Control Manager, Windows Management Instrumentation, Task Scheduler, Windows Remote Management, and the DCOM protocol being abused to start a process on a remote endpoint. This behavior is often seen during lateral movement techniques where adversaries or red teams abuse these services for lateral movement and remote code execution.",['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=wmiprvse.exe OR Processes.parent_process_name=services.exe OR Processes.parent_process_name=svchost.exe OR Processes.parent_process_name=wsmprovhost.exe OR Processes.parent_process_name=mmc.exe) (Processes.process_name=powershell.exe OR (Processes.process_name=cmd.exe AND Processes.process=*powershell.exe*) OR Processes.process_name=pwsh.exe OR (Processes.process_name=cmd.exe AND Processes.process=*pwsh.exe*)) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `possible_lateral_movement_powershell_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Legitimate applications may spawn PowerShell as a child process of the the identified processes. Filter as needed.,"['Active Directory Lateral Movement', 'Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction', 'Scheduled Tasks']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/scheduled_tasks']","['https://attack.mitre.org/techniques/T1021/003/', 'https://attack.mitre.org/techniques/T1021/006/', 'https://attack.mitre.org/techniques/T1047/', 'https://attack.mitre.org/techniques/T1053/005/', 'https://attack.mitre.org/techniques/T1543/003/']","['Defense Evasion', 'Distributed Component Object Model', 'Endpoint', 'Execution', 'Execution', 'Execution', 'Lateral Movement', 'Lateral Movement', 'Lateral Movement', 'MMC', 'Persistence', 'Persistence', 'PowerShell', 'Privilege Escalation', 'Privilege Escalation', 'Remote Services', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation', 'Windows Remote Management', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/cbe2ca30-631e-11ec-8670-acde48001122/,Linux Preload Hijack Library Calls,"['T1574.006', 'T1574']","This analytic is to detect a suspicious command that may hijack a library function in linux platform. This technique is commonly abuse by adversaries, malware author and red teamers to gain privileges and persist on the machine. This detection pertains to loading a dll to hijack or hook a library function of specific program using LD_PRELOAD command.",['TTP'],"December 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*LD_PRELOAD*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_preload_hijack_library_calls_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']",['https://compilepeace.medium.com/memory-malware-part-0x2-writing-userland-rootkits-via-ld-preload-30121c8343d5'],"['Defense Evasion', 'Defense Evasion', 'Dynamic Linker Hijacking', 'Endpoint', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cbe761fc-d945-4c8c-a71d-e26d12255d32/,Windows Steal Authentication Certificates - ESC1 Abuse,['T1649'],"The following analytic identifies when a new certificate is requested and/or granted against the Active Directory Certificate Services (AD CS) using a Subject Alternative Name (SAN). This action by its self is not malicious, however improperly configured certificate templates can be abused to permit privilege escalation and environment compromise due to over permissive settings (AD CS ESC1)",['TTP'],"January 3, 2024","`wineventlog_security` EventCode IN (4886,4887) Attributes=""*SAN:*upn*"" Attributes=""*CertificateTemplate:*"" 
| stats count min(_time) as firstTime max(_time) as lastTime values(name) as name values(status) as status values(Subject) as ssl_subject values(SubjectKeyIdentifier) as ssl_hash by Computer, EventCode, Requester, Attributes, RequestId 
| `security_content_ctime(firstTime)`  
| `security_content_ctime(lastTime)`
| fillnull 
| rex field=Attributes ""(?i)CertificateTemplate:(?<object>[^\r\n]+)"" 
| rex field=Attributes ""(?i)ccm:(?<req_src>[^\r\n]+)"" 
| rex max_match=10 field=Attributes ""(?i)(upn=(?<req_user_1>[^\r\n&]+))"" 
| rex max_match=10 field=Attributes ""(?i)(dns=(?<req_dest_1>[^\r\n&]+))"" 
| rex field=Requester ""(.+\\\\)?(?<src_user>[^\r\n]+)"" 
| eval flavor_text = case(EventCode==""4886"",""A suspicious certificate was requested using request ID: "".'RequestId',EventCode==""4887"", ""A suspicious certificate was issued using request ID: "".'RequestId'."". To revoke this certifacte use this request ID or the SSL fingerprint ["".'ssl_hash'.""]""), dest = upper(coalesce(req_dest_1,req_dest_2)), src = upper(coalesce(req_src,Computer)) 
| fields - req_* 
| rename Attributes as object_attrs, EventCode as signature_id, name as signature, RequestId as ssl_serial, Requester as ssl_subject_common_name
| `windows_steal_authentication_certificates___esc1_abuse_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'Attributes', 'Computer', 'EventCode', 'Requester', 'RequestId']",False positives may be generated in environments where administrative users or processes are allowed to generate certificates with Subject Alternative Names. Sources or templates used in these processes may need to be tuned out for accurate function.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf', 'https://github.com/ly4k/Certipy#esc1', 'https://pentestlaboratories.com/2021/11/08/threat-hunting-certificate-account-persistence/']","['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/cbee60c1-b776-456f-83c2-faa56bdbe6c6/,Windows Query Registry Reg Save,['T1012'],"The following analytic identifies a process execution of reg.exe with ""save"" parameter. This reg.exe parameter is commonly being abused by threat actors, adversaries and red-teamers to dump credentials or to check the registry modification capabilities of certain users or administrators in targeted hosts. This approach was seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check registry modification restriction in targeted host after gaining access to it.",['Hunting'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_reg` AND Processes.process = ""* save *"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_query_registry_reg_save_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to backup registry before updates or modifying critical registries.,"['Windows Post-Exploitation', 'CISA AA23-347A', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cbef820c-e1ff-407f-887f-0a9240a2d477/,Detect Path Interception By Creation Of program exe,"['T1574.009', 'T1574']","The detection Detect Path Interception By Creation Of program exe is detecting the abuse of unquoted service paths, which is a popular technique for privilege escalation.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=services.exe by Processes.user Processes.process_name Processes.parent_process_name Processes.process Processes.dest 
| `drop_dm_object_name(Processes)` 
| rex field=process ""^.*?\\\\(?<service_process>[^\\\\]*\.(?:exe
|bat
|com
|ps1))"" 
| eval process_name = lower(process_name) 
| eval service_process = lower(service_process) 
| where process_name != service_process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_path_interception_by_creation_of_program_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],['https://medium.com/@SumitVerma101/windows-privilege-escalation-part-1-unquoted-service-path-c7a011a8d8ae'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Hijack Execution Flow', 'Path Interception by Unquoted Path', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cc2a3425-2703-47e7-818f-3dca1b0bc56f/,Windows Impair Defense Set Win Defender Smart Screen Level To Warn,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to set windows defender smart screen level to warn. Setting the ShellSmartScreenLevel to warn implies a SmartScreen configuration where the system displays a warning prompt when users attempt to run or access potentially risky or unrecognized files or applications. This warning serves as a cautionary alert to users, advising them about the potential risks associated with the file or application they are trying to execute. Changing SmartScreen settings to ""warn"" might be employed by attackers to reduce the likelihood of triggering immediate suspicion from users when running malicious executables. By setting it to ""warn,"" the system prompts a cautionary warning rather than outright blocking the execution, potentially increasing the chances of users proceeding with running the file despite the warning.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Microsoft\\Windows\\System\\ShellSmartScreenLevel"" Registry.registry_value_data=""Warn"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_set_win_defender_smart_screen_level_to_warn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cc316032-924a-11eb-91a2-acde48001122/,DSQuery Domain Discovery,['T1482'],"The following analytic identifies ""dsquery.exe"" execution with arguments looking for TrustedDomain query directly on the command-line. This is typically indicative of an Administrator or adversary perform domain trust discovery. Note that this query does not identify any other variations of ""Dsquery.exe"" usage.
Within this detection, it is assumed dsquery.exe is not moved or renamed.
The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, process ""dsquery.exe"" and its parent process.
DSQuery.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64 and only on Server operating system.
The following DLL(s) are loaded when DSQuery.exe is launched dsquery.dll. If found loaded by another process, it is possible dsquery is running within that process context in memory.
In addition to trust discovery, review parallel processes for additional behaviors performed. Identify the parent process and capture any files (batch files, for example) being used.",['TTP'],"March 31, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=dsquery.exe Processes.process=*trustedDomain* by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `dsquery_domain_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Limited false positives. If there is a true false positive, filter based on command-line or parent process.","['Domain Trust Discovery', 'Active Directory Discovery']","['https://research.splunk.com/stories/domain_trust_discovery', 'https://research.splunk.com/stories/active_directory_discovery']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md', 'https://blog.harmj0y.net/redteaming/a-guide-to-attacking-domain-trusts/', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc732952(v=ws.11)', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc754232(v=ws.11)']","['Discovery', 'Domain Trust Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cc391750-3024-11ec-955a-acde48001122/,Disable Defender MpEngine Registry,"['T1562.001', 'T1562']","This particular behavior is typically executed when an adversary or malware gains access to an endpoint and begins to perform execution and to evade detections. Usually, a batch (.bat) file will be executed and multiple registry and scheduled task modifications will occur. During triage, review parallel processes and identify any further file modifications. Endpoint should be isolated.",['TTP'],"April 11, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*\\Policies\\Microsoft\\Windows Defender\\MpEngine*"" Registry.registry_value_name = MpEnablePus Registry.registry_value_data = 0x00000000) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.user Registry.dest 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_mpengine_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin or user may choose to disable windows defender product,"['IcedID', 'Windows Registry Abuse']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cc8b7b74-9d0f-11eb-8342-acde48001122/,Office Document Creating Schedule Task,"['T1566', 'T1566.001']","this search detects a potential malicious office document that create schedule task entry through macro VBA api or through loading taskschd.dll. This technique was seen in so many malicious macro malware that create persistence , beaconing using task schedule malware entry The search will return the first time and last time the task was registered, as well as the Command to be executed, Task Name, Author, Enabled, and whether it is Hidden or not. schtasks.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64. The following DLL(s) are loaded when schtasks.exe or TaskService is launched -taskschd.dll. If found loaded by another process, it's possible a scheduled task is being registered within that process context in memory. Upon triage, identify the task scheduled source. Was it schtasks.exe or via TaskService? Review the job created and the Command to be executed. Capture any artifacts on disk and review. Identify any parallel processes within the same timeframe to identify source.'",['TTP'],"February 15, 2023","`sysmon` EventCode=7 parent_process_name IN (""WINWORD.EXE"", ""EXCEL.EXE"", ""POWERPNT.EXE"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"", ""msaccess.exe"") ImageLoaded = ""*\\taskschd.dll"" 
| stats min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) as AllImageLoaded count by Computer EventCode Image parent_process_name ProcessId ProcessGuid 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `office_document_creating_schedule_task_filter`","['security_content_ctime', 'sysmon']","['ImageLoaded', 'AllImageLoaded', 'dest', 'EventCode', 'Image', 'process_name', 'ProcessId', 'ProcessGuid', '_time']",unknown,['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/', 'https://redcanary.com/threat-detection-report/techniques/scheduled-task-job/', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cc8d046a-543b-11ec-b864-acde48001122/,Windows Curl Upload to Remote Destination,['T1105'],"The following analytic identifies the use of Windows Curl.exe uploading a file to a remote destination. 
-T or --upload-file is used when a file is to be uploaded to a remotge destination. 
-d or --data POST is the HTTP method that was invented to send data to a receiving web application, and it is, for example, how most common HTML forms on the web work. 
HTTP multipart formposts are done with -F, but this appears to not be compatible with the Windows version of Curl. Will update if identified adversary tradecraft. 
Adversaries may use one of the three methods based on the remote destination and what they are attempting to upload (zip vs txt). During triage, review parallel processes for further behavior. In addition, identify if the upload was successful in network logs. If a file was uploaded, isolate the endpoint and review.",['TTP'],"December 3, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = process_file.name 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%-f %"" OR process_cmd_line LIKE ""%--data %"" OR process_cmd_line LIKE ""%-d %"" OR process_cmd_line LIKE ""%--upload-file %"" OR process_cmd_line LIKE ""%-t %"") AND match(process_file_name, /(?i)curl.exe/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be limited to source control applications and may be required to be filtered out.,"['Ingress Tool Transfer', 'Insider Threat']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/insider_threat']","['https://everything.curl.dev/usingcurl/uploads', 'https://techcommunity.microsoft.com/t5/containers/tar-and-curl-come-to-windows/ba-p/382409', 'https://twitter.com/d1r4c/status/1279042657508081664?s=20']","['Command And Control', 'Ingress Tool Transfer', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/cca37478-8377-11ec-b59a-acde48001122/,Rubeus Command Line Parameters,"['T1550', 'T1550.003', 'T1558', 'T1558.003', 'T1558.004']","Rubeus is a C# toolset for raw Kerberos interaction and abuses. It is heavily adapted from Benjamin Delpys Kekeo project and Vincent LE TOUXs MakeMeEnterpriseAdmin project. This analytic looks for the use of Rubeus command line arguments utilized in common Kerberos attacks like exporting and importing tickets, forging silver and golden tickets, requesting a TGT or TGS, kerberoasting, password spraying, etc. Red teams and adversaries alike use Rubeus for Kerberos attacks within Active Directory networks. Defenders should be aware that adversaries may customize the source code of Rubeus and modify the command line parameters. This would effectively bypass this analytic.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process = ""*ptt /ticket*"" OR Processes.process = ""* monitor /interval*"" OR Processes.process =""* asktgt* /user:*"" OR Processes.process =""* asktgs* /service:*"" OR Processes.process =""* golden* /user:*"" OR Processes.process =""* silver* /service:*"" OR Processes.process =""* kerberoast*"" OR Processes.process =""* asreproast*"" OR Processes.process = ""* renew* /ticket:*"" OR Processes.process = ""* brute* /password:*"" OR Processes.process = ""* brute* /passwords:*"" OR Processes.process =""* harvest*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rubeus_command_line_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']","Although unlikely, legitimate applications may use the same command line parameters as Rubeus. Filter as needed.","['Active Directory Privilege Escalation', 'CISA AA23-347A', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://github.com/GhostPack/Rubeus', 'https://web.archive.org/web/20210725005734/http://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/', 'https://attack.mitre.org/techniques/T1550/003/', 'https://en.hackndo.com/kerberos-silver-golden-tickets/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Credential Access', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Kerberoasting', 'Lateral Movement', 'Lateral Movement', 'Pass the Ticket', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/ccad96d7-a48c-4f13-8b9c-9f6a31cba454/,Detect Remote Access Software Usage FileInfo,['T1219'],"The following analytic detects when process with file or code signing attributes from a known remote access software is executed with the environment. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",['Anomaly'],"February 22, 2024","`sysmon` EventCode=1 
| stats count min(_time) as firstTime max(_time) as lastTime, values(Company) as Company values(Product) as Product by dest, user, parent_process_name, process_name, process 
| lookup remote_access_software remote_utility_fileinfo AS Product OUTPUT isutility, description as signature, comment_reference as desc, category 
| search isutility = True 
| `detect_remote_access_software_usage_fileinfo_filter`",['sysmon'],"['_time', 'dest', 'EventCode', 'Company', 'Product', 'user', 'parent_process_name', 'process_name', 'process']",Known or approved applications used by the organization or usage of built-in functions.,"['Insider Threat', 'Command And Control', 'Ransomware']","['https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/command_and_control', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/techniques/T1219/', 'https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/', 'https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/']","['Command And Control', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ccb98a66-5851-11ec-b91c-acde48001122/,MSI Module Loaded by Non-System Binary,"['T1574.002', 'T1574']","The following hunting analytic identifies msi.dll being loaded by a binary not located in system32, syswow64, winsxs or windows paths. This behavior is most recently related to InstallerFileTakeOver, or CVE-2021-41379, and DLL side-loading. CVE-2021-41379 requires a binary to be dropped and msi.dll to be loaded by it. To Successful exploitation of this issue happens in four parts \",['Hunting'],"April 14, 2023","`sysmon` EventCode=7 ImageLoaded=""*\\msi.dll"" NOT (Image IN (""*\\System32\\*"",""*\\syswow64\\*"",""*\\windows\\*"", ""*\\winsxs\\*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded process_name dest EventCode ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `msi_module_loaded_by_non_system_binary_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'ProcessId']","It is possible some Administrative utilities will load msi.dll outside of normal system paths, filter as needed.","['Data Destruction', 'Hermetic Wiper', 'Windows Privilege Escalation']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_privilege_escalation']","['https://attackerkb.com/topics/7LstI2clmF/cve-2021-41379/rapid7-analysis', 'https://github.com/klinix5/InstallerFileTakeOver', 'https://github.com/mandiant/red_team_tool_countermeasures/blob/master/rules/PGF/supplemental/hxioc/msi.dll%20Hijack%20(Methodology).ioc']","['Defense Evasion', 'Defense Evasion', 'DLL Side-Loading', 'Hijack Execution Flow', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ccd6a38c-d40b-11eb-85a5-acde48001122/,Allow Network Discovery In Firewall,"['T1562.007', 'T1562']","This search is to detect a suspicious modification to the firewall to allow network discovery on a machine. This technique was seen in couple of ransomware (revil, reddot) to discover other machine connected to the compromised host to encrypt more files.",['TTP'],"June 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process= ""*firewall*"" Processes.process= ""*group=\""Network Discovery\""*""  Processes.process=""*enable*"" Processes.process=""*Yes*"" by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `allow_network_discovery_in_firewall_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",network admin may modify this firewall feature that may cause this rule to be triggered.,"['Ransomware', 'Revil Ransomware', 'BlackByte Ransomware', 'NjRAT']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/njrat']","['https://community.fortinet.com:443/t5/FortiEDR/How-FortiEDR-detects-and-blocks-Revil-Ransomware-aka-sodinokibi/ta-p/189638?externalID=FD52469', 'https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Cloud Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cce58e2c-988a-4319-9390-0daa9eefa3cd/,Windows Bypass UAC via Pkgmgr Tool,['T1548.002'],"The following analytic identifies a potentially suspicious execution of the 'pkgmgr' process involving the use of an XML input file for package management. The 'pkgmgr' process, though deprecated in modern Windows systems, was historically used for managing packages. The presence of an XML input file raises concerns about the nature of the executed command and its potential impact on the system. Due to the deprecated status of 'pkgmgr' and the involvement of an XML file, this activity warrants careful investigation. XML files are commonly used for configuration and data exchange, making it crucial to ascertain the intentions and legitimacy of the command. To ensure system security, it is recommended to use up-to-date package management utilities, such as DISM or PowerShell's PackageManagement module, and exercise caution when executing commands involving potentially sensitive operations or files.",['Anomaly'],"July 26, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process_name = pkgmgr.exe Processes.process = ""*.xml*"" NOT(Processes.parent_process_path IN(""*:\\windows\\system32\\*"", ""*:\\windows\\syswow64\\*"", ""*:\\Program Files*"")) by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process_path Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_bypass_uac_via_pkgmgr_tool_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present on recent Windows Operating Systems. Filtering may be required based on process_name. In addition, look for non-standard, unsigned, module loads into LSASS. If query is too noisy, modify by adding Endpoint.processes process_name to query to identify the process making the modification.",['Warzone RAT'],['https://research.splunk.com/stories/warzone_rat'],"['https://asec.ahnlab.com/en/17692/', 'https://www.blackberry.com/us/en/solutions/endpoint-security/ransomware-protection/warzone#:~:text=Warzone%20RAT%20(AKA%20Ave%20Maria)%20is%20a%20remote%20access%20trojan,is%20as%20an%20information%20stealer.']","['Bypass User Account Control', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ccf4b61b-1b26-4f2e-a089-f2009c569c57/,Windows Binary Proxy Execution Mavinject DLL Injection,"['T1218.013', 'T1218']","Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. Dynamic-link Library Injection), allowing for arbitrary code execution (ex. C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL). In addition to Dynamic-link Library Injection, Mavinject.exe can also be abused to perform import descriptor injection via its /HMODULE command-line parameter (ex. mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER). This command would inject an import table entry consisting of the specified DLL into the module at the given base address. During triage, review file modifcations and parallel processes.",['TTP'],"July 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=mavinject.exe Processes.process IN (""*injectrunning*"", ""*hmodule=0x*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_binary_proxy_execution_mavinject_dll_injection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filter on DLL name or parent process.",['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://attack.mitre.org/techniques/T1218/013/', 'https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-1---mavinject---inject-dll-into-running-process']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Mavinject', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/ccfeddec-43ec-11ec-b494-acde48001122/,Windows InstallUtil Credential Theft,"['T1218.004', 'T1218']","The following analytic identifies the Windows InstallUtil.exe binary loading vaultcli.dll and Samlib.dll. This technique may be used to execute code to bypassing application control and capture credentials by utilizing a tool like MimiKatz. \
When InstallUtil.exe is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like Cmd.exe, PowerShell.exe or Explorer.exe`. 
If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. 
During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",['TTP'],"August 25, 2022","`sysmon` EventCode=7  parent_process_name=installutil.exe ImageLoaded IN (""*\\samlib.dll"", ""*\\vaultcli.dll"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, parent_process_name, ImageLoaded, OriginalFileName, ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_installutil_credential_theft_filter`","['security_content_ctime', 'sysmon']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Typically this will not trigger as by it's very nature InstallUtil does not need credentials. Filter as needed.,['Signed Binary Proxy Execution InstallUtil'],['https://research.splunk.com/stories/signed_binary_proxy_execution_installutil'],['https://gist.github.com/xorrior/bbac3919ca2aef8d924bdf3b16cce3d0'],"['Defense Evasion', 'Defense Evasion', 'InstallUtil', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/cd2cf33c-9201-11eb-a10a-acde48001122/,Disable Registry Tool,"['T1562.001', 'T1562', 'T1112']","This search identifies modification of registry to disable the regedit or registry tools of the windows operating system. Since registry tool is a swiss knife in analyzing registry, malware such as RAT or trojan Spy disable this application to prevent the removal of their registry entry such as persistence, file less components and defense evasion.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableRegistryTools"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h  Registry.user Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_registry_tool_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'NjRAT']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/njrat']",['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cd5aed7e-5cea-11eb-ae93-0242ac130002/,WBAdmin Delete System Backups,['T1490'],This search looks for flags passed to wbadmin.exe (Windows Backup Administrator Tool) that delete backup files. This is typically used by ransomware to prevent recovery.,['TTP'],"January 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wbadmin.exe Processes.process=""*delete*"" AND (Processes.process=""*catalog*"" OR Processes.process=""*systemstatebackup*"") by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `wbadmin_delete_system_backups_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",Administrators may modify the boot configuration.,"['Ryuk Ransomware', 'Ransomware', 'Prestige Ransomware', 'Chaos Ransomware']","['https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/chaos_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.md', 'https://thedfirreport.com/2020/10/08/ryuks-return/', 'https://attack.mitre.org/techniques/T1490/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wbadmin']","['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cd6d7410-9146-4471-a418-49edba6dadc4/,Windows Modify System Firewall with Notable Process Path,"['T1562.004', 'T1562']",The following analytic detects a potential suspicious modification of firewall rule allowing to execute specific application in public and suspicious windows process file path. This technique was identified when an adversary and red teams to bypassed firewall file execution restriction in a targetted host. Take note that this event or command can run by administrator during testing or allowing legitimate tool or application.,['TTP'],"December 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*firewall*"" Processes.process = ""*allow*"" Processes.process = ""*add*"" Processes.process = ""*ENABLE*"" Processes.process IN (""*\\windows\\fonts\\*"", ""*\\windows\\temp\\*"", ""*\\users\\public\\*"", ""*\\windows\\debug\\*"", ""*\\Users\\Administrator\\Music\\*"", ""*\\Windows\\servicing\\*"", ""*\\Users\\Default\\*"",""*Recycle.bin*"", ""*\\Windows\\Media\\*"", ""\\Windows\\repair\\*"", ""*\\temp\\*"", ""*\\PerfLogs\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_system_firewall_with_notable_process_path_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated or manual execution of this firewall rule that may generate false positives. Filter as needed.,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://www.splunk.com/en_us/blog/security/more-than-just-a-rat-unveiling-njrat-s-mbr-wiping-capabilities.html'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cd80a6ac-c9d9-11eb-8839-acde48001122/,Clear Unallocated Sector Using Cipher App,"['T1070.004', 'T1070']",this search is to detect execution of cipher.exe to clear the unallocated sectors of a specific disk. This technique was seen in some ransomware to make it impossible to forensically recover deleted files.,['TTP'],"June 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""cipher.exe"" Processes.process = ""*/w:*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `clear_unallocated_sector_using_cipher_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",administrator may execute this app to manage disk,['Ransomware'],['https://research.splunk.com/stories/ransomware'],"['https://unit42.paloaltonetworks.com/vatet-pyxie-defray777/3/', 'https://www.sophos.com/en-us/medialibrary/PDFs/technical-papers/sophoslabs-ransomware-behavior-report.pdf']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cde75cf6-3c7a-4dd6-af01-27cdb4511fd4/,Malicious PowerShell Process With Obfuscation Techniques,"['T1059', 'T1059.001']",This search looks for PowerShell processes launched with arguments that have characters indicative of obfuscation on the command-line.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` by Processes.user Processes.process_name Processes.original_file_name Processes.parent_process_name Processes.dest Processes.process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)`
| eval num_obfuscation = (mvcount(split(process,""`""))-1) + (mvcount(split(process, ""^""))-1) + (mvcount(split(process, ""'""))-1) 
| `malicious_powershell_process_with_obfuscation_techniques_filter` 
| search num_obfuscation > 10","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","These characters might be legitimately on the command-line, but it is not common.","['Malicious PowerShell', 'Hermetic Wiper', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/data_destruction']",N/A,"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ce058d6c-79f2-11ec-b476-acde48001122/,Ping Sleep Batch Command,"['T1497', 'T1497.003']",This analytic will identify the possible execution of ping sleep batch commands. This technique was seen in several malware samples and is used to trigger sleep times without explicitly calling sleep functions or commandlets. The goal is to delay the execution of malicious code and bypass detection or sandbox analysis. This  detection can be a good indicator of a process delaying its execution for malicious purposes.,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_ping` (Processes.parent_process = ""*ping*"" Processes.parent_process = *-n* Processes.parent_process=""* Nul*""Processes.parent_process=""*&gt;*"") OR (Processes.process = ""*ping*"" Processes.process = *-n* Processes.process=""* Nul*""Processes.process=""*&gt;*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.user Processes.dest 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `ping_sleep_batch_command_filter`","['security_content_summariesonly', 'process_ping', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrator or network operator may execute this command. Please update the filter macros to remove false positives.,"['Data Destruction', 'WhisperGate', 'BlackByte Ransomware', 'Warzone RAT']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/warzone_rat']",['https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/'],"['Defense Evasion', 'Defense Evasion', 'Discovery', 'Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Time Based Evasion', 'Virtualization/Sandbox Evasion']",['Endpoint']
https://research.splunk.com/endpoint/ce27646e-d411-11eb-8a00-acde48001122/,Allow File And Printing Sharing In Firewall,"['T1562.007', 'T1562']",This search is to detect a suspicious modification of firewall to allow file and printer sharing. This technique was seen in ransomware to be able to discover more machine connected to the compromised host to encrypt more files,['TTP'],"December 15, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process= ""*firewall*"" Processes.process= ""*group=\""File and Printer Sharing\""*""  Processes.process=""*enable=Yes*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `allow_file_and_printing_sharing_in_firewall_filter`","['security_content_summariesonly', 'process_netsh', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",network admin may modify this firewall feature that may cause this rule to be triggered.,"['Ransomware', 'BlackByte Ransomware']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://community.fortinet.com:443/t5/FortiEDR/How-FortiEDR-detects-and-blocks-Revil-Ransomware-aka-sodinokibi/ta-p/189638?externalID=FD52469', 'https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Cloud Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ce633e56-25b2-11ec-9e76-acde48001122/,Suspicious Copy on System32,"['T1036.003', 'T1036']",This analytic is to detect a suspicious copy of file from systemroot folder of the windows OS. This technique is commonly used by APT or other malware as part of execution (LOLBIN) to run its malicious code using the available legitimate tool in OS. this type of event may seen or may execute of normal user in some instance but this is really a anomaly that needs to be check within the network.,['TTP'],"August 17, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN(""cmd.exe"", ""powershell*"",""pwsh.exe"", ""sqlps.exe"", ""sqltoolsps.exe"", ""powershell_ise.exe"") AND `process_copy` AND Processes.process IN(""*\\Windows\\System32\\*"", ""*\\Windows\\SysWow64\\*"") AND Processes.process = ""*copy*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id temp 
| `drop_dm_object_name(Processes)` 
| eval splitted_commandline=split(process,"" "") 
| eval first_cmdline=lower(mvindex(splitted_commandline,0)) 
| where NOT LIKE(first_cmdline,""%\\windows\\system32\\%"") AND NOT LIKE(first_cmdline,""%\\windows\\syswow64\\%"") 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
|`suspicious_copy_on_system32_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_copy']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",every user may do this event but very un-ussual.,"['Unusual Processes', 'Qakbot', 'IcedID', 'AsyncRAT', 'Sandworm Tools', 'Volt Typhoon']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/volt_typhoon']","['https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ceaed840-56b3-4a70-b8e1-d762b1c5c08c/,Windows RDP Connection Successful,['T1563.002'],"The following analytic identifies successful remote desktop connections. Utilize this analytic to hunt for successful attempts. In addition, the query may be modified for EventCode=1148 to potentially identify failed attempts. In testing, 1148 would not generate based on a failed logon attempt. Note this analytic requires enabling and a stanza in a inputs.conf.",['Hunting'],"April 17, 2023","`remoteconnectionmanager` EventCode=1149 
| stats count min(_time) as firstTime max(_time) as lastTime by ComputerName, Source_Network_Address, User, Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename ComputerName as dest 
| `windows_rdp_connection_successful_filter`","['security_content_ctime', 'remoteconnectionmanager']","['EventCode', 'ComputerName', 'Source_Network_Address', 'User', 'Message']","False positives will be present, filter as needed or restrict to critical assets on the perimeter.","['Active Directory Lateral Movement', 'BlackByte Ransomware']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://gist.github.com/MHaggis/138c6bf563bacbda4a2524f089773706', 'https://doublepulsar.com/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6']","['Lateral Movement', 'RDP Hijacking', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ced50492-8849-11ec-9f68-acde48001122/,Windows Remote Assistance Spawning Process,['T1055'],"The following analytic identifies the use of Microsoft Remote Assistance, msra.exe, spawning PowerShell.exe or cmd.exe as a child process. Msra.exe by default has no command-line arguments and typically spawns itself. It will generate a network connection to the remote system that is connected. This behavior is indicative of another process injected into msra.exe. Review the parent process or cross process events to identify source.",['TTP'],"February 7, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=msra.exe `windows_shells` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_assistance_spawning_process_filter`","['security_content_summariesonly', 'windows_shells', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited, filter as needed. Add additional shells as needed.",['Unusual Processes'],['https://research.splunk.com/stories/unusual_processes'],"['https://thedfirreport.com/2022/02/07/qbot-likes-to-move-it-move-it/', 'https://app.any.run/tasks/ca1616de-89a1-4afc-a3e4-09d428df2420/']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cee573a0-7587-48e6-ae99-10e8c657e89a/,Windows Modify Registry Disable Restricted Admin,['T1112'],"The following analytic identifies a modification in the Windows registry related to DisableRestrictedAdmin. This registry entry is used to control the behavior of Restricted Admin mode, which is a security feature that limits the exposure of sensitive credentials when connecting remotely to another computer. When this registry value is set to 0 it indicates that Restricted Admin mode is enabled (default behavior). As with any modifications to registry settings, changing this entry should be approached cautiously, ensuring a clear understanding of the implications for system security and functionality. Unauthorized changes to these security settings can pose risks and should be monitored closely for any signs of tampering or unauthorized alterations.",['TTP'],"December 15, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\System\\CurrentControlSet\\Control\\Lsa\\DisableRestrictedAdmin"" Registry.registry_value_data = 0x00000000) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disable_restricted_admin_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.user', 'Registry.dest', 'Registry.action', 'Registry.registry_value_data', 'Registry.process_guid']",Administrator may change this registry setting. Filter as needed.,['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cf056b65-44b2-4d32-9172-d6b6f081a376/,Windows Account Discovery With NetUser PreauthNotRequire,['T1087'],The following analytic leverages Event ID 4104 to identify the execution of the PowerView powershell commandlets Get-NetUser. This technique was observed in the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user accounts that do not require preauthentication for Kerberos. This hunting query is a good pivot to look for suspicious process or malware that gather user account information in a host or within network system.,['Hunting'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetUser*"" ScriptBlockText = ""*-PreauthNotRequire*"" 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_account_discovery_with_netuser_preauthnotrequire_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a'],"['Account Discovery', 'Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cf06a0ee-ffa9-4ed3-be77-0670ed9bab52/,Windows Unusual Count Of Users Remotely Failed To Auth From Host,"['T1110.003', 'T1110']","The following analytic identifies a source host failing to authenticate against a remote host with multiple users. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Event 4625 documents each and every failed attempt to logon to the local computer. This event generates on domain controllers, member servers, and workstations. Logon Type 3 describes an remote authentication attempt.
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will trigger on the host that is the target of the password spraying attack. This could be a domain controller as well as a member server or workstation.
The analytics returned fields allow analysts to investigate the event further by providing fields like source process name, source account and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security`  EventCode=4625 Logon_Type=3 IpAddress!=""-"" 
| bucket span=2m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress, Computer 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by IpAddress, Computer 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_users_remotely_failed_to_auth_from_host_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Logon_Type', 'TargetUserName', 'Computer', 'IpAddress']","A host failing to authenticate with multiple valid users against a remote host is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, remote administration tools, missconfigyred systems, etc.","['Active Directory Password Spraying', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4625', 'https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventID=4625', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cf192860-2d94-40db-9a51-c04a2e8a8f8b/,Windows WMI Impersonate Token,['T1047'],The following analytic identifies a possible wmi token impersonation activities in a process or command. This technique was seen in Qakbot malware where it will execute a vbscript code contains wmi impersonation object to gain privilege escalation or as defense evasion. This Anomaly detection looks for wmiprvse.exe SourceImage having a duplicate handle or full granted access in a target process.,['Anomaly'],"October 24, 2022","`sysmon` EventCode=10 SourceImage = ""*\\wmiprvse.exe""  GrantedAccess IN (""0x1478"", ""0x1fffff"") 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage SourceProcessGUID TargetProcessGUID SourceProcessId TargetProcessId GrantedAccess CallTrace dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_wmi_impersonate_token_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'SourceProcessGUID', 'TargetProcessGUID', 'SourceProcessId', 'TargetProcessId', 'GrantedAccess', 'CallTrace', 'dest']",administrator may execute impersonate wmi object script for auditing. Filter is needed.,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://github.com/trustedsec/SysmonCommunityGuide/blob/master/chapters/process-access.md', 'https://www.joesandbox.com/analysis/278341/0/html']","['Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/cf8d753e-a8fe-11eb-8f58-acde48001122/,Icacls Deny Command,['T1222'],"This analytic identifies instances where an adversary modifies the security permissions of a particular file or directory. This technique is frequently observed in the tradecraft of Advanced Persistent Threats (APTs) and coinminer scripts. The purpose of this behavior is to actively evade detection and impede access to their associated files. By identifying these security permission changes, we can enhance our ability to detect and respond to potential threats, mitigating the impact of malicious activities on the system.",['TTP'],"June 6, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN( ""icacls.exe"", ""cacls.exe"", ""xcacls.exe"") AND Processes.process IN (""*/deny*"", ""*/D*"") by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `icacls_deny_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process']",Unknown. It is possible some administrative scripts use ICacls. Filter as needed.,"['XMRig', 'Azorult', 'Sandworm Tools']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/sandworm_tools']",['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/'],"['Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/cfa7b9ac-43f0-11ec-9b48-acde48001122/,Windows InstallUtil Uninstall Option,"['T1218.004', 'T1218']","The following analytic identifies the Windows InstallUtil.exe binary. This will execute code while bypassing application control using the /u (uninstall) switch. 
InstallUtil uses the functions install and uninstall within the System.Configuration.Install namespace to process .net assembly. Install function requires admin privileges, however, uninstall function can be run as an unprivileged user.
When InstallUtil.exe is used in a malicous manner, the path to an executable on the filesystem is typically specified. Take note of the parent process. In a suspicious instance, this will be spawned from a non-standard process like Cmd.exe, PowerShell.exe or Explorer.exe. 
If used by a developer, typically this will be found with multiple command-line switches/arguments and spawn from Visual Studio. 
During triage review resulting network connections, file modifications, and parallel processes. Capture any artifacts and review further.",['TTP'],"November 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_installutil` Processes.process IN (""*/u*"", ""*uninstall*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_installutil_uninstall_option_filter`","['security_content_summariesonly', 'process_installutil', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives should be present. Filter as needed by parent process or application.,"['Signed Binary Proxy Execution InstallUtil', 'Living Off The Land']","['https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/living_off_the_land']","['https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_12', 'https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/md/Installutil.exe.md', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/d0026380-b3c4-4da0-ac8e-02790063ff6b/,Windows Command and Scripting Interpreter Hunting Path Traversal,['T1059'],The following analytic identifies path traversal command-line execution and should be used to tune and driver other more higher fidelity analytics. This technique was seen in malicious document that execute malicious code using msdt.exe and path traversal technique that serve as defense evasion. This Hunting query is a good pivot to look for possible suspicious process and command-line that runs execute path traversal technique to run malicious code. This may help you to find possible downloaded malware or other lolbin execution.,['Hunting'],"June 1, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes  by Processes.original_file_name Processes.process_id Processes.parent_process_id Processes.process_hash Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| eval count_of_pattern1 = (mvcount(split(process,""/..""))-1) 
| eval count_of_pattern2 = (mvcount(split(process,""\..""))-1) 
| eval count_of_pattern3 = (mvcount(split(process,""\\..""))-1) 
| eval count_of_pattern4 = (mvcount(split(process,""//..""))-1) 
| search count_of_pattern1 > 1 OR count_of_pattern2 > 1 OR count_of_pattern3 > 1 OR count_of_pattern4 > 1 
| `windows_command_and_scripting_interpreter_hunting_path_traversal_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",false positive may vary depends on the score you want to check. The bigger number of path traversal string count the better.,"['Windows Defense Evasion Tactics', 'Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190']",['https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d0072bd2-6d73-4c1b-bc77-ded6d2da3a4e/,Windows Modify Registry Reg Restore,['T1012'],"The following analytic identifies a process execution of reg.exe with ""restore"" parameter. This reg.exe parameter is commonly used to restore registry backup data in a targeted host. This approach or technique was also seen in post-exploitation tool like winpeas where it uses ""reg save"" and ""reg restore"" to check the registry modification restriction in targeted host after gaining access to it.",['Hunting'],"December 12, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  `process_reg` AND Processes.process = ""* restore *"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_reg_restore_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this command tool to backup registry before updates or modifying critical registries.,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/quser', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Query Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d05204a5-9f1c-4946-a7f3-4fa58d76d5fd/,Linux Stop Services,['T1489'],The following analytic is to detect events that attempt to stop or clear a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique like industroyer2 malware to terminate security services or other related services to continue there objective as a destructive payload.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""systemctl"", ""service"", ""svcadm"")  Processes.process =""*stop*"" by Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_stop_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['AwfulShred', 'Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d131673f-ede1-47f2-93a1-0108d3e7fafd/,Windows Process Injection In Non-Service SearchIndexer,['T1055'],"The following analytic identifies a non-service searchindexer.exe process. QakBot, a notorious banking trojan and information stealer, often deploys a process named ""searchindexer.exe"" as part of its malicious activities. This legitimate Windows process, ""Search Indexer,"" is manipulated by QakBot to masquerade and evade detection within the system. The malware uses this deceptive tactic to camouflage its presence, remaining inconspicuous while performing unauthorized actions like data exfiltration, keystroke logging, and communication with command and control servers. By adopting the guise of a genuine system process, the malicious ""searchindexer.exe"" process helps QakBot evade scrutiny and continue its malevolent operations without arousing suspicion.",['TTP'],"January 3, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name != services.exe Processes.process_name=searchindexer.exe by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_injection_in_non_service_searchindexer_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",unknown,['Qakbot'],['https://research.splunk.com/stories/qakbot'],"['https://twitter.com/Max_Mal_/status/1736392741758611607', 'https://twitter.com/1ZRR4H/status/1735944522075386332']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d17dae9e-2618-11ec-b9f5-acde48001122/,Winhlp32 Spawning a Process,['T1055'],"The following analytic identifies winhlp32.exe, found natively in c:\windows\, spawning a child process that loads a file out of appdata, programdata, or temp. Winhlp32.exe has a rocky past in that multiple vulnerabilities were found and added to MetaSploit. WinHlp32.exe is required to display 32-bit Help files that have the "".hlp"" file name extension. This particular instance is related to a Remcos sample where dynwrapx.dll is added to the registry under inprocserver32, and later module loaded by winhlp32.exe to spawn wscript.exe and load a vbs or file from disk. During triage, review parallel processes to identify further suspicious behavior. Review module loads for unsuspecting unsigned modules. Capture any file modifications and analyze.",['TTP'],"October 5, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=winhlp32.exe Processes.process IN (""*\\appdata\\*"",""*\\programdata\\*"", ""*\\temp\\*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winhlp32_spawning_a_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives should be limited as winhlp32.exe is typically not used with the latest flavors of Windows OS. However, filter as needed.",['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://www.exploit-db.com/exploits/16541', 'https://tria.ge/210929-ap75vsddan', 'https://www.virustotal.com/gui/file/cb77b93150cb0f7fe65ce8a7e2a5781e727419451355a7736db84109fa215a89']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d1ab841c-36a6-46cf-b50f-b2b04b31182a/,Windows AD DSRM Password Reset,['T1098'],"Aside from being used to promote genuine domain controllers, the DSRM (Directory Services Restore Mode) account can be used to persist within a Domain. A DC can be configured to allow the DSRM account to logon & be used in the same way as a local administrator account. This detection is looking for any password reset attempts against that account.",['TTP'],"September 8, 2022","| tstats `security_content_summariesonly` min(_time) as _time from datamodel=Change where All_Changes.result_id=""4794"" AND All_Changes.result=""An attempt was made to set the Directory Services Restore Mode administrator password"" by All_Changes.action, All_Changes.dest, All_Changes.src, All_Changes.user 
| `drop_dm_object_name(All_Changes)` 
| `windows_ad_dsrm_password_reset_filter`",['security_content_summariesonly'],"['_time', 'All_Changes.result_id', 'All_Changes.result', 'All_Changes.action', 'All_Changes.dest', 'All_Changes.src', 'All_Changes.user']","Resetting the DSRM password for legitamate reasons, i.e. forgot the password. Disaster recovery. Deploying AD backdoor deliberately.",['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],['https://adsecurity.org/?p=1714'],"['Account Manipulation', 'Change', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d20a18cb-fd70-4ffa-a844-25126e0b0d94/,Detect PowerShell Applications Spawning cmd exe,['T1059'],"The following analytic identifies parent processes that are powershell, spawning cmd.exe. By its very nature, many applications spawn cmd.exe natively or built into macros. Much of this will need to be tuned to further enhance the risk.",['Anomaly'],"December 11, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = lower(actor_process_file.name) 
| eval device_hostname = device.hostname 
| where (actor_process_file_name IN (""powershell.exe"", ""pwsh.exe"")) AND process_file_name=""cmd.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",There are circumstances where an application may legitimately execute and interact with the Windows command-line interface.,"['Suspicious Command-Line Executions', 'Insider Threat']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/insider_threat']",['https://attack.mitre.org/techniques/T1059/'],"['Command and Scripting Interpreter', 'Execution', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/d25d2c3d-d9d8-40ec-8fdf-e86fe155a3da/,Remote Process Instantiation via WMI,['T1047'],This analytic identifies wmic.exe being launched with parameters to spawn a process on a remote system. Red Teams and adversaries alike may abuse WMI and this binary for lateral movement and remote code execution.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` (Processes.process=""*/node:*"" AND Processes.process=""*process*"" AND Processes.process=""*call*"" AND  Processes.process=""*create*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_wmi_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","The wmic.exe utility is a benign Windows application. It may be used legitimately by Administrators with these parameters for remote system administration, but it's relatively uncommon.","['Ransomware', 'CISA AA23-347A', 'Active Directory Lateral Movement', 'Suspicious WMI Use']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/suspicious_wmi_use']","['https://attack.mitre.org/techniques/T1047/', 'https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/create-method-in-class-win32-process']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/d25feebe-fa1c-4754-8a1e-afb03bedc0f2/,Linux OpenVPN Privilege Escalation,"['T1548.003', 'T1548']","OpenVPN is a virtual private network system that implements techniques to create secure point-to-point or site-to-site connections in routed or bridged configurations and remote access facilities. It implements both client and server applications. If sudo right is given to the OpenVPN application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*openvpn*"" AND Processes.process=""*--dev*"" AND Processes.process=""*--script-security*"" AND Processes.process=""*--up*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_openvpn_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/openvpn/', 'https://en.wikipedia.org/wiki/OpenVPN']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/d2988160-3ce9-4310-b59d-905334920cdd/,Windows Get Local Admin with FindLocalAdminAccess,"['T1087', 'T1087.002']","This analytic leverages PowerShell Script Block Logging (EventCode=4104) to detect the execution of the Find-LocalAdminAccess commandlet. Find-LocalAdminAccess is part of PowerView, a PowerShell toolkit designed for Windows domain enumeration. Detecting the use of Find-LocalAdminAccess is vital as adversaries and Red Teams might employ it to identify machines where the current user context has local administrator access. Such information can provide attackers with potential targets for lateral movement or privilege escalation within the network.",['TTP'],"August 31, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Find-LocalAdminAccess*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_get_local_admin_with_findlocaladminaccess_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']","Administrators may leverage PowerSploit tools for legitimate reasons, filter as needed.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://powersploit.readthedocs.io/en/latest/Recon/Find-LocalAdminAccess/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d2c14d28-5c47-11ec-9892-acde48001122/,Outbound Network Connection from Java Using Default Ports,"['T1190', 'T1133']",A required step while exploiting the CVE-2021-44228-Log4j vulnerability is that the victim server will perform outbound connections to attacker-controlled infrastructure. This is required as part of the JNDI lookup as well as for retrieving the second stage .class payload. The following analytic identifies the Java process reaching out to default ports used by the LDAP and RMI protocols. This behavior could represent successfull exploitation. Note that adversaries can easily decide to use arbitrary ports for these protocols and potentially bypass this detection.,['TTP'],"June 28, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where (Processes.process_name=""java.exe"" OR Processes.process_name=javaw.exe OR Processes.process_name=javaw.exe) by _time Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| join process_id [
| tstats `security_content_summariesonly` count FROM datamodel=Network_Traffic.All_Traffic where (All_Traffic.dest_port= 389 OR All_Traffic.dest_port= 636 OR All_Traffic.dest_port = 1389 OR All_Traffic.dest_port = 1099 ) by All_Traffic.process_id All_Traffic.dest All_Traffic.dest_port 
| `drop_dm_object_name(All_Traffic)` 
| rename dest as connection_to_CNC] 
| table _time dest parent_process_name process_name process_path process connection_to_CNC dest_port
| `outbound_network_connection_from_java_using_default_ports_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_id', 'Processes.process_name', 'Processes.dest', 'Processes.process_path', 'Processes.process', 'Processes.parent_process_name', 'All_Traffic.process_id', 'All_Traffic.dest', 'All_Traffic.dest_port']",Legitimate Java applications may use perform outbound connections to these ports. Filter as needed,['Log4Shell CVE-2021-44228'],['https://research.splunk.com/stories/log4shell_cve-2021-44228'],"['https://www.lunasec.io/docs/blog/log4j-zero-day/', 'https://www.govcert.admin.ch/blog/zero-day-exploit-targeting-popular-java-library-log4j/']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Network_Traffic', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d2d4af6a-6c2b-4d79-80c5-fc2cf12a2f68/,Windows Drivers Loaded by Signature,"['T1014', 'T1068']","The following analytic assists with viewing all drivers being loaded by using Sysmon EventCode 6 (Driver Load). Sysmon provides some simple fields to assist with identifying suspicious drivers. Use this analytic to look at prevalence of driver (count), path of driver, signature status and hash. Review these fields with scrutiny until the ability to prove the driver is legitimate and has a purpose in the environment.",['Hunting'],"March 30, 2022","`sysmon` EventCode=6 
| stats min(_time) as firstTime max(_time) as lastTime values(ImageLoaded) count by dest Signed Signature service_signature_verified service_signature_exists Hashes 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_drivers_loaded_by_signature_filter`","['security_content_ctime', 'sysmon']","['_time', 'ImageLoaded', 'dest', 'Signed', 'Signature', 'service_signature_verified', 'service_signature_exists', 'Hashes']",This analytic is meant to assist with identifying drivers loaded in the environment and not to be setup for notables off the bat.,"['Windows Drivers', 'CISA AA22-320A', 'AgentTesla', 'BlackByte Ransomware']","['https://research.splunk.com/stories/windows_drivers', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/blackbyte_ransomware']","['https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/', 'https://attack.mitre.org/techniques/T1014/', 'https://www.fuzzysecurity.com/tutorials/28.html']","['Defense Evasion', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Rootkit', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d2f36034-37fa-4bd4-8801-26807c15540f/,WinRAR Spawning Shell Application,['T1105'],"The following analytic detects the execution of Windows shell processes initiated by WinRAR, specifically looking for instances where WinRAR spawns processes like ""cmd.exe"", ""powershell.exe"", ""certutil.exe"", ""mshta.exe"", or ""bitsadmin.exe"". This behavior is worth identifying for a Security Operations Center (SOC) because it is indicative of a spoofing attack exploit, such as the one associated with WinRAR CVE-2023-38831. Cybercriminals exploited this vulnerability to craft ZIP archives with spoofed extensions, hiding the launch of malicious scripts within an archive. When a victim opened the specially crafted archive, it executed the malware, leading to unauthorized access to their broker accounts and enabling the cybercriminals to perform illicit financial transactions and withdraw funds. If a true positive is found, it suggests that an attacker has successfully exploited the vulnerability to execute malicious scripts, leading to unauthorized access, financial loss, and potentially the delivery of additional malicious payloads. The impact of the attack could be severe, involving financial loss, unauthorized access to sensitive accounts, and the potential for further malicious activity such as data theft or ransomware attacks.",['TTP'],"August 29, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=winrar.exe `windows_shells` OR Processes.process_name IN (""certutil.exe"",""mshta.exe"",""bitsadmin.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `winrar_spawning_shell_application_filter`","['security_content_summariesonly', 'windows_shells', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Be aware of potential false positives - legitimate uses of WinRAR and the listed processes in your environment may cause benign activities to be flagged. Upon triage, review the destination, user, parent process, and process name involved in the flagged activity. Capture and inspect any relevant on-disk artifacts, and look for concurrent processes to identify the attack source. This approach helps analysts detect potential threats earlier and mitigate the risks.",['WinRAR Spoofing Attack CVE-2023-38831'],['https://research.splunk.com/stories/winrar_spoofing_attack_cve-2023-38831'],"['https://www.group-ib.com/blog/cve-2023-38831-winrar-zero-day/', 'https://github.com/BoredHackerBlog/winrar_CVE-2023-38831_lazy_poc', 'https://github.com/b1tg/CVE-2023-38831-winrar-exploit']","['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d372f928-ce4f-11eb-a762-acde48001122/,Esentutl SAM Copy,"['T1003.002', 'T1003']","The following analytic identifies the process - esentutl.exe - being used to capture credentials stored in ntds.dit or the SAM file on disk. During triage, review parallel processes and determine if legitimate activity. Upon determination of illegitimate activity, take further action to isolate and contain the threat.",['Hunting'],"August 18, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_esentutl` Processes.process IN (""*ntds*"", ""*SAM*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `esentutl_sam_copy_filter`","['security_content_summariesonly', 'process_esentutl', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited. Filter as needed.,"['Credential Dumping', 'Living Off The Land']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/6a570c2a4630cf0c2bd41a2e8375b5d5ab92f700/atomics/T1003.002/T1003.002.md', 'https://attack.mitre.org/software/S0404/']","['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d4a3eb62-0f1e-11ec-a971-acde48001122/,Add DefaultUser And Password In Registry,"['T1552.002', 'T1552']",this search is to detect a suspicious registry modification to implement auto admin logon to a host. This technique was seen in BlackMatter ransomware to automatically logon to the compromise host after  triggering a safemode boot to continue encrypting the whole network. This behavior is not a common practice and really a suspicious TTP or alert need to be consider if found within then network premise.,['Anomaly'],"March 29, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon*"" AND Registry.registry_value_name= DefaultPassword OR Registry.registry_value_name= DefaultUserName) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.dest Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `add_defaultuser_and_password_in_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,['BlackMatter Ransomware'],['https://research.splunk.com/stories/blackmatter_ransomware'],['https://news.sophos.com/en-us/2021/08/09/blackmatter-ransomware-emerges-from-the-shadow-of-darkside/'],"['Credential Access', 'Credential Access', 'Credentials in Registry', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/d4e40b7e-aad3-4a7d-aac8-550ea5222be5/,Linux Cpulimit Privilege Escalation,"['T1548.003', 'T1548']","cpulimit is a simple program which attempts to limit the cpu usage of a process (expressed in percentage, not in cpu time). This is useful to control batch jobs, when you don't want them to eat too much cpu. If sudo right is given to the program for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*cpulimit*"" AND Processes.process=""*-l*"" AND Processes.process=""*-f*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_cpulimit_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/cpulimit/', 'http://cpulimit.sourceforge.net/']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/d4f42098-4680-11ec-ad07-3e22fbd008af/,Remote Process Instantiation via DCOM and PowerShell,"['T1021', 'T1021.003']","This analytic looks for the execution of powershell.exe with arguments utilized to start a process on a remote endpoint by abusing the DCOM protocol. Specifically, this search looks for the abuse of ShellExecute and ExecuteShellCommand. Red Teams and adversaries alike may abuse DCOM and powershell.exe for lateral movement and remote code execution.",['TTP'],"November 15, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` (Processes.process=""*Document.ActiveView.ExecuteShellCommand*"" OR Processes.process=""*Document.Application.ShellExecute*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_dcom_and_powershell_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may leverage DCOM to start a process on remote systems, but this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/003/', 'https://www.cybereason.com/blog/dcom-lateral-movement-techniques']","['Distributed Component Object Model', 'Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d5039508-998d-4cfc-8b5e-9dcd679d9a62/,Windows ConHost with Headless Argument,"['T1564.003', 'T1564.006']","The following analytic detects the unusual use of the Windows Console Host process (conhost.exe) with the undocumented –headless parameter to spawn a new process. This behavior is highly unusual and indicative of suspicious activity, as the –headless parameter is not commonly used in legitimate operations. The analytic identifies this behavior by looking for instances where conhost.exe is invoked with the –headless argument. This behavior is worth identifying for a Security Operations Center (SOC) as it could indicate an attacker's attempt to execute commands or scripts in a stealthy manner, potentially to establish persistence, perform lateral movement, or carry out other malicious activities. If a true positive is identified, it suggests that an attacker has gained a foothold in the environment and is attempting to further their attack, which could lead to serious consequences such as data exfiltration, system compromise, or deployment of ransomware. Potential false positives could arise from legitimate administrative activity, hence it is important to validate the context of the detected behavior during triage.",['TTP'],"November 1, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=conhost.exe Processes.process=""*--headless *"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_conhost_with_headless_argument_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present if the application is legitimately used, filter by user or endpoint as needed.",['Spearphishing Attachments'],['https://research.splunk.com/stories/spearphishing_attachments'],"['https://x.com/embee_research/status/1559410767564181504?s=20', 'https://x.com/GroupIB_TI/status/1719675754886131959?s=20']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Hidden Window', 'Run Virtual Instance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d56fe0c8-4650-11ec-a8fa-acde48001122/,Windows DiskCryptor Usage,['T1486'],"The following analytic identifies DiskCryptor  process name of dcrypt.exe or internal name dcinst.exe. This utility has been utilized by adversaries to encrypt disks manually during an operation. In addition, during install, a dcrypt.sys driver is installed and requires a reboot in order to take effect. There are no command-line arguments used.",['Hunting'],"November 15, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dcrypt.exe"" OR Processes.original_file_name=dcinst.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_diskcryptor_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","It is possible false positives may be present based on the internal name dcinst.exe, filter as needed. It may be worthy to alert on the service name.",['Ransomware'],['https://research.splunk.com/stories/ransomware'],"['https://thedfirreport.com/2021/11/15/exchange-exploit-leads-to-domain-wide-ransomware/', 'https://github.com/DavidXanatos/DiskCryptor']","['Data Encrypted for Impact', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d57b4d91-fc91-4482-a325-47693cced1eb/,Windows PowerShell Disabled Kerberos Pre-Authentication Discovery Get-ADUser,"['T1558', 'T1558.004']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-ADUser commandlet with specific parameters. Get-ADUser is part of the Active Directory PowerShell module used to manage Windows Active Directory networks. As the name suggests, Get-ADUser is used to query for domain users. With the appropiate parameters, Get-ADUser allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may abuse Get-ADUSer to enumerate these accounts and attempt to crack their passwords offline.",['TTP'],"November 14, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval device_hostname = device.hostname 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_uid = process.uid 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_uid = actor_user.uid 
| where process_cmd_line LIKE ""%4194304%"" AND match(process_cmd_line, /(?i)get-aduser/)=true --finding_report--","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']",Administrators or power users may use search for accounts with Kerberos Pre Authentication disabled for legitimate purposes.,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://attack.mitre.org/techniques/T1558/004/', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Splunk Behavioral Analytics', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/d5905da5-d050-48db-9259-018d8f034fcf/,Powershell Load Module in Meterpreter,"['T1059', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies ""MSF.Powershell"",""MSF.Powershell.Meterpreter"",""MSF.Powershell.Meterpreter.Kiwi"",""MSF.Powershell.Meterpreter.Transport"" being used. This behavior is related to when a Meterpreter session is started and the operator runs load_kiwi. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"November 22, 2022","`powershell` EventCode=4104 ScriptBlockText IN (""*MSF.Powershell*"",""*MSF.Powershell.Meterpreter*"",""*MSF.Powershell.Meterpreter.Kiwi*"",""*MSF.Powershell.Meterpreter.Transport*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_load_module_in_meterpreter_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'User_id']",False positives should be very limited as this is strict to MetaSploit behavior.,['MetaSploit'],['https://research.splunk.com/stories/metasploit'],['https://github.com/OJ/metasploit-payloads/blob/master/powershell/MSF.Powershell/Scripts.cs'],"['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d5a62490-6e09-11ec-884e-acde48001122/,Linux Doas Tool Execution,"['T1548.003', 'T1548']","This analytic is to detect the doas tool execution in linux host platform. This utility tool allow standard users to perform tasks as root, the same way sudo does. This tool is developed as a minimalistic alternative to sudo application. This tool can be abused advesaries, attacker or malware to gain elevated privileges to the targeted or compromised host. On the other hand this can also be executed by administrator for a certain task that needs admin rights. In this case filter is needed.",['Anomaly'],"January 5, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""doas"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_doas_tool_execution_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://wiki.gentoo.org/wiki/Doas', 'https://www.makeuseof.com/how-to-install-and-use-doas/']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/d5af132c-7c17-439c-9d31-13d55340f36c/,Scheduled Task Deleted Or Created via CMD,"['T1053.005', 'T1053']","This analytic focuses on identifying the creation or deletion of scheduled tasks using the schtasks.exe utility with the corresponding command-line flags (-create or -delete). This technique has been notably associated with threat actors like Dragonfly and the SUNBURST attack against SolarWinds. The purpose of this analytic is to detect suspicious activity related to scheduled tasks that could indicate malicious intent or unauthorized system manipulation. By monitoring for these specific command-line flags, we can enhance our ability to identify potential threats and prevent attacks similar to the use of scheduled tasks in the BadRabbit Ransomware incident.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process=*delete* OR Processes.process=*create*) by Processes.user Processes.process_name Processes.parent_process_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `scheduled_task_deleted_or_created_via_cmd_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.parent_process', 'Processes.process_name', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest']","While it is possible for legitimate scripts or administrators to trigger this behavior, filtering can be applied based on the parent process and application to reduce false positives. Analysts should reference the provided references to understand the context and threat landscape associated with this activity.","['AsyncRAT', 'Winter Vivern', 'Windows Persistence Techniques', 'Living Off The Land', 'Prestige Ransomware', 'AgentTesla', 'NjRAT', 'RedLine Stealer', 'Rhysida Ransomware', 'Azorult', 'DHS Report TA18-074A', 'Scheduled Tasks', 'Sandworm Tools', 'Qakbot', 'CISA AA22-257A', 'Trickbot', 'NOBELIUM Group', 'Amadey', 'DarkCrystal RAT', 'CISA AA23-347A', 'Phemedrone Stealer']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/winter_vivern', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/scheduled_tasks', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-257a', 'https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/phemedrone_stealer']","['https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/', 'https://www.joesandbox.com/analysis/691823/0/html']","['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d5bf5cf2-da71-11eb-92c2-acde48001122/,Spoolsv Writing a DLL,"['T1547.012', 'T1547']","The following analytic identifies a .dll being written by spoolsv.exe. This was identified during our testing of CVE-2021-34527 previously (CVE-2021-1675) or PrintNightmare. Typically, this is not normal behavior for spoolsv.exe to write a .dll. Current POC code used will write the suspicious DLL to disk within a path of \spool\drivers\x64\. During triage, isolate the endpoint and review for source of exploitation. Capture any additional file modification events.",['TTP'],"November 7, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=spoolsv.exe by _time Processes.process_guid Processes.process_name Processes.dest 
| `drop_dm_object_name(Processes)` 
| join process_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path=""*\\spool\\drivers\\x64\\*"" Filesystem.file_name=""*.dll"" by _time Filesystem.dest Filesystem.process_guid Filesystem.file_create_time Filesystem.file_name Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| fields _time dest file_create_time file_name file_path process_name process_path process_guid process] 
| dedup file_create_time 
| table  dest file_create_time, file_name, file_path, process_name process_guid 
| `spoolsv_writing_a_dll_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.file_path', 'Processes.process_name', 'Processes.process_id', 'Processes.process_name', 'Processes.dest']",Unknown.,['PrintNightmare CVE-2021-34527'],['https://research.splunk.com/stories/printnightmare_cve-2021-34527'],"['https://www.truesec.com/hub/blog/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available', 'https://www.truesec.com/hub/blog/exploitable-critical-rce-vulnerability-allows-regular-users-to-fully-compromise-active-directory-printnightmare-cve-2021-1675', 'https://www.reddit.com/r/msp/comments/ob6y02/critical_vulnerability_printnightmare_exposes']","['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Print Processors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d5f54b38-10bf-4b3a-b6fc-85949862ed50/,Windows Time Based Evasion via Choice Exec,"['T1497.003', 'T1497']","This analytic is designed to detect potentially suspicious batch files that leverage choice.exe as a delay tactic. This technique, observed in the SnakeKeylogger malware, is utilized for time delays or 'Sleep' commands in its code execution or before the deletion of its copies on compromised hosts. Detecting this anomaly serves as a valuable pivot to uncover suspicious processes attempting to evade detection through time-based evasion techniques.",['Anomaly'],"February 14, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name =choice.exe  Processes.process = ""*/T*""  Processes.process = ""*/N*"" by Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_time_based_evasion_via_choice_exec_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",administrator may use choice.exe to allow user to choose from and indexes of choices from a batch script.,['Snake Keylogger'],['https://research.splunk.com/stories/snake_keylogger'],"['https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/choice', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.404keylogger']","['Defense Evasion', 'Defense Evasion', 'Discovery', 'Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Time Based Evasion', 'Virtualization/Sandbox Evasion']",['Endpoint']
https://research.splunk.com/endpoint/d6e464e4-5c6a-474e-82d2-aed616a3a492/,Impacket Lateral Movement WMIExec Commandline Parameters,"['T1021', 'T1021.002', 'T1021.003', 'T1047', 'T1543.003']","This analytic looks for the presence of suspicious commandline parameters typically present when using Impacket tools. Impacket is a collection of python classes meant to be used with Microsoft network protocols. There are multiple scripts that leverage impacket libraries like wmiexec.py, smbexec.py, dcomexec.py and atexec.py used to execute commands on remote endpoints. By default, these scripts leverage administrative shares and hardcoded parameters that can be used as a signature to detect its use. Red Teams and adversaries alike may leverage Impackets tools for lateral movement and remote code execution.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=wmiprvse.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| where match(process, ""(?i)cmd\.exe\s+\/Q\s+\/c"") AND match(process, ""\\\\127\.0\.0\.1\\.*"") AND match(process, ""__\\d{1,10}\\.\\d{1,10}"") 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `impacket_lateral_movement_wmiexec_commandline_parameters_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","Although uncommon, Administrators may leverage Impackets tools to start a process on remote systems for system administration or automation use cases.","['Active Directory Lateral Movement', 'CISA AA22-277A', 'WhisperGate', 'Prestige Ransomware', 'Volt Typhoon', 'Graceful Wipe Out Attack', 'Industroyer2', 'Data Destruction']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/data_destruction']","['https://attack.mitre.org/techniques/T1021/002/', 'https://attack.mitre.org/techniques/T1021/003/', 'https://attack.mitre.org/techniques/T1047/', 'https://attack.mitre.org/techniques/T1053/', 'https://attack.mitre.org/techniques/T1053/005/', 'https://github.com/SecureAuthCorp/impacket', 'https://vk9-sec.com/impacket-remote-code-execution-rce-on-windows-from-linux/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Distributed Component Object Model', 'Endpoint', 'Execution', 'Lateral Movement', 'Lateral Movement', 'Lateral Movement', 'Persistence', 'Privilege Escalation', 'Remote Services', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/d6f2b006-0041-11ec-8885-acde48001122/,PowerShell 4104 Hunting,"['T1059', 'T1059.001']","The following Hunting analytic assists with identifying suspicious PowerShell execution using Script Block Logging, or EventCode 4104. This analytic is not meant to be ran hourly, but occasionally to identify malicious or suspicious PowerShell. This analytic is a combination of work completed by Alex Teixeira and Splunk Threat Research Team.",['Hunting'],"December 27, 2023","`powershell` EventCode=4104 
| eval DoIt = if(match(ScriptBlockText,""(?i)(\$doit)""), ""4"", 0) 
| eval enccom=if(match(ScriptBlockText,""[A-Za-z0-9+\/]{44,}([A-Za-z0-9+\/]{4}
|[A-Za-z0-9+\/]{3}=
|[A-Za-z0-9+\/]{2}==)"") OR match(ScriptBlockText, ""(?i)[-]e(nc*o*d*e*d*c*o*m*m*a*n*d*)*\s+[^-]""),4,0) 
| eval suspcmdlet=if(match(ScriptBlockText, ""(?i)Add-Exfiltration
|Add-Persistence
|Add-RegBackdoor
|Add-ScrnSaveBackdoor
|Check-VM
|Do-Exfiltration
|Enabled-DuplicateToken
|Exploit-Jboss
|Find-Fruit
|Find-GPOLocation
|Find-TrustedDocuments
|Get-ApplicationHost
|Get-ChromeDump
|Get-ClipboardContents
|Get-FoxDump
|Get-GPPPassword
|Get-IndexedItem
|Get-Keystrokes
|LSASecret
|Get-PassHash
|Get-RegAlwaysInstallElevated
|Get-RegAutoLogon
|Get-RickAstley
|Get-Screenshot
|Get-SecurityPackages
|Get-ServiceFilePermission
|Get-ServicePermission
|Get-ServiceUnquoted
|Get-SiteListPassword
|Get-System
|Get-TimedScreenshot
|Get-UnattendedInstallFile
|Get-Unconstrained
|Get-VaultCredential
|Get-VulnAutoRun
|Get-VulnSchTask
|Gupt-Backdoor
|HTTP-Login
|Install-SSP
|Install-ServiceBinary
|Invoke-ACLScanner
|Invoke-ADSBackdoor
|Invoke-ARPScan
|Invoke-AllChecks
|Invoke-BackdoorLNK
|Invoke-BypassUAC
|Invoke-CredentialInjection
|Invoke-DCSync
|Invoke-DllInjection
|Invoke-DowngradeAccount
|Invoke-EgressCheck
|Invoke-Inveigh
|Invoke-InveighRelay
|Invoke-Mimikittenz
|Invoke-NetRipper
|Invoke-NinjaCopy
|Invoke-PSInject
|Invoke-Paranoia
|Invoke-PortScan
|Invoke-PoshRat
|Invoke-PostExfil
|Invoke-PowerDump
|Invoke-PowerShellTCP
|Invoke-PsExec
|Invoke-PsUaCme
|Invoke-ReflectivePEInjection
|Invoke-ReverseDNSLookup
|Invoke-RunAs
|Invoke-SMBScanner
|Invoke-SSHCommand
|Invoke-Service
|Invoke-Shellcode
|Invoke-Tater
|Invoke-ThunderStruck
|Invoke-Token
|Invoke-UserHunter
|Invoke-VoiceTroll
|Invoke-WScriptBypassUAC
|Invoke-WinEnum
|MailRaider
|New-HoneyHash
|Out-Minidump
|Port-Scan
|PowerBreach
|PowerUp
|PowerView
|Remove-Update
|Set-MacAttribute
|Set-Wallpaper
|Show-TargetScreen
|Start-CaptureServer
|VolumeShadowCopyTools
|NEEEEWWW
|(Computer
|User)Property
|CachedRDPConnection
|get-net\S+
|invoke-\S+hunter
|Install-Service
|get-\S+(credent
|password)
|remoteps
|Kerberos.*(policy
|ticket)
|netfirewall
|Uninstall-Windows
|Verb\s+Runas
|AmsiBypass
|nishang
|Invoke-Interceptor
|EXEonRemote
|NetworkRelay
|PowerShelludp
|PowerShellIcmp
|CreateShortcut
|copy-vss
|invoke-dll
|invoke-mass
|out-shortcut
|Invoke-ShellCommand""),1,0) 
| eval base64 = if(match(lower(ScriptBlockText),""frombase64""), ""4"", 0) 
| eval empire=if(match(lower(ScriptBlockText),""system.net.webclient"") AND match(lower(ScriptBlockText), ""frombase64string"") ,5,0) 
| eval mimikatz=if(match(lower(ScriptBlockText),""mimikatz"") OR match(lower(ScriptBlockText), ""-dumpcr"") OR match(lower(ScriptBlockText), ""SEKURLSA::Pth"") OR match(lower(ScriptBlockText), ""kerberos::ptt"") OR match(lower(ScriptBlockText), ""kerberos::golden"") ,5,0) 
| eval iex=if(match(ScriptBlockText, ""(?i)iex
|invoke-expression""),2,0) 
| eval webclient=if(match(lower(ScriptBlockText),""http"") OR match(lower(ScriptBlockText),""web(client
|request)"") OR match(lower(ScriptBlockText),""socket"") OR match(lower(ScriptBlockText),""download(file
|string)"") OR match(lower(ScriptBlockText),""bitstransfer"") OR match(lower(ScriptBlockText),""internetexplorer.application"") OR match(lower(ScriptBlockText),""xmlhttp""),5,0) 
| eval get = if(match(lower(ScriptBlockText),""get-""), ""1"", 0) 
| eval rundll32 = if(match(lower(ScriptBlockText),""rundll32""), ""4"", 0) 
| eval suspkeywrd=if(match(ScriptBlockText, ""(?i)(bitstransfer
|mimik
|metasp
|AssemblyBuilderAccess
|Reflection\.Assembly
|shellcode
|injection
|cnvert
|shell\.application
|start-process
|Rc4ByteStream
|System\.Security\.Cryptography
|lsass\.exe
|localadmin
|LastLoggedOn
|hijack
|BackupPrivilege
|ngrok
|comsvcs
|backdoor
|brute.?force
|Port.?Scan
|Exfiltration
|exploit
|DisableRealtimeMonitoring
|beacon)""),1,0) 
| eval syswow64 = if(match(lower(ScriptBlockText),""syswow64""), ""3"", 0) 
| eval httplocal = if(match(lower(ScriptBlockText),""http://127.0.0.1""), ""4"", 0) 
| eval reflection = if(match(lower(ScriptBlockText),""reflection""), ""1"", 0) 
| eval invokewmi=if(match(lower(ScriptBlockText), ""(?i)(wmiobject
|WMIMethod
|RemoteWMI
|PowerShellWmi
|wmicommand)""),5,0) 
| eval downgrade=if(match(ScriptBlockText, ""(?i)([-]ve*r*s*i*o*n*\s+2)"") OR match(lower(ScriptBlockText),""powershell -version""),3,0) 
| eval compressed=if(match(ScriptBlockText, ""(?i)GZipStream
|::Decompress
|IO.Compression
|write-zip
|(expand
|compress)-Archive""),5,0) 
| eval invokecmd = if(match(lower(ScriptBlockText),""invoke-command""), ""4"", 0) 
| addtotals fieldname=Score DoIt, enccom, suspcmdlet, suspkeywrd, compressed, downgrade, mimikatz, iex, empire, rundll32, webclient, syswow64, httplocal, reflection, invokewmi, invokecmd, base64, get 
| stats values(Score) by UserID, Computer, DoIt, enccom, compressed, downgrade, iex, mimikatz, rundll32, empire, webclient, syswow64, httplocal, reflection, invokewmi, invokecmd, base64, get, suspcmdlet, suspkeywrd 
| rename Computer as dest, UserID as user 
| `powershell_4104_hunting_filter`",['powershell'],"['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Limited false positives. May filter as needed.,"['Malicious PowerShell', 'Hermetic Wiper', 'Rhysida Ransomware', 'DarkGate Malware', 'Flax Typhoon', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/flax_typhoon', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://github.com/inodee/threathunting-spl/blob/master/hunt-queries/powershell_qualifiers.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell', 'https://github.com/marcurdy/dfir-toolset/blob/master/Powershell%20Blueteam.txt', 'https://devblogs.microsoft.com/powershell/powershell-the-blue-team/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging?view=powershell-5.1', 'https://www.mandiant.com/resources/greater-visibilityt', 'https://hurricanelabs.com/splunk-tutorials/how-to-use-powershell-transcription-logs-in-splunk/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html', 'https://adlumin.com/post/powerdrop-a-new-insidious-powershell-script-for-command-and-control-attacks-targets-u-s-aerospace-defense-industry/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d71efbf6-da63-11eb-8c6e-acde48001122/,Sdclt UAC Bypass,"['T1548.002', 'T1548']",This search is to detect a suspicious sdclt.exe registry modification. This technique is commonly seen when attacker try to bypassed UAC by using sdclt.exe application by modifying some registry that sdclt.exe tries to open or query with payload file path on it to be executed.,['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE ((Registry.registry_path= ""*\\Windows\\CurrentVersion\\App Paths\\control.exe*"" OR Registry.registry_path= ""*\\exefile\\shell\\runas\\command\\*"") (Registry.registry_value_name = ""(Default)"" OR Registry.registry_value_name = ""IsolatedCommand"")) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `sdclt_uac_bypass_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Limited to no false positives are expected.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/', 'https://github.com/hfiref0x/UACME', 'https://www.cyborgsecurity.com/cyborg-labs/threat-hunt-deep-dives-user-account-control-bypass-via-registry-modification/']","['Abuse Elevation Control Mechanism', 'Bypass User Account Control', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d75cc561-3828-4d0a-92c4-0eb93bfe0929/,Windows Rename System Utilities Aspnet compiler exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies Aspnet_Compiler.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""aspnet_compiler.exe"" AND (NOT match(process_file_path, /(?i)\\windows\\microsoft.net\\framework64\\v4.0.30319/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/d76e8188-8f5a-11ec-ace4-acde48001122/,Windows Bitsadmin Download File,"['T1197', 'T1105']","The following query identifies Microsoft Background Intelligent Transfer Service utility bitsadmin.exe using the transfer parameter to download a remote object. In addition, look for download or upload on the command-line, the switches are not required to perform a transfer. Capture any files downloaded. Review the reputation of the IP or domain used. Typically once executed, a follow on command will be used to execute the dropped file. Note that the network connection or file modification events related will not spawn or create from bitsadmin.exe, but the artifacts will appear in a parallel process of svchost.exe with a command-line similar to svchost.exe -k netsvcs -s BITS. It's important to review all parallel and child processes to capture any behaviors and artifacts. In some suspicious and malicious instances, BITS jobs will be created. You can use bitsadmin /list /verbose to list out the jobs during investigation.",['TTP'],"February 16, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%transfer%"" AND process_file_name=""bitsadmin.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Limited false positives, however it may be required to filter based on parent process name or network connection.","['Ingress Tool Transfer', 'BITS Jobs', 'DarkSide Ransomware', 'Living Off The Land']","['https://research.splunk.com/stories/ingress_tool_transfer', 'https://research.splunk.com/stories/bits_jobs', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/8eb52117b748d378325f7719554a896e37bccec7/atomics/T1105/T1105.md#atomic-test-9---windows---bitsadmin-bits-download', 'https://github.com/redcanaryco/atomic-red-team/blob/bc705cb7aaa5f26f2d96585fac8e4c7052df0ff9/atomics/T1197/T1197.md', 'https://docs.microsoft.com/en-us/windows/win32/bits/bitsadmin-tool', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/']","['BITS Jobs', 'Command And Control', 'Defense Evasion', 'Ingress Tool Transfer', 'Persistence', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/d77d349e-6269-11ec-9cfe-acde48001122/,Suspicious Ticket Granting Ticket Request,"['T1078', 'T1078.002']","As part of the sAMAccountName Spoofing (CVE-2021-42278) and Domain Controller Impersonation (CVE-2021-42287) exploitation chain, adversaries will need to request a Kerberos Ticket Granting Ticket (TGT) on behalf of the newly created and renamed computer account. The TGT request will be preceded by a computer account name event. This analytic leverages Event Id 4781, The name of an account was changed and event Id 4768 A Kerberos authentication ticket (TGT) was requested to correlate a sequence of events where the new computer account on event id 4781 matches the request account on event id 4768. This behavior could represent an exploitation attempt of CVE-2021-42278 and CVE-2021-42287 for privilege escalation.",['Hunting'],"December 21, 2021","`wineventlog_security` (EventCode=4781 Old_Account_Name=""*$"" New_Account_Name!=""*$"") OR (EventCode=4768 Account_Name!=""*$"") 
| eval RenamedComputerAccount = coalesce(New_Account_Name, mvindex(Account_Name,0)) 
| transaction RenamedComputerAccount startswith=(EventCode=4781) endswith=(EventCode=4768) 
| eval short_lived=case((duration<2),""TRUE"") 
| search short_lived = TRUE 
| table _time, ComputerName, EventCode, Account_Name,RenamedComputerAccount, short_lived 
|`suspicious_ticket_granting_ticket_request_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Old_Account_Name', 'New_Account_Name', 'Account_Name', 'ComputerName']","A computer account name change event inmediately followed by a kerberos TGT request with matching fields is unsual. However, legitimate behavior may trigger it. Filter as needed.","['sAMAccountName Spoofing and Domain Controller Impersonation', 'Active Directory Kerberos Attacks', 'Active Directory Privilege Escalation']","['https://research.splunk.com/stories/samaccountname_spoofing_and_domain_controller_impersonation', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/active_directory_privilege_escalation']","['https://exploit.ph/cve-2021-42287-cve-2021-42278-weaponisation.html', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42278', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-42287']","['Defense Evasion', 'Defense Evasion', 'Domain Accounts', 'Initial Access', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/d7c2c09b-9569-4a9e-a8b6-6a39a99c1d32/,Windows ISO LNK File Creation,"['T1566.001', 'T1566', 'T1204.001', 'T1204']","The following analytic identifies the use of a delivered ISO file that has been mounted and the afformention lnk or file opened within it. When the ISO file is opened, the files are saved in the %USER%\AppData\Local\Temp\<random folder name>\ path. The analytic identifies .iso.lnk written to the path. The name of the ISO file is prepended.",['Hunting'],"September 19, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*\\Microsoft\\Windows\\Recent\\*"") Filesystem.file_name IN (""*.iso.lnk"", ""*.img.lnk"", ""*.vhd.lnk"", ""*vhdx.lnk"") by Filesystem.file_create_time Filesystem.process_id Filesystem.file_name Filesystem.file_path Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_iso_lnk_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.dest']","False positives may be high depending on the environment and consistent use of ISOs mounting. Restrict to servers, or filter out based on commonly used ISO names. Filter as needed.","['Spearphishing Attachments', 'Brute Ratel C4', 'AgentTesla', 'Qakbot', 'IcedID', 'Azorult', 'Remcos', 'Warzone RAT', 'Amadey']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/amadey']","['https://www.microsoft.com/security/blog/2021/05/27/new-sophisticated-email-based-attack-from-nobelium/', 'https://github.com/MHaggis/notes/blob/master/utilities/ISOBuilder.ps1', 'https://isc.sans.edu/diary/Recent+AZORult+activity/25120', 'https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html']","['Endpoint', 'Execution', 'Execution', 'Initial Access', 'Initial Access', 'Malicious Link', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'User Execution']",['Endpoint']
https://research.splunk.com/endpoint/d7c6ad22-155c-11ec-bb64-acde48001122/,Powershell Get LocalGroup Discovery with Script Block Logging,"['T1069', 'T1069.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies PowerShell cmdlet - get-localgroup being ran. Typically, by itself, is not malicious but may raise suspicion based on time of day, endpoint and username. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['Hunting'],"April 26, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*get-localgroup*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText  
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
|`security_content_ctime(lastTime)` 
| `powershell_get_localgroup_discovery_with_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives may be present. Tune as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.splunk.com/en_us/blog/security/powershell-detections-threat-research-release-august-2021.html', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1069.001/T1069.001.md', 'https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/']","['Discovery', 'Discovery', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d8120352-3b62-411c-8cb6-7b47584dd5e8/,Suspicious Process Executed From Container File,"['T1204.002', 'T1036.008']",This analytic identifies a suspicious process spawned by another process from within common container/archive file types. This technique was a common technique used by adversaries and malware to execute scripts or evade defenses. This TTP may detect some normal software installation or user behaviors where opening archive files is common.,['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""*.ZIP\\*"",""*.ISO\\*"",""*.IMG\\*"",""*.CAB\\*"",""*.TAR\\*"",""*.GZ\\*"",""*.RAR\\*"",""*.7Z\\*"") AND Processes.action=""allowed"" by Processes.dest Processes.parent_process Processes.process Processes.user
| `drop_dm_object_name(Processes)`
| regex process=""(?i).*(ZIP
|ISO
|IMG
|CAB
|TAR
|GZ
|RAR
|7Z)\\\\.+\.(BAT
|BIN
|CAB
|CMD
|COM
|CPL
|EX_
|EXE
|GADGET
|INF1
|INS
|INX
|
|HTM
|HTML
|ISU
|JAR
|JOB
|JS
|JSE
|LNK
|MSC
|MSI
|MSP
|MST
|PAF
|PIF
|PS1
|REG
|RGS
|SCR
|SCT
|SHB
|SHS
|U3P
|VB
|VBE
|VBS
|VBSCRIPT
|WS
|WSF
|WSH)\""?$"" 
| rex field=process ""(?i).+\\\\(?<file_name>[^\\\]+\.(ZIP
|ISO
|IMG
|CAB
|TAR
|GZ
|RAR
|7Z))\\\\((.+\\\\)+)?(?<process_name>.+\.(BAT
|BIN
|CAB
|CMD
|COM
|CPL
|EX_
|EXE
|GADGET
|INF1
|INS
|INX
|
|HTM
|HTML
|ISU
|JAR
|JOB
|JS
|JSE
|LNK
|MSC
|MSI
|MSP
|MST
|PAF
|PIF
|PS1
|REG
|RGS
|SCR
|SCT
|SHB
|SHS
|U3P
|VB
|VBE
|VBS
|VBSCRIPT
|WS
|WSF
|WSH))\""?$""
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_process_executed_from_container_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.parent_process', 'Processes.process', 'Processes.user']",Various business process or userland applications and behavior.,"['Unusual Processes', 'Amadey', 'Remcos', 'Snake Keylogger']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/snake_keylogger']","['https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations', 'https://www.crowdstrike.com/blog/weaponizing-disk-image-files-analysis/', 'https://attack.mitre.org/techniques/T1204/002/']","['Defense Evasion', 'Endpoint', 'Execution', 'Malicious File', 'Masquerade File Type', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d8120352-3b62-4e3c-8cb6-7b47584dd5e8/,Windows Scheduled Task Service Spawned Shell,"['T1053.005', 'T1059']","The following analytic identifies when the Task Scheduler service ""svchost.exe -k netsvcs -p -s Schedule"" is the parent process to common command line, scripting, or shell execution binaries. Attackers often abuse the task scheduler service with these binaries as an execution and persistence mechanism in order to blend in with normal Windows operations. This TTP is also commonly seen for legitimate purposes such as business scripts or application updates.",['TTP'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process=""*\\system32\\svchost.exe*"" AND Processes.parent_process=""*-k*"" AND Processes.parent_process= ""*netsvcs*"" AND Processes.parent_process=""*-p*"" AND Processes.parent_process=""*-s*"" AND Processes.parent_process=""*Schedule*"" Processes.process_name IN(""powershell.exe"", ""wscript.exe"", ""cscript.exe"", ""cmd.exe"", ""sh.exe"", ""ksh.exe"", ""zsh.exe"", ""bash.exe"", ""scrcons.exe"",""pwsh.exe"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_scheduled_task_service_spawned_shell_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id', 'Processes.parent_process_name']","Unknown, possible custom scripting.",['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],"['https://www.mandiant.com/resources/blog/tracking-evolution-gootloader-operations', 'https://nasbench.medium.com/a-deep-dive-into-windows-scheduled-tasks-and-the-processes-running-them-218d1eed4cce', 'https://attack.mitre.org/techniques/T1053/005/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d82d4af4-a0bd-11ec-9445-3e22fbd008af/,Kerberos User Enumeration,"['T1589', 'T1589.002']","The following analytic leverages Event Id 4768, A Kerberos authentication ticket (TGT) was requested, to identify one source endpoint trying to obtain an unusual number Kerberos TGT ticket for non existing users. This behavior could represent an adversary abusing the Kerberos protocol to perform a user enumeration attack against an Active Directory environment. When Kerberos is sent a TGT request with no preauthentication for an invalid username, it responds with KRB5KDC_ERR_C_PRINCIPAL_UNKNOWN or 0x6. Red teams and adversaries alike may abuse the Kerberos protocol to validate a list of users use them to perform further attacks.\ The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number requests. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field.",['Anomaly'],"March 10, 2022","`wineventlog_security` EventCode=4768 Result_Code=0x6 Account_Name!=""*$"" 
| bucket span=2m _time 
| stats dc(Account_Name) AS unique_accounts values(Account_Name) as tried_accounts by _time, Client_Address 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by Client_Address 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `kerberos_user_enumeration_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Result_Code', 'Account_Name', 'Client_Address']",Possible false positive scenarios include but are not limited to vulnerability scanners and missconfigured systems.,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://github.com/ropnop/kerbrute', 'https://attack.mitre.org/techniques/T1589/002/', 'https://redsiege.com/tools-techniques/2020/04/user-enumeration-part-3-windows/']","['Email Addresses', 'Gather Victim Identity Information', 'Reconnaissance', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d82eced3-b1dc-42ab-859e-a2fc98827359/,Remote System Discovery with Wmic,['T1018'],This analytic looks for the execution of wmic.exe with command-line arguments utilized to discover remote systems. The arguments utilized in this command return a list of all the systems registered in the domain. Red Teams and adversaries alike may leverage WMI and wmic.exe to identify remote systems for situational awareness and Active Directory Discovery.,['TTP'],"September 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""wmic.exe"") (Processes.process=*/NAMESPACE:\\\\root\\directory\\ldap* AND Processes.process=*ds_computer* AND Processes.process=""*GET ds_samaccountname*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_system_discovery_with_wmic_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://docs.microsoft.com/en-us/windows/win32/wmisdk/wmic']","['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d870ce3b-e796-402f-b2af-cab4da1223f2/,Linux apt-get Privilege Escalation,"['T1548.003', 'T1548']","The apt-get is a command line tool for interacting with the Advanced Package Tool (APT) library (a package management system for Linux distributions). It allows you to search for, install, manage, update, and remove software. The tool does not build software from the source code. If sudo right is given to the tool for user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*apt-get*"" AND Processes.process=""*APT::Update::Pre-Invoke::*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_apt_get_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/apt-get/', 'https://phoenixnap.com/kb/how-to-use-apt-get-commands']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/d8bea5ca-9d4a-4249-8b56-64a619109835/,Windows Processes Killed By Industroyer2 Malware,['T1489'],The following analytic is to look for known processes killed by industroyer2 malware. This technique was seen in the industroyer2 malware attack that tries to kill several processes of windows host machines related to the energy facility network. This anomaly might be a good indicator to check which process kill these processes or why the process was killed.,['Anomaly'],"April 14, 2023","`sysmon` EventCode=5 process_name IN (""PServiceControl.exe"", ""PService_PPD.exe"") 
| stats min(_time) as firstTime max(_time) as lastTime count by process_name process process_path process_guid process_id EventCode dest user_id 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_processes_killed_by_industroyer2_malware_filter`","['security_content_ctime', 'sysmon']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",False positives are possible if legitimate applications are allowed to terminate this process during testing or updates. Filter as needed based on paths that are used legitimately.,"['Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']",['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/'],"['Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d8c406fe-23d2-45f3-a983-1abe7b83ff3b/,Credential Dumping via Copy Command from Shadow Copy,"['T1003.003', 'T1003']","The following analytic detects the use of the copy command to dump credentials from a shadow copy so that you can detect potential threats earlier and mitigate the risks associated with credential dumping. The detection is made by using a Splunk query to search for specific processes that indicate credential dumping activity. The query looks for processes with command lines that include references to certain files, such as ""sam"", ""security"", ""system"", and ""ntds.dit"", located in system directories like ""system32"" or ""windows"". The detection is important because it suggests that an attacker is attempting to extract credentials from a shadow copy. Credential dumping is a common technique used by attackers to obtain sensitive login information and gain unauthorized access to systems to escalate privileges, move laterally within the network, or gain unauthorized access to sensitive data. False positives might occur since legitimate processes might also reference these files. During triage, it is crucial to review the process details, including the source and the command that is run. Additionally, you must capture and analyze any relevant on-disk artifacts and investigate concurrent processes to determine the source of the attack",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` (Processes.process=*\\system32\\config\\sam* OR Processes.process=*\\system32\\config\\security* OR Processes.process=*\\system32\\config\\system* OR Processes.process=*\\windows\\ntds\\ntds.dit*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process Processes.original_file_name Processes.process_id Processes.parent_process_id  Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `credential_dumping_via_copy_command_from_shadow_copy_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Credential Dumping'],['https://research.splunk.com/stories/credential_dumping'],['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf'],"['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d8c972eb-ed84-431a-8869-ca4bd83257d1/,Windows PowerShell Get CIMInstance Remote Computer,['T1059.001'],"This analytic identifies the use of Get-CimInstance cmdlet with the -ComputerName parameter, which indicates that the cmdlet is being used to retrieve information from a remote computer. This can be useful for detecting instances of remote access, such as when an attacker uses PowerShell to connect to a remote system and gather information. By monitoring for this cmdlet with the -ComputerName parameter, security analysts can identify potential malicious activity on remote systems and take appropriate action to mitigate any threats.",['Anomaly'],"March 27, 2023","`powershell` EventCode=4104 ScriptBlockText=""*get-ciminstance*"" AND ScriptBlockText=""*computername*""  
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_get_ciminstance_remote_computer_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']",This is meant to be a low risk RBA anomaly analytic or to be used for hunting. Enable this with a low risk score and let it generate risk in the risk index.,['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],['https://learn.microsoft.com/en-us/powershell/module/cimcmdlets/get-ciminstance?view=powershell-7.3'],"['Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/d8ddfa9b-b724-4df9-9dbe-f34cc0936714/,Windows Export Certificate,"['T1552.004', 'T1552', 'T1649']","The following analytic identifies when a certificate is exported from the Windows Certificate Store. This analytic utilizes the Certificates Lifecycle log channel event ID 1007. EventID 1007 is focused on the Export of a certificate from the local certificate store. In addition, review the ProcessName field as it will help to determine automation/Admin or adversary extracting the certificate. Depending on the organization, the certificate may be used for authentication to the VPN or private resources.",['Anomaly'],"February 11, 2023","`certificateservices_lifecycle` EventCode=1007 
| xmlkv UserData_Xml 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer, SubjectName, UserData_Xml 
| rename Computer as dest 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_export_certificate_filter`","['certificateservices_lifecycle', 'security_content_ctime']","['_time', 'dest', 'SubjectName', 'UserData_Xml']",False positives may be generated based on an automated process or service that exports certificates on the regular. Review is required before setting to alert. Monitor for abnormal processes performing an export.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],['https://atomicredteam.io/defense-evasion/T1553.004/#atomic-test-4---install-root-ca-on-windows'],"['Credential Access', 'Credential Access', 'Credential Access', 'Private Keys', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/d92f2d95-05fb-48a7-910f-4d3d61ab8655/,Windows Administrative Shares Accessed On Multiple Hosts,['T1135'],"The following analytic leverages Event IDs 5140 or 5145 to identify a source computer accessing windows administrative shares (C$, Admin$ and IPC$ ) across a large number remote endpoints. Specifically, the logic will trigger when a source endpoint accesses administrative shares across 30 or more target computers within a 5 minute timespan. This behavior could represent an adversary who is enumerating network shares across an Active Directory environment in the search for sensitive files, a common technique leveraged by red teamers and threat actors. As environments differ across organizations, security teams should customize the thresholds of this detection as needed.",['TTP'],"March 23, 2023","`wineventlog_security` EventCode=5140 OR EventCode=5145 (ShareName=""\\\\*\\ADMIN$"" OR ShareName=""\\\\*\\IPC$"" OR ShareName=""\\\\*\\C$"") 
| bucket span=5m _time 
| stats dc(Computer) AS unique_targets values(Computer) as host_targets values(ShareName) as shares by _time, IpAddress, SubjectUserName, EventCode 
| where unique_targets > 30 
| `windows_administrative_shares_accessed_on_multiple_hosts_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ShareName', 'Computer', 'IpAddress', 'SubjectUserName']","An single endpoint accessing windows administrative shares across a large number of endpoints is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, administration systems and missconfigured systems.","['Active Directory Privilege Escalation', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/active_directory_lateral_movement']","['https://attack.mitre.org/techniques/T1135/', 'https://en.wikipedia.org/wiki/Administrative_share', 'https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5140', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-5145']","['Discovery', 'Network Share Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/da63bc76-61ae-11eb-ae93-0242ac130002/,Ntdsutil Export NTDS,"['T1003.003', 'T1003']","Monitor for signs that Ntdsutil is being used to Extract Active Directory database - NTDS.dit, typically used for offline password cracking. It may be used in normal circumstances with no command line arguments or shorthand variations of more common arguments. Ntdsutil.exe is typically seen run on a Windows Server. Typical command used to dump ntds.dit 
ntdsutil ""ac i ntds"" ""ifm"" ""create full C:\Temp"" q q 
This technique uses ""Install from Media"" (IFM), which will extract a copy of the Active Directory database. A successful export of the Active Directory database will yield a file modification named ntds.dit to the destination.",['TTP'],"January 28, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=ntdsutil.exe Processes.process=*ntds* Processes.process=*create*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `ntdsutil_export_ntds_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']","Highly possible Server Administrators will troubleshoot with ntdsutil.exe, generating false positives.","['Credential Dumping', 'HAFNIUM Group', 'Living Off The Land', 'Prestige Ransomware', 'Volt Typhoon', 'Rhysida Ransomware']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.003/T1003.003.md#atomic-test-3---dump-active-directory-database-with-ntdsutil', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753343(v=ws.11)', 'https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://strontic.github.io/xcyclopedia/library/vss_ps.dll-97B15BDAE9777F454C9A6BA25E938DB3.html', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dac279bc-9202-11eb-b7fb-acde48001122/,Disabling Task Manager,"['T1562.001', 'T1562']","This search is to identifies modification of registry to disable the task manager of windows operating system. this event or technique are commonly seen in malware such as RAT, Trojan, TrojanSpy or worm to prevent the user to terminate their process.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\DisableTaskMgr"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_task_manager_filter`","['security_content_summariesonly', 'security_content_ctime']","['Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'NjRAT']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/njrat']","['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry', 'https://blog.talosintelligence.com/2020/05/threat-roundup-0424-0501.html']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dad9ddec-a72a-47be-87b6-a0f7ba98ed6e/,Windows OS Credential Dumping with Ntdsutil Export NTDS,"['T1003.003', 'T1003']","Monitor for signs that Ntdsutil is being used to Extract Active Directory database - NTDS.dit, typically used for offline password cracking. It may be used in normal circumstances with no command line arguments or shorthand variations of more common arguments. Ntdsutil.exe is typically seen run on a Windows Server. Typical command used to dump ntds.dit 
ntdsutil ""ac i ntds"" ""ifm"" ""create full C:\Temp"" q q 
This technique uses ""Install from Media"" (IFM), which will extract a copy of the Active Directory database. A successful export of the Active Directory database will yield a file modification named ntds.dit to the destination.",['TTP'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""ntdsutil.exe"" AND (process_cmd_line LIKE ""%create%"" AND process_cmd_line LIKE ""%ntds%"") --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Highly possible Server Administrators will troubleshoot with ntdsutil.exe, generating false positives.","['Credential Dumping', 'HAFNIUM Group', 'Living Off The Land', 'Volt Typhoon']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/volt_typhoon']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.003/T1003.003.md#atomic-test-3---dump-active-directory-database-with-ntdsutil', 'https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc753343(v=ws.11)', 'https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://strontic.github.io/xcyclopedia/library/vss_ps.dll-97B15BDAE9777F454C9A6BA25E938DB3.html', 'https://www.microsoft.com/en-us/security/blog/2023/05/24/volt-typhoon-targets-us-critical-infrastructure-with-living-off-the-land-techniques/']","['Credential Access', 'Credential Access', 'NTDS', 'OS Credential Dumping', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/daed6823-b51c-4843-a6ad-169708f1323e/,Windows Service Deletion In Registry,['T1489'],The following analytic identifies a service being deleted from the Windows Registry under CurrentControlSet\Services. Adversaries may delete a service as part of defense evasion.,['Anomaly'],"August 24, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\SYSTEM\\CurrentControlSet\\Services*"" AND (Registry.action = deleted OR (Registry.registry_value_name = DeleteFlag AND Registry.registry_value_data = 0x00000001 AND Registry.action=modified)) by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_value_name Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_service_deletion_in_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid']","This event can be seen when administrator delete a service or uninstall/reinstall a software that creates service entry, but it is still recommended to check this alert with high priority.","['Brute Ratel C4', 'PlugX']","['https://research.splunk.com/stories/brute_ratel_c4', 'https://research.splunk.com/stories/plugx']",['https://unit42.paloaltonetworks.com/brute-ratel-c4-tool/'],"['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/db02d6b4-5d5b-4c33-8d8f-f0577516a8c7/,Windows Credentials from Password Stores Query,['T1555'],"The following analytic identifies a process execution of Windows OS cmdkey.exe tool. This tool is being abused or used by several post exploitation tool such as winpeas that being used by ransomware prestige to list stored user names, passwords or credentials in the targeted Windows OS host. This information can be used by the attacker to gain privilege escalation and persistence in the targeted hosts for further attacks.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""cmdkey.exe"" OR Processes.original_file_name = ""cmdkey.exe"" AND Processes.process = ""*/list*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_credentials_from_password_stores_query_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",network administrator can use this tool for auditing process.,"['Windows Post-Exploitation', 'Prestige Ransomware', 'DarkGate Malware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/darkgate_malware']","['https://ss64.com/nt/cmdkey.html', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Credential Access', 'Credentials from Password Stores', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/db596056-3019-11ec-a9ff-acde48001122/,Disable Schedule Task,"['T1562.001', 'T1562']",This analytic is to detect a suspicious commandline to disable existing schedule task. This technique is used by adversaries or commodity malware like IcedID to disable security application (AV products) in the targetted host to evade detections. This TTP is a good pivot to check further why and what other process run before and after this detection. check which process execute the commandline and what task is disabled. parent child process is quite valuable in this scenario too.,['TTP'],"October 18, 2021","| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe Processes.process=*/change*  Processes.process=*/disable* by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.parent_process Processes.dest 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_schedule_task_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.process_name', 'Processes.parent_process_name', 'Processes.dest']",admin may disable problematic schedule task,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dbc30554-d27e-11eb-9e5e-acde48001122/,Resize Shadowstorage Volume,['T1489'],The following analytic identifies the resizing of shadowstorage using vssadmin.exe to avoid the shadow volumes being made again. This technique is typically found used by adversaries during a ransomware event and a precursor to deleting the shadowstorage.,['TTP'],"November 30, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%shadowstorage%"" AND process_cmd_line LIKE ""%resize%"" AND process_cmd_line LIKE ""%maxsize%"" AND process_file_name=""vssadmin.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators may resize the shadowstorage for valid purposes. Filter as needed.,"['Clop Ransomware', 'Ransomware']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/ransomware']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Impact', 'Service Stop', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/dbdf52ad-d6a1-4b68-975f-0a10939d8e38/,Windows Change Default File Association For No File Ext,"['T1546.001', 'T1546']","This analytic is developed to detect suspicious process commandline to change or set the default file association of a file without file extension with notepad.exe. This technique was seen in some APT and ransomware Prestige where it set/modify the default process to run file association, like .txt to notepad.exe.",['TTP'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_reg` AND Processes.process=""* add *"" AND Processes.process=""* HKCR\\*"" AND Processes.process=""*\\shell\\open\\command*"" AND  Processes.process= *Notepad.exe* by  Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| rex field=process ""Notepad\.exe (?<file_name_association>.*$)"" 
| rex field=file_name_association ""\.(?<extension>[^\.]*$)"" 
| where isnull(extension) and isnotnull(file_name_association) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_change_default_file_association_for_no_file_ext_filter`","['security_content_summariesonly', 'process_reg', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,['Prestige Ransomware'],['https://research.splunk.com/stories/prestige_ransomware'],['https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/'],"['Change Default File Association', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dc1457d0-1d9b-422e-b5a7-db46c184d9aa/,Network Share Discovery Via Dir Command,['T1135'],"The following analytic identifies object access on Windows administrative SMB shares (Admin$, IPC$, C$). This represents suspicious behavior as its commonly used by tools like PsExec/PaExec and others to stage service binaries before creating and starting a Windows service on remote endpoints. Red Teams and adversaries alike may abuse administrative shares for lateral movement and remote code execution. The IcedID malware family also implements this behavior to try to infect other machines in the infected network.",['Hunting'],"May 23, 2023","`wineventlog_security` EventCode=5140 ShareName IN(""\\\\*\\ADMIN$"",""\\\\*\\C$"",""*\\\\*\\IPC$"") AccessMask= 0x1 
| stats min(_time) as firstTime max(_time) as lastTime count by ShareName IpAddress ObjectType SubjectUserName SubjectDomainName IpPort AccessMask Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_share_discovery_via_dir_command_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'ShareName', 'IpAddress', 'ObjectType', 'SubjectUserName', 'SubjectDomainName', 'IpPort', 'AccessMask', 'Computer']","System Administrators may use looks like net.exe or ""dir commandline"" for troubleshooting or administrations tasks. However, this will typically come only from certain users and certain systems that can be added to an allow list.",['IcedID'],['https://research.splunk.com/stories/icedid'],['https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/'],"['Discovery', 'Network Share Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dc2f58bc-8cd2-4e51-962a-694b963acde0/,Windows AD Privileged Object Access Activity,"['T1087', 'T1087.002']",Windows Active Directory contains numerous objects that grant elevated access to the domain they reside in. These objects should be rarely accessed by normal users or processes. Access attempts to one or more of these objects may be evidence of attacker enumeration of Active Directory.,['TTP'],"June 1, 2023","`wineventlog_security` EventCode=4662 ObjectName IN ( ""CN=Account Operators,*"", ""CN=Administrators,*"", ""CN=Backup Operators,*"", ""CN=Cert Publishers,*"", ""CN=Certificate Service DCOM Access,*"", ""CN=Domain Admins,*"", ""CN=Domain Controllers,*"", ""CN=Enterprise Admins,*"", ""CN=Enterprise Read-only Domain Controllers,*"", ""CN=Group Policy Creator Owners,*"", ""CN=Incoming Forest Trust Builders,*"", ""CN=Microsoft Exchange Servers,*"", ""CN=Network Configuration Operators,*"", ""CN=Power Users,*"", ""CN=Print Operators,*"", ""CN=Read-only Domain Controllers,*"", ""CN=Replicators,*"", ""CN=Schema Admins,*"", ""CN=Server Operators,*"", ""CN=Exchange Trusted Subsystem,*"", ""CN=Exchange Windows Permission,*"", ""CN=Organization Management,*"") 
| rex field=ObjectName ""CN\=(?<object_name>[^,]+)"" 
| stats values(Computer) as dest, values(object_name) as object_name, dc(ObjectName) as object_count, min(_time) as firstTime, max(_time) as lastTime, count by SubjectUserName 
| rename SubjectUserName as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_ad_privileged_object_access_activity_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'ObjectName', 'EventCode', 'Computer', 'SubjectUserName']",Service accounts or applications that routinely query Active Directory for information.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://medium.com/securonix-tech-blog/detecting-ldap-enumeration-and-bloodhound-s-sharphound-collector-using-active-directory-decoys-dfc840f2f644', 'https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4662', 'https://attack.mitre.org/tactics/TA0007/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dc3f2af7-ca69-47ce-a122-9f9787e19417/,Windows PowerShell Disabled Kerberos Pre-Authentication Discovery With PowerView,"['T1558', 'T1558.004']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainUser commandlet with specific parameters. Get-DomainUser is part of PowerView, a PowerShell tool used to perform enumeration on Windows Active Directory networks. As the name suggests, Get-DomainUser is used to identify domain users and combining it with -PreauthNotRequired allows adversaries to discover domain accounts with Kerberos Pre Authentication disabled.\ Red Teams and adversaries alike use may leverage PowerView to enumerate these accounts and attempt to crack their passwords offline.",['TTP'],"November 14, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval device_hostname = device.hostname 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_uid = process.uid 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_uid = actor_user.uid 
| where match(process_cmd_line, /(?i)preauthnotrequired/)=true AND match(process_cmd_line, /(?i)get-domainuser/)=true --finding_report--","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']",Administrators or power users may use PowerView for troubleshooting,['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://attack.mitre.org/techniques/T1558/004/', 'https://m0chan.github.io/2019/07/31/How-To-Attack-Kerberos-101.html', 'https://stealthbits.com/blog/cracking-active-directory-passwords-with-as-rep-roasting/']","['AS-REP Roasting', 'Credential Access', 'Credential Access', 'Splunk Behavioral Analytics', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/dc64d064-d346-11eb-8588-acde48001122/,Execute Javascript With Jscript COM CLSID,"['T1059', 'T1059.005']",This analytic will identify suspicious process of cscript.exe where it tries to execute javascript using jscript.encode CLSID (COM OBJ). This technique was seen in ransomware (reddot ransomware) where it execute javascript with this com object with combination of amsi disabling technique.,['TTP'],"June 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""cscript.exe"" Processes.process=""*-e:{F414C262-6AC0-11CF-B6D1-00AA00BBBB58}*"" by Processes.parent_process_name Processes.process_name Processes.process Processes.parent_process Processes.process_id Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `execute_javascript_with_jscript_com_clsid_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.parent_process', 'Processes.process_id', 'Processes.dest', 'Processes.user']",unknown,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Visual Basic']",['Endpoint']
https://research.splunk.com/endpoint/dc65678c-301f-11ec-8e30-acde48001122/,Disable Defender Enhanced Notification,"['T1562.001', 'T1562']","This analytic is intended to detect a suspicious modification of registry to disable windows defender features. This technique attempts to bypass or evade detection from Windows Defender AV, specifically the Enhanced Notification feature where a user or admin would receive alerts.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path = ""*Microsoft\\Windows Defender\\Reporting*"" Registry.registry_value_name = DisableEnhancedNotifications Registry.registry_value_data = 0x00000001) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_defender_antivirus_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",user may choose to disable windows defender AV,"['Azorult', 'CISA AA23-347A', 'IcedID', 'Windows Registry Abuse']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://thedfirreport.com/2021/10/18/icedid-to-xinglocker-ransomware-in-24-hours/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dc7a8004-0f18-11ec-8c54-acde48001122/,Bcdedit Command Back To Normal Mode Boot,['T1490'],This search is to detect a suspicious bcdedit commandline to configure the host from safe mode back to normal boot configuration. This technique was seen in blackMatter ransomware where it force the compromised host to boot in safe mode to continue its encryption and bring back to normal boot using bcdedit deletevalue command. This TTP can be a good alert for host that booted from safe mode forcefully since it need to modify the boot configuration to bring it back to normal.,['TTP'],"September 6, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = bcdedit.exe Processes.process=""*/deletevalue*"" Processes.process=""*{current}*""  Processes.process=""*safeboot*"" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user 
|`drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `bcdedit_command_back_to_normal_mode_boot_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.dest', 'Processes.user']",unknown,['BlackMatter Ransomware'],['https://research.splunk.com/stories/blackmatter_ransomware'],['https://news.sophos.com/en-us/2021/08/09/blackmatter-ransomware-emerges-from-the-shadow-of-darkside/'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dcc89bde-5f24-11ec-87ca-acde48001122/,Linux Possible Cronjob Modification With Editor,"['T1053.003', 'T1053']","The following analytic detects potential unauthorized modifications to Linux cronjobs using text editors like ""nano"", ""vi"" or ""vim"". It identifies this behavior by tracking command-line executions that interact with paths related to cronjob configuration, a common Linux scheduling utility. Cronjob files may be manipulated by attackers for privilege escalation or persistent access, making such changes critical to monitor.\ The identified behavior is significant for a Security Operations Center (SOC) as it could indicate an ongoing attempt at establishing persistent access or privilege escalation, leading to data breaches, system compromise, or other malicious activities.
In case of a true positive, the impact could be severe. An attacker with escalated privileges or persistent access could carry out damaging actions, such as data theft, sabotage, or further network penetration.
To implement this analytic, ensure ingestion of logs tracking process name, parent process, and command-line executions from your endpoints. Utilize the Add-on for Linux Sysmon from Splunkbase if you're using Sysmon.
Known false positives include legitimate administrative tasks, as these commands may also be used for benign purposes. Careful tuning and filtering based on known benign activity in your environment can minimize these instances.",['Hunting'],"December 17, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name IN(""nano"",""vim.basic"") OR Processes.process IN (""*nano *"", ""*vi *"", ""*vim *"")) AND Processes.process IN(""*/etc/cron*"", ""*/var/spool/cron/*"", ""*/etc/anacrontab*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_possible_cronjob_modification_with_editor_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']",['https://attack.mitre.org/techniques/T1053/003/'],"['Cron', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dcf74b22-7933-11ec-857c-acde48001122/,Windows InstallUtil in Non Standard Path,"['T1036', 'T1036.003', 'T1218', 'T1218.004']",The following analytic identifies the Windows binary InstallUtil.exe running from a non-standard location. The analytic utilizes a macro for InstallUtil and identifies both the process_name and original_file_name.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where `process_installutil` NOT (Processes.process_path IN (""*\\Windows\\ADWS\\*"",""*\\Windows\\SysWOW64*"", ""*\\Windows\\system32*"", ""*\\Windows\\NetworkController\\*"", ""*\\Windows\\SystemApps\\*"", ""*\\WinSxS\\*"", ""*\\Windows\\Microsoft.NET\\*"")) by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_id Processes.process_hash 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_installutil_in_non_standard_path_filter`","['security_content_summariesonly', 'process_installutil', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Masquerading - Rename System Utilities', 'Ransomware', 'Unusual Processes', 'Signed Binary Proxy Execution InstallUtil', 'Living Off The Land', 'Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/dcfd6b40-42f9-469d-a433-2e53f7486664/,Detect Prohibited Applications Spawning cmd exe,"['T1059', 'T1059.003']",This search looks for executions of cmd.exe spawned by a process that is often abused by attackers and that does not typically launch cmd.exe.,['Hunting'],"November 10, 2020","| tstats `security_content_summariesonly` count values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` by Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.dest Processes.user
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
|search [`prohibited_apps_launching_cmd`] 
| `detect_prohibited_applications_spawning_cmd_exe_filter`","['security_content_summariesonly', 'process_cmd', 'prohibited_apps_launching_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","There are circumstances where an application may legitimately execute and interact with the Windows command-line interface. Investigate and modify the lookup file, as appropriate.","['Suspicious Command-Line Executions', 'Suspicious MSHTA Activity', 'Suspicious Zoom Child Processes', 'NOBELIUM Group']","['https://research.splunk.com/stories/suspicious_command-line_executions', 'https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/suspicious_zoom_child_processes', 'https://research.splunk.com/stories/nobelium_group']",N/A,"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell']",['Endpoint']
https://research.splunk.com/endpoint/dd04b29a-beed-11eb-87bc-acde48001122/,Detect SharpHound Usage,"['T1087.002', 'T1069.001', 'T1482', 'T1087.001', 'T1087', 'T1069.002', 'T1069']","The following analytic identifies SharpHound binary usage by using the original filena,e. In addition to renaming the PE, other coverage is available to detect command-line arguments. This particular analytic looks for the original_file_name of SharpHound.exe and the process name. It is possible older instances of SharpHound.exe have different original filenames. Dependent upon the operator, the code may be re-compiled and the attributes removed or changed to anything else. During triage, review the metadata of the binary in question. Review parallel processes for suspicious behavior. Identify the source of this binary.",['TTP'],"May 27, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=sharphound.exe OR Processes.original_file_name=SharpHound.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_sharphound_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives should be limited as this is specific to a file attribute not used by anything else. Filter as needed.,"['Discovery Techniques', 'Ransomware']","['https://research.splunk.com/stories/discovery_techniques', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/software/S0521/', 'https://thedfirreport.com/?s=bloodhound', 'https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors', 'https://github.com/BloodHoundAD/SharpHound3', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1059.001/T1059.001.md#atomic-test-2---run-bloodhound-from-local-disk']","['Account Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Domain Groups', 'Domain Trust Discovery', 'Endpoint', 'Local Account', 'Local Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/dd83407e-439f-11ec-ab8e-acde48001122/,Network Discovery Using Route Windows App,"['T1016', 'T1016.001']",This analytic look for a spawned process of route.exe windows application. Adversaries and red teams alike abuse this application the recon or do a network discovery on a target host. but one possible false positive might be an automated tool used by a system administator or a powershell script in amazon ec2 config services.,['Hunting'],"February 14, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_route` by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `network_discovery_using_route_windows_app_filter`","['security_content_summariesonly', 'process_route', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated host discovery application that may generate false positives or an amazon ec2 script that uses this application. Filter as needed.,"['Active Directory Discovery', 'Qakbot', 'CISA AA22-277A', 'Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']",['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/'],"['Discovery', 'Discovery', 'Endpoint', 'Internet Connection Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery']",['Endpoint']
https://research.splunk.com/endpoint/dda126d7-1d99-4f0b-b72a-4c14031f9398/,Windows Access Token Manipulation Winlogon Duplicate Token Handle,"['T1134.001', 'T1134']",The following analytic identifies a process requesting access to winlogon.exe attempting to duplicate its handle. This technique was seen in several adversaries to gain privileges for their process. Winlogon.exe is the common targeted process of this technique because it contains high privileges and security tokens.,['Hunting'],"August 24, 2022","`sysmon` EventCode=10 TargetImage IN(""*\\system32\\winlogon.exe*"", ""*\\SysWOW64\\winlogon.exe*"") GrantedAccess = 0x1040 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage SourceProcessGUID TargetProcessGUID SourceProcessId TargetProcessId GrantedAccess CallTrace dest user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_access_token_manipulation_winlogon_duplicate_token_handle_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'SourceProcessGUID', 'TargetProcessGUID', 'SourceProcessId', 'TargetProcessId', 'GrantedAccess', 'CallTrace', 'dest', 'user_id']","It is possible legitimate applications will request access to winlogon, filter as needed.",['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://docs.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-duplicatehandle', 'https://attack.mitre.org/techniques/T1134/001/']","['Access Token Manipulation', 'Defense Evasion', 'Defense Evasion', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Token Impersonation/Theft']",['Endpoint']
https://research.splunk.com/endpoint/ddf82fcb-e9ee-40e3-8712-a50b5bf323fc/,Windows PowerShell ScheduleTask,"['T1053.005', 'T1059.001', 'T1059']","The following analytic detects potential malicious activities related to PowerShell's task scheduling cmdlets. It looks for anomalies in PowerShell logs, specifically EventCode 4104, associated with script block logging. The analytic flags unusual or suspicious use patterns of key task-related cmdlets such as 'New-ScheduledTask', 'Set-ScheduledTask', and others, which are often used by attackers for persistence and remote execution of malicious code. If a true positive is found, it suggests an possible attacker is attempting to persist within the environment or potentially deliver additional malicious payloads, leading to data theft, ransomware, or other damaging outcomes. To implement this analytic, PowerShell Script Block Logging needs to be enabled on some or all endpoints. Analysts should be aware of benign administrative tasks that can trigger alerts and tune the analytic accordingly to reduce false positives. Upon triage, review the PowerShell logs for any unusual or unexpected cmdlet usage, IP addresses, user accounts, or timestamps. If these factors align with known malicious behavior patterns, immediate mitigation steps, such as isolation of the affected systems, user account changes, and relevant threat hunting activities, should be initiated. This proactive analysis significantly enhances an organization's capacity to swiftly respond to, and potentially prevent, the execution of advanced persistent threats in their network.",['Anomaly'],"June 12, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*New-ScheduledTask*"", ""*New-ScheduledTaskAction*"", ""*New-ScheduledTaskSettingsSet*"", ""*New-ScheduledTaskTrigger*"", ""*Register-ClusteredScheduledTask*"", ""*Register-ScheduledTask*"", ""*Set-ClusteredScheduledTask*"", ""*Set-ScheduledTask*"", ""*Start-ScheduledTask*"", ""*Enable-ScheduledTask*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_scheduletask_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']","Benign administrative tasks can also trigger alerts, necessitating a firm understanding of the typical system behavior and precise tuning of the analytic to reduce false positives.",['Scheduled Tasks'],['https://research.splunk.com/stories/scheduled_tasks'],"['https://learn.microsoft.com/en-us/powershell/module/scheduledtasks/?view=windowsserver2022-ps', 'https://thedfirreport.com/2023/06/12/a-truly-graceful-wipe-out/']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'Execution', 'Persistence', 'PowerShell', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/de62b809-a04d-46b5-9a15-8298d330f0c8/,Linux Stdout Redirection To Dev Null File,"['T1562.004', 'T1562']",This analytic looks for suspicious commandline that redirect the stdout or possible stderror to dev/null file. This technique was seen in cyclopsblink malware where it redirect the possible output or error while modify the iptables firewall setting of the compromised machine to hide its action from the user. This Anomaly detection is a good pivot to look further why process or user use this un common approach.,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process = ""*&amp;&gt;/dev/null*"" by  Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_stdout_redirection_to_dev_null_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,"['CyclopsBLink', 'Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/cyclopsblink', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://www.ncsc.gov.uk/files/Cyclops-Blink-Malware-Analysis-Report.pdf', 'https://www.trendmicro.com/en_us/research/22/c/cyclops-blink-sets-sights-on-asus-routers--.html']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify System Firewall', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/de7fcadc-04f3-11ec-a241-acde48001122/,AdsiSearcher Account Discovery,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the [Adsisearcher] type accelerator being used to query Active Directory for domain groups. Red Teams and adversaries may leverage [Adsisearcher] to enumerate domain users for situational awareness and Active Directory Discovery.,['TTP'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*[adsisearcher]*"" ScriptBlockText = ""*objectcategory=user*"" ScriptBlockText = ""*.findAll()*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Computer ScriptBlockText UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `adsisearcher_account_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may use this command for troubleshooting.,"['Industroyer2', 'Active Directory Discovery', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://attack.mitre.org/techniques/T1087/002/', 'https://www.blackhillsinfosec.com/red-blue-purple/', 'https://devblogs.microsoft.com/scripting/use-the-powershell-adsisearcher-type-accelerator-to-search-active-directory/']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/de81bc46-9213-11eb-adc9-acde48001122/,Disabling NoRun Windows App,"['T1562.001', 'T1562', 'T1112']",This search is to identify modification of registry to disable run application in window start menu. this application is known to be a helpful shortcut to windows OS user to run known application and also to execute some reg or batch script. This technique is used malware to make cleaning of its infection more harder by preventing known application run easily through run shortcut.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\NoRun"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_norun_windows_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry', 'https://blog.malwarebytes.com/detections/pum-optional-norun/']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/df275a44-4527-443b-b884-7600e066e3eb/,GetWmiObject Ds Group with PowerShell,"['T1069', 'T1069.002']","This analytic looks for the execution of powershell.exe with command-line arguments utilized to query for domain groups. The Get-WmiObject commandlet combined with the -class ds_group parameter can be used to return the full list of groups in a Windows domain. Red Teams and adversaries alike may leverage WMI in this case, using PowerShell, to enumerate domain groups for situational awareness and Active Directory Discovery.",['TTP'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-WmiObject* AND Processes.process=""*namespace root\\directory\\ldap*"" AND Processes.process=""*class ds_group*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_ds_group_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-wmiobject?view=powershell-5.1']","['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/df76a8d1-92e1-4ec9-b8f7-695b5838703e/,Windows System Binary Proxy Execution MSIExec Unregister DLL,['T1218.007'],"The following analytic identifies the usage of msiexec.exe using the /z switch parameter, which grants the ability for msiexec to unload DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",['TTP'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%-z %"" OR process_cmd_line LIKE ""%/z %"") AND process_file_name=""msiexec.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives may be present, filter by destination or parent process as needed.",['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Msiexec', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/dfc18a5a-946e-44ee-a373-c0f60d06e676/,Windows SQL Spawning CertUtil,['T1105'],"The following analytic detects the use of certutil to download software, a behavior exhibited by the threat actor Flax Typhoon. This actor deploys a VPN connection by downloading an executable file for SoftEther VPN from their network infrastructure using one of several LOLBins, including certutil. The actor then uses the Service Control Manager (SCM) to create a Windows service that launches the VPN connection automatically when the system starts. This behavior allows the actor to monitor the availability of the compromised system and establish an RDP connection. This analytic identifies this behavior by monitoring for the use of certutil in conjunction with the downloading of software. This behavior is worth identifying for a SOC as it indicates a potential compromise of the system and the establishment of a persistent threat. If a true positive is found, it suggests an attacker has gained access to the environment and is attempting to maintain that access, potentially leading to further malicious activities such as data theft or ransomware attacks. Be aware of potential false positives - legitimate uses of certutil in your environment may cause benign activities to be flagged. Upon triage, review the command executed and look for concurrent processes to identify the attack source. This approach helps analysts detect potential threats earlier and mitigate the risks.",['TTP'],"August 25, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""sqlservr.exe"", ""sqlagent.exe"", ""sqlps.exe"", ""launchpad.exe"", ""sqldumper.exe"") `process_certutil` (Processes.process=*urlcache* Processes.process=*split*) OR Processes.process=*urlcache* by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.original_file_name Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_sql_spawning_certutil_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_certutil']","['Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.original_file_name', 'Processes.parent_process_id']","The occurrence of false positives should be minimal, given that the SQL agent does not typically download software using CertUtil.",['Flax Typhoon'],['https://research.splunk.com/stories/flax_typhoon'],['https://www.microsoft.com/en-us/security/blog/2023/08/24/flax-typhoon-using-legitimate-software-to-quietly-access-taiwanese-organizations/'],"['Command And Control', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e02af35c-1de5-4afe-b4be-f45aba57272b/,GetNetTcpconnection with PowerShell,['T1049'],This analytic looks for the execution of powershell.exe with command-line utilized to get a listing of network connections on a compromised system. The Get-NetTcpConnection commandlet lists the current TCP connections. Red Teams and adversaries alike may use this commandlet for situational awareness and Active Directory Discovery.,['Hunting'],"August 25, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-NetTcpConnection*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getnettcpconnection_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1049/', 'https://docs.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection?view=windowsserver2019-ps']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Connections Discovery']",['Endpoint']
https://research.splunk.com/endpoint/e0428212-61b7-11ec-88a3-acde48001122/,Linux Service Started Or Enabled,"['T1053.006', 'T1053']","The following analytic detects the creation or enabling of services in Linux platforms, specifically using the systemctl or service tool application. This behavior is worth identifying as adversaries may create or modify services to execute malicious payloads as part of persistence. Legitimate services created by administrators for automation purposes may also trigger this analytic, so it is important to update the filter macros to remove false positives. If a true positive is found, it suggests an possible attacker is attempting to persist within the environment or deliver additional malicious payloads, leading to data theft, ransomware, or other damaging outcomes. To implement this analytic, ensure you are ingesting logs with the process name, parent process, and command-line executions from your endpoints.",['Anomaly'],"January 24, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name IN (""systemctl"", ""service"") OR Processes.process IN (""*systemctl *"", ""*service *"")) Processes.process IN (""* start *"", ""* enable *"") AND NOT (Processes.os=""Microsoft Windows"" OR Processes.vendor_product=""Microsoft Windows"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_service_started_or_enabled_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this commandline for automation purposes. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques', 'Linux Living Off The Land', 'Scheduled Tasks']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques', 'https://research.splunk.com/stories/linux_living_off_the_land', 'https://research.splunk.com/stories/scheduled_tasks']",['https://attack.mitre.org/techniques/T1543/003/'],"['Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Scheduled Task/Job', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Systemd Timers']",['Endpoint']
https://research.splunk.com/endpoint/e08620cb-9488-4052-832d-97bcc0afd414/,Windows Admin Permission Discovery,['T1069.001'],"This analytic is developed to identify suspicious file creation in the root drive (C:). This tactic was observed in NjRAT as a means to ascertain whether its malware instance running on the compromised host possesses administrative privileges. The methodology involves an attempt to create a 'win.dat' file in the C:\ directory. If this file is successfully created, it serves as an indicator that the process indeed holds administrative privileges. This anomaly detection mechanism serves as a valuable pivot point for detecting NjRAT and other malware strains employing similar techniques to assess the privileges of their running malware instances, without using token privilege API calls or PowerShell commandlets.",['Anomaly'],"September 19, 2023","|tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.exe"", ""*.dll"", ""*.sys"", ""*.com"", ""*.vbs"", ""*.vbe"", ""*.js"", ""*.bat"", ""*.cmd"", ""*.pif"", ""*.lnk"", ""*.dat"") by Filesystem.dest Filesystem.file_create_time Filesystem.process_id Filesystem.process_guid Filesystem.file_name Filesystem.file_path Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| eval dropped_file_path = split(file_path, ""\\"") 
| eval dropped_file_path_split_count = mvcount(dropped_file_path) 
| eval root_drive = mvindex(dropped_file_path,0) 
| where LIKE(root_drive, ""C:"") AND dropped_file_path_split_count = 2 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_admin_permission_discovery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.file_path', 'Filesystem.file_create_time', 'Filesystem.process_id', 'Filesystem.file_name', 'Filesystem.user', 'Filesystem.dest', 'Filesystem.process_guid', 'Filesystem.file_path']",False positives may occur if there are legitimate accounts with the privilege to drop files in the root of the C drive. It's recommended to verify the legitimacy of such actions and the accounts involved.,['NjRAT'],['https://research.splunk.com/stories/njrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.njrat'],"['Discovery', 'Endpoint', 'Local Groups', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e0940505-0b73-4719-84e6-cb94c44a5245/,Linux Indicator Removal Clear Cache,['T1070'],This analytic looks for processes that clear or free page cache in Linux system host. This technique was seen in Awfulshred malware wiper that tries to clear the cache using kernel system request drop_caches while wiping all files in the targeted host. This TTP detection can be a good indicator of user or process tries to clear page cache to delete tracks or might be a wiper like Awfulshred.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""dash"", ""sudo"", ""bash"")  AND Processes.process  IN(""* echo 3 &gt; *"", ""* echo 2 &gt; *"",""* echo 1 &gt; *"") AND Processes.process = ""*/proc/sys/vm/drop_caches"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_indicator_removal_clear_cache_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/', 'https://cert.gov.ua/article/3718487']","['Defense Evasion', 'Endpoint', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e09c598e-8dd0-4e73-b740-4b96b689199e/,Windows Modify Registry Do Not Connect To Win Update,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will disable Windos update functionality, and may cause connection to public services such as the Windows Store to stop working. This policy applies only when this PC is configured to connect to an intranet update service using the ""Specify intranet Microsoft update service location"" policy.",['Anomaly'],"April 21, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\DoNotConnectToWindowsUpdateInternetLocations"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_do_not_connect_to_win_update_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",administrators may enable or disable this feature that may cause some false positive.,['RedLine Stealer'],['https://research.splunk.com/stories/redline_stealer'],"['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499', 'https://admx.help/?Category=Windows_10_2016&Policy=Microsoft.Policies.WindowsUpdate::DoNotConnectToWindowsUpdateInternetLocations']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e0b6ca60-9e29-4450-b51a-bba0abae2313/,Windows Impair Defense Deny Security Software With Applocker,"['T1562.001', 'T1562']",The following analytic identifies a modification in the Windows registry by the Applocker utility that contains details or registry data values related to denying the execution of several security products. This technique was seen in Azorult malware where it drops an xml Applocker policy that will deny several AV products and then loaded by using PowerShell Applocker commandlet.,['TTP'],"June 24, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Group Policy Objects\\*"" AND Registry.registry_path= ""*}Machine\\Software\\Policies\\Microsoft\\Windows\\SrpV2*"") OR Registry.registry_path=""*\\Software\\Policies\\Microsoft\\Windows\\SrpV2*"" AND Registry.registry_value_data = ""*Action\=\""Deny\""*"" AND Registry.registry_value_data IN(""*O=SYMANTEC*"",""*O=MCAFEE*"",""*O=KASPERSKY*"",""*O=BLEEPING COMPUTER*"", ""*O=PANDA SECURITY*"",""*O=SYSTWEAK SOFTWARE*"", ""*O=TREND MICRO*"", ""*O=AVAST*"", ""*O=GRIDINSOFT*"", ""*O=MICROSOFT*"", ""*O=NANO SECURITY*"", ""*O=SUPERANTISPYWARE.COM*"", ""*O=DOCTOR WEB*"", ""*O=MALWAREBYTES*"", ""*O=ESET*"", ""*O=AVIRA*"", ""*O=WEBROOT*"") by  Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.registry_key_name Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_deny_security_software_with_applocker_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on organization use of Applocker. Filter as needed.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://www.microsoftpressstore.com/articles/article.aspx?p=2228450&seqNum=11']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e0eea4fa-4274-11ec-882b-3e22fbd008af/,Windows Service Creation on Remote Endpoint,"['T1543', 'T1543.003']",This analytic looks for the execution of sc.exe with command-line arguments utilized to create a Windows Service on a remote endpoint. Red Teams and adversaries alike may abuse the Service Control Manager for lateral movement and remote code execution.,['TTP'],"November 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=sc.exe OR Processes.original_file_name=sc.exe) (Processes.process=*\\\\* AND Processes.process=*create* AND Processes.process=*binpath*) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `windows_service_creation_on_remote_endpoint_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Administrators may create Windows Services on remote systems, but this activity is usually limited to a small set of hosts or users.","['Active Directory Lateral Movement', 'CISA AA23-347A']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://docs.microsoft.com/en-us/windows/win32/services/service-control-manager', 'https://docs.microsoft.com/en-us/windows/win32/services/controlling-a-service-using-sc', 'https://attack.mitre.org/techniques/T1543/003/']","['Create or Modify System Process', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/e102e297-dbe6-4a19-b319-5c08f4c19a06/,Windows OS Credential Dumping with Procdump,"['T1003.001', 'T1003']","Detect procdump.exe dumping the lsass process. This query looks for both -mm and -ma usage. -mm will produce a mini dump file and -ma will write a dump file with all process memory. Both are highly suspect and should be reviewed. This query does not monitor for the internal name (original_file_name=procdump) of the PE or look for procdump64.exe. Modify the query as needed.
During triage, confirm this is procdump.exe executing. If it is the first time a Sysinternals utility has been ran, it is possible there will be a -accepteula on the command line. Review other endpoint data sources for cross process (injection) into lsass.exe.",['TTP'],"August 31, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where ((process_cmd_line LIKE ""%-ma %"" OR process_cmd_line LIKE ""%-mm %"") AND (process_file_name IN (""procdump64.exe"", ""procdump.exe""))) AND process_cmd_line LIKE ""%lsass%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",None identified.,"['Credential Dumping', 'HAFNIUM Group']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/hafnium_group']","['https://attack.mitre.org/techniques/T1003/001/', 'https://docs.microsoft.com/en-us/sysinternals/downloads/procdump', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md#atomic-test-2---dump-lsassexe-memory-using-procdump', 'https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/e11c3d90-5bc7-42ad-94cd-ba75db10d897/,Windows Defacement Modify Transcodedwallpaper File,['T1491'],"The following analytic identifies a modification to the Transcodedwallpaper file in the wallpaper theme directory to change the wallpaper of the host machine. This technique was seen in adversaries attempting to deface or change the desktop wallpaper of the targeted host. During our testing, the common process that affects or changes the wallpaper if a user changes it via desktop personalized setting is explorer.exe.",['Anomaly'],"August 25, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_path !=""*\\Windows\\Explorer.EXE"" by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid  Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
|rename process_guid as proc_guid 
| join proc_guid, _time [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.file_path = ""*\\AppData\\Roaming\\Microsoft\\Windows\\Themes\\TranscodedWallpaper"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid 
| `drop_dm_object_name(Filesystem)` 
|rename process_guid as proc_guid 
| fields file_name file_path process_name process_path process dest file_create_time _time proc_guid] 
| `windows_defacement_modify_transcodedwallpaper_file_filter`",['security_content_summariesonly'],"['_time', 'dest', 'file_create_time', 'file_name', 'file_path', 'process_name', 'process_path', 'process']",3rd part software application can change the wallpaper. Filter is needed.,['Brute Ratel C4'],['https://research.splunk.com/stories/brute_ratel_c4'],"['https://forums.ivanti.com/s/article/Wallpaper-Windows-Settings-Desktop-Settings-and-the-transcodedwallpaper-jpg?language=en_US', 'https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/ransom_sifreli.a']","['Defacement', 'Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e124f71f-11bc-47e4-9931-6046d256005d/,Windows Rename System Utilities Agentexecutor exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies AgentExecutor.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""agentexecutor.exe"" AND (NOT match(process_file_path, /(?i)\\program files (x86)/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/e13ceade-b673-4d34-adc4-4d9c01729753/,Windows Mshta Execution In Registry,['T1218.005'],The following analytic identifies the usage of mshta.exe Windows binary in registry to execute malicious script. This technique was seen in kovter malware where it create several registry entry which is a encoded javascript and will be executed by another registry containing mshta and javascript activexobject to execute the encoded script using wscript.shell. This TTP is a good indication of kovter malware or other adversaries or threat actors leveraging fileless detection that survive system reboot.,['TTP'],"October 14, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_value_data = ""*mshta*"" OR Registry.registry_value_data IN (""*javascript:*"", ""*vbscript:*"",""*WScript.Shell*"") by Registry.registry_key_name Registry.registry_path Registry.registry_value_data Registry.action Registry.dest Registry.user
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_mshta_execution_in_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.dest', 'Registry.registry_value_data', 'Registry.action']",unknown,"['Suspicious Windows Registry Activities', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/windows_persistence_techniques']","['https://redcanary.com/threat-detection-report/techniques/mshta/', 'https://learn.microsoft.com/en-us/microsoft-365/security/intelligence/fileless-threats?view=o365-worldwide']","['Defense Evasion', 'Endpoint', 'Mshta', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e1866ce2-ca22-11eb-8e44-acde48001122/,PowerShell Domain Enumeration,"['T1059', 'T1059.001']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify suspicious PowerShell execution. Script Block Logging captures the command sent to PowerShell, the full command to be executed. Upon enabling, logs will output to Windows event logs. Dependent upon volume, enable on critical endpoints or all. 
This analytic identifies specific PowerShell modules typically used to enumerate an organizations domain or users. 
During triage, review parallel processes using an EDR product or 4688 events. It will be important to understand the timeline of events around this activity. Review the entire logged PowerShell script block.",['TTP'],"December 27, 2023","`powershell` EventCode=4104 ScriptBlockText IN (*get-netdomaintrust*, *get-netforesttrust*, *get-addomain*, *get-adgroupmember*, *get-domainuser*) 
| stats count min(_time) as firstTime max(_time) as lastTime by Computer EventCode ScriptBlockText UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_domain_enumeration_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']","It is possible there will be false positives, filter as needed.","['Hermetic Wiper', 'Malicious PowerShell', 'CISA AA23-347A', 'Data Destruction']","['https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/data_destruction']","['https://docs.splunk.com/Documentation/UBA/5.0.4.1/GetDataIn/AddPowerShell#Configure_module_logging_for_PowerShell.', 'https://blog.palantir.com/tampering-with-windows-event-tracing-background-offense-and-defense-4be7ac62ac63', 'https://static1.squarespace.com/static/552092d5e4b0661088167e5c/t/59c1814829f18782e24f1fe2/1505853768977/Windows+PowerShell+Logging+Cheat+Sheet+ver+Sept+2017+v2.1.pdf', 'https://www.crowdstrike.com/blog/investigating-powershell-command-and-script-logging/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html']","['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e1912b58-ed9c-422c-bbb0-2dbc70398345/,Linux System Reboot Via System Request Key,['T1529'],This analytic is to look for possible execution of SysReq hack to reboot the Linux system host. This technique was seen in Awfulshred malware wiper to reboot the compromised host by using the linux magic sysreq key. This kernel configuration can trigger reboot by piping out 'b' to /proc/sysrq-trigger after enabling all the functions of sysrq. This TTP detection can be a good indicator of possible suspicious processes running on the Linux host since this command is not a common way to reboot a system.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""dash"", ""sudo"", ""bash"")  Processes.process =  ""* echo b &gt; *"" Processes.process = ""*/proc/sysrq-trigger"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_system_reboot_via_system_request_key_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_path', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html', 'https://cert.gov.ua/article/3718487', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/']","['Endpoint', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Shutdown/Reboot']",['Endpoint']
https://research.splunk.com/endpoint/e1997b2e-655f-4561-82fd-aeba8e1c1a86/,Suspicious SQLite3 LSQuarantine Behavior,['T1074'],"The following analytic identifies the use of a SQLite3 querying the MacOS preferences to identify the original URL the pkg was downloaded from. This particular behavior is common with MacOS adware-malicious software. Upon triage, review other processes in parallel for suspicious activity. Identify any recent package installations.",['TTP'],"February 22, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=sqlite3 Processes.process=*LSQuarantine* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `suspicious_sqlite3_lsquarantine_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_id', 'Processes.parent_process_id']",Unknown.,['Silver Sparrow'],['https://research.splunk.com/stories/silver_sparrow'],"['https://redcanary.com/blog/clipping-silver-sparrows-wings/', 'https://www.marcosantadev.com/manage-plist-files-plistbuddy/']","['Collection', 'Data Staged', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e1c6dec5-2249-442d-a1f9-99a4bd228183/,Linux c99 Privilege Escalation,"['T1548.003', 'T1548']","The c99 utility is an interface to the standard C compilation system; it shall accept source code conforming to the ISO C standard. The system conceptually consists of a compiler and link editor. If sudo right is given to ruby application for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*c99*"" AND Processes.process=""*-wrapper*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_c99_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/c99/', 'https://pubs.opengroup.org/onlinepubs/009604499/utilities/c99.html']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/e1d5145f-38fe-42b9-a5d5-457796715f97/,Windows Execute Arbitrary Commands with MSDT,['T1218'],"The following analytic identifies a recently disclosed arbitraty command execution using Windows msdt.exe - a Diagnostics Troubleshooting Wizard. The sample identified will use the ms-msdt:/ protocol handler to load msdt.exe to retrieve a remote payload. During triage, review file modifications for html. Identify parallel process execution that may be related, including an Office Product.",['TTP'],"June 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=msdt.exe Processes.process IN (""*msdt*"",""*ms-msdt:*"",""*ms-msdt:/id*"",""*ms-msdt:-id*"",""*/id*"") AND (Processes.process=""*IT_BrowseForFile=*"" OR Processes.process=""*IT_RebrowseForFile=*"" OR Processes.process=""*.xml*"") AND Processes.process=""*PCWDiagnostic*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_execute_arbitrary_commands_with_msdt_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filter as needed. Added .xml to potentially capture any answer file usage. Remove as needed.",['Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190'],['https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190'],"['https://isc.sans.edu/diary/rss/28694', 'https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e', 'https://twitter.com/nao_sec/status/1530196847679401984?s=20&t=ZiXYI4dQuA-0_dzQzSUb3A', 'https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/', 'https://www.virustotal.com/gui/file/4a24048f81afbe9fb62e7a6a49adbd1faf41f266b5f9feecdceb567aec096784/detection', 'https://strontic.github.io/xcyclopedia/library/msdt.exe-152D4C9F63EFB332CCB134C6953C0104.html']","['Defense Evasion', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/e234970c-dcf5-4f80-b6a9-3a562544ca5b/,Windows Impair Defense Disable Web Evaluation,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender web content evaluation. The ""EnableWebContentEvaluation"" registry entry typically relates to security settings within Microsoft Edge or Internet Explorer, enabling the evaluation of web content for security purposes. When attackers modify ""EnableWebContentEvaluation"" to 0, they might attempt to disable the browser's capability to evaluate web content for security purposes. Disabling this feature could potentially impact the browser's ability to assess the security risks associated with web content, such as potentially malicious scripts, active content, or unsafe web elements. By turning off content evaluation, attackers might aim to exploit security vulnerabilities present in web content without triggering security warnings or blocks. This manipulation increases the risk of users accessing or interacting with malicious content, potentially leading to security compromises or system exploitation.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE Registry.registry_path= ""*\\Windows\\CurrentVersion\\AppHost\\EnableWebContentEvaluation""  Registry.registry_value_data= ""0x00000000"" BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_web_evaluation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web']",['Endpoint']
https://research.splunk.com/endpoint/e24f0a0e-41a9-419f-9999-eacab15efc36/,Windows System Network Config Discovery Display DNS,['T1016'],"The following analytic identifies a process command line that retrieves dns reply information using Windows OS built-in tool IPConfig. This technique is being abused by threat actors, adversaries and post exploitation tools like WINPEAS to retrieve DNS information for the targeted host. This IPConfig parameter (/displaydns) can show dns server resource record, record name, record type, time to live data length and dns reply. This hunting detection can be a good pivot to check which process is executing this command line in specific host system that may lead to malware or adversaries gathering network information.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=""ipconfig.exe"" OR Processes.original_file_name = ""ipconfig.exe"" AND Processes.process = ""*/displaydns*"" by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_system_network_config_discovery_display_dns_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",unknown,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://superuser.com/questions/230308/explain-output-of-ipconfig-displaydns', 'https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Discovery', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery']",['Endpoint']
https://research.splunk.com/endpoint/e2549f2c-0aef-408a-b0c1-e0f270623436/,Windows Ngrok Reverse Proxy Usage,"['T1572', 'T1090', 'T1102']","The following analytic identifies the use of ngrok.exe being utilized on the Windows operating system. Unfortunately, there is no original file name for Ngrok, so it may be worth an additional hunt to identify any command-line arguments. The sign of someone using Ngrok is not malicious, however, more recently it has become an adversary tool.",['Anomaly'],"January 12, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=ngrok.exe Processes.process IN (""*start*"", ""*--config*"",""*http*"",""*authtoken*"", ""*http*"", ""*tcp*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_ngrok_reverse_proxy_usage_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives will be present based on organizations that allow the use of Ngrok. Filter or monitor as needed.,"['Reverse Network Proxy', 'CISA AA22-320A']","['https://research.splunk.com/stories/reverse_network_proxy', 'https://research.splunk.com/stories/cisa_aa22-320a']",['https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf'],"['Command And Control', 'Command And Control', 'Command And Control', 'Endpoint', 'Protocol Tunneling', 'Proxy', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Web Service']",['Endpoint']
https://research.splunk.com/endpoint/e27fbc5d-0445-4c4a-bc39-87f060d5c602/,Linux High Frequency Of File Deletion In Boot Folder,"['T1485', 'T1070.004', 'T1070']",This analytic is to detect a high frequency of file deletion relative to process name and process id /boot/ folder. These events was seen in industroyer2 wiper malware where it tries to delete all files in a critical directory in linux directory. This detection already contains some filter that might cause false positive during our testing.,['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` values(Filesystem.file_name) as deletedFileNames values(Filesystem.file_path) as deletedFilePath dc(Filesystem.file_path) as numOfDelFilePath count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.action=deleted Filesystem.file_path = ""/boot/*"" by _time span=1h  Filesystem.dest Filesystem.process_guid Filesystem.action 
| `drop_dm_object_name(Filesystem)` 
| where  numOfDelFilePath >= 200 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_high_frequency_of_file_deletion_in_boot_folder_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path', 'Filesystem.action']",linux package installer/uninstaller may cause this event. Please update you filter macro to remove false positives.,"['Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e373a840-5bdc-47ef-b2fd-9cc7aaf387f0/,Windows Lateral Tool Transfer RemCom,['T1570'],This analytic identifies the use of RemCom.exe - The open source psexec. This utility provides the ability to move laterally and run scripts or commands remotely.,['TTP'],"March 20, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=remcom.exe OR Processes.original_file_name=RemCom.exe) Processes.process=""*\\*"" Processes.process IN (""*/user:*"", ""*/pwd:*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_lateral_tool_transfer_remcom_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present based on Administrative use. Filter as needed.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/', 'https://github.com/kavika13/RemCom']","['Endpoint', 'Lateral Movement', 'Lateral Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e39dc429-c2a5-4f1f-9c3c-6b211af6b332/,Windows Steal Authentication Certificates Export Certificate,['T1649'],"The following analytic identifies the use of export-certificate, the PowerShell cmdlet, being utilized on the command-line in an attempt to export the certifcate from the local Windows Certificate Store.",['Anomaly'],"February 1, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*export-certificate*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates_export_certificate_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Filtering may be requried based on automated utilities and third party applications that may export certificates.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://dev.to/iamthecarisma/managing-windows-pfx-certificates-through-powershell-3pj', 'https://learn.microsoft.com/en-us/powershell/module/pki/export-certificate?view=windowsserver2022-ps']","['Credential Access', 'Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/e3b42daf-fff4-429d-bec8-2a199468cea9/,Windows Modify Registry Suppress Win Defender Notif,['T1112'],The following analytic is to identify a modification in the Windows registry to suppress windows defender notification. This technique was abuse by adversaries and threat actor to bypassed windows defender on the targeted host. Azorult malware is one of the malware use this technique that also disable toast notification and other windows features as part of its malicious behavior.,['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\UX Configuration\\Notification_Suppress*"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_suppress_win_defender_notif_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,"['Azorult', 'CISA AA23-347A']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa23-347a']","['https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-remoteassistance-exe-fallowtogethelp', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e3d3f57a-c381-11eb-9e35-acde48001122/,Revil Registry Entry,['T1112'],"This analytic identifies suspicious modification in registry entry to keep some malware data during its infection. This technique seen in several apt implant, malware and ransomware like REVIL where it keep some information like the random generated file extension it uses for all the encrypted files and ransomware notes file name in the compromised host.",['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=""*\\SOFTWARE\\WOW6432Node\\Facebook_Assistant\\*"" OR Registry.registry_path=""*\\SOFTWARE\\WOW6432Node\\BlackLivesMatter*"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `revil_registry_entry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Ransomware', 'Revil Ransomware', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/revil_ransomware', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://krebsonsecurity.com/2021/05/a-closer-look-at-the-darkside-ransomware-gang/', 'https://www.mcafee.com/blogs/other-blogs/mcafee-labs/mcafee-atr-analyzes-sodinokibi-aka-revil-ransomware-as-a-service-what-the-code-tells-us/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e3e7a1c0-f2b9-445c-8493-f30a63522d1a/,Detect Regsvcs with Network Connection,"['T1218', 'T1218.009']",The SPL above uses the following Macros:,['TTP'],"January 30, 2024","`sysmon` EventID=3 dest_ip!=10.0.0.0/8 dest_ip!=172.16.0.0/12 dest_ip!=192.168.0.0/16 process_name=regsvcs.exe  
| stats count min(_time) as firstTime max(_time) as lastTime by dest, user, process_name, src_ip, dest_ip 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `detect_regsvcs_with_network_connection_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventID', 'dest_ip', 'process_name', 'dest', 'user', 'src_ip', 'dest_host']","Although unlikely, limited instances of regsvcs.exe may cause a false positive. Filter based endpoint usage, command line arguments, or process lineage.","['Suspicious Regsvcs Regasm Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_regsvcs_regasm_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1218/009/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.009/T1218.009.md', 'https://lolbas-project.github.io/lolbas/Binaries/Regsvcs/']","['Defense Evasion', 'Defense Evasion', 'Regsvcs/Regasm', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/e3ef244e-0a67-11ec-abf2-acde48001122/,PetitPotam Suspicious Kerberos TGT Request,['T1003'],"The following analytic identifes Event Code 4768, A Kerberos authentication ticket (TGT) was requested, successfull occurs. This behavior has been identified to assist with detecting PetitPotam, CVE-2021-36942. Once an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes. One way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus. This request will generate a 4768 event with some unusual fields depending on the environment. This analytic will require tuning, we recommend filtering Account_Name to Domain Controllers for your environment.",['TTP'],"August 31, 2021","`wineventlog_security` EventCode=4768 Client_Address!=""::1"" Certificate_Thumbprint!="""" Account_Name=*$ 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, Account_Name, Client_Address, action, Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `petitpotam_suspicious_kerberos_tgt_request_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'Account_Name', 'Client_Address', 'action', 'Message']",False positives are possible if the environment is using certificates for authentication.,"['PetitPotam NTLM Relay on Active Directory Certificate Services', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/petitpotam_ntlm_relay_on_active_directory_certificate_services', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=4768', 'https://isc.sans.edu/forums/diary/Active+Directory+Certificate+Services+ADCS+PKI+domain+admin+vulnerability/27668/']","['Credential Access', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e40ef542-8241-4419-9af4-6324582ea60a/,Windows KrbRelayUp Service Creation,['T1543.003'],The following analytic identifies the default service name created by KrbRelayUp. Defenders should be aware that attackers could change the hardcoded service name of the KrbRelayUp tool and bypass this detection.,['TTP'],"May 2, 2022","`wineventlog_system` EventCode=7045 Service_Name IN (""KrbSCM"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest EventCode Service_File_Name Service_Name Service_Start_Type Service_Type 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_krbrelayup_service_creation_filter`","['wineventlog_system', 'security_content_ctime']","['_time', 'EventCode', 'Service_File_Name', 'Service_Name', 'Service_Start_Type', 'Service_Type']",False positives should be limited as this is specific to KrbRelayUp based attack. Filter as needed.,['Local Privilege Escalation With KrbRelayUp'],['https://research.splunk.com/stories/local_privilege_escalation_with_krbrelayup'],['https://github.com/Dec0ne/KrbRelayUp'],"['Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/e451bd16-e4c5-4109-8eb1-c4c6ecf048b4/,Suspicious Rundll32 no Command Line Arguments,"['T1218', 'T1218.011']","The following analytic identifies rundll32.exe with no command line arguments. It is unusual for rundll32.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. Rundll32.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_rundll32` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(rundll32\.exe.{0,4}$)"" 
| `suspicious_rundll32_no_command_line_arguments_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of rundll32, triggering a false positive.","['Suspicious Rundll32 Activity', 'Cobalt Strike', 'BlackByte Ransomware', 'PrintNightmare CVE-2021-34527', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/suspicious_rundll32_activity', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/printnightmare_cve-2021-34527', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://attack.mitre.org/techniques/T1218/011/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.011/T1218.011.md', 'https://lolbas-project.github.io/lolbas/Binaries/Rundll32/', 'https://bohops.com/2018/02/26/leveraging-inf-sct-fetch-execute-techniques-for-bypass-evasion-persistence/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/e4723b92-7266-11ec-af45-acde48001122/,Windows Possible Credential Dumping,"['T1003.001', 'T1003']","The following analytic is an enhanced version of two previous analytics that identifies common GrantedAccess permission requests and CallTrace DLLs in order to detect credential dumping. 
GrantedAccess is the requested permissions by the SourceImage into the TargetImage. 
CallTrace Stack trace of where open process is called. Included is the DLL and the relative virtual address of the functions in the call stack right before the open process call. 
dbgcore.dll or dbghelp.dll  are two core Windows debug DLLs that have minidump functions which provide a way for applications to produce crashdump files that contain a useful subset of the entire process context. 
The idea behind using ntdll.dll is to blend in by using native api of ntdll.dll. For example in sekurlsa module there are many ntdll exported api, like RtlCopyMemory, used to execute this module which is related to lsass dumping.",['TTP'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*\\lsass.exe granted_access IN (""0x01000"", ""0x1010"", ""0x1038"", ""0x40"", ""0x1400"", ""0x1fffff"", ""0x1410"", ""0x143a"", ""0x1438"", ""0x1000"") CallTrace IN (""*dbgcore.dll*"", ""*dbghelp.dll*"", ""*ntdll.dll*"", ""*kernelbase.dll*"", ""*kernel32.dll*"") NOT SourceUser IN (""NT AUTHORITY\\SYSTEM"", ""NT AUTHORITY\\NETWORK SERVICE"") 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, SourceImage, GrantedAccess, TargetImage, SourceProcessId, SourceUser, TargetUser 
| rename SourceUser as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_possible_credential_dumping_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'TargetImage', 'GrantedAccess', 'SourceImage', 'SourceProcessId', 'SourceUser', 'TargetUser']","False positives will occur based on GrantedAccess 0x1010 and 0x1400, filter based on source image as needed or remove them. Concern is Cobalt Strike usage of Mimikatz will generate 0x1010 initially, but later be caught.","['Detect Zerologon Attack', 'CISA AA22-264A', 'Credential Dumping', 'CISA AA23-347A', 'DarkSide Ransomware', 'CISA AA22-257A']","['https://research.splunk.com/stories/detect_zerologon_attack', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/cisa_aa22-257a']","['https://en.wikipedia.org/wiki/Local_Security_Authority_Subsystem_Service', 'https://docs.microsoft.com/en-us/windows/win32/api/minidumpapiset/nf-minidumpapiset-minidumpwritedump', 'https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html', 'https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1', 'https://docs.microsoft.com/en-us/windows/win32/procthread/process-security-and-access-rights?redirectedfrom=MSDN', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1003.001_DumpLSASS/DumpLSASS.ps1']","['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e4a96dfd-667a-4487-b942-ccef5a1e81e8/,Windows Find Interesting ACL with FindInterestingDomainAcl,"['T1087', 'T1087.002']","This analytic leverages PowerShell Script Block Logging (EventCode=4104) to detect the execution of the Find-InterestingDomainAcl commandlet. Find-InterestingDomainAcl is part of PowerView, a PowerShell toolkit designed for Windows domain enumeration. Detecting the use of Find-InterestingDomainAcl is crucial as adversaries and Red Teams might employ it to identify unusual or misconfigured Access Control Lists (ACLs) within the domain. Such ACLs can provide attackers with insights into potential privilege escalation opportunities or weak security postures within Active Directory.",['TTP'],"August 31, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*Find-InterestingDomainAcl*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_find_interesting_acl_with_findinterestingdomainacl_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']","Administrators may leverage PowerSploit tools for legitimate reasons, filter as needed.",['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://powersploit.readthedocs.io/en/latest/Recon/Find-InterestingDomainAcl/', 'https://attack.mitre.org/techniques/T1087/002/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e4c73d68-794b-468d-b4d0-dac1772bbae7/,GetAdGroup with PowerShell Script Block,"['T1069', 'T1069.002']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-AdGroup commandlet. The Get-AdGroup commandlet is used to return a list of all domain groups. Red Teams and adversaries may leverage this commandlet to enumerate domain groups for situational awareness and Active Directory Discovery.,['Hunting'],"March 22, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Get-ADGroup*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest, UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getadgroup_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'Computer', 'UserID']",Administrators or power users may use this PowerShell commandlet for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1069/002/', 'https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup?view=windowsserver2019-ps']","['Discovery', 'Discovery', 'Domain Groups', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e4df4676-ea41-4397-b160-3ee0140dc332/,Windows Gather Victim Host Information Camera,"['T1592.001', 'T1592']","The following analytic detects a powershell script that enumerate camera mounted to the targeted host. This technique was seen in DCRat malware, where it runs a powershell command to look for camera information that will be pass on to its C2 server. This anomaly detection can be a good pivot to check who and why this enumeration is needed and what parent process execute this powershell script command.",['Anomaly'],"November 7, 2023","`powershell` EventCode=4104 ScriptBlockText= ""* Win32_PnPEntity *"" ScriptBlockText= ""*SELECT*"" ScriptBlockText= ""*WHERE*"" ScriptBlockText = ""*PNPClass*"" ScriptBlockText IN (""*Image*"", ""*Camera*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_gather_victim_host_information_camera_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Computer', 'EventCode']",Administrators may execute this powershell command to get hardware information related to camera on $dest$.,['DarkCrystal RAT'],['https://research.splunk.com/stories/darkcrystal_rat'],"['https://cert.gov.ua/article/405538', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.dcrat', 'https://www.mandiant.com/resources/analyzing-dark-crystal-rat-backdoor']","['Gather Victim Host Information', 'Hardware', 'Reconnaissance', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e5928ff3-23eb-4d8b-b8a4-dcbc844fdfbe/,Unload Sysmon Filter Driver,"['T1562.001', 'T1562']",Attackers often disable security tools to avoid detection. This search looks for the usage of process fltMC.exe to unload a Sysmon Driver that will stop sysmon from collecting the data.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime values(Processes.process) as process max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fltMC.exe AND Processes.process=*unload* AND Processes.process=*SysmonDrv*  by Processes.process_name Processes.process_id Processes.parent_process_name Processes.process Processes.dest Processes.user 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)`
|`security_content_ctime(lastTime)` 
|`unload_sysmon_filter_driver_filter`
| table firstTime lastTime dest user count process_name process_id parent_process_name process","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']",Unknown at the moment,"['CISA AA23-347A', 'Disabling Security Tools']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/disabling_security_tools']",['https://www.ired.team/offensive-security/defense-evasion/unloading-sysmon-driver'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e59b5a73-32bf-4467-a585-452c36ae10c1/,Windows MOF Event Triggered Execution via WMI,['T1546.003'],"The following anaytic identifies MOFComp.exe loading a MOF file. The Managed Object Format (MOF) compiler parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository. Typically, MOFComp.exe does not reach out to the public internet or load a MOF file from User Profile paths. A filter and consumer is typically registered in WMI. Review parallel processes and query WMI subscriptions to gather artifacts. The default path of mofcomp.exe is C:\Windows\System32\wbem.",['TTP'],"July 15, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name IN (""cmd.exe"", ""powershell.exe"") Processes.process_name=mofcomp.exe) OR (Processes.process_name=mofcomp.exe Processes.process IN (""*\\AppData\\Local\\*"",""*\\Users\\Public\\*"", ""*\\WINDOWS\\Temp\\*"")) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_mof_event_triggered_execution_via_wmi_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present from automation based applications (SCCM), filtering may be required. In addition, break the query out based on volume of usage. Filter process names or f",['Living Off The Land'],['https://research.splunk.com/stories/living_off_the_land'],"['https://attack.mitre.org/techniques/T1546/003/', 'https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/', 'https://docs.microsoft.com/en-us/windows/win32/wmisdk/mofcomp', 'https://pentestlab.blog/2020/01/21/persistence-wmi-event-subscription/', 'https://www.sakshamdixit.com/wmi-events/']","['Endpoint', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation Event Subscription']",['Endpoint']
https://research.splunk.com/endpoint/e5b7b5a9-e471-4be8-8c5d-4083983ba329/,Windows Remote Access Software RMS Registry,['T1219'],The following analytic is to identify a modification or creation of Windows registry related to the Remote Manipulator System (RMS) Remote Admin tool. RMS is a legitimate tool developed by russian organization TektonIT and has been observed being abused by adversaries to gain remote access to the targeted host. Azorult malware utilized RMS to gain remote access.,['TTP'],"June 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\SYSTEM\\Remote Manipulator System*"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_remote_access_software_rms_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.rms']","['Command And Control', 'Endpoint', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e61918fa-9ca4-11eb-836c-acde48001122/,Windows Multiple Users Fail To Authenticate Wth ExplicitCredentials,"['T1110.003', 'T1110']","The following analytic identifies a source user failing to authenticate with 30 unique users using explicit credentials on a host. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment to obtain initial access or elevate privileges. Active Directory environments can be very different depending on the organization. Users should test this detection and customize the arbitrary threshold when needed. Event 4648 is generated when a process attempts an account logon by explicitly specifying that accounts credentials. This event generates on domain controllers, member servers, and workstations.
This logic can be used for real time security monitoring as well as threat hunting exercises. This detection will trigger on the potenfially malicious host, perhaps controlled via a trojan or operated by an insider threat, from where a password spraying attack is being executed.
The analytics returned fields allow analysts to investigate the event further by providing fields like source account, attempted user accounts and the endpoint were the behavior was identified.",['TTP'],"April 13, 2021","`wineventlog_security` EventCode=4648 Caller_User_Name!=*$ Target_User_Name!=*$ 
| bucket span=5m _time 
| stats dc(Target_User_Name) AS unique_accounts values(Target_User_Name) as  tried_account by _time, Computer, Caller_User_Name 
| where unique_accounts > 30 
| `windows_multiple_users_fail_to_authenticate_wth_explicitcredentials_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Target_User_Name', 'Caller_User_Name', 'Computer']","A source user failing attempting to authenticate multiple users on a host is not a common behavior for regular systems. Some applications, however, may exhibit this behavior in which case sets of users hosts can be added to an allow list. Possible false positive scenarios include systems where several users connect to like Mail servers, identity providers, remote desktop services, Citrix, etc.","['Active Directory Password Spraying', 'Insider Threat', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/volt_typhoon']","['https://attack.mitre.org/techniques/T1110/003/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4648', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events']","['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e633a0ef-2a6e-4ed7-b925-5ff999e5d1f0/,Windows AD Domain Controller Promotion,['T1207'],"This analytic identifies a genuine DC promotion event. Identifying when a computer assigns itself the necessary SPNs to function as a domain controller. Note these events are triggered on the existing domain controllers, not the newly joined domain controller. This detection will serve to identify rogue DCs added to the network. There are 2x detections within this analytic story which identify DCShadow attacks, if you do not currently possess the logging for these detections, remove the where clause within this detection to identify DCShadow activity.",['TTP'],"January 26, 2023","`wineventlog_security` EventCode=4742 ServicePrincipalNames IN (""*E3514235-4B06-11D1-AB04-00C04FC2DCD2/*"",""*GC/*"")
| stats min(_time) as _time latest(ServicePrincipalNames) as ServicePrincipalNames,values(signature) as signature, values(src_user) as src_user, values(user) as user by Logon_ID, dvc
| where src_user=user
| rename Logon_ID as TargetLogonId, user as dest 
| appendpipe [
| map search=""search `wineventlog_security` EventCode=4624 TargetLogonId=$TargetLogonId$"" 
| fields - dest, dvc, signature]
| stats min(_time) as _time, values(TargetUserSid) as TargetUserSid, values(Target_Domain) as Target_Domain, values(user) as user, values(status) as status, values(src_category) as src_category, values(src_ip) as src_ip values(ServicePrincipalNames) as ServicePrincipalNames values(signature) as signature values(dest) as dest values(dvc) as dvc by TargetLogonId 
| eval dest=trim(dest,""$"") 
| `windows_ad_domain_controller_promotion_filter`",['wineventlog_security'],"['_time', 'EventCode', 'ServicePrincipalNames', 'src_user', 'user', 'Logon_ID', 'dvc']",None.,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],['https://attack.mitre.org/techniques/T1207/'],"['Defense Evasion', 'Rogue Domain Controller', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e64399d4-94a8-11ec-a9da-acde48001122/,Windows Process With NamedPipe CommandLine,['T1055'],"This analytic is to look for process commandline that contains named pipe. This technique was seen in some adversaries, threat actor and malware like olympic destroyer to communicate to its other child processes after process injection that serve as defense evasion and privilege escalation. On the other hand this analytic may catch some normal process that using this technique for example browser application. In that scenario we include common process path we've seen during testing that cause false positive which is the program files. False positive may still be arise if the normal application is in other folder path.",['Anomaly'],"February 23, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process = ""*\\\\.\\pipe\\*"" NOT (Processes.process_path IN (""*\\program files*"")) by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_id Processes.parent_process_path Processes.process_guid Processes.parent_process_id Processes.dest Processes.user Processes.process_path 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_process_with_namedpipe_commandline_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.process_guid']",Normal browser application may use this technique. Please update the filter macros to remove false positives.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],['https://blog.talosintelligence.com/2018/02/olympic-destroyer.html'],"['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e6d2dc61-a8b9-4b03-906c-da0ca75d71b8/,Detect Certify Command Line Arguments,"['T1649', 'T1105']",The following analytic identifies when the attacker tool Certify or Certipy are used to enumerate Active Directory Certificate Services (AD CS) environments. The default command line arguments of these tools are similar and perform near identical enumeration or exploitation functions.,['TTP'],"June 25, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process IN (""* find *"",""* auth *"",""* request *"",""* req *"",""* download *"",) AND Processes.process IN (""* /vulnerable*"",""* /enrolleeSuppliesSubject *"",""* /json /outfile*"",""* /ca*"", ""* -username *"",""* -u *"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `detect_certify_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Unknown,"['Windows Certificate Services', 'Ingress Tool Transfer']","['https://research.splunk.com/stories/windows_certificate_services', 'https://research.splunk.com/stories/ingress_tool_transfer']","['https://github.com/GhostPack/Certify', 'https://github.com/ly4k/Certipy', 'https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf']","['Command And Control', 'Credential Access', 'Endpoint', 'Ingress Tool Transfer', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/e6fc13b0-1609-11ec-b533-acde48001122/,Non Firefox Process Access Firefox Profile Dir,"['T1555', 'T1555.003']","This search is to detect an anomaly event of a non-firefox process accessing the files in the profile folder. This folder contains all the sqlite database of the firefox browser related to users login, history, cookies and etc. Most of the RAT, trojan spy as well as FIN7 jssloader try to parse the those sqlite database to collect information on the compromised host. This SACL Event (4663) needs to be enabled to the firefox profile directory to use this. Since this is monitoring the access to the folder, we have obsevered noise and hence added sqlite db browser and explorer.exe to make this detection more stable.",['Anomaly'],"December 27, 2023","`wineventlog_security` EventCode=4663 NOT (process_name IN (""*\\firefox.exe"", ""*\\explorer.exe"", ""*sql*"")) Object_Name=""*\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Object_Name Object_Type process_name Access_Mask Accesses process_id EventCode dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `non_firefox_process_access_firefox_profile_dir_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'Object_Name', 'Object_Type', 'process_name', 'Access_Mask', 'Accesses', 'process_id', 'EventCode', 'dest', 'user']",other browser not listed related to firefox may catch by this rule.,"['Azorult', 'Remcos', 'NjRAT', 'Warzone RAT', '3CX Supply Chain Attack', 'RedLine Stealer', 'FIN7', 'DarkGate Malware', 'AgentTesla', 'CISA AA23-347A', 'Phemedrone Stealer', 'Snake Keylogger']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/3cx_supply_chain_attack', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/phemedrone_stealer', 'https://research.splunk.com/stories/snake_keylogger']",N/A,"['Credential Access', 'Credential Access', 'Credentials from Password Stores', 'Credentials from Web Browsers', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e7a96937-3b58-4962-8dce-538e4763cf15/,Linux Unix Shell Enable All SysRq Functions,"['T1059.004', 'T1059']",This analytic is to look for possible execution of SysReq hack to enable all functions of kernel system requests of the Linux system host. This technique was seen in AwfulShred malware wiper to reboot the compromised host by using the linux magic sysreq key. This kernel configuration can be triggered by piping out bitmask '1' to /proc/sys/kernel/sysrq. This TTP detection can be a good indicator of possible suspicious processes running on the Linux host since this command is not so common shell commandline.,['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""dash"", ""sudo"", ""bash"")  Processes.process =  ""* echo 1 &gt; *"" Processes.process = ""*/proc/sys/kernel/sysrq"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `linux_unix_shell_enable_all_sysrq_functions_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process_path', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,"['AwfulShred', 'Data Destruction']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction']","['https://www.kernel.org/doc/html/latest/admin-guide/sysrq.html', 'https://cert.gov.ua/article/3718487', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/overview-of-the-cyber-weapons-used-in-the-ukraine-russia-war/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Unix Shell']",['Endpoint']
https://research.splunk.com/endpoint/e8b74268-5454-11ec-a799-acde48001122/,Detect RClone Command-Line Usage,['T1020'],"This analytic identifies commonly used command-line arguments used by rclone.exe to initiate a file transfer. Some arguments were negated as they are specific to the configuration used by adversaries. In particular, an adversary may list the files or directories of the remote file share using ls or lsd, which is not indicative of malicious behavior. During triage, at this stage of a ransomware event, exfiltration is about to occur or has already. Isolate the endpoint and continue investigating by review file modifications and parallel processes.",['TTP'],"December 3, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%--multi-thread-streams%"" OR process_cmd_line LIKE ""%--transfers%"" OR process_cmd_line LIKE ""%--auto-confirm%"" OR process_cmd_line LIKE ""%--ignore-existing%"" OR process_cmd_line LIKE ""%--no-check-certificate%"" OR process_cmd_line LIKE ""%--progress%"" OR process_cmd_line LIKE ""%--config%"" OR process_cmd_line LIKE ""%ftp%"" OR process_cmd_line LIKE ""%pcloud%"" OR process_cmd_line LIKE ""%mega%"" OR process_cmd_line LIKE ""%copy%"") AND process_file_name=""rclone.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives should be limited as this is restricted to the Rclone process name. Filter or tune the analytic as needed.,"['DarkSide Ransomware', 'Ransomware', 'Insider Threat']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/insider_threat']","['https://redcanary.com/blog/rclone-mega-extortion/', 'https://www.mandiant.com/resources/shining-a-light-on-darkside-ransomware-operations', 'https://thedfirreport.com/2021/03/29/sodinokibi-aka-revil-ransomware/', 'https://thedfirreport.com/2021/11/29/continuing-the-bazar-ransomware-story/']","['Automated Exfiltration', 'Exfiltration', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/e8c591f4-a6d7-11eb-8cf7-acde48001122/,Office Product Spawning BITSAdmin,"['T1566', 'T1566.001']","The following detection identifies the latest behavior utilized by different malware families (including TA551, IcedID). This detection identifies any Windows Office Product spawning bitsadmin.exe. In malicious instances, the command-line of bitsadmin.exe will contain a URL to a remote destination or similar command-line arguments as transfer, Download, priority, Foreground. In addition, Threat Research has released a detections identifying suspicious use of bitsadmin.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or bitsadmin.exe will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"", ""msaccess.exe"", ""Graph.exe"",""winproj.exe"") `process_bitsadmin` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_bitsadmin_filter`","['security_content_summariesonly', 'process_bitsadmin', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",No false positives known. Filter as needed.,"['Spearphishing Attachments', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e8fc95bc-a107-11eb-a978-acde48001122/,Wermgr Process Spawned CMD Or Powershell Process,['T1059'],"This search is designed to detect suspicious cmd and powershell process spawned by wermgr.exe process. This suspicious behavior are commonly seen in code injection technique technique like trickbot to execute a shellcode, dll modules to run malicious behavior.",['TTP'],"April 19, 2021","| tstats `security_content_summariesonly` values(Processes.process) as cmdline min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = ""wermgr.exe"" `process_cmd` OR `process_powershell` by Processes.parent_process_name  Processes.original_file_name Processes.parent_process_id  Processes.process_name Processes.process Processes.process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wermgr_process_spawned_cmd_or_powershell_process_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_cmd', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",unknown,"['Trickbot', 'Qakbot']","['https://research.splunk.com/stories/trickbot', 'https://research.splunk.com/stories/qakbot']","['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e91bd102-d630-4e76-ab73-7e3ba22c5961/,First Time Seen Child Process of Zoom,['T1068'],This search looks for child processes spawned by zoom.exe or zoom.us that has not previously been seen.,['Anomaly'],"May 20, 2020","| tstats `security_content_summariesonly` min(_time) as firstTime values(Processes.parent_process_name) as parent_process_name values(Processes.parent_process_id) as parent_process_id values(Processes.process_name) as process_name values(Processes.process) as process from datamodel=Endpoint.Processes where (Processes.parent_process_name=zoom.exe OR Processes.parent_process_name=zoom.us) by Processes.process_id Processes.dest 
| `drop_dm_object_name(Processes)` 
| lookup zoom_first_time_child_process dest as dest process_name as process_name OUTPUT firstTimeSeen 
| where isnull(firstTimeSeen) OR firstTimeSeen > relative_time(now(), ""`previously_seen_zoom_child_processes_window`"") 
| `security_content_ctime(firstTime)` 
| table firstTime dest, process_id, process_name, parent_process_id, parent_process_name 
|`first_time_seen_child_process_of_zoom_filter`","['security_content_summariesonly', 'security_content_ctime', 'previously_seen_zoom_child_processes_window']","['_time', 'Processes.parent_process_name', 'Processes.parent_process_id', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.process_id', 'Processes.dest']",A new child process of zoom isn't malicious by that fact alone. Further investigation of the actions of the child process is needed to verify any malicious behavior is taken.,['Suspicious Zoom Child Processes'],['https://research.splunk.com/stories/suspicious_zoom_child_processes'],N/A,"['Endpoint', 'Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e97a5ffe-90bf-11eb-928a-acde48001122/,BITS Job Persistence,['T1197'],"The following query identifies Microsoft Background Intelligent Transfer Service utility bitsadmin.exe scheduling a BITS job to persist on an endpoint. The query identifies the parameters used to create, resume or add a file to a BITS job. Typically seen combined in a oneliner or ran in sequence. If identified, review the BITS job created and capture any files written to disk. It is possible for BITS to be used to upload files and this may require further network data analysis to identify. You can use bitsadmin /list /verbose to list out the jobs during investigation.",['TTP'],"September 16, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_bitsadmin` Processes.process IN (*create*, *addfile*, *setnotifyflags*, *setnotifycmdline*, *setminretrydelay*, *setcustomheaders*, *resume* ) by Processes.dest Processes.user Processes.original_file_name Processes.parent_process Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `bits_job_persistence_filter`","['security_content_summariesonly', 'process_bitsadmin', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Limited false positives will be present. Typically, applications will use BitsAdmin.exe. Any filtering should be done based on command-line arguments (legitimate applications) or parent process.","['BITS Jobs', 'Living Off The Land']","['https://research.splunk.com/stories/bits_jobs', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1197/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/bitsadmin', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md#atomic-test-3---persist-download--execute', 'https://lolbas-project.github.io/lolbas/Binaries/Bitsadmin/']","['BITS Jobs', 'Defense Evasion', 'Endpoint', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e99fcc4f-c6b0-4443-aa2a-e3c85126ec9a/,Windows Common Abused Cmd Shell Risk Behavior,"['T1222', 'T1049', 'T1033', 'T1529', 'T1016', 'T1059']","The following correlation identifies instances where four or more distinct detection analytics are associated with malicious command line behavior that is known to be exploited by multiple threat actors, adversaries, or red teamers on a specific host. By leveraging the Command Line Interface (CLI), attackers can execute malicious commands, gain access to sensitive data, install backdoors, and engage in various nefarious activities. The impact of such compromise can be severe, as attackers may gain unauthorized control over the compromised system, enabling them to exfiltrate valuable information, escalate privileges, or launch further attacks within the network. If this detection is triggered, there is a high level of confidence in the occurrence of suspicious command line activities on the host.",['Correlation'],"December 27, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where source IN (""*Cmdline Tool Not Executed In CMD Shell*"", ""*Windows System Network Config Discovery Display DNS*"", ""*Local Account Discovery With Wmic*"", ""*Net Localgroup Discovery*"", ""*Create local admin accounts using net exe*"", ""*Local Account Discovery with Net*"", ""*Icacls Deny Command*"", ""*ICACLS Grant Command*"", ""*Windows Proxy Via Netsh*"", ""*Processes launching netsh*"", ""*Disabling Firewall with Netsh*"", ""*Windows System Network Connections Discovery Netsh*"", ""*Network Connection Discovery With Arp*"", ""*Windows System Discovery Using ldap Nslookup*"", ""*Windows System Shutdown CommandLine*"") by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 4 
| `windows_common_abused_cmd_shell_risk_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']",False positives will be present based on many factors. Tune the correlation as needed to reduce too many triggers.,"['Azorult', 'Volt Typhoon', 'Sandworm Tools', 'Windows Post-Exploitation', 'FIN7', 'Qakbot', 'Netsh Abuse', 'DarkCrystal RAT', 'Windows Defense Evasion Tactics', 'CISA AA23-347A', 'Disabling Security Tools']","['https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/volt_typhoon', 'https://research.splunk.com/stories/sandworm_tools', 'https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/netsh_abuse', 'https://research.splunk.com/stories/darkcrystal_rat', 'https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/disabling_security_tools']","['https://www.splunk.com/en_us/blog/security/from-macros-to-no-macros-continuous-malware-improvements-by-qakbot.html', 'https://www.splunk.com/en_us/blog/security/dark-crystal-rat-agent-deep-dive.html']","['Command and Scripting Interpreter', 'Defense Evasion', 'Discovery', 'Discovery', 'Discovery', 'Execution', 'File and Directory Permissions Modification', 'Impact', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Network Configuration Discovery', 'System Network Connections Discovery', 'System Owner/User Discovery', 'System Shutdown/Reboot']",['Endpoint']
https://research.splunk.com/endpoint/e9d05aa2-32f0-411b-930c-5b8ca5c4fcee/,Windows MSIExec Spawn Discovery Command,['T1218.007'],"The following analytic identifies MSIExec spawning multiple discovery commands, including spawning Cmd.exe or PowerShell.exe. Typically, child processes are not common from MSIExec other than MSIExec spawning itself.",['TTP'],"June 13, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=msiexec.exe Processes.process_name IN (""powershell.exe"",""cmd.exe"", ""nltest.exe"",""ipconfig.exe"",""systeminfo.exe"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_msiexec_spawn_discovery_command_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives will be present with MSIExec spawning Cmd or PowerShell. Filtering will be needed. In addition, add other known discovery processes to enhance query.",['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/e9fb4a59-c5fb-440a-9f24-191fbc6b2911/,Attempted Credential Dump From Registry via Reg exe,"['T1003.002', 'T1003']",Monitor for execution of reg.exe with parameters specifying an export of keys that contain hashed credentials that attackers may try to crack offline.,['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=reg* OR Processes.process_name=cmd* Processes.process=*save* (Processes.process=*HKEY_LOCAL_MACHINE\\Security* OR Processes.process=*HKEY_LOCAL_MACHINE\\SAM* OR Processes.process=*HKEY_LOCAL_MACHINE\\System* OR Processes.process=*HKLM\\Security* OR Processes.process=*HKLM\\System* OR Processes.process=*HKLM\\SAM*) by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name  Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `attempted_credential_dump_from_registry_via_reg_exe_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",None identified.,"['Industroyer2', 'Windows Registry Abuse', 'Credential Dumping', 'CISA AA23-347A', 'DarkSide Ransomware', 'Data Destruction']","['https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/data_destruction']",['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.002/T1003.002.md#atomic-test-1---registry-dump-of-sam-creds-and-secrets'],"['Credential Access', 'Credential Access', 'Endpoint', 'OS Credential Dumping', 'Security Account Manager', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ea61e291-af05-4716-932a-67faddb6ae6f/,Powershell COM Hijacking InprocServer32 Modification,"['T1546.015', 'T1059', 'T1059.001']",The following analytic utilizes PowerShell ScriptBlock Logging to identify a script that is attempting to modify or add a component object model to inprocserver32 path within the registry.,['TTP'],"September 26, 2022","`powershell` EventCode=4104 ScriptBlockText = ""*Software\\Classes\\CLSID\\*\\InProcServer32*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_com_hijacking_inprocserver32_modification_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",False positives will be present if any scripts are adding to inprocserver32. Filter as needed.,['Malicious PowerShell'],['https://research.splunk.com/stories/malicious_powershell'],"['https://attack.mitre.org/techniques/T1546/015/', 'https://www.splunk.com/en_us/blog/security/hunting-for-malicious-powershell-using-script-block-logging.html', 'https://blog.cluster25.duskrise.com/2022/09/23/in-the-footsteps-of-the-fancy-bear-powerpoint-graphite/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1546.015/T1546.015.md']","['Command and Scripting Interpreter', 'Component Object Model Hijacking', 'Execution', 'Execution', 'Persistence', 'PowerShell', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ea73128a-43ab-11ec-9753-acde48001122/,CSC Net On The Fly Compilation,"['T1027.004', 'T1027']","this analytic is to detect a suspicious compile before delivery approach of .net compiler csc.exe. This technique was seen in several adversaries, malware and even in red teams to take advantage the csc.exe .net compiler tool to compile on the fly a malicious .net code to evade detection from security product. This is a good hunting query to check further the file or process created after this event and check the file path that passed to csc.exe which is the .net code. Aside from that, powershell is capable of using this compiler in executing .net code in a powershell script so filter on that case is needed.",['Hunting'],"November 12, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_csc` Processes.process = ""*/noconfig*"" Processes.process = ""*/fullpaths*"" Processes.process = ""*@*"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `csc_net_on_the_fly_compilation_filter`","['security_content_summariesonly', 'process_csc', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",A network operator or systems administrator may utilize an automated powershell script taht execute .net code that may generate false positive. filter is needed.,['Windows Defense Evasion Tactics'],['https://research.splunk.com/stories/windows_defense_evasion_tactics'],"['https://app.any.run/tasks/ad4c3cda-41f2-4401-8dba-56cc2d245488/', 'https://tccontre.blogspot.com/2019/06/maicious-macro-that-compile-c-code-as.html']","['Compile After Delivery', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Obfuscated Files or Information', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eabbac3a-45aa-4659-920f-6b8cff383fb8/,Windows Registry BootExecute Modification,"['T1542', 'T1547.001']","This analytic monitors the BootExecute registry key for any modifications from its default value, which could indicate potential malicious activity. The BootExecute registry key, located at HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager, manages the list of applications and services that are executed during system boot. By default, the BootExecute value is set to ""autocheck autochk *"". Attackers might attempt to modify this value to achieve persistence, load malicious code, or tamper with the system's boot process.",['TTP'],"May 3, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE Registry.registry_path=""HKLM\\System\\CurrentControlSet\\Control\\Session Manager\\BootExecute"" BY _time span=1h Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid, Registry.action 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_registry_bootexecute_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.registry_value_data', 'Registry.process_guid', 'Registry.action']",False positives may be present and will need to be filtered.,['Windows BootKits'],['https://research.splunk.com/stories/windows_bootkits'],['https://www.microsoft.com/en-us/security/blog/2023/04/11/guidance-for-investigating-attacks-using-cve-2022-21894-the-blacklotus-campaign/'],"['Defense Evasion', 'Endpoint', 'Persistence', 'Persistence', 'Pre-OS Boot', 'Privilege Escalation', 'Registry Run Keys / Startup Folder', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eac5e8ba-4857-11ec-9371-acde48001122/,Loading Of Dynwrapx Module,"['T1055', 'T1055.001']","DynamicWrapperX is an ActiveX component that can be used in a script to call Windows API functions, but it requires the dynwrapx.dll to be installed and registered. With that, registering or loading dynwrapx.dll to a host is highly suspicious. In most instances when it is used maliciously, the best way to triage is to review parallel processes and pivot on the process_guid. Review the registry for any suspicious modifications meant to load dynwrapx.dll. Identify any suspicious module loads of dynwrapx.dll. This detection will return and identify the processes that invoke vbs/wscript/cscript.",['TTP'],"November 18, 2021","`sysmon` EventCode=7 (ImageLoaded = ""*\\dynwrapx.dll"" OR OriginalFileName = ""dynwrapx.dll"" OR  Product = ""DynamicWrapperX"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Image ImageLoaded OriginalFileName Product process_name dest EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `loading_of_dynwrapx_module_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'OriginalFileName', 'Product', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']","False positives should be limited, however it is possible to filter by Processes.process_name and specific processes (ex. wscript.exe). Filter as needed. This may need modification based on EDR telemetry and how it brings in registry data. For example, removal of (Default).","['Remcos', 'AsyncRAT']","['https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/asyncrat']","['https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/', 'https://www.script-coding.com/dynwrapx_eng.html', 'https://bohops.com/2018/06/28/abusing-com-registry-structure-clsid-localserver32-inprocserver32/', 'https://tria.ge/210929-ap75vsddan', 'https://www.virustotal.com/gui/file/cb77b93150cb0f7fe65ce8a7e2a5781e727419451355a7736db84109fa215a89', 'https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat']","['Defense Evasion', 'Defense Evasion', 'Dynamic-link Library Injection', 'Privilege Escalation', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eaf688b3-bb8f-454d-b105-920a862cd8cb/,Windows Default Group Policy Object Modified with GPME,"['T1484', 'T1484.001']","The following analytic leverages the Endpoint datamodel to identify the potential edition of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects Default Domain Controllers Policy and Default Domain Policy. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the edition of the default GPOs.",['TTP'],"April 24, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=mmc.exe (Processes.process =*gpme.msc*) AND (Processes.process = ""*31B2F340-016D-11D2-945F-00C04FB984F9*"" OR Processes.process = ""*6AC1786C-016F-11D2-945F-00C04fB984F9*""  ) by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_default_group_policy_object_modified_with_gpme_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","The default Group Policy Objects within an AD network may be legitimately updated for administrative operations, filter as needed.","['Active Directory Privilege Escalation', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716', 'https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/dn265969(v=ws.11)']","['Defense Evasion', 'Defense Evasion', 'Domain Policy Modification', 'Endpoint', 'Group Policy Modification', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eb120f5f-b879-4a63-97c1-93352b5df844/,Creation of Shadow Copy,"['T1003.003', 'T1003']",Monitor for signs that Vssadmin or Wmic has been used to create a shadow copy.,['TTP'],"January 1, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe Processes.process=*create* Processes.process=*shadow*) OR (Processes.process_name=wmic.exe Processes.process=*shadowcopy* Processes.process=*create*) by Processes.dest Processes.user Processes.process_name Processes.process  Processes.parent_process_name Processes.parent_process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `creation_of_shadow_copy_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Legitimate administrator usage of Vssadmin or Wmic will create false positives.,"['Credential Dumping', 'Volt Typhoon']","['https://research.splunk.com/stories/credential_dumping', 'https://research.splunk.com/stories/volt_typhoon']","['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf', 'https://media.defense.gov/2023/May/24/2003229517/-1/-1/0/CSA_Living_off_the_Land.PDF']","['Credential Access', 'Credential Access', 'Endpoint', 'NTDS', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/eb277ba0-b96b-11eb-b00e-acde48001122/,CMD Echo Pipe - Escalation,"['T1059', 'T1059.003', 'T1543.003', 'T1543']","This analytic identifies a common behavior by Cobalt Strike and other frameworks where the adversary will escalate privileges, either via jump (Cobalt Strike PTH) or getsystem, using named-pipe impersonation. A suspicious event will look like cmd.exe /c echo 4sgryt3436 &gt; \\.\Pipe\5erg53.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` OR Processes.process=*%comspec%* (Processes.process=*echo* AND Processes.process=*pipe*) by Processes.dest Processes.user Processes.parent_process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cmd_echo_pipe___escalation_filter`","['security_content_summariesonly', 'process_cmd', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Unknown. It is possible filtering may be required to ensure fidelity.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://redcanary.com/threat-detection-report/threats/cobalt-strike/', 'https://github.com/rapid7/meterpreter/blob/master/source/extensions/priv/server/elevate/namedpipe.c']","['Command and Scripting Interpreter', 'Create or Modify System Process', 'Endpoint', 'Execution', 'Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Command Shell', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/eb3e6702-8936-11ec-98fe-acde48001122/,Unusual Number of Kerberos Service Tickets Requested,"['T1558', 'T1558.003']","The following hunting analytic leverages Kerberos Event 4769, A Kerberos service ticket was requested, to identify a potential kerberoasting attack against Active Directory networks. Kerberoasting allows an adversary to request kerberos tickets for domain accounts typically used as service accounts and attempt to crack them offline allowing them to obtain privileged access to the domain.
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number service ticket requests. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field.",['Anomaly'],"February 8, 2022","`wineventlog_security` EventCode=4769 Service_Name!=""*$"" Ticket_Encryption_Type=0x17 
| bucket span=2m _time 
| stats dc(Service_Name) AS unique_services values(Service_Name) as requested_services by _time, Client_Address 
| eventstats avg(unique_services) as comp_avg , stdev(unique_services) as comp_std by Client_Address 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_services > 2 and unique_services >= upperBound, 1, 0) 
| search isOutlier=1 
| `unusual_number_of_kerberos_service_tickets_requested_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Ticket_Options', 'Ticket_Encryption_Type', 'dest', 'Service_Name', 'service_id', 'Client_Address']","An single endpoint requesting a large number of kerberos service tickets is not common behavior. Possible false positive scenarios include but are not limited to vulnerability scanners, administration systems and missconfigured systems.",['Active Directory Kerberos Attacks'],['https://research.splunk.com/stories/active_directory_kerberos_attacks'],"['https://attack.mitre.org/techniques/T1558/003/', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/t1208-kerberoasting']","['Credential Access', 'Credential Access', 'Kerberoasting', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/eb65619c-4f8d-4383-a975-d352765d344b/,Java Writing JSP File,"['T1190', 'T1133']","The following analytic identifies the process java writing a .jsp to disk. This is potentially indicative of a web shell being written to disk. Modify and tune the analytic based on data ingested. For instance, it may be worth running a broad query for jsp file writes first before performing a join.",['TTP'],"June 3, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name IN (""java"",""java.exe"", ""javaw.exe"") by _time Processes.process_id Processes.process_name Processes.dest Processes.process_guid Processes.user 
| `drop_dm_object_name(Processes)` 
| join process_guid [
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.file_name=""*.jsp*"" by _time Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid Filesystem.user 
| `drop_dm_object_name(Filesystem)` 
| fields _time process_guid file_path file_name file_create_time user dest process_name] 
| stats count min(_time) as firstTime max(_time) as lastTime by dest process_name process_guid file_name file_path file_create_time user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `java_writing_jsp_file_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.file_path', 'Filesystem.process_guid', 'Filesystem.user']",False positives are possible and filtering may be required. Restrict by assets or filter known jsp files that are common for the environment.,"['Spring4Shell CVE-2022-22965', 'Atlassian Confluence Server and Data Center CVE-2022-26134', 'SysAid On-Prem Software CVE-2023-47246 Vulnerability']","['https://research.splunk.com/stories/spring4shell_cve-2022-22965', 'https://research.splunk.com/stories/atlassian_confluence_server_and_data_center_cve-2022-26134', 'https://research.splunk.com/stories/sysaid_on-prem_software_cve-2023-47246_vulnerability']","['https://www.microsoft.com/security/blog/2022/04/04/springshell-rce-vulnerability-guidance-for-protecting-against-and-detecting-cve-2022-22965/', 'https://github.com/TheGejr/SpringShell', 'https://www.tenable.com/blog/spring4shell-faq-spring-framework-remote-code-execution-vulnerability']","['Endpoint', 'Exploit Public-Facing Application', 'External Remote Services', 'Initial Access', 'Initial Access', 'Persistence', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ec102cb2-a0f5-11eb-9b38-acde48001122/,Powershell Remote Thread To Known Windows Process,['T1055'],this search is designed to detect suspicious powershell process that tries to inject code and to known/critical windows process and execute it using CreateRemoteThread. This technique is seen in several malware like trickbot and offensive tooling like cobaltstrike where it load a shellcode to svchost.exe to execute reverse shell to c2 and download another payload,['TTP'],"August 25, 2022","`sysmon` EventCode = 8 parent_process_name IN (""powershell_ise.exe"", ""powershell.exe"") TargetImage IN (""*\\svchost.exe"",""*\\csrss.exe"" ""*\\gpupdate.exe"", ""*\\explorer.exe"",""*\\services.exe"",""*\\winlogon.exe"",""*\\smss.exe"",""*\\wininit.exe"",""*\\userinit.exe"",""*\\spoolsv.exe"",""*\\taskhost.exe"") 
| stats  min(_time) as firstTime max(_time) as lastTime count by SourceImage process_name SourceProcessId SourceProcessGuid TargetImage TargetProcessId NewThreadId StartAddress dest EventCode 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `powershell_remote_thread_to_known_windows_process_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'process_name', 'SourceProcessId', 'SourceProcessGuid', 'TargetImage', 'TargetProcessId', 'NewThreadId', 'StartAddress', 'dest', 'EventCode']",unknown,['Trickbot'],['https://research.splunk.com/stories/trickbot'],['https://thedfirreport.com/2021/01/11/trickbot-still-alive-and-well/'],"['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ec4f671e-c736-4f78-a4c0-8fe809e952e5/,Windows File Share Discovery With Powerview,"['T1552', 'T1552.006']","The following analytic identifies the use of the Invoke-ShareFinder PowerShell commandlet part of PowerView. This module obtains the list of all active domain computers and lists the active shares on each computer. Network file shares in Active Directory environments may contain sensitive information like backups, scripts, credentials, etc. Adversaries who have obtained a foothold in an AD network may leverage PowerView to identify secrets and leverage them for Privilege Escalation or Lateral Movement.",['TTP'],"May 2, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval device_hostname = device.hostname 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_uid = process.uid 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_uid = actor_user.uid 
| where match(process_cmd_line, /(?i)invoke-sharefinder/)=true --finding_report--","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']",Unknown,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://github.com/PowerShellEmpire/PowerTools/blob/master/PowerView/powerview.ps1', 'https://thedfirreport.com/2023/01/23/sharefinder-how-threat-actors-discover-file-shares/', 'https://attack.mitre.org/techniques/T1135/']","['Credential Access', 'Credential Access', 'Group Policy Preferences', 'Splunk Behavioral Analytics', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/ecaaf956-c516-4980-b08e-8c01c19614ca/,Windows Rename System Utilities Adplus exe LOLBAS in Non Standard Path,"['T1036', 'T1036.003']",The following analytic identifies adplus.exe which is a native living off the land binary or script (LOLBAS) within the Windows operating system that may be abused by adversaries by moving it to a new directory. The list of binaries was derived from the https://lolbas-project.github.io site.,['Anomaly'],"October 18, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_file_name=""adplus.exe"" AND (NOT match(process_file_path, /(?i)\\program files (x86)\\windows kits\\10\\debuggers\\x86/)=true) --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Unusual Processes', 'Living Off The Land']","['https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Defense Evasion', 'Masquerading', 'Rename System Utilities', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/ed06725f-6da6-439f-9dcc-ab30e891297c/,Windows PowerShell Export PfxCertificate,"['T1552.004', 'T1552', 'T1649']",The following analytic identifies the PowerShell Cmdlet export-pfxcertificate utilizing Script Block Logging. This particular behavior is related to an adversary attempting to steal certificates local to the Windows endpoint within the Certificate Store.,['Anomaly'],"February 1, 2023","`powershell` EventCode=4104 ScriptBlockText IN (""*export-pfxcertificate*"") 
| rename Computer as dest  
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_export_pfxcertificate_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode']","It is possible administrators or scripts may run these commands, filtering may be required.",['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://dev.to/iamthecarisma/managing-windows-pfx-certificates-through-powershell-3pj', 'https://learn.microsoft.com/en-us/powershell/module/pki/export-pfxcertificate?view=windowsserver2022-ps']","['Credential Access', 'Credential Access', 'Credential Access', 'Private Keys', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/ed313326-a0f9-11eb-a89c-acde48001122/,Wermgr Process Connecting To IP Check Web Services,"['T1590', 'T1590.005']",This search is designed to detect suspicious wermgr.exe process that tries to connect to known IP web services. This technique is know for trickbot and other trojan spy malware to recon the infected machine and look for its ip address without so much finger print on the commandline process. Since wermgr.exe is designed for error handling process of windows it is really suspicious that this process is trying to connect to this IP web services cause that maybe cause of some malicious code injection.,['TTP'],"June 1, 2022","`sysmon` EventCode =22 process_name = wermgr.exe QueryName IN (""*wtfismyip.com"", ""*checkip.amazonaws.com"", ""*ipecho.net"", ""*ipinfo.io"", ""*api.ipify.org"", ""*icanhazip.com"", ""*ip.anysrc.com"",""*api.ip.sb"", ""ident.me"", ""www.myexternalip.com"", ""*zen.spamhaus.org"", ""*cbl.abuseat.org"", ""*b.barracudacentral.org"",""*dnsbl-1.uceprotect.net"", ""*spam.dnsbl.sorbs.net"") 
|  stats  min(_time) as firstTime max(_time) as lastTime count by Image process_name ProcessId QueryName QueryStatus QueryResults EventCode Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `wermgr_process_connecting_to_ip_check_web_services_filter`","['security_content_ctime', 'sysmon']","['_time', 'process_path', 'process_name', 'process_id', 'QueryName', 'QueryStatus', 'QueryResults', 'dest', 'EventCode']",unknown,['Trickbot'],['https://research.splunk.com/stories/trickbot'],"['https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/']","['Gather Victim Network Information', 'IP Addresses', 'Reconnaissance', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ed4eeacb-8d5a-488e-bc97-1ce6ded63b84/,Windows Modify Registry Disable Toast Notifications,['T1112'],The following analytic is to identify a modification in the Windows registry to disable toast notifications. This Windows Operating System feature is responsible for alerting or notifying user if application or OS need some updates. Adversaries and malwares like Azorult abuse this technique to disable important update notification in compromised host. This anomaly detection is a good pivot to look for further events related to defense evasion and execution.,['Anomaly'],"June 22, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\PushNotifications\\ToastEnabled*"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_modify_registry_disable_toast_notifications_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action']",administrators may enable or disable this feature that may cause some false positive.,['Azorult'],['https://research.splunk.com/stories/azorult'],"['https://docs.microsoft.com/en-us/windows-hardware/customize/desktop/unattend/microsoft-windows-remoteassistance-exe-fallowtogethelp', 'https://app.any.run/tasks/a6f2ffe2-e6e2-4396-ae2e-04ea0143f2d8/']","['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ed550c19-712e-43f6-bd19-6f58f61b3a5e/,GetDomainComputer with PowerShell,['T1018'],"This analytic looks for the execution of powershell.exe with command-line arguments utilized to discover remote systems. Get-DomainComputer is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may leverage PowerView to enumerate domain groups for situational awareness and Active Directory Discovery.",['TTP'],"September 7, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""powershell.exe"") (Processes.process=*Get-DomainComputer*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getdomaincomputer_with_powershell_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1018/'],"['Discovery', 'Endpoint', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/edb930df-64c2-4bb7-9b5c-889ed53fb973/,Windows Post Exploitation Risk Behavior,"['T1012', 'T1049', 'T1069', 'T1016', 'T1003', 'T1082', 'T1115', 'T1552']","The following correlation identifies a four or more number of distinct analytics associated with the Windows Post-Exploitation analytic story, which enables the identification of potentially suspicious behavior. Windows Post-Exploitation refers to the phase that occurs after an attacker successfully compromises a Windows system. During this stage, attackers strive to maintain persistence, gather sensitive information, escalate privileges, and exploit the compromised environment further. Timely detection of post-exploitation activities is crucial for prompt response and effective mitigation. Common post-exploitation detections encompass identifying suspicious processes or services running on the system, detecting unusual network connections or traffic patterns, identifying modifications to system files or registry entries, monitoring abnormal user account activities, and flagging unauthorized privilege escalations. Ensuring the detection of post-exploitation activities is essential to proactively prevent further compromise, minimize damage, and restore the security of the Windows environment.",['Correlation'],"June 14, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime sum(All_Risk.calculated_risk_score) as risk_score, count(All_Risk.calculated_risk_score) as risk_event_count, values(All_Risk.annotations.mitre_attack.mitre_tactic_id) as annotations.mitre_attack.mitre_tactic_id, dc(All_Risk.annotations.mitre_attack.mitre_tactic_id) as mitre_tactic_id_count, values(All_Risk.annotations.mitre_attack.mitre_technique_id) as annotations.mitre_attack.mitre_technique_id, dc(All_Risk.annotations.mitre_attack.mitre_technique_id) as mitre_technique_id_count, values(All_Risk.tag) as tag, values(source) as source, dc(source) as source_count from datamodel=Risk.All_Risk where All_Risk.analyticstories IN (""*Windows Post-Exploitation*"") by All_Risk.risk_object All_Risk.risk_object_type All_Risk.annotations.mitre_attack.mitre_tactic 
| `drop_dm_object_name(All_Risk)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where source_count >= 4 
| `windows_post_exploitation_risk_behavior_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'All_Risk.analyticstories', 'All_Risk.risk_object_type', 'All_Risk.risk_object', 'All_Risk.annotations.mitre_attack.mitre_tactic', 'source']",False positives will be present based on many factors. Tune the correlation as needed to reduce too many triggers.,['Windows Post-Exploitation'],['https://research.splunk.com/stories/windows_post-exploitation'],['https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS/winPEASbat'],"['Clipboard Data', 'Collection', 'Credential Access', 'Credential Access', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'Discovery', 'OS Credential Dumping', 'Permission Groups Discovery', 'Query Registry', 'Risk', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Information Discovery', 'System Network Configuration Discovery', 'System Network Connections Discovery', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/eddbf5ba-b89e-47ca-995e-2d259804e55e/,Windows Account Discovery for None Disable User Account,"['T1087', 'T1087.001']","The following analytic utilizes PowerShell Script Block Logging to identify the execution of the PowerView PowerShell commandlet Get-NetUser. In the context of PowerView's Get-NetUser cmdlet as a filter or parameter to query Active Directory user accounts that are not disabled. The full script block text based on the CISA-23-347A advisory is ""Get-NetUser -UACFilter NOT_ACCOUNTDISABLE"". Utilize this query to identify potential suspicious activity of user account enumeration.",['Hunting'],"December 15, 2023","`powershell` EventCode=4104  ScriptBlockText = ""*Get-NetUser*"" ScriptBlockText = ""*NOT_ACCOUNTDISABLE*"" ScriptBlockText = ""*-UACFilter*"" 
| rename Computer as dest, UserID as user 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText dest user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_account_discovery_for_none_disable_user_account_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'dest', 'EventCode', 'user']","Administrators may leverage PowerView for legitimate purposes, filter as needed.",['CISA AA23-347A'],['https://research.splunk.com/stories/cisa_aa23-347a'],"['https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-347a', 'https://powersploit.readthedocs.io/en/stable/Recon/README/', 'https://book.hacktricks.xyz/windows-hardening/basic-powershell-for-pentesters/powerview', 'https://atomicredteam.io/discovery/T1087.001/']","['Account Discovery', 'Discovery', 'Discovery', 'Local Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ee18ed37-0802-4268-9435-b3b91aaa18db/,PowerShell - Connect To Internet With Hidden Window,"['T1059.001', 'T1059']","The following hunting analytic identifies PowerShell commands utilizing the WindowStyle parameter to hide the window on the compromised endpoint. This combination of command-line options is suspicious because it is overriding the default PowerShell execution policy, attempts to hide its activity from the user, and connects to the Internet. Removed in this version of the query is New-Object. The analytic identifies all variations of WindowStyle, as PowerShell allows the ability to shorten the parameter. For example w, win, windowsty and so forth. In addition, through our research it was identified that PowerShell will interpret different command switch types beyond the hyphen. We have added endash, emdash, horizontal bar, and forward slash.",['Hunting'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` by Processes.user Processes.process_name Processes.process Processes.parent_process_name Processes.original_file_name Processes.dest Processes.process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/
|–
|—
|―]w(in*d*o*w*s*t*y*l*e*)*\s+[^-]"") 
| `powershell___connect_to_internet_with_hidden_window_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.process', 'Processes.process_name', 'Processes.user', 'Processes.parent_process_name', 'Processes.dest']","Legitimate process can have this combination of command-line options, but it's not common.","['AgentTesla', 'HAFNIUM Group', 'Hermetic Wiper', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'Malicious PowerShell', 'Data Destruction', 'Log4Shell CVE-2021-44228']","['https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/hafnium_group', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/malicious_powershell', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/log4shell_cve-2021-44228']","['https://regexr.com/663rr', 'https://github.com/redcanaryco/AtomicTestHarnesses/blob/master/TestHarnesses/T1059.001_PowerShell/OutPowerShellCommandLineParameter.ps1', 'https://ss64.com/ps/powershell.html', 'https://twitter.com/M_haggis/status/1440758396534214658?s=20', 'https://blog.netlab.360.com/ten-families-of-malicious-samples-are-spreading-using-the-log4j2-vulnerability-now/']","['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ef3c5ef2-3f6d-4087-aa75-49bf746dc907/,Windows WMI Process And Service List,['T1047'],"The following analytic identifies suspicious process command line, where WMI is performing an event query looking for running processes or running services. This technique is commonly found where the adversary will identify services and system information on the compromised machine. During triage, review parallel processes within the same timeframe. Review the full script block to identify other related artifacts.",['Anomaly'],"November 30, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_wmic` Processes.process IN (""*process list*"", ""*service list*"") by Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.process_guid Processes.parent_process_name Processes.parent_process Processes.parent_process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_wmi_process_and_service_list_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'Processes.parent_process_guid', 'Processes.process_guid']",netowrk administrator or IT may execute this command for auditing processes and services.,"['Windows Post-Exploitation', 'Prestige Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/prestige_ransomware']","['https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS', 'https://www.microsoft.com/en-us/security/blog/2022/10/14/new-prestige-ransomware-impacts-organizations-in-ukraine-and-poland/']","['Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Management Instrumentation']",['Endpoint']
https://research.splunk.com/endpoint/eff7919a-8330-11eb-83f8-acde48001122/,Ransomware Notes bulk creation,['T1486'],"The following analytics identifies a big number of instance of ransomware notes (filetype e.g .txt, .html, .hta) file creation to the infected machine. This behavior is a good sensor if the ransomware note filename is quite new for security industry or the ransomware note filename is not in your ransomware lookup table list for monitoring.",['Anomaly'],"March 12, 2021","`sysmon` EventCode=11 file_name IN (""*\.txt"",""*\.html"",""*\.hta"") 
|bin _time span=10s 
| stats min(_time) as firstTime max(_time) as lastTime dc(TargetFilename) as unique_readme_path_count values(TargetFilename) as list_of_readme_path by Computer Image file_name 
| rename Computer as dest 
| where unique_readme_path_count >= 15 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `ransomware_notes_bulk_creation_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'file_name', '_time', 'TargetFilename', 'dest', 'Image', 'user']",unknown,"['Clop Ransomware', 'DarkSide Ransomware', 'BlackMatter Ransomware', 'Chaos Ransomware', 'LockBit Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/blackmatter_ransomware', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/lockbit_ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html']","['Data Encrypted for Impact', 'Impact', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f0306acf-a6ab-437a-bbc6-8628f8d5c97e/,Windows Steal Authentication Certificates - ESC1 Authentication,"['T1649', 'T1550']","The following analytic identifies when a suspicious certificate is granted using Active Directory Certificate Services (AD CS) with a Subject Alternative Name (SAN) and then immediately used for authentication. This action alone may not be malicious, however improperly configured certificate templates can be abused to permit privilege escalation and environment compromise due to over permissive settings (AD CS ESC1).",['TTP'],"May 25, 2023","`wineventlog_security` EventCode IN (4887) Attributes=""*SAN:*upn*"" Attributes=""*CertificateTemplate:*"" 
| stats count min(_time) as firstTime max(_time) as lastTime values(name) as name values(status) as status values(Subject) as ssl_subject values(SubjectKeyIdentifier) as ssl_hash by Computer, EventCode, Requester, Attributes, RequestId 
| rex field=Attributes ""(?i)CertificateTemplate:(?<object>[^\r\n]+)"" 
| rex field=Attributes ""(?i)ccm:(?<req_src>[^\r\n]+)"" 
| rex max_match=10 field=Attributes ""(?i)(upn=(?<req_user_1>[^\r\n&]+))"" 
| rex max_match=10 field=Attributes ""(?i)(dns=(?<req_dest_1>[^\r\n&]+))"" 
| rex field=Requester ""(.+\\\\)?(?<src_user>[^\r\n]+)"" 
| rename Attributes as object_attrs, EventCode as signature_id, name as signature, RequestId as ssl_serial, Requester as ssl_subject_common_name 
| eval user = lower(coalesce(req_user_1,req_user_2))  
| join user [ 
| search `wineventlog_security` EventCode=4768 CertThumbprint=* 
| rename TargetUserName as user, Computer as auth_dest, IpAddress as auth_src 
| fields auth_src,auth_dest,user ] 
| eval src = upper(coalesce(auth_src,req_src)), dest = upper(coalesce(auth_dest,req_dest_1,req_dest_2)), risk_score = 90 
| eval flavor_text = case(signature_id==""4887"", ""User account ["".'user'.""] authenticated after a suspicious certificate was issued for it by ["".'src_user'.""] using certificate request ID: "".'ssl_serial') 
| fields - req_* auth_* 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_steal_authentication_certificates___esc1_authentication_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'Attributes', 'Computer', 'EventCode', 'Requester', 'RequestId', 'TargetUserName', 'Computer', 'IpAddress']",False positives may be generated in environments where administrative users or processes are allowed to generate certificates with Subject Alternative Names for authentication. Sources or templates used in these processes may need to be tuned out for accurate function.,['Windows Certificate Services'],['https://research.splunk.com/stories/windows_certificate_services'],"['https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf', 'https://github.com/ly4k/Certipy#esc1', 'https://pentestlaboratories.com/2021/11/08/threat-hunting-certificate-account-persistence/']","['Credential Access', 'Defense Evasion', 'Lateral Movement', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates', 'Use Alternate Authentication Material']",['Endpoint']
https://research.splunk.com/endpoint/f03355e0-28b5-4e9b-815a-6adffc63b38c/,Windows Rundll32 WebDav With Network Connection,['T1048.003'],The following analytic identifies rundll32.exe with the commandline arguments loading davclnt.dll function - davsetcookie - to be used to access a remote WebDav instance. The analytic attempts to use join from Processes and All_Traffic to identify the network connection. This particular behavior was recently showcased in CVE-2023-23397.,['TTP'],"January 30, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.parent_process_name=svchost.exe `process_rundll32` Processes.process IN (""*\\windows\\system32\\davclnt.dll,*davsetcookie*"", ""*\\windows\\syswow64\\davclnt.dll,*davsetcookie*"") by host _time span=1h Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| rename dest as src 
| join host process_id [ 
| tstats `security_content_summariesonly` count latest(All_Traffic.dest) as dest latest(All_Traffic.dest_ip) as dest_ip latest(All_Traffic.dest_port) as dest_port FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port!=0 NOT (All_Traffic.dest_ip IN (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16))  by host All_Traffic.process_id 
| `drop_dm_object_name(All_Traffic)`] 
| `windows_rundll32_webdav_with_network_connection_filter`","['security_content_summariesonly', 'process_rundll32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id', 'All_Traffic.dest_port', 'All_Traffic.dest_ip', 'All_Traffic.dest']","False positives will be present based on legitimate software, filtering may need to occur.",['CVE-2023-23397 Outlook Elevation of Privilege'],['https://research.splunk.com/stories/cve-2023-23397_outlook_elevation_of_privilege'],"['https://strontic.github.io/xcyclopedia/library/davclnt.dll-0EA3050E7CC710526E330C413C165DA0.html', 'https://twitter.com/ACEResponder/status/1636116096506818562?s=20', 'https://twitter.com/domchell/status/1635999068282408962?s=20', 'https://msrc.microsoft.com/blog/2023/03/microsoft-mitigates-outlook-elevation-of-privilege-vulnerability/', 'https://www.pwndefend.com/2023/03/15/the-long-game-persistent-hash-theft/']","['Endpoint', 'Exfiltration', 'Exfiltration Over Unencrypted Non-C2 Protocol', 'Network_Traffic', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f0c693d8-2a89-4ce7-80b4-98fea4c3ea6d/,Sc exe Manipulating Windows Services,"['T1543.003', 'T1543']",This search looks for arguments to sc.exe indicating the creation or modification of a Windows service.,['TTP'],"July 21, 2020","| tstats `security_content_summariesonly` values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = sc.exe (Processes.process=""* create *"" OR Processes.process=""* config *"") by Processes.process_name Processes.parent_process_name Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `sc_exe_manipulating_windows_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_name', 'Processes.process', 'Processes.parent_process_name', 'Processes.dest', 'Processes.user']","Using sc.exe to manipulate Windows services is uncommon. However, there may be legitimate instances of this behavior. It is important to validate and investigate as appropriate.","['Windows Service Abuse', 'DHS Report TA18-074A', 'Orangeworm Attack Group', 'Windows Persistence Techniques', 'Disabling Security Tools', 'NOBELIUM Group', 'Azorult', 'Windows Drivers']","['https://research.splunk.com/stories/windows_service_abuse', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/orangeworm_attack_group', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/disabling_security_tools', 'https://research.splunk.com/stories/nobelium_group', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/windows_drivers']",['https://www.secureworks.com/blog/drokbk-malware-uses-github-as-dead-drop-resolver'],"['Create or Modify System Process', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/f0c9d62f-a232-4edd-b17e-bc409fb133d4/,Domain Group Discovery With Dsquery,"['T1069', 'T1069.002']","This analytic looks for the execution of dsquery.exe with command-line arguments utilized to query for domain groups. The argument group, returns a list of all domain groups. Red Teams and adversaries alike use may leverage dsquery.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"September 1, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""dsquery.exe"") (Processes.process=""*group*"") by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_dsquery_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f0db4464-55d9-11eb-ae93-0242ac130002/,Suspicious microsoft workflow compiler rename,"['T1036', 'T1127', 'T1036.003']","The following analytic identifies a renamed instance of microsoft.workflow.compiler.exe. Microsoft.workflow.compiler.exe is natively found in C:\Windows\Microsoft.NET\Framework64\v4.0.30319 and is rarely utilized. When investigating, identify the executed code on disk and review. A spawned child process from microsoft.workflow.compiler.exe is uncommon. In any instance, microsoft.workflow.compiler.exe spawning from an Office product or any living off the land binary is highly suspect.",['Hunting'],"November 7, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name!=microsoft.workflow.compiler.exe AND Processes.original_file_name=Microsoft.Workflow.Compiler.exe by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.original_file_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_microsoft_workflow_compiler_rename_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Although unlikely, some legitimate applications may use a moved copy of microsoft.workflow.compiler.exe, triggering a false positive.","['Masquerading - Rename System Utilities', 'Living Off The Land', 'Cobalt Strike', 'Trusted Developer Utilities Proxy Execution', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://lolbas-project.github.io/lolbas/Binaries/Microsoft.Workflow.Compiler/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218/T1218.md#atomic-test-6---microsoftworkflowcompilerexe-payload-execution']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f0eacfa4-d33f-11eb-8f9d-acde48001122/,Disable ETW Through Registry,"['T1562.001', 'T1562']","This search is to identify modification in registry to disable ETW windows feature to evade detections. This technique was seen in several ransomware, RAT and even APT to impaire defenses of the compromise machine and to be able to execute payload with minimal alert as much as possible.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\.NETFramework\\ETWEnabled"" Registry.registry_value_data = ""0x00000000"") BY _time span=1h Registry.dest Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disable_etw_through_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",network operator may disable this feature of windows but not so common.,"['Ransomware', 'CISA AA23-347A', 'Windows Registry Abuse']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://app.any.run/tasks/c0f98850-af65-4352-9746-fbebadee4f05/'],"['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f122cb2e-d773-4f11-8399-62a3572d8dd7/,Windows Unusual Count Of Invalid Users Fail To Auth Using Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with multiple invalid domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack using an invalid list of users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x6 stands for client not found in Kerberos database (the attempted user is not a valid domain user).
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security` EventCode=4768 TargetUserName!=*$ Status=0x6 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by IpAddress 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_invalid_users_fail_to_auth_using_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple invalid domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, multi-user systems and missconfigured systems.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon']",['https://attack.mitre.org/techniques/T1110/003/'],"['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f1483f5e-ee29-11eb-9d23-acde48001122/,Rundll32 DNSQuery,"['T1218', 'T1218.011']",This search is to detect a suspicious rundll32.exe process having a http connection and do a dns query in some web domain. This technique was seen in IcedID malware where the rundll32 that execute its payload will contact amazon.com to check internet connect and to communicate to its C&C server to download config and other file component.,['TTP'],"February 18, 2022","`sysmon` EventCode=22 process_name=""rundll32.exe"" 
| stats count min(_time) as firstTime max(_time) as lastTime values(query) as query values(answer) as answer values(QueryResults) as query_results values(QueryStatus) as query_status by process_name process_guid Computer 
| rename Computer as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_dnsquery_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'QueryName', 'QueryStatus', 'ProcessId', 'dest']",unknown,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://any.run/malware-trends/icedid'],"['Defense Evasion', 'Defense Evasion', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f1c07594-a141-11eb-8407-acde48001122/,DLLHost with no Command Line Arguments with Network,['T1055'],"The following analytic identifies DLLHost.exe with no command line arguments with a network connection. It is unusual for DLLHost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, triage any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. DLLHost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_name=dllhost.exe Processes.action!=""blocked"" by host _time span=1h Processes.process_id Processes.process_name Processes.dest Processes.process_path Processes.process Processes.parent_process_name Processes.parent_process 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(dllhost\.exe.{0,4}$)"" 
| rename dest as src 
| join host process_id [
| tstats `security_content_summariesonly` count latest(All_Traffic.dest) as dest latest(All_Traffic.dest_ip) as dest_ip latest(All_Traffic.dest_port) as dest_port FROM datamodel=Network_Traffic.All_Traffic where All_Traffic.dest_port != 0 by host All_Traffic.process_id 
| `drop_dm_object_name(All_Traffic)`] 
| `dllhost_with_no_command_line_arguments_with_network_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'EventID', 'process_name', 'process_id', 'parent_process_name', 'dest_port', 'process_path']","Although unlikely, some legitimate third party applications may use a moved copy of dllhost, triggering a false positive.","['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://raw.githubusercontent.com/threatexpress/malleable-c2/c3385e481159a759f79b8acfe11acf240893b830/jquery-c2.4.2.profile', 'https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/']","['Defense Evasion', 'Endpoint', 'Network_Traffic', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f253f9c2-10f0-4cc8-b469-f505ba8c2038/,Windows Execute Arbitrary Commands with MSDT,['T1218'],"The following analytic identifies a recently disclosed arbitraty command execution using Windows msdt.exe - a Diagnostics Troubleshooting Wizard. The sample identified will use the ms-msdt:/ protocol handler to load msdt.exe to retrieve a remote payload. During triage, review file modifications for html. Identify parallel process execution that may be related, including an Office Product.",['TTP'],"September 15, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where ((process_cmd_line LIKE ""%ms-msdt:/id%"" OR process_cmd_line LIKE ""%ms-msdt:-id%"" OR process_cmd_line LIKE ""%ms-msdt:/id%"" OR process_cmd_line LIKE ""%ms-msdt:%"" OR process_cmd_line LIKE ""%msdt%"") AND process_file_name=""msdt.exe"") AND (match(process_cmd_line, /(?i).xml/)=true OR match(process_cmd_line, /(?i)it_rebrowseforfile=/)=true OR match(process_cmd_line, /(?i)it_browseforfile=/)=true) AND match(process_cmd_line, /(?i)pcwdiagnostic/)=true --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives may be present, filter as needed. Added .xml to potentially capture any answer file usage. Remove as needed.",['Microsoft Support Diagnostic Tool Vulnerability CVE-2022-30190'],['https://research.splunk.com/stories/microsoft_support_diagnostic_tool_vulnerability_cve-2022-30190'],"['https://isc.sans.edu/diary/rss/28694', 'https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e', 'https://twitter.com/nao_sec/status/1530196847679401984?s=20&t=ZiXYI4dQuA-0_dzQzSUb3A', 'https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/', 'https://www.virustotal.com/gui/file/4a24048f81afbe9fb62e7a6a49adbd1faf41f266b5f9feecdceb567aec096784/detection', 'https://strontic.github.io/xcyclopedia/library/msdt.exe-152D4C9F63EFB332CCB134C6953C0104.html']","['Defense Evasion', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f2a1615a-1d63-11ec-97d2-acde48001122/,Remcos client registry install entry,['T1112'],"The following analytic detects the presence of a registry key related to the Remcos RAT agent on a host. This detection is made by a Splunk query to search for instances where the registry key ""license"" is found in the ""Software\Remcos"" path. This analytic combines information from two data models: Endpoint.Processes and Endpoint.Registry and retrieves process information such as user, process ID, process name, process path, destination, parent process name, parent process, and process GUID. This analytic also retrieves registry information such as registry path, registry key name, registry value name, registry value data, and process GUID. By joining the process GUID from the Endpoint.Processes data model with the process GUID from the Endpoint.Registry data model, the analytic identifies instances where the ""license"" registry key is found in the ""Software\Remcos"" path. This detection is important because it suggests that the host has been compromised by the Remcos RAT agent. Remcos is a well-known remote access Trojan that can be used by attackers to gain unauthorized access to systems and exfiltrate sensitive data. Identifying this behavior allows the SOC to take immediate action to remove the RAT agent and prevent further compromise. The impact of this attack can be severe, as the attacker can gain unauthorized access to the system, steal sensitive information, or use the compromised system as a launching point for further attacks. Next steps include using this analytic in conjunction with other security measures and threat intelligence to ensure accurate detection and response.",['TTP'],"November 14, 2022","| tstats `security_content_summariesonly` count min(_time) AS firstTime max(_time) AS lastTime FROM datamodel=Endpoint.Processes BY _time span=1h Processes.user Processes.process_id Processes.process_name Processes.process Processes.process_path Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| join process_guid [ 
| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_key_name=*\\Software\\Remcos*) BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`] 
| fields firstTime lastTime dest user parent_process_name parent_process process_name process_path process registry_key_name registry_path registry_value_name registry_value_data process_guid 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
|`remcos_client_registry_install_entry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.user', 'Processes.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.process_path', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_guid', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",unknown,"['Remcos', 'Windows Registry Abuse']","['https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_registry_abuse']",['https://attack.mitre.org/software/S0332/'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f2cc1584-46ee-485b-b905-977c067f36de/,Windows Vulnerable 3CX Software,['T1195.002'],"The following analytic leverages Sysmon, a powerful system monitoring and logging tool, to pinpoint instances of the 3CXDesktopApp.exe with a FileVersion of 18.12.x.Recently, 3CX has discovered a vulnerability specifically in versions 18.12.407 and 18.12.416 of the desktop app.",['TTP'],"March 30, 2023","`sysmon` (process_name=3CXDesktopApp.exe OR OriginalFileName=3CXDesktopApp.exe)  FileVersion=18.12.* 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, parent_process_name,process_name, OriginalFileName, CommandLine 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_vulnerable_3cx_software_filter`","['security_content_ctime', 'sysmon']","['_time', 'OriginalFileName', 'process_name', 'EventID', 'CommandLine', 'dest', 'parent_process_name']","False positives may be present based on file version, modify the analytic to only look for version between 18.12.407 and 18.12.416 as needed.",['3CX Supply Chain Attack'],['https://research.splunk.com/stories/3cx_supply_chain_attack'],"['https://www.sentinelone.com/blog/smoothoperator-ongoing-campaign-trojanizes-3cx-software-in-software-supply-chain-attack/', 'https://www.cisa.gov/news-events/alerts/2023/03/30/supply-chain-attack-against-3cxdesktopapp', 'https://www.reddit.com/r/crowdstrike/comments/125r3uu/20230329_situational_awareness_crowdstrike/', 'https://www.3cx.com/community/threads/crowdstrike-endpoint-security-detection-re-3cx-desktop-app.119934/page-2#post-558898', 'https://www.3cx.com/community/threads/3cx-desktopapp-security-alert.119951/']","['Compromise Software Supply Chain', 'Initial Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f2e08a38-6689-4df4-ad8c-b51c16262316/,Linux Disable Services,['T1489'],The following analytic is to detect events that attempts to disable a service. This is typically identified in parallel with other instances of service enumeration of attempts to stop a service and then delete it. Adversaries utilize this technique like industroyer2 malware to terminate security services or other related services to continue there objective as a destructive payload.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name IN (""systemctl"", ""service"", ""svcadm"")  Processes.process = ""* disable*"" by Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid Processes.dest Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_disable_services_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",Administrator or network operator can use this application for automation purposes. Please update the filter macros to remove false positives.,"['AwfulShred', 'Data Destruction', 'Industroyer2']","['https://research.splunk.com/stories/awfulshred', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/industroyer2']","['https://www.welivesecurity.com/2022/04/12/industroyer2-industroyer-reloaded/', 'https://cert.gov.ua/article/39518']","['Endpoint', 'Impact', 'Service Stop', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f2f14ac7-fa81-471a-80d5-7eb65c3c7349/,Domain Group Discovery With Net,"['T1069', 'T1069.002']","This analytic looks for the execution of net.exe with command-line arguments utilized to query for domain groups. The argument group /domain, returns a list of all domain groups. Red Teams and adversaries alike use net.exe to enumerate domain groups for situational awareness and Active Directory Discovery.",['Hunting'],"June 13, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=""net.exe"" OR Processes.process_name=""net1.exe"") (Processes.process=*group* AND Processes.process=*/do*) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `domain_group_discovery_with_net_filter`","['security_content_summariesonly', 'security_content_ctime']","['Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Administrators or power users may use this command for troubleshooting.,"['Windows Post-Exploitation', 'Active Directory Discovery', 'Prestige Ransomware', 'Graceful Wipe Out Attack', 'Rhysida Ransomware']","['https://research.splunk.com/stories/windows_post-exploitation', 'https://research.splunk.com/stories/active_directory_discovery', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/rhysida_ransomware']",['https://attack.mitre.org/techniques/T1069/002/'],"['Discovery', 'Discovery', 'Domain Groups', 'Endpoint', 'Permission Groups Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f308490a-473a-40ef-ae64-dd7a6eba284a/,Suspicious GPUpdate no Command Line Arguments,['T1055'],"The following analytic identifies gpupdate.exe with no command line arguments. It is unusual for gpupdate.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. gpupdate.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_gpupdate` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(gpupdate\.exe.{0,4}$)"" 
| `suspicious_gpupdate_no_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_gpupdate']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives may be present in small environments. Tuning may be required based on parent process.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://raw.githubusercontent.com/xx0hcd/Malleable-C2-Profiles/0ef8cf4556e26f6d4190c56ba697c2159faa5822/crimeware/trick_ryuk.profile', 'https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f39ee679-3b1e-4f47-841c-5c3c580acda2/,Windows DLL Search Order Hijacking with iscsicpl,['T1574.001'],"The following analytic identifies a recently disclosed search ordler DLL hijack in iscsicpl.exe. The malicious DLL must be in a new path and iscsicpl.exe, upon load, will execute the payload. The analytic is restricted to Windows shells. Two proof of concepts were identified and utilized to determine the behavior. The command-line is an option to go after, but most likely identifying a child process off iscsicpl.exe will be more effective. Monitoring for suspicious DLL loads is also an option.",['TTP'],"July 29, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name=iscsicpl.exe `windows_shells` by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `windows_dll_search_order_hijacking_with_iscsicpl_filter`","['security_content_summariesonly', 'windows_shells', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","False positives may be present, filtering may be required. Remove the Windows Shells macro to determine if other utilities are using iscsicpl.exe.","['Windows Defense Evasion Tactics', 'Living Off The Land']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/hackerhouse-opensource/iscsicpl_bypassUAC', 'https://github.com/422926799/csplugin/tree/master/bypassUAC']","['Defense Evasion', 'DLL Search Order Hijacking', 'Endpoint', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f421c250-24e7-11ec-bc43-acde48001122/,Regsvr32 Silent and Install Param Dll Loading,"['T1218', 'T1218.010']","This analytic is to detect a loading of dll using regsvr32 application with silent parameter and dllinstall execution. This technique was seen in several RAT malware similar to remcos, njrat and adversaries to load their malicious DLL on the compromised machine. This TTP may executed by normal 3rd party application so it is better to pivot by the parent process, parent command-line and command-line of the file that execute this regsvr32.",['Anomaly'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_regsvr32` AND Processes.process=""*/i*"" by Processes.dest Processes.parent_process Processes.process Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| where match(process,""(?i)[\-
|\/][Ss]{1}"") 
| `regsvr32_silent_and_install_param_dll_loading_filter`","['security_content_summariesonly', 'process_regsvr32', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Other third part application may used this parameter but not so common in base windows environment.,"['AsyncRAT', 'Hermetic Wiper', 'Living Off The Land', 'Data Destruction', 'Remcos', 'Suspicious Regsvr32 Activity']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/suspicious_regsvr32_activity']","['https://app.any.run/tasks/dc93ee63-050c-4ff8-b07e-8277af9ab939/', 'https://attack.mitre.org/techniques/T1218/010/']","['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Regsvr32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f443dac2-c7cf-11eb-ab51-acde48001122/,Excessive number of taskhost processes,['T1059'],"This detection targets behaviors observed in post exploit kits like Meterpreter and Koadic that are run in memory.  We have observed that these tools must invoke an excessive number of taskhost.exe and taskhostex.exe processes to complete various actions (discovery, lateral movement, etc.).  It is extremely uncommon in the course of normal operations to see so many distinct taskhost and taskhostex processes running concurrently in a short time frame.",['Anomaly'],"November 7, 2023","| tstats `security_content_summariesonly` values(Processes.process_id) as process_ids  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE Processes.process_name = ""taskhost.exe"" OR Processes.process_name = ""taskhostex.exe"" BY Processes.dest Processes.process_name _time span=1h 
| `drop_dm_object_name(Processes)` 
| eval pid_count=mvcount(process_ids) 
| eval taskhost_count_=if(process_name == ""taskhost.exe"", pid_count, 0) 
| eval taskhostex_count_=if(process_name == ""taskhostex.exe"", pid_count, 0) 
| stats sum(taskhost_count_) as taskhost_count, sum(taskhostex_count_) as taskhostex_count by _time, dest, firstTime, lastTime 
| where taskhost_count > 10 and taskhostex_count > 10 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_number_of_taskhost_processes_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process_id', 'Processes.process_name', 'Processes.dest', 'Processes.user']","Administrators, administrative actions or certain applications may run many instances of taskhost and taskhostex concurrently.  Filter as needed.",['Meterpreter'],['https://research.splunk.com/stories/meterpreter'],['https://attack.mitre.org/software/S0250/'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f48cd1d4-125a-11ec-a447-acde48001122/,Office Product Writing cab or inf,"['T1566', 'T1566.001']","The following analytic identifies behavior related to CVE-2021-40444. Whereas the malicious document will load ActiveX and download the remote payload (.inf, .cab). During triage, review parallel processes and further activity on endpoint to identify additional patterns. Retrieve the file modifications and analyze further.",['TTP'],"February 15, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""wordpad.exe"",""wordview.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"") by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid 
| `drop_dm_object_name(Processes)` 
|rename process_guid as proc_guid 
| join proc_guid, _time [ 
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.inf"",""*.cab"") by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid 
| `drop_dm_object_name(Filesystem)` 
|rename process_guid as proc_guid 
| fields _time dest file_create_time file_name file_path process_name process_path process proc_guid] 
| dedup file_create_time 
| table dest, process_name, process, file_create_time, file_name, file_path, proc_guid 
| `office_product_writing_cab_or_inf_filter`",['security_content_summariesonly'],"['_time', 'dest', 'process_name', 'process', 'file_create_time', 'file_name', 'file_path']","The query is structured in a way that action (read, create) is not defined. Review the results of this query, filter, and tune as necessary. It may be necessary to generate this query specific to your endpoint product.","['Spearphishing Attachments', 'Microsoft MSHTML Remote Code Execution CVE-2021-40444']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/microsoft_mshtml_remote_code_execution_cve-2021-40444']","['https://twitter.com/vxunderground/status/1436326057179860992?s=20', 'https://app.any.run/tasks/36c14029-9df8-439c-bba0-45f2643b0c70/', 'https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444', 'https://twitter.com/RonnyTNL/status/1436334640617373699?s=20', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f4f837e2-91fb-11eb-8bf6-acde48001122/,Disabling SystemRestore In Registry,['T1490'],The following search identifies the modification of registry related in disabling the system restore of a machine. This event or behavior are seen in some RAT malware to make the restore of the infected machine  difficult and keep their infection on the box.,['TTP'],"February 14, 2024","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\\DisableSR"" OR Registry.registry_path= ""*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\\DisableConfig"" OR Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\\DisableSR"" OR Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\\DisableConfig"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h  Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)`
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_systemrestore_in_registry_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",in some cases admin can disable systemrestore on a machine.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'NjRAT']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/njrat']",['https://tccontre.blogspot.com/2020/01/remcos-rat-evading-windows-defender-av.html'],"['Endpoint', 'Impact', 'Inhibit System Recovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f5198224-551c-11eb-ae93-0242ac130002/,Suspicious msbuild path,"['T1036', 'T1127', 'T1036.003', 'T1127.001']","The following analytic identifies msbuild.exe executing from a non-standard path. Msbuild.exe is natively found in C:\Windows\Microsoft.NET\Framework\v4.0.30319 and C:\Windows\Microsoft.NET\Framework64\v4.0.30319. Instances of Visual Studio will run a copy of msbuild.exe. A moved instance of MSBuild is suspicious, however there are instances of build applications that will move or use a copy of MSBuild.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count values(Processes.process_name) as process_name values(Processes.process) as process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_msbuild` AND (Processes.process_path!=*\\framework*\\v*\\*) by Processes.dest Processes.original_file_name Processes.parent_process Processes.user 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `suspicious_msbuild_path_filter`","['security_content_summariesonly', 'process_msbuild', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Some legitimate applications may use a moved copy of msbuild.exe, triggering a false positive. Baselining of MSBuild.exe usage is recommended to better understand it's path usage. Visual Studio runs an instance out of a path that will need to be filtered on.","['Trusted Developer Utilities Proxy Execution MSBuild', 'Masquerading - Rename System Utilities', 'Living Off The Land', 'Cobalt Strike', 'BlackByte Ransomware', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/trusted_developer_utilities_proxy_execution_msbuild', 'https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/living_off_the_land', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://lolbas-project.github.io/lolbas/Binaries/Msbuild/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1127.001/T1127.001.md']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Masquerading', 'MSBuild', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Trusted Developer Utilities Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f52d2db8-31f9-4aa7-a176-25779effe55c/,Suspicious SearchProtocolHost no Command Line Arguments,['T1055'],"The following analytic identifies searchprotocolhost.exe with no command line arguments. It is unusual for searchprotocolhost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. searchprotocolhost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=searchprotocolhost.exe by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(searchprotocolhost\.exe.{0,4}$)"" 
| `suspicious_searchprotocolhost_no_command_line_arguments_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives may be present in small environments. Tuning may be required based on parent process.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']",['https://github.com/mandiant/red_team_tool_countermeasures/blob/master/rules/PGF/supplemental/hxioc/SUSPICIOUS%20EXECUTION%20OF%20SEARCHPROTOCOLHOST%20(METHODOLOGY).ioc'],"['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f533ca6c-9440-4686-80cb-7f294c07812a/,Detect Certify With PowerShell Script Block Logging,"['T1649', 'T1059', 'T1059.001']",The following analytic identifies when the attacker tool  Certify is used through an in-memory PowerShell function to enumerate Active Directory Certificate Services (AD CS) environments. The default command line arguments for the binary version of this tools are similar to PowerShell calls and perform near identical enumeration or exploitation functions.,['TTP'],"June 25, 2023","`powershell` EventCode=4104 (ScriptBlockText IN (""*find *"") AND ScriptBlockText IN (""* /vulnerable*"",""* -vulnerable*"",""* /enrolleeSuppliesSubject *"",""* /json /outfile*"")) OR (ScriptBlockText IN (,""*auth *"",""*req *"",) AND ScriptBlockText IN (""* -ca *"",""* -username *"",""* -u *"")) OR (ScriptBlockText IN (""*request *"",""*download *"") AND ScriptBlockText IN (""* /ca:*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime list(ScriptBlockText) as command Values(OpCode) as reason values(Path) as file_name values(UserID) as user by _time Computer EventCode 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| eval file_name = case(isnotnull(file_name),file_name,true(),""unknown"") 
| eval signature = substr(command,0,256) 
| rename Computer as dest,EventCode as signature_id 
| `detect_certify_with_powershell_script_block_logging_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'OpCode', 'Path', 'user', 'Computer', 'EventCode']","Unknown, partial script block matches.","['Windows Certificate Services', 'Malicious PowerShell']","['https://research.splunk.com/stories/windows_certificate_services', 'https://research.splunk.com/stories/malicious_powershell']","['https://github.com/GhostPack/Certify', 'https://specterops.io/wp-content/uploads/sites/3/2022/06/Certified_Pre-Owned.pdf']","['Command and Scripting Interpreter', 'Credential Access', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Authentication Certificates']",['Endpoint']
https://research.splunk.com/endpoint/f5939373-8054-40ad-8c64-cec478a22a4a/,Remote Desktop Process Running On System,"['T1021.001', 'T1021']",This search looks for the remote desktop process mstsc.exe running on systems upon which it doesn't typically run. This is accomplished by filtering out all systems that are noted in the common_rdp_source category in the Assets and Identity framework.,['Hunting'],"July 21, 2020","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=*mstsc.exe AND Processes.dest_category!=common_rdp_source by Processes.dest Processes.user Processes.process 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| `remote_desktop_process_running_on_system_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.process', 'Processes.dest_category', 'Processes.dest', 'Processes.user']",Remote Desktop may be used legitimately by users on the network.,"['Hidden Cobra Malware', 'Active Directory Lateral Movement']","['https://research.splunk.com/stories/hidden_cobra_malware', 'https://research.splunk.com/stories/active_directory_lateral_movement']",N/A,"['Endpoint', 'Lateral Movement', 'Lateral Movement', 'Remote Desktop Protocol', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f5ab595e-28e5-4327-8077-5008ba97c850/,Linux SSH Authorized Keys Modification,['T1098.004'],"The following analytic identifies based on process execution the modification of SSH Authorized Keys. Adversaries perform this behavior to persist on endpoints. During triage, review parallel processes and capture any additional file modifications for review.",['Anomaly'],"July 27, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where  Processes.process_name IN (""bash"",""cat"") Processes.process IN (""*/authorized_keys*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_ssh_authorized_keys_modification_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Filtering will be required as system administrators will add and remove. One way to filter query is to add ""echo"".",['Linux Living Off The Land'],['https://research.splunk.com/stories/linux_living_off_the_land'],"['https://redcanary.com/blog/lateral-movement-with-secure-shell/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1098.004/T1098.004.md']","['Endpoint', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'SSH Authorized Keys']",['Endpoint']
https://research.splunk.com/endpoint/f5f6af30-7aa7-4295-bfe9-07fe87c01a4b/,Registry Keys Used For Persistence,"['T1547.001', 'T1547']","The search looks for modifications or alterations made to registry keys that have the potential to initiate the launch of an application or service during system startup. By monitoring and detecting modifications in these registry keys, we can identify suspicious or unauthorized changes that could be indicative of malicious activity. This proactive approach helps in safeguarding the system's integrity and security by promptly identifying and mitigating potential threats that aim to gain persistence or execute malicious actions during the startup process.",['TTP'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce OR Registry.registry_path=*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\StartupApproved\\Run OR Registry.registry_path= ""*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\\*"" OR Registry.registry_path= ""*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\*"" OR Registry.registry_path=*\\currentversion\\run* OR Registry.registry_path=*\\currentVersion\\Windows\\Appinit_Dlls* OR Registry.registry_path=*\\CurrentVersion\\Winlogon\\Shell* OR Registry.registry_path=*\\CurrentVersion\\Winlogon\\Notify* OR Registry.registry_path=*\\CurrentVersion\\Winlogon\\Userinit* OR Registry.registry_path=*\\CurrentVersion\\Winlogon\\VmApplet* OR Registry.registry_path=*\\currentversion\\policies\\explorer\\run* OR Registry.registry_path=*\\currentversion\\runservices* OR Registry.registry_path=HKLM\\SOFTWARE\\Microsoft\\Netsh\\* OR Registry.registry_path= ""*\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Common Startup"" OR Registry.registry_path= *\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler OR Registry.registry_path= *\\Classes\\htmlfile\\shell\\open\\command OR (Registry.registry_path=""*Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options*"" AND Registry.registry_key_name=Debugger) OR (Registry.registry_path=""*\\CurrentControlSet\\Control\\Lsa"" AND Registry.registry_key_name=""Security Packages"") OR (Registry.registry_path=""*\\CurrentControlSet\\Control\\Lsa\\OSConfig"" AND Registry.registry_key_name=""Security Packages"") OR (Registry.registry_path=""*\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\*"") OR (Registry.registry_path=""*currentVersion\\Windows"" AND Registry.registry_key_name=""Load"") OR (Registry.registry_path=""*\\CurrentVersion"" AND Registry.registry_key_name=""Svchost"") OR (Registry.registry_path=""*\\CurrentControlSet\Control\Session Manager""AND Registry.registry_key_name=""BootExecute"") OR (Registry.registry_path=""*\\Software\\Run"" AND Registry.registry_key_name=""auto_update"")) by Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `registry_keys_used_for_persistence_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.dest', 'Registry.user']",There are many legitimate applications that must execute on system startup and will use these registry keys to accomplish that task.,"['AsyncRAT', 'Ransomware', 'Windows Persistence Techniques', 'DarkGate Malware', 'NjRAT', 'RedLine Stealer', 'IcedID', 'Sneaky Active Directory Persistence Tricks', 'Chaos Ransomware', 'Azorult', 'DHS Report TA18-074A', 'Emotet Malware  DHS Report TA18-201A', 'Remcos', 'Windows Registry Abuse', 'Qakbot', 'Suspicious MSHTA Activity', 'Suspicious Windows Registry Activities', 'Warzone RAT', 'Possible Backdoor Activity Associated With MUDCARP Espionage Campaigns', 'Amadey', 'BlackByte Ransomware', 'CISA AA23-347A', 'Snake Keylogger']","['https://research.splunk.com/stories/asyncrat', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/darkgate_malware', 'https://research.splunk.com/stories/njrat', 'https://research.splunk.com/stories/redline_stealer', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks', 'https://research.splunk.com/stories/chaos_ransomware', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/dhs_report_ta18-074a', 'https://research.splunk.com/stories/emotet_malware__dhs_report_ta18-201a_', 'https://research.splunk.com/stories/remcos', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/qakbot', 'https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/warzone_rat', 'https://research.splunk.com/stories/possible_backdoor_activity_associated_with_mudcarp_espionage_campaigns', 'https://research.splunk.com/stories/amadey', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/snake_keylogger']",N/A,"['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Registry Run Keys / Startup Folder', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f5f6af30-7aa7-4295-bfe9-07fe87c01bbb/,Registry Keys for Creating SHIM Databases,"['T1546.011', 'T1546']","This search looks for registry activity associated with application compatibility shims, which can be leveraged by attackers for various nefarious purposes.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path=*CurrentVersion\\AppCompatFlags\\Custom* OR Registry.registry_path=*CurrentVersion\\AppCompatFlags\\InstalledSDB*) BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `registry_keys_for_creating_shim_databases_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",There are many legitimate applications that leverage shim databases for compatibility purposes for legacy applications,"['Suspicious Windows Registry Activities', 'Windows Persistence Techniques', 'Windows Registry Abuse']","['https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_registry_abuse']",N/A,"['Application Shimming', 'Endpoint', 'Event Triggered Execution', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f5f6af30-7ba7-4295-bfe9-07de87c01bbc/,Monitor Registry Keys for Print Monitors,"['T1547.010', 'T1547']","This search looks for registry activity associated with modifications to the registry key HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors. In this scenario, an attacker can load an arbitrary .dll into the print-monitor registry by giving the full path name to the after.dll. The system will execute the .dll with elevated (SYSTEM) permissions and will persist after reboot.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.action=modified AND Registry.registry_path=""*CurrentControlSet\\Control\\Print\\Monitors*"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `monitor_registry_keys_for_print_monitors_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",You will encounter noise from legitimate print-monitor registry entries.,"['Suspicious Windows Registry Activities', 'Windows Persistence Techniques', 'Windows Registry Abuse']","['https://research.splunk.com/stories/suspicious_windows_registry_activities', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/windows_registry_abuse']",N/A,"['Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Port Monitors', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f6343e86-6e09-11ec-9376-acde48001122/,Linux Doas Conf File Creation,"['T1548.003', 'T1548']","This analytic is to detect the creation of doas.conf file in linux host platform. This configuration file can be use by doas utility tool to allow or permit standard users to perform tasks as root, the same way sudo does. This tool is developed as a minimalistic alternative to sudo application. This tool can be abused advesaries, attacker or malware to gain elevated privileges to the targeted or compromised host. On the other hand this can also be executed by administrator for a certain task that needs admin rights. In this case filter is needed.",['Anomaly'],"January 5, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_path IN (""*/etc/doas.conf"") by Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path 
| `drop_dm_object_name(Filesystem)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `linux_doas_conf_file_creation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Filesystem.dest', 'Filesystem.file_create_time', 'Filesystem.file_name', 'Filesystem.process_guid', 'Filesystem.file_path']",Administrator or network operator can execute this command. Please update the filter macros to remove false positives.,"['Linux Privilege Escalation', 'Linux Persistence Techniques']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_persistence_techniques']","['https://wiki.gentoo.org/wiki/Doas', 'https://www.makeuseof.com/how-to-install-and-use-doas/']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/f63c34fe-a435-11eb-935a-acde48001122/,Executable File Written in Administrative SMB Share,"['T1021', 'T1021.002']","The following analytic identifies executable files (.exe or .dll) being written to Windows administrative SMB shares (Admin$, IPC$, C$). This represents suspicious behavior as its commonly used by tools like PsExec/PaExec and others to stage service binaries before creating and starting a Windows service on remote endpoints. Red Teams and adversaries alike may abuse administrative shares for lateral movement and remote code execution. The Trickbot malware family also implements this behavior to try to infect other machines in the infected network.",['TTP'],"February 14, 2024","`wineventlog_security` EventCode=5145 RelativeTargetName IN (""*.exe"",""*.dll"") ObjectType=File ShareName IN (""\\\\*\\C$"",""\\\\*\\IPC$"",""\\\\*\\admin$"") AccessMask= ""0x2"" 
| stats min(_time) as firstTime max(_time) as lastTime count by EventCode ShareName RelativeTargetName ObjectType AccessMask src_user src_port IpAddress 
| `security_content_ctime(firstTime)`  
| `executable_file_written_in_administrative_smb_share_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'EventCode', 'Share_Name', 'Relative_Target_Name', 'Object_Type', 'Access_Mask', 'user', 'src_port', 'Source_Address']","System Administrators may use looks like PsExec for troubleshooting or administrations tasks. However, this will typically come only from certain users and certain systems that can be added to an allow list.","['Active Directory Lateral Movement', 'Prestige Ransomware', 'Graceful Wipe Out Attack', 'Industroyer2', 'IcedID', 'Data Destruction', 'Hermetic Wiper', 'Trickbot']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/prestige_ransomware', 'https://research.splunk.com/stories/graceful_wipe_out_attack', 'https://research.splunk.com/stories/industroyer2', 'https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/trickbot']","['https://attack.mitre.org/techniques/T1021/002/', 'https://www.rapid7.com/blog/post/2013/03/09/psexec-demystified/', 'https://labs.vipre.com/trickbot-and-its-modules/', 'https://whitehat.eu/incident-response-case-study-featuring-ryuk-and-trickbot-part-2/', 'https://thedfirreport.com/2023/05/22/icedid-macro-ends-in-nokoyawa-ransomware/']","['Lateral Movement', 'Lateral Movement', 'Remote Services', 'SMB/Windows Admin Shares', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f63f7e9c-9526-11ec-9fc7-acde48001122/,Windows MSHTA Child Process,"['T1218.005', 'T1218']","The following analytic identifies child processes spawning from  ""mshta.exe"". The search will return the first time and last time these command-line arguments were used for these executions, as well as the target system, the user, parent process ""mshta.exe"" and its child process.",['TTP'],"February 23, 2022","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_file_name IN (""wscript.exe"", ""cscript.exe"", ""searchprotocolhost.exe"", ""microsoft.workflow.compiler.exe"", ""msbuild.exe"", ""colorcpl.exe"", ""scrcons.exe"", ""cmd.exe"", ""powershell.exe"")) AND actor_process_file_name LIKE ""%mshta.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","Although unlikely, some legitimate applications may exhibit this behavior, triggering a false positive.","['Suspicious MSHTA Activity', 'Living Off The Land']","['https://research.splunk.com/stories/suspicious_mshta_activity', 'https://research.splunk.com/stories/living_off_the_land']","['https://github.com/redcanaryco/AtomicTestHarnesses', 'https://redcanary.com/blog/introducing-atomictestharnesses/']","['Defense Evasion', 'Defense Evasion', 'Mshta', 'Splunk Behavioral Analytics', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f64579c0-203f-11ec-abcc-acde48001122/,Active Setup Registry Autostart,"['T1547.014', 'T1547']","This analytic is to detect a suspicious modification of the active setup registry for persistence and privilege escalation. This technique was seen in several malware (poisonIvy), adware and APT to gain persistence to the compromised machine upon boot up. This TTP is a good indicator to further check the process id that do the modification since modification of this registry is not commonly done. check the legitimacy of the file and process involve in this rules to check if it is a valid setup installer that creating or modifying this registry.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_value_name= ""StubPath"" Registry.registry_path = ""*\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components*"") BY _time span=1h Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.dest Registry.user 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)`
| `active_setup_registry_autostart_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",Active setup installer may add or modify this registry.,"['Data Destruction', 'Windows Privilege Escalation', 'Hermetic Wiper', 'Windows Persistence Techniques']","['https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/windows_privilege_escalation', 'https://research.splunk.com/stories/hermetic_wiper', 'https://research.splunk.com/stories/windows_persistence_techniques']","['https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Backdoor%3AWin32%2FPoisonivy.E', 'https://attack.mitre.org/techniques/T1547/014/']","['Active Setup', 'Boot or Logon Autostart Execution', 'Endpoint', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f64da023-b988-4775-8d57-38e512beb56e/,GetDomainComputer with PowerShell Script Block,['T1018'],"The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-DomainComputer commandlet. GetDomainComputer is part of PowerView, a PowerShell tool used to perform enumeration on Windows domains. Red Teams and adversaries alike may use PowerView to enumerate domain computers for situational awareness and Active Directory Discovery.",['TTP'],"May 2, 2022","`powershell` EventCode=4104 (ScriptBlockText = ""*Get-DomainComputer*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| `security_content_ctime(firstTime)` 
| `getdomaincomputer_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use PowerView for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://attack.mitre.org/techniques/T1018/', 'https://powersploit.readthedocs.io/en/latest/Recon/Get-DomainComputer/']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f65aa026-b811-42ab-b4b9-d9088137648f/,Windows Unusual Count Of Disabled Users Failed Auth Using Kerberos,"['T1110.003', 'T1110']","The following analytic identifies one source endpoint failing to authenticate with multiple disabled domain users using the Kerberos protocol. This behavior could represent an adversary performing a Password Spraying attack against an Active Directory environment using Kerberos to obtain initial access or elevate privileges. As attackers progress in a breach, mistakes will be made. In certain scenarios, adversaries may execute a password spraying attack against disabled users. Event 4768 is generated every time the Key Distribution Center issues a Kerberos Ticket Granting Ticket (TGT). Failure code 0x12 stands for clients credentials have been revoked (account disabled, expired or locked out).
The detection calculates the standard deviation for each host and leverages the 3-sigma statistical rule to identify an unusual number of users. To customize this analytic, users can try different combinations of the bucket span time and the calculation of the upperBound field. This logic can be used for real time security monitoring as well as threat hunting exercises.
This detection will only trigger on domain controllers, not on member servers or workstations.
The analytics returned fields allow analysts to investigate the event further by providing fields like source ip and attempted user accounts.",['Anomaly'],"September 22, 2022","`wineventlog_security` EventCode=4768 TargetUserName!=*$ Status=0x12 
| bucket span=5m _time 
| stats dc(TargetUserName) AS unique_accounts values(TargetUserName) as tried_accounts by _time, IpAddress 
| eventstats avg(unique_accounts) as comp_avg , stdev(unique_accounts) as comp_std by IpAddress 
| eval upperBound=(comp_avg+comp_std*3) 
| eval isOutlier=if(unique_accounts > 10 and unique_accounts >= upperBound, 1, 0) 
| search isOutlier=1 
| `windows_unusual_count_of_disabled_users_failed_auth_using_kerberos_filter`",['wineventlog_security'],"['_time', 'EventCode', 'Status', 'TargetUserName', 'IpAddress']","A host failing to authenticate with multiple disabled domain users is not a common behavior for legitimate systems. Possible false positive scenarios include but are not limited to vulnerability scanners, multi-user systems missconfigured systems.","['Active Directory Password Spraying', 'Active Directory Kerberos Attacks', 'Volt Typhoon']","['https://research.splunk.com/stories/active_directory_password_spraying', 'https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/volt_typhoon']",['https://attack.mitre.org/techniques/T1110/003/'],"['Brute Force', 'Credential Access', 'Credential Access', 'Password Spraying', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f6601940-4c74-11ec-b9b7-3e22fbd008af/,Mmc LOLBAS Execution Process Spawn,"['T1021', 'T1021.003', 'T1218.014']","The following analytic identifies mmc.exe spawning a LOLBAS execution process. When adversaries execute code on remote endpoints abusing the DCOM protocol and the MMC20 COM object, the executed command is spawned as a child processs of mmc.exe. The LOLBAS project documents Windows native binaries that can be abused by threat actors to perform tasks like executing malicious code. Looking for child processes of mmc.exe that are part of the LOLBAS project can help defenders identify lateral movement activity.",['TTP'],"November 23, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name=mmc.exe) (Processes.process_name IN (""Regsvcs.exe"", ""Ftp.exe"", ""OfflineScannerShell.exe"", ""Rasautou.exe"", ""Schtasks.exe"", ""Xwizard.exe"", ""Dllhost.exe"", ""Pnputil.exe"", ""Atbroker.exe"", ""Pcwrun.exe"", ""Ttdinject.exe"",""Mshta.exe"", ""Bitsadmin.exe"", ""Certoc.exe"", ""Ieexec.exe"", ""Microsoft.Workflow.Compiler.exe"", ""Runscripthelper.exe"", ""Forfiles.exe"", ""Msbuild.exe"", ""Register-cimprovider.exe"", ""Tttracer.exe"", ""Ie4uinit.exe"", ""Bash.exe"", ""Hh.exe"", ""SettingSyncHost.exe"", ""Cmstp.exe"", ""Mmc.exe"", ""Stordiag.exe"", ""Scriptrunner.exe"", ""Odbcconf.exe"", ""Extexport.exe"", ""Msdt.exe"", ""WorkFolders.exe"", ""Diskshadow.exe"", ""Mavinject.exe"", ""Regasm.exe"", ""Gpscript.exe"", ""Rundll32.exe"", ""Regsvr32.exe"", ""Msiexec.exe"", ""Wuauclt.exe"", ""Presentationhost.exe"", ""Wmic.exe"", ""Runonce.exe"", ""Syncappvpublishingserver.exe"", ""Verclsid.exe"", ""Infdefaultinstall.exe"", ""Explorer.exe"", ""Installutil.exe"", ""Netsh.exe"", ""Wab.exe"", ""Dnscmd.exe"", ""At.exe"", ""Pcalua.exe"", ""Msconfig.exe"")) by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `mmc_lolbas_execution_process_spawn_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","Legitimate applications may trigger this behavior, filter as needed.","['Active Directory Lateral Movement', 'Living Off The Land']","['https://research.splunk.com/stories/active_directory_lateral_movement', 'https://research.splunk.com/stories/living_off_the_land']","['https://attack.mitre.org/techniques/T1021/003/', 'https://www.cybereason.com/blog/dcom-lateral-movement-techniques', 'https://lolbas-project.github.io/']","['Defense Evasion', 'Distributed Component Object Model', 'Endpoint', 'Lateral Movement', 'Lateral Movement', 'MMC', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f6f904c4-1ac0-11ec-806b-acde48001122/,Suspicious Image Creation In Appdata Folder,['T1113'],This search is to detect a suspicious creation of image in appdata folder made by process that also has a file reference in appdata folder. This technique was seen in remcos rat that capture screenshot of the compromised machine and place it in the appdata and will be send to its C2 server. This TTP is really a good indicator to check that process because it is in suspicious folder path and image files are not commonly created by user in this folder path.,['TTP'],"July 7, 2022","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name=*.exe Processes.process_path=""*\\appdata\\Roaming\\*"" by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid 
| `drop_dm_object_name(Processes)` 
|rename process_guid as proc_guid 
|join proc_guid, _time [
| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (""*.png"",""*.jpg"",""*.bmp"",""*.gif"",""*.tiff"") Filesystem.file_path= ""*\\appdata\\Roaming\\*"" by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.file_path Filesystem.process_guid 
| `drop_dm_object_name(Filesystem)` 
|rename process_guid as proc_guid 
| fields _time dest file_create_time file_name file_path process_name process_path process proc_guid] 
| `suspicious_image_creation_in_appdata_folder_filter`",['security_content_summariesonly'],"['_time', 'dest', 'file_create_time', 'file_name', 'file_path', 'process_name', 'process_path', 'process']",unknown,['Remcos'],['https://research.splunk.com/stories/remcos'],"['https://success.trendmicro.com/dcx/s/solution/1123281-remcos-malware-information?language=en_US', 'https://blog.malwarebytes.com/threat-intelligence/2021/07/remcos-rat-delivered-via-visual-basic/']","['Collection', 'Endpoint', 'Screen Capture', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f792cdc9-43ee-4429-a3c0-ffce4fed1a85/,Fsutil Zeroing File,['T1070'],This search is to detect a suspicious fsutil process to zeroing a target file. This technique was seen in lockbit ransomware where it tries to zero out its malware path as part of its defense evasion after encrypting the compromised host.,['TTP'],"December 7, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = lower(process_file.name) 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where process_cmd_line LIKE ""%setzerodata%"" AND process_file_name=""fsutil.exe"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']",System administrators or scripts may delete user accounts via this technique. Filter as needed.,"['Ransomware', 'Insider Threat', 'Information Sabotage']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/information_sabotage']","['https://app.any.run/tasks/e0ac072d-58c9-4f53-8a3b-3e491c7ac5db/', 'https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-file']","['Defense Evasion', 'Indicator Removal', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/f7abfab9-12ea-44e8-8745-475f9ca6e0a4/,Windows Event Triggered Image File Execution Options Injection,['T1546.012'],"The following hunting analytic identifies EventCode 3000 in Application channel indicating a process exit. This behavior is based on process names being added to the Image File Execution Options under HKLM \SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\ and \SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit. Once these are set for a process, an eventcode 3000 will generate. The example used is from Thinkst Canary where a CanaryToken is setup to monitor for a commonly abused living off the land binary (ex. Klist.exe) and generate an event when it occurs. This can be seen as settings traps to monitor for suspicious behavior. Monitor and tune this hunting analytic and setup traps across your organization and begin monitoring.",['Hunting'],"September 8, 2022","`wineventlog_application` EventCode=3000 
| rename param1 AS ""Process"" param2 AS ""Exit_Code"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Process Exit_Code dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_event_triggered_image_file_execution_options_injection_filter`","['wineventlog_application', 'security_content_ctime']","['_time', 'Process', 'Exit_Code', 'dest', 'EventCode']",False positives may be present and tuning will be required before turning into a TTP or notable.,['Windows Persistence Techniques'],['https://research.splunk.com/stories/windows_persistence_techniques'],"['https://blog.thinkst.com/2022/09/sensitive-command-token-so-much-offense.html', 'https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/registry-entries-for-silent-process-exit']","['Image File Execution Options Injection', 'Persistence', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f7da5fca-9261-43de-a4d0-130dad1e4f4d/,Windows Impair Defense Change Win Defender Throttle Rate,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to change the ThrottleDetectionEventsRate of Windows Defender. The ThrottleDetectionEventsRate registry setting in Windows Defender is related to controlling the rate at which detection events are logged or reported by Windows Defender Antivirus. This registry setting determines how frequently Windows Defender logs or reports detection events. Adjusting the ThrottleDetectionEventsRate value can impact the logging frequency of detection events such as malware detections, scanning results, or security-related events recorded by Windows Defender. A higher value might mean that detection events are reported less frequently, potentially reducing the volume of recorded events, while a lower value could increase the reporting frequency, resulting in more frequent logs of detection events.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\NIS\\Consumers\\IPS\\ThrottleDetectionEventsRate"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_change_win_defender_throttle_rate_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f7eda4bc-871c-11eb-b110-acde48001122/,Process Deleting Its Process File Path,['T1070'],This detection is to identify a suspicious process that tries to delete the process file path related to its process. This technique is known to be defense evasion once a certain condition of malware is satisfied or not. Clop ransomware use this technique where it will try to delete its process file path using a .bat command if the keyboard layout is not the layout it tries to infect.,['TTP'],"April 14, 2023","`sysmon` EventCode=1 CommandLine = ""* /c *"" CommandLine = ""* del*"" Image = ""*\\cmd.exe"" 
| eval result = if(like(process,""%"".parent_process.""%""), ""Found"", ""Not Found"") 
| stats min(_time) as firstTime max(_time) as lastTime count by dest user ParentImage ParentCommandLine Image CommandLine EventCode ProcessID result 
| where result = ""Found"" 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `process_deleting_its_process_file_path_filter`","['security_content_ctime', 'sysmon']","['EventCode', 'dest', 'user', 'ParentImage', 'ParentCommandLine', 'Image', 'cmdline', 'ProcessID', 'result', '_time']",unknown,"['Clop Ransomware', 'Data Destruction', 'WhisperGate', 'Remcos']","['https://research.splunk.com/stories/clop_ransomware', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate', 'https://research.splunk.com/stories/remcos']","['https://www.mandiant.com/resources/fin11-email-campaigns-precursor-for-ransomware-data-theft', 'https://blog.virustotal.com/2020/11/keep-your-friends-close-keep-ransomware.html', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/']","['Defense Evasion', 'Indicator Removal', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f7f7456b-470d-4a95-9703-698250645ff4/,Windows Powershell RemoteSigned File,"['T1059.001', 'T1059']","This analytic identifies the use of ""remotesigned"" execution policy for a file. This security setting determines whether PowerShell scripts can be executed on a computer. When the execution policy is set to ""remotesigned,"" it allows locally created scripts to run without any restrictions, but scripts downloaded from the internet must have a digital signature from a trusted publisher.",['Anomaly'],"June 16, 2023","| tstats `security_content_summariesonly` min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=""* remotesigned *"" Processes.process=""* -File *"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_remotesigned_file_filter`","['security_content_summariesonly', 'security_content_ctime', 'process_powershell']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.process_name', 'Processes.original_file_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","It is possible administrators or scripts may run these commands, filtering may be required.",['Amadey'],['https://research.splunk.com/stories/amadey'],['https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-executionpolicy?view=powershell-7.3'],"['Command and Scripting Interpreter', 'Endpoint', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f8384f9e-1a5c-4c3a-96d6-8a7e5a38a8b8/,Linux Csvtool Privilege Escalation,"['T1548.003', 'T1548']","csvtool is an easy to use command-line tool to work with .CSV files. If sudo right is given to the tool for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 11, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*csvtool*"" AND Processes.process=""*call*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_csvtool_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']","False positives may be present, filter as needed.","['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']",['https://gtfobins.github.io/gtfobins/csvtool/'],"['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/f87aa96b-369b-4a3e-9021-1bbacbfcb8fb/,Windows Driver Inventory,['T1068'],"The following hunting / inventory query assists defenders in identifying Drivers being loaded across the fleet. This query relies upon a PowerShell script input to be deployed to critical systems and beyond. If capturing all via the input, this will provide retrospection into drivers persisting. Note, that this is not perfect across a large fleet. Modify the query as you need to view the data differently.",['Hunting'],"February 3, 2023","`driverinventory` 
| stats values(Path) min(_time) as firstTime max(_time) as lastTime count by host DriverType 
| rename host as dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_driver_inventory_filter`","['driverinventory', 'security_content_ctime']","['_time', 'Path', 'host', 'DriverType']",Filter and modify the analytic as you'd like. Filter based on path. Remove the system32\drivers and look for non-standard paths.,['Windows Drivers'],['https://research.splunk.com/stories/windows_drivers'],['https://gist.github.com/MHaggis/3e4dc85c69b3f7a4595a06c8a692f244'],"['Exploitation for Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f87b5062-b405-11eb-a889-acde48001122/,CMLUA Or CMSTPLUA UAC Bypass,"['T1218', 'T1218.003']",The following analytic detects a potential process using COM Object like CMLUA or CMSTPLUA to bypass UAC. This technique has been used by ransomware adversaries to gain administrative privileges to its running process.,['TTP'],"May 13, 2021","`sysmon` EventCode=7  ImageLoaded IN (""*\\CMLUA.dll"", ""*\\CMSTPLUA.dll"", ""*\\CMLUAUTIL.dll"") NOT(process_name IN(""CMSTP.exe"", ""CMMGR32.exe"")) NOT(Image IN(""*\\windows\\*"", ""*\\program files*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by dest Image ImageLoaded process_name EventCode Signed ProcessId 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `cmlua_or_cmstplua_uac_bypass_filter`","['security_content_ctime', 'sysmon']","['_time', 'Image', 'ImageLoaded', 'process_name', 'dest', 'EventCode', 'Signed', 'ProcessId']",Legitimate windows application that are not on the list loading this dll. Filter as needed.,"['DarkSide Ransomware', 'Ransomware', 'LockBit Ransomware']","['https://research.splunk.com/stories/darkside_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/lockbit_ransomware']",['https://attack.mitre.org/techniques/T1218/003/'],"['CMSTP', 'Defense Evasion', 'Defense Evasion', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/f880acd4-a8f1-11eb-a53b-acde48001122/,Suspicious Driver Loaded Path,"['T1543.003', 'T1543']","This analytic will detect suspicious driver loaded paths. This technique is commonly used by malicious software like coin miners (xmrig) to register its malicious driver from notable directories where executable or drivers do not commonly exist. During triage, validate this driver is for legitimate business use. Review the metadata and certificate information. Unsigned drivers from non-standard paths is not normal, but occurs. In addition, review driver loads into ntoskrnl.exe for possible other drivers of interest. Long tail analyze drivers by path (outside of default, and in default) for further review.",['TTP'],"April 29, 2021","`sysmon` EventCode=6 ImageLoaded = ""*.sys"" NOT (ImageLoaded IN(""*\\WINDOWS\\inf"",""*\\WINDOWS\\System32\\drivers\\*"", ""*\\WINDOWS\\System32\\DriverStore\\FileRepository\\*"")) 
|  stats  min(_time) as firstTime max(_time) as lastTime count by dest ImageLoaded Hashes IMPHASH Signature Signed
| rename ImageLoaded as file_name 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `suspicious_driver_loaded_path_filter`","['security_content_ctime', 'sysmon']","['_time', 'dest', 'ImageLoaded', 'Hashes', 'IMPHASH', 'Signature', 'Signed']",Limited false positives will be present. Some applications do load drivers,"['XMRig', 'CISA AA22-320A', 'AgentTesla', 'BlackByte Ransomware', 'Snake Keylogger']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/cisa_aa22-320a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/snake_keylogger']","['https://www.trendmicro.com/vinfo/hk/threat-encyclopedia/malware/trojan.ps1.powtran.a/', 'https://redcanary.com/blog/tracking-driver-inventory-to-expose-rootkits/']","['Create or Modify System Process', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Windows Service']",['Endpoint']
https://research.splunk.com/endpoint/f8a22586-ee2d-11eb-a193-acde48001122/,Rundll32 CreateRemoteThread In Browser,['T1055'],"This analytic identifies the suspicious Remote Thread execution of rundll32.exe process to ""firefox.exe"" and ""chrome.exe"" browser. This technique was seen in IcedID malware where it hooks the browser to parse banking information as user used the targetted browser process.",['TTP'],"July 26, 2021","`sysmon` EventCode=8 SourceImage = ""*\\rundll32.exe"" TargetImage IN (""*\\firefox.exe"", ""*\\chrome.exe"", ""*\\iexplore.exe"",""*\\microsoftedgecp.exe"") 
| stats count min(_time) as firstTime max(_time) as lastTime by SourceImage TargetImage TargetProcessId SourceProcessId StartAddress EventCode dest 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_createremotethread_in_browser_filter`","['security_content_ctime', 'sysmon']","['_time', 'SourceImage', 'TargetImage', 'TargetProcessId', 'SourceProcessId', 'StartAddress', 'EventCode', 'dest']",unknown,"['IcedID', 'Living Off The Land']","['https://research.splunk.com/stories/icedid', 'https://research.splunk.com/stories/living_off_the_land']",['https://www.joesandbox.com/analysis/380662/0/html'],"['Defense Evasion', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f8b482f4-6d62-49fa-a905-dfa15698317b/,Windows Powershell Cryptography Namespace,"['T1059.001', 'T1059']","The following analytic identifies suspicious PowerShell script execution via EventCode 4104 that is processing cryptography namespace library. This technique was seen in several powershell malware, loader, downloader and stager that will decrypt or decode the next malicious stager or the actual payload. This Anomaly detection can be a good indicator that a powershell process to decrypt code. We recommend to further check the parent_process_name, the file or data it tries to decrypt, network connection and user who execute the script.",['Anomaly'],"November 7, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*System.Security.Cryptography*"" AND NOT(ScriptBlockText IN (""*SHA*"", ""*MD5*"", ""*DeriveBytes*"")) 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer UserID 
| rename Computer as dest 
| rename UserID as user 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powershell_cryptography_namespace_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCodes']",False positives should be limited. Filter as needed.,['AsyncRAT'],['https://research.splunk.com/stories/asyncrat'],['https://malpedia.caad.fkie.fraunhofer.de/details/win.asyncrat'],"['Command and Scripting Interpreter', 'Execution', 'Execution', 'PowerShell', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/f8e58a23-cecd-495f-9c65-6c76b4cb9774/,Linux RPM Privilege Escalation,"['T1548.003', 'T1548']","RPM Package Manager is a free and open-source package management system. The name RPM refers to the .rpm file format and the package manager program itself. RPM was intended primarily for Linux distributions; the file format is the baseline package format of the Linux Standard Base. If sudo right is given to rpm utility for the user, then the user can run system commands as root and possibly get a root shell.",['Anomaly'],"August 9, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process=""*rpm*--eval*"" AND Processes.process=""*lua:os.execute*"" AND Processes.process=""*sudo*"" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `linux_rpm_privilege_escalation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",False positives are present based on automated tooling or system administrative usage. Filter as needed.,"['Linux Privilege Escalation', 'Linux Living Off The Land']","['https://research.splunk.com/stories/linux_privilege_escalation', 'https://research.splunk.com/stories/linux_living_off_the_land']","['https://gtfobins.github.io/gtfobins/rpm/', 'https://en.wikipedia.org/wiki/RPM_Package_Manager']","['Abuse Elevation Control Mechanism', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Sudo and Sudo Caching']",['Endpoint']
https://research.splunk.com/endpoint/f92d74f2-4921-11ec-b685-acde48001122/,System Info Gathering Using Dxdiag Application,['T1592'],"This analytic is to detect a suspicious dxdiag.exe process command-line execution. Dxdiag is used to collect the system info of the target host. This technique has been used by Remcos RATS, various actors, and other malware to collect information as part of the recon or collection phase of an attack. This behavior should rarely be seen in a corporate network, but this command line can be used by a network administrator to audit host machine specifications. Thus in some rare cases, this detection will contain false positives in its results. To triage further, analyze what commands were passed after it pipes out the result to a file for further processing.",['Hunting'],"November 19, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_dxdiag` AND Processes.process = ""* /t *"" by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `system_info_gathering_using_dxdiag_application_filter`","['security_content_summariesonly', 'process_dxdiag', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']","This commandline can be used by a network administrator to audit host machine specifications. Thus, a filter is needed.",['Remcos'],['https://research.splunk.com/stories/remcos'],['https://app.any.run/tasks/df0baf9f-8baf-4c32-a452-16562ecb19be/'],"['Endpoint', 'Gather Victim Host Information', 'Reconnaissance', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fa1c3040-4680-11ec-a618-3e22fbd008af/,Remote Process Instantiation via DCOM and PowerShell Script Block,"['T1021', 'T1021.003']","The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of PowerShell with arguments utilized to start a process on a remote endpoint by abusing the DCOM protocol. Specifically, this search looks for the abuse of ShellExecute and ExecuteShellCommand. Red Teams and adversaries alike may abuse DCOM for lateral movement and remote code execution.",['TTP'],"March 22, 2022","`powershell` EventCode=4104 (ScriptBlockText=""*Document.Application.ShellExecute*"" OR ScriptBlockText=""*Document.ActiveView.ExecuteShellCommand*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode ScriptBlockText Computer user_id 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `remote_process_instantiation_via_dcom_and_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'ScriptBlockText', 'Computer', 'user_id']","Administrators may leverage DCOM to start a process on remote systems, but this activity is usually limited to a small set of hosts or users.",['Active Directory Lateral Movement'],['https://research.splunk.com/stories/active_directory_lateral_movement'],"['https://attack.mitre.org/techniques/T1021/003/', 'https://www.cybereason.com/blog/dcom-lateral-movement-techniques']","['Distributed Component Object Model', 'Lateral Movement', 'Lateral Movement', 'Remote Services', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fa7ca5c6-c9d8-11eb-bce9-acde48001122/,Permission Modification using Takeown App,['T1222'],This search is to detect a modification of file or directory permission using takeown.exe windows app. This technique was seen in some ransomware that take the ownership of a folder or files to encrypt or delete it.,['TTP'],"June 10, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""takeown.exe"" Processes.process = ""*/f*"" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `permission_modification_using_takeown_app_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.user', 'Processes.process_id', 'Processes.process_guid']",takeown.exe is a normal windows application that may used by network operator.,"['Ransomware', 'Sandworm Tools']","['https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/sandworm_tools']",['https://research.nccgroup.com/2020/06/23/wastedlocker-a-new-ransomware-variant-developed-by-the-evil-corp-group/'],"['Defense Evasion', 'Endpoint', 'File and Directory Permissions Modification', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fa90f372-f91d-11eb-816c-acde48001122/,Rundll32 LockWorkStation,"['T1218', 'T1218.011']",This search is to detect a suspicious rundll32 commandline to lock the workstation through command line. This technique was seen in CONTI leak tooling and script as part of its defense evasion. This technique is not a common practice to lock a screen and maybe a good indicator of compromise.,['Anomaly'],"August 9, 2021","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process= ""*user32.dll,LockWorkStation*"" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `rundll32_lockworkstation_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_id']",unknown,['Ransomware'],['https://research.splunk.com/stories/ransomware'],['https://threadreaderapp.com/thread/1423361119926816776.html'],"['Defense Evasion', 'Defense Evasion', 'Endpoint', 'Rundll32', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/fabd364e-04f3-11ec-b34b-acde48001122/,GetWmiObject DS User with PowerShell Script Block,"['T1087.002', 'T1087']",The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify the execution of the Get-WmiObject commandlet. The DS_User class parameter leverages WMI to query for all domain users. Red Teams and adversaries may leverage this commandlet to enumerate domain users for situational awareness and Active Directory Discovery.,['TTP'],"November 7, 2023","`powershell` EventCode=4104 ScriptBlockText = ""*get-wmiobject*"" ScriptBlockText = ""*ds_user*"" ScriptBlockText = ""*-namespace*"" ScriptBlockText = ""*root\\directory\\ldap*"" 
| stats count min(_time) as firstTime max(_time) as lastTime by Opcode Computer UserID EventCode ScriptBlockText 
| rename Computer as dest 
| rename UserID as user
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `getwmiobject_ds_user_with_powershell_script_block_filter`","['powershell', 'security_content_ctime']","['_time', 'ScriptBlockText', 'Opcode', 'Computer', 'UserID', 'EventCode']",Administrators or power users may use this command for troubleshooting.,['Active Directory Discovery'],['https://research.splunk.com/stories/active_directory_discovery'],"['https://www.blackhillsinfosec.com/red-blue-purple/', 'https://docs.microsoft.com/en-us/windows/win32/wmisdk/describing-the-ldap-namespace']","['Account Discovery', 'Discovery', 'Discovery', 'Domain Account', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/faefb681-14be-4f0d-9cac-0bc0160c7280/,Windows Multiple Account Passwords Changed,"['T1098', 'T1078']","This Splunk detection identifies situations where over five unique Windows account passwords are changed within a 10-minute interval, captured by Event Code 4724 in the Windows Security Event Log. The query utilizes the wineventlog_security dataset, organizing data into 10-minute periods to monitor the count and distinct count of TargetUserName, the accounts with altered passwords. Rapid password changes across multiple accounts are atypical and might indicate unauthorized access or an internal actor compromising account security. Teams should calibrate the detection's threshold and timeframe to fit their specific operational context.",['TTP'],"February 20, 2024","`wineventlog_security` EventCode=4724 status=success 
| bucket span=10m _time 
| stats count dc(user) as unique_users values(user) as user by EventCode signature _time src_user SubjectDomainName TargetDomainName Logon_ID 
| where unique_users > 5 
| `windows_multiple_account_passwords_changed_filter`",['wineventlog_security'],"['_time', 'EventCode', 'success', 'TargetUserName', 'SubjectUserName', 'src_user', 'SubjectDomainName', 'TargetDomainName', 'Logon_ID', 'user']","Service accounts may be responsible for the creation, deletion or modification of accounts for legitimate purposes. Filter as needed.",['Azure Active Directory Persistence'],['https://research.splunk.com/stories/azure_active_directory_persistence'],['https://attack.mitre.org/techniques/T1098/'],"['Account Manipulation', 'Defense Evasion', 'Initial Access', 'Persistence', 'Persistence', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Valid Accounts']",['Endpoint']
https://research.splunk.com/endpoint/fb3b2bb3-75a4-4279-848a-165b42624770/,Windows Computer Account Requesting Kerberos Ticket,['T1558'],"The following analytic identifies a ComputerAccount requesting a Kerberos Ticket. typically, a user account requests a Kerberos ticket. This behavior was identified with KrbUpRelay, but additional Kerberos attacks have exhibited similar behavior.",['TTP'],"April 27, 2022","`wineventlog_security`  EventCode=4768 Account_Name=""*$""  src_ip!=""::1"" 
| stats  count min(_time) as firstTime max(_time) as lastTime by dest, subject, action, Supplied_Realm_Name, user, Account_Name, src_ip 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_computer_account_requesting_kerberos_ticket_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'dest', 'subject', 'action', 'Supplied_Realm_Name', 'user', 'Account_Name', 'src_ip']",It is possible false positives will be present based on third party applications. Filtering may be needed.,"['Active Directory Kerberos Attacks', 'Local Privilege Escalation With KrbRelayUp']","['https://research.splunk.com/stories/active_directory_kerberos_attacks', 'https://research.splunk.com/stories/local_privilege_escalation_with_krbrelayup']",['https://github.com/Dec0ne/KrbRelayUp'],"['Credential Access', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Steal or Forge Kerberos Tickets']",['Endpoint']
https://research.splunk.com/endpoint/fb4c31b0-13e8-4155-8aa5-24de4b8d6717/,Access LSASS Memory for Dump Creation,"['T1003.001', 'T1003']","The following analytic detects the dumping of the LSASS process memory, which occurs during credential dumping attacks.The detection is made by using Sysmon logs, specifically EventCode 10, which is related to lsass.exe. This helps to search for indicators of LSASS memory dumping such as specific call traces to dbgcore.dll and dbghelp.dll. This detection is important because it prevents credential dumping attacks and the theft of sensitive information such as login credentials, which can be used to gain unauthorized access to systems and data. False positives might occur due to legitimate administrative tasks. Next steps include reviewing and investigating each case, given the high risk associated with potential credential dumping attacks.",['TTP'],"December 27, 2023","`sysmon` EventCode=10 TargetImage=*lsass.exe CallTrace=*dbgcore.dll* OR CallTrace=*dbghelp.dll* 
| stats count min(_time) as firstTime max(_time) as lastTime by dest, TargetImage, TargetProcessId, SourceImage, SourceProcessId  
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `access_lsass_memory_for_dump_creation_filter`","['security_content_ctime', 'sysmon']","['_time', 'EventCode', 'TargetImage', 'CallTrace', 'dest', 'TargetProcessId', 'SourceImage', 'SourceProcessId']","Administrators can create memory dumps for debugging purposes, but memory dumps of the LSASS process would be unusual.","['CISA AA23-347A', 'Credential Dumping']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/credential_dumping']",['https://2017.zeronights.org/wp-content/uploads/materials/ZN17_Kheirkhabarov_Hunting_for_Credentials_Dumping_in_Windows_Environment.pdf'],"['Credential Access', 'Credential Access', 'LSASS Memory', 'OS Credential Dumping', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fbd4f333-17bb-4eab-89cb-860fa2e0600e/,Windows Modify Registry No Auto Update,['T1112'],"The following analytic identifies a suspicious registry modification of Windows auto update configuration. This technique was being abused by several adversaries, malware authors and also red-teamers to bypass detection or to be able to compromise the target host with zero day exploit or as an additional defense evasion technique. RedLine Stealer is one of the malware we've seen that uses this technique to evade detection and add more payload on the target host. This detection looks for registry modification that will ""Disable Automatic Updates"".",['Anomaly'],"December 27, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Registry where Registry.registry_path=""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\WindowsUpdate\\AU\\NoAutoUpdate"" AND Registry.registry_value_data=""0x00000001"" by Registry.dest Registry.user Registry.registry_path Registry.registry_value_data Registry.registry_key_name 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(lastTime)` 
| `security_content_ctime(firstTime)` 
| `windows_modify_registry_no_auto_update_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.user', 'Registry.dest', 'Registry.registry_value_name', 'Registry.action', 'Registry.registry_value_data']",Administrators may enable or disable this feature that may cause some false positive.,"['CISA AA23-347A', 'RedLine Stealer']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/redline_stealer']",['https://learn.microsoft.com/de-de/security-updates/windowsupdateservices/18127499'],"['Defense Evasion', 'Endpoint', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fbf9e47f-e531-4fea-942d-5c95af7ed4d6/,Windows PowerView Unconstrained Delegation Discovery,['T1018'],The following analytic utilizes PowerShell Script Block Logging (EventCode=4104) to identify commandlets used by the PowerView hacking tool leveraged to discover Windows endpoints with Kerberos Unconstrained Delegation. Red Teams and adversaries alike may leverage use this technique for situational awareness and Active Directory Discovery.,['TTP'],"December 27, 2023","`powershell` EventCode=4104 (Message = ""*Get-DomainComputer*"" OR Message = ""*Get-NetComputer*"") AND (Message = ""*-Unconstrained*"") 
| stats count min(_time) as firstTime max(_time) as lastTime by EventCode Message ComputerName User 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_powerview_unconstrained_delegation_discovery_filter`","['powershell', 'security_content_ctime']","['_time', 'EventCode', 'Message', 'ComputerName', 'User']",Administrators or power users may leverage PowerView for system management or troubleshooting.,"['CISA AA23-347A', 'Rhysida Ransomware', 'Active Directory Kerberos Attacks']","['https://research.splunk.com/stories/cisa_aa23-347a', 'https://research.splunk.com/stories/rhysida_ransomware', 'https://research.splunk.com/stories/active_directory_kerberos_attacks']","['https://attack.mitre.org/techniques/T1018/', 'https://adsecurity.org/?p=1667', 'https://docs.microsoft.com/en-us/defender-for-identity/cas-isp-unconstrained-kerberos', 'https://www.ired.team/offensive-security-experiments/active-directory-kerberos-abuse/domain-compromise-via-unrestricted-kerberos-delegation', 'https://www.cyberark.com/resources/threat-research-blog/weakness-within-kerberos-delegation']","['Discovery', 'Remote System Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fbfef407-cfee-4866-88c1-f8de1c16147c/,Windows Impair Defense Disable PUA Protection,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender PUA protection. Setting PUAProtection to 0 typically disables the detection and protection against Potentially Unwanted Applications by Microsoft Defender Antivirus. Potentially Unwanted Applications include software that may not be inherently malicious but could exhibit behaviors that users may find undesirable, such as adware, browser toolbars, or software bundlers. Disabling this feature might be preferred in certain situations, but it's essential to consider potential security implications. Enabling PUA protection provides an additional layer of defense against software that might negatively impact user experience or security.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\PUAProtection"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_pua_protection_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fc3ccef1-60a4-4239-bd66-b279511b4d14/,Windows AD Domain Controller Audit Policy Disabled,['T1562.001'],"The following analytic detects the disabling of audit policies on a domain controller. The detection is made by identifying changes made to audit policies and checks for the removal of success or failure auditing, which are common indicators of policy tampering. The detection is important because it indicates that an attacker has gained access to the domain controller and is attempting to evade detection and cover up malicious activity. The impact of such an attack can be severe, including data theft, privilege escalation, and compromise of the entire network. False positives might occur since legitimate changes to audit policies might also trigger the analytic. Upon triage, review the audit policy change event and investigate the source of the change. Additionally, you must capture and inspect any relevant on-disk artifacts and review concurrent processes to identify the attack source.""",['TTP'],"January 26, 2023","`wineventlog_security` EventCode=4719 (AuditPolicyChanges IN (""%%8448"",""%%8450"",""%%8448, %%8450"") OR Changes IN (""Failure removed"",""Success removed"",""Success removed, Failure removed"")) dest_category=""domain_controller""
| replace ""%%8448"" with ""Success removed"", ""%%8450"" with ""Failure removed"", ""%%8448, %%8450"" with ""Success removed, Failure removed"" in AuditPolicyChanges 
| eval AuditPolicyChanges=coalesce(AuditPolicyChanges,Changes), SubcategoryGuid=coalesce(SubcategoryGuid,Subcategory_GUID) 
| stats min(_time) as _time values(host) as dest by AuditPolicyChanges SubcategoryGuid 
| lookup advanced_audit_policy_guids GUID as SubcategoryGuid OUTPUT Category SubCategory 
| `windows_ad_domain_controller_audit_policy_disabled_filter`",['wineventlog_security'],"['_time', 'EventCode', 'AuditPolicyChanges', 'SubcategoryGuid']",Unknown,['Sneaky Active Directory Persistence Tricks'],['https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks'],['https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4719'],"['Change', 'Defense Evasion', 'Disable or Modify Tools', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fcc52b9a-4616-11ec-8454-acde48001122/,Sdelete Application Execution,"['T1485', 'T1070.004', 'T1070']",This analytic will detect the execution of sdelete.exe attempting to delete potentially important files that may related to adversary or insider threats to destroy evidence or information sabotage. Sdelete is a SysInternals utility meant to securely delete files on disk. This tool is commonly used to clear tracks and artifact on the targeted host.,['Anomaly'],"November 15, 2021","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval process_pid = process.pid 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_file_name = process_file.name 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_name = actor_user.name 
| eval actor_process = actor.process 
| eval actor_process_pid = actor_process.pid 
| eval actor_process_file = actor_process.file 
| eval actor_process_file_path = actor_process_file.path 
| eval actor_process_file_name = actor_process_file.name 
| eval device_hostname = device.hostname 
| where (process_cmd_line LIKE ""%.xls%"" OR process_cmd_line LIKE ""%.gz%"" OR process_cmd_line LIKE ""%.tar%"" OR process_cmd_line LIKE ""%.rar%"" OR process_cmd_line LIKE ""%.zip%"" OR process_cmd_line LIKE ""%.7z%"" OR process_cmd_line LIKE ""%.bmp%"" OR process_cmd_line LIKE ""%.gif%"" OR process_cmd_line LIKE ""%.png%"" OR process_cmd_line LIKE ""%.jpg%"" OR process_cmd_line LIKE ""%.txt%"" OR process_cmd_line LIKE ""%.log%"" OR process_cmd_line LIKE ""%.key%"" OR process_cmd_line LIKE ""%.pdf%"" OR process_cmd_line LIKE ""%.rtf%"" OR process_cmd_line LIKE ""%.ppt%"" OR process_cmd_line LIKE ""%.xls%"" OR process_cmd_line LIKE ""%.doc%"" OR process_cmd_line LIKE ""%-nobanner%"" OR process_cmd_line LIKE ""%/accepteula%"" OR process_cmd_line LIKE ""%-z %"" OR process_cmd_line LIKE ""%-s %"" OR process_cmd_line LIKE ""%-q %"" OR process_cmd_line LIKE ""%-r %"" OR process_cmd_line LIKE ""%-p %"" OR process_cmd_line LIKE ""%-f %"" OR process_cmd_line LIKE ""%-c %"") AND process_file_name LIKE ""%sdelete%"" --finding_report--","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","['process.pid', 'process.file.path', 'process.file.name', 'process.cmd_line', 'actor.user.name', 'actor.process.pid', 'actor.process.file.path', 'actor.process.file.name', 'device.hostname']","False positives should be limited, filter as needed.","['Information Sabotage', 'Insider Threat']","['https://research.splunk.com/stories/information_sabotage', 'https://research.splunk.com/stories/insider_threat']","['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1485/T1485.md']","['Data Destruction', 'Defense Evasion', 'Defense Evasion', 'File Deletion', 'Impact', 'Indicator Removal', 'Splunk Behavioral Analytics']",['Endpoint']
https://research.splunk.com/endpoint/fcd74532-ae54-11eb-a5ab-acde48001122/,Enumerate Users Local Group Using Telegram,['T1087'],This analytic will detect a suspicious Telegram process enumerating all network users in a local group. This technique was seen in a Monero infected honeypot to mapped all the users on the compromised system. EventCode 4798 is generated when a process enumerates a user's security-enabled local groups on a computer or device.,['TTP'],"November 7, 2023","`wineventlog_security` EventCode=4798  Process_Name = ""*\\telegram.exe"" 
| stats count min(_time) as firstTime max(_time) as lastTime by user dest EventCode Process_Name  Process_ID Account_Name Account_Domain Logon_ID Security_ID Message 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `enumerate_users_local_group_using_telegram_filter`","['wineventlog_security', 'security_content_ctime']","['_time', 'user', 'dest', 'EventCode', 'Process_Name', 'Process_ID', 'Account_Name', 'Account_Domain', 'Logon_ID', 'Security_ID', 'Message']",unknown,['XMRig'],['https://research.splunk.com/stories/xmrig'],"['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4798']","['Account Discovery', 'Discovery', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fdb0f805-74e4-4539-8c00-618927333aae/,Spike in File Writes,[],The search looks for a sharp increase in the number of files written to a particular host,['Anomaly'],"March 16, 2020","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Filesystem where Filesystem.action=created by _time span=1h, Filesystem.dest 
| `drop_dm_object_name(Filesystem)` 
| eventstats max(_time) as maxtime 
| stats count as num_data_samples max(eval(if(_time >= relative_time(maxtime, ""-1d@d""), count, null))) as ""count"" avg(eval(if(_time<relative_time(maxtime, ""-1d@d""), count,null))) as avg stdev(eval(if(_time<relative_time(maxtime, ""-1d@d""), count, null))) as stdev by ""dest"" 
| eval upperBound=(avg+stdev*4), isOutlier=if((count > upperBound) AND num_data_samples >=20, 1, 0) 
| search isOutlier=1 
| `spike_in_file_writes_filter`",['security_content_summariesonly'],"['_time', 'Filesystem.action', 'Filesystem.dest']","It is important to understand that if you happen to install any new applications on your hosts or are copying a large number of files, you can expect to see a large increase of file modifications.","['SamSam Ransomware', 'Ryuk Ransomware', 'Ransomware', 'Rhysida Ransomware']","['https://research.splunk.com/stories/samsam_ransomware', 'https://research.splunk.com/stories/ryuk_ransomware', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/rhysida_ransomware']",N/A,"['Endpoint', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fdb59aef-d88f-4909-8369-ec2afbd2c398/,Windows MSIExec DLLRegisterServer,['T1218.007'],"The following analytic identifies the usage of msiexec.exe using the /y switch parameter, which grants the ability for msiexec to load DLLRegisterServer. Upon triage, review parent process and capture any artifacts for further review.",['TTP'],"June 14, 2022","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_msiexec` Processes.process IN (""*/y*"", ""*-y*"") by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_msiexec_dllregisterserver_filter`","['security_content_summariesonly', 'process_msiexec', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",This analytic will need to be tuned for your environment based on legitimate usage of msiexec.exe. Filter as needed.,['Windows System Binary Proxy Execution MSIExec'],['https://research.splunk.com/stories/windows_system_binary_proxy_execution_msiexec'],"['https://thedfirreport.com/2022/06/06/will-the-real-msiexec-please-stand-up-exploit-leads-to-data-exfiltration/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.007/T1218.007.md']","['Defense Evasion', 'Endpoint', 'Msiexec', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fddf3b56-7933-11ec-98a6-acde48001122/,Windows DotNet Binary in Non Standard Path,"['T1036', 'T1036.003', 'T1218', 'T1218.004']",The following analytic identifies native .net binaries within the Windows operating system that may be abused by adversaries by moving it to a new directory. The analytic identifies the .net binary by using a lookup and compares the process name and original file name (internal name). The analytic utilizes a lookup with the is_net_windows_file macro to identify the binary process name and original file name. if one or the other matches an alert will be generated. Adversaries abuse these binaries as they are native to windows and native DotNet. Note that not all SDK (post install of Windows) are captured in the lookup.,['TTP'],"April 14, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where NOT (Processes.process_path IN (""*\\Windows\\ADWS\\*"",""*\\Windows\\SysWOW64*"", ""*\\Windows\\system32*"", ""*\\Windows\\NetworkController\\*"", ""*\\Windows\\SystemApps\\*"", ""*\\WinSxS\\*"", ""*\\Windows\\Microsoft.NET\\*"")) by Processes.dest Processes.user Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.original_file_name Processes.process_path Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(""Processes"")` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `is_net_windows_file` 
| `windows_dotnet_binary_in_non_standard_path_filter`","['security_content_summariesonly', 'is_net_windows_file', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",False positives may be present and filtering may be required. Certain utilities will run from non-standard paths based on the third-party application in use.,"['Masquerading - Rename System Utilities', 'Ransomware', 'Unusual Processes', 'Signed Binary Proxy Execution InstallUtil', 'Data Destruction', 'WhisperGate']","['https://research.splunk.com/stories/masquerading_-_rename_system_utilities', 'https://research.splunk.com/stories/ransomware', 'https://research.splunk.com/stories/unusual_processes', 'https://research.splunk.com/stories/signed_binary_proxy_execution_installutil', 'https://research.splunk.com/stories/data_destruction', 'https://research.splunk.com/stories/whispergate']","['https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036.003/T1036.003.yaml', 'https://attack.mitre.org/techniques/T1036/003/', 'https://www.microsoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizations/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1218.004/T1218.004.md']","['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Endpoint', 'InstallUtil', 'Masquerading', 'Rename System Utilities', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'System Binary Proxy Execution']",['Endpoint']
https://research.splunk.com/endpoint/fdef746e-71fb-41ce-8ab2-b4a5a6b50ca2/,Windows PowerSploit GPP Discovery,"['T1552', 'T1552.006']","The following analytic identifies the use of the Get-GPPPassword PowerShell commandlet employed to search for unsecured credentials Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts. These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public). While Microsoft released a patch that impedes Administrators to create unsecure credentials, existing Group Policy Preferences files with passwords are not removed from SYSVOL.",['TTP'],"May 2, 2023","$main = from source  
| eval timestamp = time  
| eval metadata_uid = metadata.uid  
| eval device_hostname = device.hostname 
| eval process_file = process.file 
| eval process_file_path = process_file.path 
| eval process_uid = process.uid 
| eval process_cmd_line = process.cmd_line 
| eval actor_user = actor.user 
| eval actor_user_uid = actor_user.uid 
| where match(process_cmd_line, /(?i)get-gpppassword/)=true --finding_report--","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']","['device.hostname', 'process.file.path', 'process.uid', 'process.cmd_line', 'actor.user.uid']",Unknown,['Active Directory Privilege Escalation'],['https://research.splunk.com/stories/active_directory_privilege_escalation'],"['https://attack.mitre.org/techniques/T1552/006/', 'https://pentestlab.blog/2017/03/20/group-policy-preferences/', 'https://adsecurity.org/?p=2288', 'https://www.hackingarticles.in/credential-dumping-group-policy-preferences-gpp/', 'https://adsecurity.org/?p=2288', 'https://support.microsoft.com/en-us/topic/ms14-025-vulnerability-in-group-policy-preferences-could-allow-elevation-of-privilege-may-13-2014-60734e15-af79-26ca-ea53-8cd617073c30']","['Credential Access', 'Credential Access', 'Group Policy Preferences', 'Splunk Behavioral Analytics', 'Unsecured Credentials']",['Endpoint']
https://research.splunk.com/endpoint/fe52c280-98bd-4596-b6f6-a13bbf8ac7c6/,Windows Impair Defense Disable Win Defender Compute File Hashes,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable Windows Defender file hashes computation. The EnableFileHashComputation registry setting likely pertains to whether Windows Defender's MpEngine (Malware Protection Engine) computes file hashes. Setting this value to 0 might disable the file hash computation feature within Windows Defender, which could affect certain malware detection or scanning functionalities that rely on file hash analysis. This registry setting is being abuse by several threat actors, adversaries and red teamers to bypasses Windows defender detections.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\MpEngine\\EnableFileHashComputation"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_win_defender_compute_file_hashes_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fe5bca48-accb-11eb-a67c-acde48001122/,Excessive Usage Of Taskkill,"['T1562.001', 'T1562']",This analytic identifies excessive usage of taskkill.exe application. This application is commonly used by adversaries to evade detections by killing security product processes or even other processes to evade detection.,['Anomaly'],"May 4, 2021","| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = ""taskkill.exe""  by Processes.parent_process_name Processes.process_name Processes.dest Processes.user _time span=1m 
| where count >=10 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `excessive_usage_of_taskkill_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.parent_process_name', 'Processes.process_name', 'Processes.dest', 'Processes.user', 'Processes.process', 'Processes.process_id']",Unknown. Filter as needed.,"['XMRig', 'Azorult', 'CISA AA22-264A', 'AgentTesla', 'CISA AA22-277A', 'NjRAT']","['https://research.splunk.com/stories/xmrig', 'https://research.splunk.com/stories/azorult', 'https://research.splunk.com/stories/cisa_aa22-264a', 'https://research.splunk.com/stories/agenttesla', 'https://research.splunk.com/stories/cisa_aa22-277a', 'https://research.splunk.com/stories/njrat']","['https://thedfirreport.com/2020/04/20/sqlserver-or-the-miner-in-the-basement/', 'https://www.joesandbox.com/analysis/702680/0/html']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fe6a6cc4-9e0d-4d66-bcf4-2c7f44860876/,Windows Default Group Policy Object Modified,"['T1484', 'T1484.001']","The following analytic leverages Event ID 5136 to identify the modification of a default Group Policy Object. A fresh installation of an Active Directory network will typically contain two default group policy objects Default Domain Controllers Policy and Default Domain Policy. The default domain controllers policy is used to enforce and set policies to all the domain controllers within the domain environment. The default domain policy is linked to all users and computers by default. An adversary who has obtained privileged access to an Active Directory network may modify the default group policy objects to obtain further access, deploy persistence or execute malware across a large number of hosts. Security teams should monitor the modification of the default GPOs.",['TTP'],"March 28, 2023","`wineventlog_security` EventCode=5136 ObjectClass=groupPolicyContainer AttributeLDAPDisplayName=versionNumber (ObjectDN=""CN={31B2F340-016D-11D2-945F-00C04FB984F9},CN=POLICIES,CN=SYSTEM,DC=*"" OR ObjectDN=""CN={6AC1786C-016F-11D2-945F-00C04fB984F9},CN=POLICIES,CN=SYSTEM,DC=*"") 
| stats min(_time) as firstTime max(_time) as lastTime by ObjectDN SubjectUserSid AttributeValue Computer DSName 
| rename AttributeValue as versionNumber 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_default_group_policy_object_modified_filter`","['wineventlog_security', 'security_content_ctime']","['EventCode', 'ObjectClass', 'AttributeLDAPDisplayName', 'ObjectDN', 'Computer', 'DSName', 'AttributeValue', 'SubjectUserSid']","The default Group Policy Objects within an AD network may be legitimately updated for administrative operations, filter as needed.","['Active Directory Privilege Escalation', 'Sneaky Active Directory Persistence Tricks']","['https://research.splunk.com/stories/active_directory_privilege_escalation', 'https://research.splunk.com/stories/sneaky_active_directory_persistence_tricks']","['https://attack.mitre.org/techniques/T1484/', 'https://attack.mitre.org/techniques/T1484/001', 'https://www.trustedsec.com/blog/weaponizing-group-policy-objects-access/', 'https://adsecurity.org/?p=2716']","['Defense Evasion', 'Defense Evasion', 'Domain Policy Modification', 'Group Policy Modification', 'Privilege Escalation', 'Privilege Escalation', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/fe9391cd-952a-4c64-8f56-727cb0d4f2d4/,Windows Impair Defense Change Win Defender Tracing Level,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to change the Windows Defender Wpp Tracing levels. The ""WppTracingLevel"" registry setting is typically related to Windows software tracing and diagnostics, specifically involving Windows Software Trace Preprocessor (WPP) tracing. WPP tracing is a mechanism used by developers to instrument code for diagnostic purposes, allowing for the collection of detailed logs and traces during software execution. It helps in understanding the behavior of the software, identifying issues, and analyzing its performance. Without specific documentation or references to ""WppTracingLevel"" within Windows Defender settings or its functionalities, it's challenging to provide precise details about its intended use or configuration within Windows Defender. Modifying registry settings without understanding their implications can affect system behavior or security. Always proceed cautiously and ensure changes align with best practices and organizational requirements.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Reporting\\WppTracingLevel"" Registry.registry_value_data=""0x00000001"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_change_win_defender_tracing_level_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ff61e98c-0337-4593-a78f-72a676c56f26/,Suspicious DLLHost no Command Line Arguments,['T1055'],"The following analytic identifies DLLHost.exe with no command line arguments. It is unusual for DLLHost.exe to execute with no command line arguments present. This particular behavior is common with malicious software, including Cobalt Strike. During investigation, identify any network connections and parallel processes. Identify any suspicious module loads related to credential dumping or file writes. DLLHost.exe is natively found in C:\Windows\system32 and C:\Windows\syswow64.",['TTP'],"July 10, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where `process_dllhost` by _time span=1h  Processes.process_id Processes.process_name Processes.dest Processes.user Processes.process_path Processes.process Processes.parent_process_name 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| regex process=""(?i)(dllhost\.exe.{0,4}$)"" 
| `suspicious_dllhost_no_command_line_arguments_filter`","['security_content_summariesonly', 'process_dllhost', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",Limited false positives may be present in small environments. Tuning may be required based on parent process.,"['BlackByte Ransomware', 'Cobalt Strike', 'Graceful Wipe Out Attack']","['https://research.splunk.com/stories/blackbyte_ransomware', 'https://research.splunk.com/stories/cobalt_strike', 'https://research.splunk.com/stories/graceful_wipe_out_attack']","['https://raw.githubusercontent.com/threatexpress/malleable-c2/c3385e481159a759f79b8acfe11acf240893b830/jquery-c2.4.2.profile', 'https://www.cobaltstrike.com/blog/learn-pipe-fitting-for-all-of-your-offense-projects/']","['Defense Evasion', 'Endpoint', 'Privilege Escalation', 'Process Injection', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ff86077c-9212-11eb-a1e6-acde48001122/,Disabling CMD Application,"['T1562.001', 'T1562', 'T1112']","This search is to identify modification in registry to disable cmd prompt application. This technique is commonly seen in RAT, Trojan or WORM to prevent triaging or deleting there samples through cmd application which is one of the tool of analyst to traverse on directory and files.",['TTP'],"April 27, 2023","| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Registry WHERE (Registry.registry_path= ""*\\SOFTWARE\\Policies\\Microsoft\\Windows\\System\\DisableCMD"" Registry.registry_value_data = ""0x00000001"") BY _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_key_name Registry.registry_value_name Registry.registry_value_data Registry.process_guid 
| `drop_dm_object_name(Registry)` 
| where isnotnull(registry_value_data) 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `disabling_cmd_application_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.dest', 'Registry.registry_value_name', 'Registry.registry_key_name', 'Registry.registry_path', 'Registry.registry_value_data', 'Registry.process_guid']",admin may disable this application for non technical user.,"['Windows Defense Evasion Tactics', 'Windows Registry Abuse', 'NjRAT']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/njrat']",['https://any.run/report/ea4ea08407d4ee72e009103a3b77e5a09412b722fdef67315ea63f22011152af/a866d7b1-c236-4f26-a391-5ae32213dfc4#registry'],"['Defense Evasion', 'Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Modify Registry', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ffc236d6-a6c9-11eb-95f1-acde48001122/,Office Product Spawning Wmic,"['T1566', 'T1566.001']","The following detection identifies the latest behavior utilized by Ursnif malware family. This detection identifies any Windows Office Product spawning wmic.exe. In malicious instances, the command-line of wmic.exe will contain wmic process call create. In addition, Threat Research has released a detection identifying the use of wmic process call create on the command-line of wmic.exe. In this instance, we narrow our detection down to the Office suite as a parent process. During triage, review all file modifications. Capture and analyze any artifacts on disk. The Office Product, or wmic.exe will have reached out to a remote destination, capture and block the IPs or domain. Review additional parallel processes for further activity.",['TTP'],"July 11, 2023","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (""winword.exe"",""excel.exe"",""powerpnt.exe"",""mspub.exe"",""visio.exe"",""onenote.exe"",""onenotem.exe"",""onenoteviewer.exe"",""onenoteim.exe"",""msaccess.exe"", ""Graph.exe"",""winproj.exe"") `process_wmic` by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id 
| `drop_dm_object_name(Processes)` 
| `security_content_ctime(firstTime)`
| `security_content_ctime(lastTime)` 
| `office_product_spawning_wmic_filter`","['security_content_summariesonly', 'process_wmic', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.parent_process_name', 'Processes.parent_process', 'Processes.original_file_name', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_path', 'Processes.process_path', 'Processes.parent_process_id']",No false positives known. Filter as needed.,"['Spearphishing Attachments', 'FIN7', 'CVE-2023-36884 Office and Windows HTML RCE Vulnerability']","['https://research.splunk.com/stories/spearphishing_attachments', 'https://research.splunk.com/stories/fin7', 'https://research.splunk.com/stories/cve-2023-36884_office_and_windows_html_rce_vulnerability']","['https://app.any.run/tasks/fb894ab8-a966-4b72-920b-935f41756afd/', 'https://attack.mitre.org/techniques/T1047/', 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1047/T1047.md', 'https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/trojanized-onenote-document-leads-to-formbook-malware/']","['Endpoint', 'Initial Access', 'Initial Access', 'Phishing', 'Spearphishing Attachment', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ffd5e001-2e34-48f4-97a2-26dc4bb08178/,Detect Remote Access Software Usage Process,['T1219'],"The following analytic detects when a known remote access software is executed within the environment. Adversaries use these utilities to retain remote access capabilities to the environment. Utilities in the lookup include AnyDesk, GoToMyPC, LogMeIn, TeamViewer and much more. Review the lookup for the entire list and add any others.",['Anomaly'],"February 22, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Processes.parent_process) as parent_process from datamodel=Endpoint.Processes where Processes.dest!=unknown Processes.process!=unknown by Processes.dest Processes.user Processes.process_name Processes.process 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `drop_dm_object_name(Processes)` 
| lookup remote_access_software remote_utility AS process_name OUTPUT isutility, description as signature, comment_reference as desc, category 
| search isutility = True 
| `detect_remote_access_software_usage_process_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Processes.dest', 'Processes.user', 'Processes.process_name', 'Processes.process', 'Processes.process_id', 'Processes.parent_process_name']",It is possible that legitimate remote access software is used within the environment. Ensure that the lookup is reviewed and updated with any additional remote access software that is used within the environment.,"['Insider Threat', 'Command And Control', 'Ransomware']","['https://research.splunk.com/stories/insider_threat', 'https://research.splunk.com/stories/command_and_control', 'https://research.splunk.com/stories/ransomware']","['https://attack.mitre.org/techniques/T1219/', 'https://thedfirreport.com/2022/08/08/bumblebee-roasts-its-way-to-domain-admin/', 'https://thedfirreport.com/2022/11/28/emotet-strikes-again-lnk-file-leads-to-domain-wide-ransomware/']","['Command And Control', 'Endpoint', 'Remote Access Software', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
https://research.splunk.com/endpoint/ffd99aea-542f-448e-b737-091c1b417274/,Windows Impair Defense Disable Realtime Signature Delivery,"['T1562.001', 'T1562']","The following analytic identifies a modification in the Windows registry to disable windows defender realtime signature delivery feature. This setting governs how Windows Defender Antivirus receives updated signature definitions for identifying and combating malware threats in real-time. The actual impact and behaviors associated with different values for RealtimeSignatureDelivery can vary based on specific Windows Defender configurations and policies. For instance, setting this value to 0 or 1 might control whether real-time signatures are delivered via different methods such as through Windows Update or directly from Microsoft's cloud-based services.",['TTP'],"January 8, 2024","| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path= ""*\\Windows Defender\\Signature Updates\\RealtimeSignatureDelivery"" Registry.registry_value_data=""0x00000000"" by Registry.registry_key_name Registry.user Registry.registry_path Registry.registry_value_data Registry.action Registry.dest 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_impair_defense_disable_realtime_signature_delivery_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Registry.user', 'Registry.registry_path', 'Registry.action']","It is unusual to turn this feature off a Windows system since it is a default security control, although it is not rare for some policies to disable it. Although no false positives have been identified, use the provided filter macro to tune the search.","['Windows Defense Evasion Tactics', 'Windows Registry Abuse']","['https://research.splunk.com/stories/windows_defense_evasion_tactics', 'https://research.splunk.com/stories/windows_registry_abuse']","['https://x.com/malmoeb/status/1742604217989415386?s=20', 'https://github.com/undergroundwires/privacy.sexy']","['Defense Evasion', 'Defense Evasion', 'Disable or Modify Tools', 'Endpoint', 'Impair Defenses', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security', 'Updates']",['Endpoint']
https://research.splunk.com/endpoint/ffeb7893-ff06-446f-815b-33ca73224e92/,Windows Registry Delete Task SD,"['T1053.005', 'T1562']","The following analytic identifies a process attempting to delete a scheduled task SD (Security Descriptor) from within the registry path of that task. This may occur from a non-standard process running and may not come from reg.exe. This particular behavior will remove the actual Task Name from the Task Scheduler GUI and from the command-line query - schtasks.exe /query. In addition, in order to perform this action, the user context will need to be SYSTEM.\ Identifying the deletion of a scheduled task's Security Descriptor from the registry is significant for a SOC as it may indicate malicious activity attempting to remove evidence of a scheduled task, potentially for defense evasion purposes. If a true positive is detected, it suggests an attacker with privileged access attempting to remove traces of their activities, which can have a significant impact on the security and functionality of affected systems. Immediate investigation and response are required to mitigate further risks and preserve the integrity of the environment.",['Anomaly'],"April 13, 2022","| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path IN (""*\\Schedule\\TaskCache\\Tree\\*"") Registry.user=""SYSTEM"" Registry.registry_value_name=""SD"" (Registry.action=Deleted OR Registry.action=modified) by _time  Registry.dest Registry.process_guid Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_key_name Registry.registry_value_data Registry.status Registry.action 
| `drop_dm_object_name(Registry)` 
| `security_content_ctime(firstTime)` 
| `security_content_ctime(lastTime)` 
| `windows_registry_delete_task_sd_filter`","['security_content_summariesonly', 'security_content_ctime']","['_time', 'Registry.registry_path', 'Registry.registry_key_name', 'Registry.registry_value_name', 'Registry.dest', 'Processes.process_id', 'Processes.process_name', 'Processes.process', 'Processes.dest', 'Processes.process_guid']",False positives should be limited as the activity is not common to delete ONLY the SD from the registry. Filter as needed. Update the analytic Modified or Deleted values based on product that is in the datamodel.,"['Windows Registry Abuse', 'Windows Persistence Techniques', 'Scheduled Tasks']","['https://research.splunk.com/stories/windows_registry_abuse', 'https://research.splunk.com/stories/windows_persistence_techniques', 'https://research.splunk.com/stories/scheduled_tasks']","['https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/', 'https://gist.github.com/MHaggis/5f7fd6745915166fc6da863d685e2728', 'https://gist.github.com/MHaggis/b246e2fae6213e762a6e694cabaf0c17']","['Defense Evasion', 'Endpoint', 'Execution', 'Impair Defenses', 'Persistence', 'Privilege Escalation', 'Scheduled Task', 'Splunk Cloud', 'Splunk Enterprise', 'Splunk Enterprise Security']",['Endpoint']
